{"version":3,"file":"GuidedSetupManualInviteColleagues-N-FHPndr.js","sources":["../../../../../app/frontend/apps/desktop/pages/guided-setup/views/GuidedSetupManual/GuidedSetupManualInviteColleagues.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<!-- eslint-disable @typescript-eslint/no-unused-vars -->\n\n<script setup lang=\"ts\">\nimport { NotificationTypes } from '#shared/components/CommonNotifications/types.ts'\nimport { useNotifications } from '#shared/components/CommonNotifications/useNotifications.ts'\nimport type { SelectValue } from '#shared/components/CommonSelect/types.ts'\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { useObjectAttributeFormData } from '#shared/entities/object-attributes/composables/useObjectAttributeFormData.ts'\nimport { useObjectAttributes } from '#shared/entities/object-attributes/composables/useObjectAttributes.ts'\nimport { useUserAddMutation } from '#shared/entities/user/graphql/mutations/add.api.ts'\nimport { defineFormSchema } from '#shared/form/defineFormSchema.ts'\nimport {\n  EnumObjectManagerObjects,\n  EnumFormUpdaterId,\n  type UserInput,\n} from '#shared/graphql/types.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\n\nimport {\n  GroupAccess,\n  type GroupPermissionReactive,\n} from '#desktop/components/Form/fields/FieldGroupPermissions/types.ts'\n\nimport GuidedSetupActionFooter from '../../components/GuidedSetupActionFooter.vue'\nimport { useSystemSetup } from '../../composables/useSystemSetup.ts'\n\nconst { setBoxSize, setTitle } = useSystemSetup()\n\nsetBoxSize?.('large')\nsetTitle(__('Invite Colleagues'))\n\nconst { form } = useForm()\n\nconst { notify } = useNotifications()\n\nconst schema = defineFormSchema([\n  {\n    screen: 'invite_agent',\n    object: EnumObjectManagerObjects.User,\n  },\n])\n\nconst transformGroupPermissions = (value: GroupPermissionReactive[]) =>\n  value.reduce(\n    (groupPermissions, row) => {\n      if (!row.groups) return groupPermissions\n\n      groupPermissions.push(\n        ...(row.groups as unknown as SelectValue[]).map((groupInternalId) => ({\n          groupInternalId,\n          accessType: Object.keys(row.groupAccess).reduce((accesses, key) => {\n            if (row.groupAccess[key as GroupAccess])\n              accesses.push(key as GroupAccess)\n            return accesses\n          }, [] as GroupAccess[]),\n        })),\n      )\n      return groupPermissions\n    },\n    [] as {\n      groupInternalId: SelectValue\n      accessType: GroupAccess[]\n    }[],\n  )\n\nconst { attributesLookup } = useObjectAttributes(EnumObjectManagerObjects.User)\n\nconst inviteUser = async (formData: FormSubmitData) => {\n  // TODO: Try to move this value transformation into the relevant field.\n  if (formData.group_ids) {\n    formData.group_ids = transformGroupPermissions(\n      formData.group_ids as unknown as GroupPermissionReactive[],\n    )\n  }\n\n  const { internalObjectAttributeValues, additionalObjectAttributeValues } =\n    useObjectAttributeFormData(attributesLookup.value, formData)\n\n  const input: UserInput = {\n    ...internalObjectAttributeValues,\n    objectAttributeValues: additionalObjectAttributeValues,\n  }\n\n  const userAdd = new MutationHandler(useUserAddMutation())\n\n  return userAdd\n    .send({\n      input,\n      sendInvite: true,\n    })\n    .then(async (result) => {\n      if (result?.userAdd?.user) {\n        notify({\n          id: 'invite-colleagues',\n          type: NotificationTypes.Success,\n          message: __('Invitation sent!'),\n        })\n      }\n    })\n}\n</script>\n\n<template>\n  <Form\n    id=\"invite-colleagues\"\n    ref=\"form\"\n    form-class=\"mb-2.5\"\n    :schema=\"schema\"\n    :form-updater-id=\"EnumFormUpdaterId.FormUpdaterUpdaterUserInvite\"\n    use-object-attributes\n    clear-values-after-submit\n    @submit=\"inviteUser\"\n  />\n  <GuidedSetupActionFooter\n    :form=\"form\"\n    :submit-button-text=\"__('Send Invitation')\"\n    :continue-button-text=\"__('Finish Setup')\"\n    continue-route=\"/guided-setup/manual/finish\"\n  />\n</template>\n"],"names":["setBoxSize","setTitle","useSystemSetup","form","useForm","notify","useNotifications","schema","defineFormSchema","EnumObjectManagerObjects","transformGroupPermissions","value","groupPermissions","row","groupInternalId","accesses","key","attributesLookup","useObjectAttributes","inviteUser","formData","internalObjectAttributeValues","additionalObjectAttributeValues","useObjectAttributeFormData","input","MutationHandler","useUserAddMutation","result","_a","NotificationTypes"],"mappings":"42CA8BA,KAAM,CAAE,WAAAA,EAAY,SAAAC,CAAS,EAAIC,EAAe,EAEhDF,GAAA,MAAAA,EAAa,SACJC,EAAA,GAAG,mBAAmB,CAAC,EAE1B,KAAA,CAAE,KAAAE,GAASC,IAEX,CAAE,OAAAC,GAAWC,IAEbC,EAASC,EAAiB,CAC9B,CACE,OAAQ,eACR,OAAQC,EAAyB,IACnC,CAAA,CACD,EAEKC,EAA6BC,GACjCA,EAAM,OACJ,CAACC,EAAkBC,KACZA,EAAI,QAEQD,EAAA,KACf,GAAIC,EAAI,OAAoC,IAAKC,IAAqB,CACpE,gBAAAA,EACA,WAAY,OAAO,KAAKD,EAAI,WAAW,EAAE,OAAO,CAACE,EAAUC,KACrDH,EAAI,YAAYG,CAAkB,GACpCD,EAAS,KAAKC,CAAkB,EAC3BD,GACN,EAAmB,CAAA,EACtB,CAAA,EAEGH,GAET,CAAC,CAAA,EAMC,CAAE,iBAAAK,CAAqB,EAAAC,EAAoBT,EAAyB,IAAI,EAExEU,EAAa,MAAOC,GAA6B,CAEjDA,EAAS,YACXA,EAAS,UAAYV,EACnBU,EAAS,SAAA,GAIb,KAAM,CAAE,8BAAAC,EAA+B,gCAAAC,GACrCC,EAA2BN,EAAiB,MAAOG,CAAQ,EAEvDI,EAAmB,CACvB,GAAGH,EACH,sBAAuBC,CAAA,EAKzB,OAFgB,IAAIG,EAAgBC,EAAoB,CAAA,EAGrD,KAAK,CACJ,MAAAF,EACA,WAAY,EAAA,CACb,EACA,KAAK,MAAOG,GAAW,QAClBC,EAAAD,GAAA,YAAAA,EAAQ,UAAR,MAAAC,EAAiB,MACZvB,EAAA,CACL,GAAI,oBACJ,KAAMwB,EAAkB,QACxB,QAAS,GAAG,kBAAkB,CAAA,CAC/B,CACH,CACD,CAAA"}