{"version":3,"mappings":";0yCAIA,IAAIA,GAES,MAAAC,GAAqBC,GAAkB,CACxCF,GAAAE,CACZ,EAEaC,GAAa,IAAMH,GCLhC,IAAII,GAA8B,CAChC,KAAM,eACN,OAAQ,sBACR,KAAM,oBACN,QAAS,uBACT,QAAS,sBACX,EAEa,MAAAC,GAA0BC,GAA2B,CACjDF,GAAAE,CACjB,EAEaC,GAAkB,IAAMH,yICFrC,MAAMI,EAAQC,EAKRC,EAAOC,EAAS,IAAM,CAC1B,OAAQH,EAAM,QAAS,CACrB,IAAK,UACI,6BACT,IAAK,UACI,6BACT,IAAK,SACI,4BACT,IAAK,OACL,QACS,yBACX,EACD,EAEKI,EAAWL,KAEXM,EAAYC,EAAI,EAAK,shBC/B3B,IAAIC,GAA8B,CAChC,KAAM,eACN,OAAQ,sBACR,KAAM,oBACN,QAAS,uBACT,QAAS,uBACT,QAAS,uBACT,SAAU,wBACV,OAAQ,qBACV,EAEa,MAAAC,GAA0BV,GAA2B,CACjDS,GAAAT,CACjB,EAEaW,GAAkB,IAAMF,2ICJrC,MAAMP,EAAQC,EAMRS,EAAcP,EAAS,IAAM,CACjC,OAAQH,EAAM,KAAM,CAClB,IAAK,QACI,kBACT,IAAK,SACI,gBACT,IAAK,KACI,oBACT,IAAK,QACL,QACS,eACX,EACD,EAEKW,EAAiBR,EAAS,IAAM,CACpC,OAAQH,EAAM,KAAM,CAClB,IAAK,QACI,OAAC,OAAQ,QAAQ,EAC1B,IAAK,SACI,OAAC,OAAQ,MAAM,EACxB,IAAK,KACI,OAAC,SAAU,QAAQ,EAC5B,IAAK,QACL,QACS,OAAC,OAAQ,MAAM,CAC1B,EACD,EAEKY,EAAoBT,EAAS,IAAM,CACnC,GAAAH,EAAM,QAAgB,qBAE1B,OAAQA,EAAM,KAAM,CAClB,IAAK,QACI,mBACT,IAAK,SACI,mBACT,IAAK,QACL,QACS,kBACX,EACD,EAEKI,EAAWK,8UC7CjB,MAAMT,EAAQC,EAKRY,EAAcC,IAEdC,EAAwCZ,EAAS,IACjDH,EAAM,OAAS,aAAqBA,EAAM,KAEvCa,EAAY,OAAO,qBAAuB,WAC7C,WACA,UACL,EAEKG,EAAqBb,EAAS,IAC9BH,EAAM,iBAAmB,OAAeiB,EAAK,KAAKjB,EAAM,QAAQ,EAC7DiB,EAAK,SAASjB,EAAM,QAAQ,CACpC,oSC9BYkB,GACXlB,GACG,CACH,MAAMmB,EAAgD,CACpD,MAAO,gBACP,KAAM,eACN,KAAM,eACN,OAAQ,kBAGJC,EAAiC,CACrC,GAAI,GACJ,KAAM,GACN,MAAO,GACP,KAAM,GACN,OAAQ,GACR,MAAO,GACP,GAAI,IAGAC,EAAYlB,EAAS,IAAM,CAC3B,IAAAmB,EAAY,QAAQtB,EAAM,IAAI,GAElC,MAAMuB,EAAYvB,EAAM,WAAcA,EAAM,OAAS,WAAa,OAClE,OAAIuB,IACWD,GAAA,IAAIH,EAAkBI,CAAS,CAAC,IAExCD,CAAA,CACR,EAEKE,EAAYrB,EAAS,IACrBH,EAAM,UAAkBA,EAAM,UAE3B,CACL,MAAOoB,EAAQpB,EAAM,IAAI,EACzB,OAAQoB,EAAQpB,EAAM,IAAI,EAE7B,EAEM,OACL,UAAAqB,EACA,UAAAG,CAAA,CAEJ,EC1CaC,GAAkBzB,GAAsC,CAC7D,MAAE,UAAAqB,EAAW,UAAAG,CAAA,EAAcN,GAAe,CAAE,KAAM,SAAU,GAAGlB,CAAA,CAAO,EAGrE,SAFM,OAAO;AAAA;AAAA;AAAA,oBAKFqB,EAAU,KAAK,IAAIrB,EAAM,OAAS,EAAE;AAAA,eACzCwB,EAAU,MAAM,KAAK;AAAA,gBACpBA,EAAU,MAAM,MAAM;AAAA,QAC9B,CAACxB,EAAM,YACT,cAAciB,EAAK,EAAEjB,EAAM,OAASA,EAAM,IAAI,GAAK,EAAE,EAAE;AAAA,QACpDA,EAAM,YAAc,sBAAyB,EAAE;AAAA;AAAA,yBAE/BA,EAAM,IAAI;AAAA;AAAA,GAGnC,ECrBM0B,GAAeC,GAA2C,CAC9D,MAAMC,EAA+B,GACrC,SAAW,CAAC1B,EAAM2B,CAAG,IAAKF,EAAO,CACzB,MAAAjC,EAAOQ,EAAK,MAAM,yBAAyB,EACjD,GAAI,CAACR,EAAM,MAAM,IAAI,MAAM,2BAA2BQ,CAAI,EAAE,EAC5D,MAAM4B,EAAWpC,EAAK,CAAC,EAAE,QAAQ,KAAM,GAAG,EAC1CkC,EAAS,KAAK,CAACE,EAAUD,EAAI,OAAO,CAAC,CACvC,CACO,OAAAD,CACT,EAEA,IAAIG,GAAmC,GACnCC,GAAuC,GACvCC,GAA0C,GAEjC,MAAAC,GAAe,CAC1BC,EACAC,IACG,CACHL,GAAeL,GAAYS,CAAW,EACtCH,GAAe,GACGC,GAAAG,EACP,UAAC1C,CAAI,IAAKqC,GAAc,CACjC,MAAMM,EAAWZ,GAAe,CAAE,KAAA/B,EAAM,KAAM,OAAQ,EACtDsC,GAAatC,CAAI,EAAI2C,CACvB,CACO,OACL,MAAOL,GACP,QAASD,EAAA,CAEb,EAEaO,GAAW,KACf,CACL,MAAON,GACP,QAASD,GACT,QAASE,EAAA,4OCnBb,MAAMjC,EAAQC,EAKRsC,EAAOC,EAIPC,EAAWC,GAAsB,CACrCH,EAAK,QAASG,CAAK,GAGf,CAAE,UAAArB,EAAW,UAAAG,CAAU,EAAIN,GAAelB,CAAK,EAC/C,CAAE,MAAA2B,EAAO,QAAAS,CAAQ,EAAIE,GAAS,EAE9BR,EAAW3B,EAAS,IAAM,CAExB,MAAAT,EADQ0C,EAAQpC,EAAM,IAAI,GACVA,EAAM,KACxB,OAAC2B,EAAMjC,CAAI,GACTiD,GAAA,KAAK,QAAQjD,CAAI,YAAY,EAE5BA,CAAA,CACR,kaC/BD,MAAMM,EAAQC,EAKR2C,EAAmB,CACvB,GAAI,6BACJ,MAAO,uBACP,OAAQ,uBACR,MAAO,yBACP,GAAI,wBAGAC,EAAe,CACnB,GAAI,KACJ,MAAO,KACP,OAAQ,OACR,MAAO,QACP,GAAI,kiBC1BN,IAAIC,GAA4B,CAC9B,KAAM,aACR,EAEa,MAAAC,GAAyBjD,GAA0B,CAChDgD,GAAAhD,CAChB,EAEakD,GAAiB,IAAMF,GCT9BG,GAAY,CAACP,EAAcQ,EAAgC,KAAa,CACtE,MACJ,eAAAC,EAAiB,GACjB,YAAAC,EAAc,GACd,qBAAAC,EAAuB,EACH,EAAAH,EAElBC,GACFT,EAAM,eAAe,EAEnBU,GACFV,EAAM,gBAAgB,EAEpBW,GACFX,EAAM,yBAAyB,CAEnC,ocCQA,MAAM1C,EAAQC,EAYRsC,EAAOC,EAIPc,EAASnD,EAAS,IAAM,CACxB,GAAAH,EAAM,OAAQ,OAAOA,EAAM,OAC3B,GAAAA,EAAM,aAAqB,cACxB,CACR,EAEKuD,EAAYpD,EAAS,IAAM,CACzB,MAAE,KAAAqD,GAASR,KACjB,OAAIhD,EAAM,SAAiB,GAAGwD,CAAI,uBAC3BA,CAAA,CACR,EAEKZ,EAAmB,CACvB,GAAI,6BACJ,MAAO,uBACP,OAAQ,uBACR,MAAO,yBACP,GAAI,wBAGA,CAAE,KAAAa,EAAM,MAAAC,EAAO,SAAAC,EAAU,SAAAC,EAAU,cAAAC,GAAkBC,GAAQ,CACjE,GAAIC,EAAM/D,EAAO,MAAM,EACvB,QAAS+D,EAAM/D,EAAO,SAAS,EAChC,EAEKgE,EAAiB7D,EAAS,IAC1BH,EAAM,UAAYA,EAAM,QAAgB,GACxCA,EAAM,SAAiB,GAEvB0D,EAAM,MAAM,SAAS,WAAW,IAAI,EAAU,GAC3CA,EAAM,MAAM,QAAQ,OAAS,GAAKA,EAAM,MAAM,OAAS,OAC/D,EAEKO,EAAMnD,IAENoD,EAAO/D,EAAS,IAChB6D,EAAe,MACVP,EAAK,MAGVzD,EAAM,QACD,GAAGiE,EAAI,OAAO,QAAQ,GAAGjE,EAAM,IAAI,GAGrCA,EAAM,IACd,EAEKyC,EAAWC,GAAsB,CACrC,GAAI1C,EAAM,SAAU,CAClBiD,GAAUP,EAAO,CAAE,qBAAsB,EAAM,GAC/C,MACF,CACAH,EAAK,QAASG,CAAK,EAEfsB,EAAe,OACjBL,EAASjB,CAAK,EAIZ,CAACsB,EAAe,OAAShE,EAAM,OAAS,KAC1CiD,GAAUP,EAAO,CAAE,YAAa,EAAO,EACzC,EAGW,OAAAyB,EAAA,CACX,SAAAP,EACA,cAAAC,CAAA,CACD,2NCnFD,SAAwBO,GAA2BH,EAAgB,CAC7DA,EAAA,UAAU,cAAeI,EAAW,EACpCJ,EAAA,UAAU,aAAcK,EAAU,EAClCL,EAAA,UAAU,aAAcM,EAAU,EAClCN,EAAA,UAAU,iBAAkBO,EAAc,EAC1CP,EAAA,UAAU,cAAeQ,EAAW,EACpCR,EAAA,UAAU,cAAeS,EAAW,CAC1C,CCnBA,MAAMC,GAA2BV,GAAa,CAC5C,MAAMpD,EAAcC,IACd,CAAE,OAAA8D,CAAA,EAAWC,GAAYhE,CAAW,EAE1C,OAAO,eAAeoD,EAAI,OAAO,iBAAkB,KAAM,CACvD,WAAY,GACZ,IAAK,IAAMa,EAAMF,CAAM,EACxB,CACH,EChBA,SAAwBG,GAA2Bd,EAAgB,CAC7DA,EAAA,OAAO,iBAAiB,KAAOhD,EACnCgD,EAAI,OAAO,iBAAiB,GAAKhD,EAAK,EAAE,KAAKA,CAAI,EAEjDgD,EAAI,IAAIU,EAAuB,EAE3BV,EAAA,OAAO,iBAAiB,GAAK,OAAO,EAC1C,CCbA,IAAIe,GAAY,CACd,UAAW,CACT,OAAQ,CACN,MAAO,EACP,MAAO,CACT,CACF,CACF,EAEa,MAAAC,GAAuBC,GAAoC,CAC1DF,GAAAE,CACd,EAEaC,GAAe,IAAMH,GCNlC,SAAwBI,IAAqC,CAC3D,MAAMC,EAAUC,KACVC,EAASC,KACT3E,EAAcC,IAEpB2E,GACE,IAAM5E,EAAY,OAClB,IAAM,CACJ4E,GACE,IAAMJ,EAAQ,GACd,IAAM,CAEsBK,IAC5B,GAGFD,GACE,IAAMJ,EAAQ,KACd,CAACM,EAAUC,IAAa,YAEpB,CAACD,IACAE,EAAAD,GAAA,YAAAA,EAAU,cAAV,MAAAC,EAAuB,QACtBN,EAAO,cACPO,EAAAH,EAAS,cAAT,YAAAG,EAAsB,UAAWP,EAAO,WAAW,SAE9CA,EAAA,WAAUQ,EAAAJ,GAAA,YAAAA,EAAU,cAAV,YAAAI,EAAuB,MAAM,CAElD,EAEJ,EAEJ,CCrCO,MAAMC,GAAoBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MCMpBC,GAAgBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBvBE,EAAkB;AAAA,EACtBH,EAAiB,GACH,SAAAI,GAAiBC,EAAmN,GAAI,CAC/O,OAAAC,GAAmFJ,GAAeG,CAAO,CAClH,CCtBO,MAAME,GAAiBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQd,SAAAO,GAAkBH,EAAuN,GAAI,CACpP,OAAAC,GAAqFC,GAAgBF,CAAO,CACrH,CCFA,MAAMI,OAAiB,IAEjBC,GAAeC,GAAY,EAGjCD,GAAM,IAAKE,GAAY,CACrBH,GAAW,IAAI,CACb,MAAOG,EAAQ,MACf,aAAcA,EAAQ,QAAQ,cAAgB,GAC/C,CACH,CAAC,EAED,SAAwBC,GAAgB5C,EAAU,CAChDA,EAAI,IAAIyC,EAAK,CACf,CAEa,MAAAI,GAAyBC,GAA2B,CACpDN,GAAA,QAASO,GAAc,CACEA,EAAU,eAAiBD,IAI7DC,EAAU,MAAM,WAChB,OAAON,GAAM,MAAM,MAAMM,EAAU,MAAM,GAAG,EAC5CP,GAAW,OAAOO,CAAS,GAC5B,CACH,ECTaC,GAAyBC,GACpC,iBACA,IAAM,CACE,MAAAC,EAAgBC,GAAyB,gBAAiB,EAAK,EAC/DC,EAAiB/G,EAAI,EAAK,EAC1B,CAAE,YAAAgH,GAAgBC,KAElBC,EAAsB,SAA2B,CACrD,MAAMC,GAAuB,EAE7B,MAAMpC,EAAUC,KAChBD,EAAQ,oBAAoB,EAC5B8B,EAAc,MAAQ,GACtBL,GAAsB,EAAI,EAGpB,MAAAhG,EAAA,EAAsB,oBAE5BuE,EAAQ,YAAc,IAGlBqC,EAA6B,SAA2B,CAC5D,MAAM,QAAQ,IAAI,CAChB5G,EAAA,EAAsB,UAAU,EAChCwE,GAAA,EAAkB,eAAe,EAClC,GAGGqC,EAAS,SAA2B,OAWlC,MAAAC,EAAS,MAVQ,IAAIC,GACzBrB,GAAkB,CAChB,QAAS,CACP,MAAO,CACL,OAAQ,EACV,CACF,EACD,GAGiC,OAChC,IAAAX,EAAA+B,GAAA,YAAAA,EAAQ,SAAR,MAAA/B,EAAgB,QAAS,CACvB,GAAA+B,EAAO,OAAO,kBAAmB,CACnCP,EAAe,MAAQ,GACvBF,EAAc,MAAQ,GACf,gBAAS,KAAOS,EAAO,OAAO,kBACrC,MACF,CAEA,MAAMJ,EAAoB,EAE1BM,GAAU,IAAI,gBAAgB,CAChC,GAGIC,EAA4B,MAAOC,GAAgC,CACnE,IAACA,EAAqB,SAE1B,MAAM3C,EAAUC,KAChB,OAAAD,EAAQ,GAAK2C,EACbb,EAAc,MAAQ,GAEtB,MAAMO,EAA2B,EAEjCrC,EAAQ,YAAc,GAEf,IAyDF,OACL,cAAA8B,EACA,eAAAE,EACA,oBAAAG,EACA,OAAAG,EACA,MA3DY,MAAO,CACnB,MAAAM,EACA,SAAAC,EACA,WAAAC,EACA,wBAAAC,EACA,aAAAC,CAAA,IACkB,mBAClB,MAAMC,EAAyB,CAC7B,MAAAL,EACA,SAAAC,EACA,WAAAC,CAAA,EAGEC,EACFE,EAAW,wBAA0B,CACnC,gBAAiBF,EAAwB,OACzC,iBAAkBA,EAAwB,SAEnCC,IACTC,EAAW,kBAAoB,CAC7B,aAAAD,CAAA,GAoBE,MAAAT,EAAS,MAhBO,IAAIC,GACxBzB,GAAiB,CACf,UAAW,CACT,MAAOkC,CACT,EACA,QAAS,CACP,QAAS,CACP,wBAAyBhB,EAAY,KACvC,EACA,MAAO,CACL,OAAQ,EACV,CACF,EACD,GAGgC,OAEnC,OAAIzB,EAAA+B,GAAA,YAAAA,EAAQ,QAAR,MAAA/B,EAAe,QAAU,CAAC+B,EACrB,QAAQ,QAAO9B,EAAA8B,GAAA,YAAAA,EAAQ,QAAR,YAAA9B,EAAe,MAAM,GAG7C,MAAMiC,IAA0BQ,GAAAxC,EAAA6B,EAAO,QAAP,YAAA7B,EAAc,UAAd,YAAAwC,EAAuB,KAAM,IAAI,EAE1D,CACL,WAAWC,EAAAZ,EAAO,QAAP,YAAAY,EAAc,kBACzB,WAAWC,GAAAC,EAAAd,EAAO,QAAP,YAAAc,EAAc,UAAd,YAAAD,EAAuB,WACpC,EASA,2BAAAf,EACA,0BAAAK,CAAA,CAEJ,EACA,CACE,aAAc,EAChB,CACF,0HC5JA,MAA8BY,CAAc,CAe1C,YACEC,EACAC,EACA,CACA,KAAK,OAASD,EACd,KAAK,KAAOC,EAAgB,KAC5B,KAAK,MAAQA,EAAgB,QAC7B,KAAK,SAAWA,EAAgB,WAChC,KAAK,cAAgBA,EAAgB,SAChC,qBAAkBA,EAAgB,YAAc,EACvD,CAEQ,cAAuB,CACzB,cAAO,KAAK,WAAc,WACrB,KAAK,YAGP,KAAK,SACd,CAEO,iBAAmC,CACxC,MAAMC,EAAsC,CAC1C,KAAM,KAAK,aAAa,EACxB,MAAO,KAAK,MACZ,KAAM,KAAK,KACX,SAAU,SAAU,KAAK,iBAAmB,CAAC,KAAK,gBAAgB,KAClE,SAAU,KAAK,SACf,GAAG,KAAK,oBAAoB,GAG1B,YAAK,gBAAgB,UACJA,EAAA,MAAQ,KAAK,gBAAgB,SAMhD,KAAK,gBAAgB,YACpB,KAAK,gBAAgB,WAAsB,QAC1C,yBACI,KAENA,EAAmB,WAAa,4BAG3BA,CACT,CAGF,CCrEO,MAAMC,WAA4BJ,CAAc,CAAhD,kCACO,wBAGL,qBAAsB,CACpB,OACL,MAAO,CACL,SAAU,CACR,KAAM,GAAG,KAAK,EACd,MAAO,GAAG,IAAI,CAChB,CACF,EAEJ,CACF,CAEA,MAAoCK,GAAA,CAClC,KAAM,SACN,SAAUD,EACZ,ECjBaE,GAAqB,CAChCC,EACAC,EAAc,OAEPD,EAAM,OAAO,CAACE,EAAQC,EAAMC,IAAU,CAC3C,IAAIC,EAAaH,EAASC,EAC1B,OAAIC,GAASJ,EAAM,OAAS,GAAKA,EAAM,OAAS,IAChCK,GAAA,MAEZD,IAAUJ,EAAM,OAAS,IAC3BK,GAAc,GAAGL,EAAM,SAAW,EAAI,IAAM,EAAE,GAAGC,CAAW,KAEvDI,GACN,EAAE,EASMC,GAAQ,CACnBC,EACAC,IAEO,OAAOD,CAAK,GAAK,OAAOC,CAAM,EAAI,CAACA,EAAQD,CAAK,EAAI,CAACA,EAAOC,CAAM,EAG9DC,GAAYC,GAChBA,EAAI,QAAQ,eAAgB,CAACC,EAAGC,IAAMA,EAAE,aAAa,EAGjDC,GAAcH,GAClBA,EAAI,CAAC,EAAE,YAAgB,EAAAA,EAAI,MAAM,CAAC,EAG9BI,GAAeJ,GACnBA,EAAI,QACT,kBACA,CAACC,EAAGI,EAAWC,IAAc,GAAGD,CAAS,KAAKC,CAAS,IAK9CC,GAAYC,GAChBA,EAAM,QAAQ,iBAAkB,EAAE,EAAE,QAAQ,QAAS,IAAI,EAWrDC,GAAc,CACzBC,EACAC,EACAC,EACAJ,EACAK,IACG,SACH,OAAIH,GAAaC,EACRD,EAAU,CAAC,EAAIC,EAAS,CAAC,EAG9BD,GAAaC,GAAYC,GACnB3E,EAAAyE,GAAaC,GAAYC,IAAzB,YAAA3E,EAAiC,UAAU,EAAG,GAAG,cAGvDuE,GAASK,GACH3E,EAAAsE,GAASK,IAAT,YAAA3E,EAAkB,MAAM,IAAI,cAG/B,IACT,EAQa4E,GAAc,CACzBC,EAEAC,EACAC,EAAa,KAENF,EAAS,QAAQ,4BAA6B,CAACrB,EAAOwB,IAAQ,CACnE,MAAMC,EAASD,EAAI,QAAQ,SAAU,EAAE,EAAE,MAAM,IAAI,EACnD,IAAIE,EAAUJ,EACd,UAAWK,KAASF,EAClB,GAAI,OAAOC,GAAY,UAAYC,KAASD,EAC1CA,EAAUA,EAAQC,CAAK,MAClB,CACKD,EAAA,GACV,KACF,CAGE,IAAAE,EAGA,cAAOF,GAAY,WACrBE,EAAQF,EAAQ,EAGTA,GAAW,MAAQA,EAAQ,SAc7BE,IAAeA,EAAAF,EAAQ,SAAS,GAE7BE,EAAA,GAGNA,IAAU,KAAYA,EAAA,KACtBL,IAAoBK,EAAA,mBAAmBA,CAAK,GAEzCA,CAAA,CACR,ECtII,MAAMC,WAAwDxC,CAAc,CAA5E,kCACO,8BAEL,qBAAsB,CACpB,OACL,MAAO,CACL,UAAW,KAAK,gBAAgB,YAAc,GAC9C,0BAA2B,CAAC,KAAK,gBAAgB,UACjD,qBAAsBgB,GACnB,KAAK,gBAAgB,YAAyB,EACjD,CACF,EAEJ,CACF,CAEA,MAAoCyB,GAAA,CAClC,KAAM,4CACN,SAAUD,EACZ,ECnBO,MAAME,WAA4C1C,CAAc,CAAhE,kCACO,0BAEL,qBAAsB,CACpB,OACL,MAAO,CACL,UAAW,KAAK,gBAAgB,YAAc,GAC9C,0BAA2B,CAAC,KAAK,gBAAgB,UACjD,qBAAsBgB,GACnB,KAAK,gBAAgB,YAAyB,EACjD,CACF,EAEJ,CACF,CAEA,MAAoC2B,GAAA,CAClC,KAAM,sBACN,SAAUD,EACZ,EClBaE,GAAY,CAACC,EAAgBC,IACjC,GAAGA,CAAQ,IAAID,CAAM,GAGjBE,GAAgB,CAACF,EAAgBC,IACrCE,GAAQJ,GAAUC,EAAQC,CAAQ,CAAC,EAG/BG,GAAY,CAACC,EAAmBC,IAA8B,CAGrEA,aAAkBC,GACpBF,EAAK,UAAUC,EAAO,cAA2BA,EAAO,mBAAmB,EAE3ED,EAAK,WAAUC,GAAA,YAAAA,EAAQ,UAAW,GAAG,mCAAmC,CAAC,CAE7E,ECtBaE,GAAeC,GACnB,OAAOA,GAAO,UAAYA,EAAG,WAAW,eAAe,EAGnDC,GAAqB,CAACC,EAAcF,IACxC,gBAAgBE,CAAI,IAAIF,CAAE,GAGtBG,GAAkB,CAACD,EAAcF,IACxCD,GAAYC,CAAE,EACTA,EAGFC,GAAmBC,EAAMF,CAAE,EAGvBI,GACXJ,GACqC,CAC/B,MAACK,EAAUC,CAAQ,EAAIN,EAAG,MAAM,EAAsB,EAAE,MAAM,GAAG,EAEhE,OACL,SAAAK,EACA,GAAI,SAASC,EAAU,EAAE,EAE7B,EAEaC,GAAsBC,GACTJ,GAAeI,CAAS,EACzB,GCnBlB,MAAMC,WAAsD/D,CAAc,CAA1E,kCACO,oCAEL,qBAAsB,CACpB,OACL,MAAO,CACL,UAAW,CAAC,CAAC,KAAK,gBAAgB,WAClC,0BAA2B,CAAC,KAAK,gBAAgB,UACjD,OAAQ,KAAK,OACb,4BAA6B,CAC3B6C,EACAmB,IACG,OACH,MAAMC,EAAmD,GAEzD,OAAQ,KAAK,OAAQ,CACnB,KAAKC,EAAyB,OAKxB,GAJAF,IACoBC,EAAA,YAAa/G,EAAA8G,EAAa,WAAb,YAAA9G,EAAuB,IAGxD,CAAC+G,EAAsB,WAAY,CAC/B,MAAAf,EAAOH,GAAcF,EAAQ,aAAa,EAC1CN,EAAQW,GAAA,YAAAA,EAAM,MAEhBX,IACF0B,EAAsB,WAAaR,GACjC,OACAlB,CAAA,EAGN,CAEO,OAAA0B,EACT,KAAKC,EAAyB,KAC9B,KAAKA,EAAyB,aAC9B,KAAKA,EAAyB,MAC9B,QACS,OAAAD,CACX,CACF,CACF,EAEJ,CACF,CAEA,MAAoCE,GAAA,CAClC,KAAM,2CACN,SAAUJ,EACZ,ECtDO,MAAMK,WAAoCpE,CAAc,CAAxD,kCACL,eAAY,IAAM,CACR,YAAK,gBAAgB,SAAU,CACrC,IAAK,eACI,qBACT,IAAK,OACI,iBACT,IAAK,QACL,IAAK,cACL,IAAK,iBACH,MAAM,IAAI,MACR,YAAY,KAAK,gBAAgB,QAAQ,2BAG7C,QACE,MAAM,IAAI,MAAM,oBAAoB,KAAK,gBAAgB,QAAQ,EAAE,CACvE,EACF,CAEO,qBAAsB,CACpB,OACL,MAAO,CACL,UAAW,CAAC,CAAC,KAAK,gBAAgB,WAClC,0BAA2B,CAAC,KAAK,gBAAgB,UACjD,qBAAsBgB,GACnB,KAAK,gBAAgB,YAAyB,EACjD,EACA,SAAU,KAAK,gBAAgB,QACjC,EAEJ,CACF,CAEA,MAAoCqD,GAAA,CAClC,KAAM,sBACN,SAAUD,EACZ,ECrCO,MAAME,WAA6BtE,CAAc,CAAjD,kCACO,wBAEL,qBAAsB,CAGpB,OACL,MAAO,GACP,MAAO,CACL,SALa,KAAK,gBAAgB,OAMpC,EAGA,aAAc,sBAElB,CACF,CAEA,MAAoCuE,GAAA,CAClC,KAAM,UACN,SAAUD,EACZ,ECrBO,MAAME,WAA0BxE,CAAc,CAA9C,kCACO,sBAGL,qBAAsB,CACpB,OACL,MAAO,CACL,UAAW,CAAC,CAAC,KAAK,gBAAgB,IACpC,EAEJ,CACF,CAEA,MAAoCyE,GAAA,CAClC,KAAM,OACN,SAAUD,EACZ,EChBO,MAAME,WAA8B1E,CAAc,CAAlD,kCACO,0BAGL,qBAAsB,CACpB,OACL,MAAO,CACL,UAAW,CAAC,CAAC,KAAK,gBAAgB,IACpC,EAEJ,CACF,CAEA,MAAoC2E,GAAA,CAClC,KAAM,WACN,SAAUD,EACZ,ECfO,MAAME,WAA0C5E,CAAc,CAA9D,kCAEO,eAAAhJ,GAAA,IAAiB,UAAY,mBAAqB,SAEvD,qBAAsB,CAC3B,MAAO,EACT,CACF,CAEA,MAAoC6N,GAAA,CAClC,KAAM,oBACN,SAAUD,EACZ,ECZO,MAAME,WAA2B9E,CAAc,CAA/C,kCACL,eAAY,IAAM,CACR,YAAK,gBAAgB,KAAM,CACjC,IAAK,WACI,iBACT,IAAK,MACI,YACT,IAAK,QACI,cACT,IAAK,MACI,YACT,QACS,YACX,EACF,CAEO,qBAAsB,CAC3B,MAAM3I,EAAkC,CACtC,UAAW,KAAK,gBAAgB,WAG5B0N,EAAa,KAAK,aACxB,OAAIA,IACF1N,EAAM,WAAa0N,GAGd,CACL,MAAA1N,CAAA,CAEJ,CAEQ,YAAa,CACX,YAAK,gBAAgB,KAAM,CACjC,IAAK,QACI,cACT,IAAK,MACI,YACT,QACS,WACX,CACF,CACF,CAEA,MAAoC2N,GAAA,CAClC,KAAM,QACN,SAAUF,EACZ,EC/CO,MAAMG,WAA6BjF,CAAc,CAAjD,kCACO,wBAEL,qBAAsB,CACpB,OACL,MAAO,CACL,IAAK,KAAK,gBAAgB,IAC1B,IAAK,KAAK,gBAAgB,GAC5B,EAEJ,CACF,CAEA,MAAoCkF,GAAA,CAClC,KAAM,UACN,SAAUD,EACZ,ECAO,MAAME,WAA4BnF,CAAc,CAAhD,kCACO,wBAEZ,KAAU,wBAA0B,cAE7B,qBAAsB,CAC3B,MAAMoF,EAAuC,GACvC/N,EAAkC,CACtC,0BAA2B,CAAC,KAAK,gBAAgB,UACjD,UAAW,CAAC,CAAC,KAAK,gBAAgB,WAClC,QAAS,CAAC,EACV,kBAAmB,KAAK,gBAAgB,oBAGtC,YAAK,gBAAgB,UACvB+N,EAAW,SAAW,CACpB,KAAM,KAAK,gBAAgB,UAGzB,KAAK,gBAAgB,SACZA,EAAA,SAAS,UAAY,KAAK,gBAAgB,QAGvD/N,EAAM,qBAAuB2J,GAC1B,KAAK,gBAAgB,YAAyB,IAGjD3J,EAAM,QAAU,SACP,KAAK,gBAAgB,UACxBA,EAAA,QAAU,KAAK,iBAGnB,KAAK,gBAAkB,KAAK,0BAC9BA,EAAM,SAAW,IAEZ,CACL,GAAG+N,EACH,MAAA/N,CAAA,CAEJ,CAEU,eAAsC,CACxC,MAAAqG,EAAU,KAAK,gBAAgB,QAEjC,aAAM,QAAQA,CAAO,EAChBA,EAAQ,IAAI,CAAC,CAAE,KAAA3G,EAAM,MAAAwL,MAAa,CACvC,MAAOxL,EACP,MAAAwL,CACA,IAGG,OAAO,KAAK7E,CAAO,EAAE,IAAKyE,IAAS,CACxC,MAAOA,EACP,MAAOzE,EAAQyE,CAAG,CAClB,GACJ,CACF,CAEA,MAAoCkD,GAAA,CAClC,KAAM,SACN,SAAUF,EACZ,EC7EO,MAAMG,WAAiCH,EAAoB,CAAC,CAEnE,MAAoCI,GAAA,CAClC,KAAM,cACN,SAAUD,EACZ,ECIO,MAAME,WAAgCL,EAAoB,CAA1D,kCACO,4BAEc,iDAE1B,eAA0C,CAClC,MAAAM,EACJ/H,GAEOA,EAAQ,OACb,CACEgI,EACA,CAAE,SAAAC,EAAU,KAAA5O,EAAM,MAAAwL,KACf,CACH,MAAMqD,EAA2C,CAC/C,MAAO7O,EACP,MAAAwL,CAAA,EAGF,OAAIoD,IACeC,EAAA,SAAWH,EAAqBE,CAAQ,GAG3DD,EAAkB,KAAKE,CAAgB,EAEhCF,CACT,EACA,CAAC,GAIE,OAAAD,EACL,KAAK,gBACF,QAEP,CACF,CAEA,MAAoCI,GAAA,CAClC,KAAM,cACN,SAAUL,EACZ,EClDO,MAAMM,WAAqCN,EAAwB,CAAC,CAE3E,MAAoCO,GAAA,CAClC,KAAM,oBACN,SAAUD,EACZ,ECLO,MAAME,WAA8BhG,CAAc,CAAlD,kCACO,wBAWL,qBAAsB,CACpB,OACL,MAAO,CAAC,EAEZ,CACF,CAEA,MAAoCiG,GAAA,CAClC,KAAM,WACN,SAAUD,EACZ,ECrBO,MAAME,WAAyBlG,CAAc,CAA7C,kCACO,sBAGL,qBAAsB,CAGpB,OACL,MAAO,CACL,UAAW,EAJK7H,IAIe,OAAO,OACxC,EAEJ,CACF,CAEA,MAAoCgO,GAAA,CAClC,KAAM,MACN,SAAUD,EACZ,ECnBO,MAAME,WAA8BpG,CAAc,CAAlD,kCACO,0BAEL,qBAAsB,CACpB,OACL,MAAO,CACL,UAAW,KAAK,gBAAgB,UAChC,KAAM,KAAK,gBAAgB,IAC7B,EAEJ,CACF,CAEA,MAAoCqG,GAAA,CAClC,KAAM,WACN,SAAUD,EACZ,ECbO,MAAME,WAAqCtG,CAAc,CAAzD,kCAEO,eAAAhJ,GAAA,IAAiB,UAAY,aAAe,SAEjD,qBAAsB,CAC3B,MAAO,EACT,CACF,CAEA,MAAoCuP,GAAA,CAClC,KAAM,kBACN,SAAUD,EACZ,ECVME,GAAuB,oCAAAC,GAAA,mDAAAC,GAAA,sCAAAC,GAAA,kDAAAC,GAAA,6BAAAC,GAAA,sBAAAC,GAAA,mBAAAC,GAAA,uBAAAC,GAAA,gCAAAC,GAAA,oBAAAC,GAAA,sBAAAC,GAAA,0BAAAC,GAAA,8BAAAC,GAAA,uBAAApB,GAAA,qBAAAZ,GAAA,kBAAAc,GAAA,uBAAAE,GAAA,yBAAAR,GAAA,+BAAAU,EAAA,GAQvBe,GAA2D,GAEjE,OAAO,QAAQd,EAAoB,EAAE,QAAQ,CAAC,EAAGe,CAAc,IAAM,CAC9CD,GAAAC,EAAe,IAAI,EAAIA,EAAe,QAC7D,CAAC,EAED,MAAMC,GAAmB,CACvBvH,EACAwH,IACkB,CAClB,GAAI,CAACH,GAAqBG,EAAU,QAAQ,EAC1C,MAAM,IAAI,MACR,8BAA8BA,EAAU,QAAQ,KAAKA,EAAU,IAAI,KAIvE,OAAO,IAAIH,GAAqBG,EAAU,QAAQ,EAAExH,EAAQwH,CAAS,CACvE,ECvBaC,GAAkC,CAC7CC,EACAC,IACG,CACHA,EAAc,SAAWD,EAAO,UAAa,SAAUA,GAAU,CAACA,EAAO,KAErE,YAAaA,IACfC,EAAc,MAAQD,EAAO,SAG3B,WAAYA,GAAUC,EAAc,WACxBA,EAAA,SAAS,UAAYD,EAAO,QAK1C,eAAgBA,GAChBC,EAAc,OACd,cAAeA,EAAc,QAEfA,EAAA,MAAM,UAAYD,EAAO,WAE3C,EAEME,GAAwB,CAC5B5H,EACAwH,IAEsBD,GAAiBvH,EAAQwH,CAAS,EAEnC,kBCpCVK,GAA0CxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkBhD,SAASyK,GAAwCC,EAAqNtK,EAAuc,GAAI,CACttB,OAAOuK,GAA8HH,GAAyCE,EAAWtK,CAAO,CAClM,CCVa,MAAAwK,GAAuBjI,GAAqC,CACvE,MAAMkI,EAAmBC,KAIzB,GAAI,CAACD,EAAiB,6BAA6BlI,CAAM,EAAG,CAC1D,MAAMoI,EAAU,IAAIC,GAClBP,GAAwC,CACtC,OAAA9H,CAAA,CACD,GAEGsI,EAAgBF,EAAQ,SACxBG,EAAoBH,EAAQ,UAE5BjD,EAAa5N,EAA4B,IAAM,SAC5C,OACL,GAAIiR,GAA+BxI,CAAM,GAAK,CAAC,EAC/C,KAAI9C,GAAAD,EAAAqL,EAAc,QAAd,YAAArL,EAAqB,kCAArB,YAAAC,EAAsD,aACxD,CAAC,EACL,CACD,EAEKuL,EAAUlR,EAAS,IAAM,SAE3B,QAAA2F,GAAAD,EAAAqL,EAAc,QAAd,YAAArL,EAAqB,kCAArB,YAAAC,EAAsD,QAAQ,OAC5D,CAACuL,EAAmCf,KAClCe,EAAQf,EAAO,IAAI,EAAIA,EAAO,WACvBe,GAET,CAAC,KACE,EAAC,CAET,EAEKC,EAAmBnR,EAAS,IAAM,OAChC,MAAAoR,MAA2C,IAEjD,OAAA1L,EAAAkI,EAAW,QAAX,MAAAlI,EAAkB,QAASuK,GACzBmB,EAAO,IAAInB,EAAU,KAAMA,CAAS,GAG/BmB,CAAA,CACR,EAEKC,EAA4BrR,EAAS,IAAM,OACzC,MAAAoR,MAA2C,IAEtC,OAAA1L,EAAAkI,EAAA,cAAAlI,EAAO,QAASuK,GAAc,CAClCA,EAAU,UACbmB,EAAO,IAAInB,EAAU,KAAMI,GAAsB5H,EAAQwH,CAAS,CAAC,CACrE,GAGKmB,CAAA,CACR,EAEDT,EAAiB,6BAA6BlI,EAAQ,CACpD,WAAAmF,EACA,QAAAsD,EACA,iBAAAC,EACA,0BAAAE,EACA,QAASL,CAAA,CACV,CACH,CAEO,OACL,GAAGM,GAAOX,EAAiB,6BAA6BlI,CAAM,CAAC,EAEnE,EAEa8I,GAAoC,IAAM,CACrDb,GAAoBhE,EAAyB,MAAM,EACnDgE,GAAoBhE,EAAyB,aAAa,CAC5D,EChFa8E,GAA4B,CACvC/I,EACA0H,IACG,CACG,MAAAQ,EAAmBD,GAAoBjI,CAAM,EAE7CgJ,EAAsB,CAC1BtB,EACAe,EACAC,IAEKD,EAAQ,MAAMf,CAAM,EAElBe,EAAQ,MAAMf,CAAM,EAAE,OAC3B,CAACuB,EAAqCC,KACpCD,EAAiB,KACfP,EAAiB,MAAM,IAAIQ,CAAa,GAEnCD,GAET,CAAC,GATgC,GAqB9B,OACL,iBATuB1R,EAAS,IACzByR,EACLtB,EACAQ,EAAiB,QACjBA,EAAiB,iBAEpB,CAGC,CAEJ,ECrCaiB,GAAuD,CAClE,KAAMlF,EAAyB,aAC/B,WAAY,CACV,CACE,KAAM,gBACN,QAAS,GAAG,YAAY,EACxB,WAAY,CACV,SAAU,MACZ,EACA,SAAU,eACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,aACN,QAAS,GAAG,YAAY,EACxB,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,gBACN,QAAS,GAAG,YAAY,EACxB,WAAY,CACV,SAAU,MACZ,EACA,SAAU,eACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,aACN,QAAS,GAAG,YAAY,EACxB,SAAU,WACV,SAAU,GACV,WAAY,EACd,CACF,CACF,EAEamF,GAAuC9K,GAClD,+BACA,IAAM,CACJ,KAAM,CAAE,iBAAkB+K,GACxBN,GAA0B9E,EAAyB,aAAc,MAAM,EAElE,OACL,qBAAAoF,CAAA,CAEJ,CACF,ECrDaF,GAAuD,CAClE,KAAMlF,EAAyB,OAC/B,WAAY,CACV,CACE,KAAM,SACN,QAAS,IACT,SAAU,QACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,YACN,QAAS,GAAG,gBAAgB,EAC5B,SAAU,YACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,gBACN,QAAS,GAAG,eAAe,EAC3B,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,+BACN,QAAS,GAAG,qCAAqC,EACjD,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,uBACN,QAAS,GAAG,6BAA6B,EACzC,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,sBACN,QAAS,GAAG,4BAA4B,EACxC,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,kBACN,QAAS,GAAG,cAAc,EAC1B,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,wBACN,QAAS,GAAG,sBAAsB,EAClC,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,2BACN,QAAS,GAAG,yBAAyB,EACrC,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,oBACN,QAAS,GAAG,gBAAgB,EAC5B,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,WACN,QAAS,GAAG,cAAc,EAC1B,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,gBACN,QAAS,GAAG,mBAAmB,EAC/B,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,gBACN,QAAS,GAAG,YAAY,EACxB,WAAY,CACV,SAAU,OACV,WAAY,WACd,EACA,SAAU,sBACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,aACN,QAAS,GAAG,YAAY,EACxB,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,gBACN,QAAS,GAAG,YAAY,EACxB,WAAY,CACV,SAAU,OACV,WAAY,WACd,EACA,SAAU,sBACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,aACN,QAAS,GAAG,YAAY,EACxB,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,uBACN,QAAS,GAAG,mBAAmB,EAC/B,SAAU,WACV,SAAU,GACV,WAAY,EACd,CACF,CACF,EChIakF,GAAuD,CAClE,KAAMlF,EAAyB,KAC/B,WAAY,CACV,CACE,KAAM,gBACN,QAAS,GAAG,YAAY,EACxB,WAAY,CACV,SAAU,MACZ,EACA,SAAU,eACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,aACN,QAAS,GAAG,YAAY,EACxB,SAAU,WACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,gBACN,QAAS,GAAG,YAAY,EACxB,WAAY,CACV,SAAU,MACZ,EACA,SAAU,eACV,SAAU,GACV,WAAY,EACd,EACA,CACE,KAAM,aACN,QAAS,GAAG,YAAY,EACxB,SAAU,WACV,SAAU,GACV,WAAY,EACd,CACF,CACF,EAEaqF,GAA+BhL,GAC1C,uBACA,IAAM,CACJ,KAAM,CAAE,iBAAkB+K,GACxBN,GAA0B9E,EAAyB,KAAM,MAAM,EAE1D,OACL,qBAAAoF,CAAA,CAEJ,CACF,EC5CME,GAGF,+DAAA/C,GAAA,0CAAAC,GAAA,wCAAAC,EAAA,GAKS8C,GAAiC,OAAO,OACnDD,EACF,EACaf,GACXgB,GAA+B,OAG7B,CAACxK,EAAQyK,KACAzK,EAAAyK,EAAW,IAAI,EAAIA,EAAW,WAC9BzK,GAET,CAAC,CACH,EAEWmJ,GAA2B7J,GAAY,mBAAoB,IAAM,CACtE,MAAAoL,EAA+BhS,EAEnC,EAAE,EAqBG,OACL,6BAAAgS,EACA,6BATmC,CACnC1J,EACA2J,IACG,CAC0BD,EAAA,MAAM1J,CAAM,EAAI2J,CAAA,EAM7C,6BAtBoC3J,GAAqC,CACnE,MAAA4J,EAAyBF,EAA6B,MAAM1J,CAAM,EAExE,OAAK4J,GACC7P,GAAA,MACF,6DAA6DiG,CAAM,mCAIhE4J,CAAA,CAaP,CAEJ,CAAC,EC3DKC,GACJ,2FAEWC,GAAoBC,GAIxB,CAAC,EAAEA,EAAG,aAAeA,EAAG,cAAgBA,EAAG,iBAAiB,QAG/DC,GAAsBD,GAAoB,CACxC,MAAAE,EAAWF,EAAG,aAAa,UAAU,EAC3C,OAAOE,GAAY,SAASA,EAAU,EAAE,EAAI,CAC9C,EAEaC,GAAuB,CAClCC,EACA1M,EAA4B,KAErB,MAAM,MACX0M,GAAA,YAAAA,EAAW,iBAAiBN,MAAoB,CAAC,GACjD,OACCE,GACCD,GAAiBC,CAAE,IAClBtM,EAAQ,gBAAkB,CAACuM,GAAmBD,CAAE,IACjD,CAACA,EAAG,aAAa,UAAU,GAC3BA,EAAG,aAAa,eAAe,IAAM,QAI9BK,GAA4BD,GAChCD,GAAqBC,CAAS,EAAE,CAAC,EC3B7BE,GAAa/H,GACjB,CAAC,CAACA,EAGEgI,GACXtK,GACQ,OACD,QAAA/C,EAAA+C,GAAA,YAAAA,EAAQ,QAAR,YAAA/C,EAAe,IAAKsN,GAASA,EAAK,QAAS,EACpD,EAEaC,GACXxK,GACuC,CACjC,MAAAyK,EAAQH,GAAgBtK,CAAM,EAC7B,OACL,MAAAyK,EACA,YAAYzK,GAAA,YAAAA,EAAQ,aAAcyK,EAAM,OAE5C,EAEaC,GAAa,CAAsBC,EAAMC,IAC7C,CAAC,GAAG,IAAI,IAAI,CAAC,GAAGD,EAAG,GAAGC,CAAC,CAAC,CAAC,EAGrBC,GAAwB,IAC5B,IAAI,QAASC,GAAY,sBAAsBA,CAAO,CAAC,EAGnDC,GAAeC,GACrBA,EAEEA,EACJ,OACA,QAAQ,eAAgB;AAAA,CAAI,EAC5B,QAAQ,MAAO;AAAA,CAAI,EACnB,QAAQ,SAAU;AAAA,CAAI,EACtB,QAAQ,YAAa;AAAA;AAAA,CAAM,EAPX,GAWRC,GAAcC,IACzBA,EAAOH,GAAYG,CAAI,EACvBA,EAAOC,GAAWD,CAAI,EACfA,IAAK,QAAQ,kBAAmB;AAAA,CAAI,EACpCA,IAAK,QAAQ,QAAS,SAAS,EACtCA,EAAO,QAAQA,EAAK,QAAQ,MAAO,aAAa,CAAC,SAC1CA,EAAK,QAAQ,gBAAiB,iBAAiB,GAG3CE,GAAe,CAACF,EAAcG,EAAS,MAC9C,CAACH,IAEEA,IAAK,QAAQ,aAAc,EAAE,EAEhCA,EAAK,OAASG,GAAeH,EAE1B,GAAGA,EAAK,UAAU,EAAGG,CAAM,CAAC,IAGxBC,GAAiB,CAC5BC,EACAC,EACAC,EAAQ,MACL,CACC,IAAAC,EACAC,EAAmC,KACnCC,EAAaJ,EACjB,MAAO,IAAIK,KACLH,IACYC,GAAA,MAAAA,IACd,aAAaD,CAAO,GAEf,IAAI,QAAW,CAACZ,EAASgB,IAAW,CAC3BH,EAAA,IAAMb,EAAQc,CAAU,EAC5BF,EAAA,OAAO,WAAW,IAAM,CAChCH,EAAG,GAAGM,CAAI,EAAE,KAAM7M,GAAW,CACd4M,EAAA5M,EACb8L,EAAQ9L,CAAM,GACb8M,CAAM,GACRL,CAAK,EACT,EAEL,EAaaM,GAAiB,MAC5BC,EACAC,EAAQ,KACoB,CACxB,GAAAA,IAAU,EAAU,YAClB,MAAAC,EAAU,SAAS,cAAcF,CAAK,EAC5C,OAAIE,IACJ,MAAM,IAAI,QAASpB,GAAY,sBAAsBA,CAAO,CAAC,EACtDiB,GAAeC,EAAOC,EAAQ,CAAC,EACxC,EC/GaE,GAAUC,GACrBA,EACG,QAAQ,kBAAmB,WAAW,EACtC,QAAQ,cAAe,WAAW,EAClC,QAAQ,YAAa,WAAW,EAChC,QAAQ,kBAAmB,eAAe,EAC1C,QAAQ,YAAa,eAAe,EACpC,QAAQ,uBAAwB,qCAAqC,EAE7DC,GAAiBD,GAC5BA,EACG,QAAQ,kBAAmB,IAAI,EAC/B,QAAQ,cAAe,IAAI,EAC3B,QAAQ,YAAa,IAAI,EACzB,QAAQ,kBAAmB,IAAI,EAC/B,QAAQ,YAAa,IAAI,EACzB,QAAQ,uBAAwB,IAAI,ECdzC,IAAIE,GAAsC,CACxC,UAAW,aACX,KAAM,kBACN,UAAW,wBACX,aAAc,0BAChB,EAEa,MAAAC,GAA8BrV,GAA+B,CACrDoV,GAAApV,CACrB,EAEasV,GAAsB,IAAMF,GCXzC,IAAIG,GAA4B,CAC9B,QAAS,cACX,EAEa,MAAAC,GAAyBxV,GAA0B,CAChDuV,GAAAvV,CAChB,EAEayV,GAAiB,IAAMF,GC2CxB,IAAAG,OACVA,EAAA,KAAO,OACPA,EAAA,KAAO,OACPA,EAAA,MAAQ,QACRA,EAAA,OAAS,SAJCA,OAAA,IAoKAC,QACVA,EAAA,QAAU,UACVA,EAAA,eAAiB,iBACjBA,EAAA,YAAc,cAHJA,QAAA,ICrNL,MAAMC,GAAa,CACxB3C,EACA4C,EAAmB,KAChB,CACG,MAAAC,EAAaC,GAAqB,CAChC,MAAAC,EAAoBhD,GAAqBC,EAAU,KAAK,EACxDgD,EAAwBD,EAAkB,CAAC,EAC3CE,EAAuBF,EAAkBA,EAAkB,OAAS,CAAC,EAE3E,GAAID,EAAE,SAAU,CAEV,SAAS,gBAAkBE,IAC7BC,EAAqB,MAAM,EAC3BH,EAAE,eAAe,GAEnB,MACF,CAEI,SAAS,gBAAkBG,IAE7BD,EAAsB,MAAM,EAC5BF,EAAE,eAAe,EACnB,EAGII,EAAS3V,EAAI,CAACqV,CAAgB,EAE9BO,EAAkB,IAAM,CAC5BD,EAAO,MAAQ,IAGXE,EAAoB,IAAM,CAC9BF,EAAO,MAAQ,IAGjB,OAAAG,GACGP,GAAM,CACD,CAACI,EAAO,OAIR,EAFUJ,EAAE,MAAQ,OAASA,EAAE,UAAY,IAI/CD,EAAUC,CAAC,CACb,EACA,CAAE,OAAQ9C,CAA8B,GAgBnC,CACL,gBAAAmD,EACA,kBAAAC,EACA,oBAhB0B,IAAM,CAC5B,IAACpD,EAAU,MAAO,OAEhB,MAAAsD,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,SAAW,EAExB,sBAAsB,IAAM,QAChBxQ,EAAAkN,EAAA,cAAAlN,EAAO,QAAQwQ,GACzBA,EAAa,MAAM,EACnBA,EAAa,OAAO,EACrB,EAMD,CAEJ,ECtEA,IAAIC,GAAiB,CACnB,KAAM,GACN,MAAO,EACT,EAEa,MAAAC,GAA4BzW,GAAmC,CACzDwW,GAAAxW,CACnB,EACa0W,GAAoB,IAAMF,GCL1BG,GAAQC,GACnB,QACA,KACG,CACC,IAAK,MACL,MAAO,CACL,MAAO,gBACT,EACA,SAAU,CACR,CACE,KAAM,aACN,MAAO,CACL,KAAM,OACN,MAAO,WACP,KAAM,iBACN,WAAY,EACd,CACF,CACF,GAEN,ECtBaC,GAAQD,GAAc,QAAS,KACnC,CACL,IAAK,MACL,MAAO,CACL,QAAS,mCACX,GAEH,ECND,IAAI5T,GAAiC,CACnC,UAAW,uBACX,KAAM,kBACN,KAAM,iBACR,EAEa,MAAA8T,GAA8B9W,GAA+B,CAC1DgD,GAAAhD,CAChB,EAEa+W,GAAsB,IAAM/T,kJCMzC,MAAM1C,EAAWyW,+fCZJC,GAAOJ,GAClB,OACA,KACG,CACC,KAAMK,GAAQC,EAAa,EAC3B,GAAI,QACJ,MAAO,CACL,GAAI,MACJ,KAAM,QACN,SAAU,YACV,UAAW,aACX,YAAa,cACf,GAEN,ECnBMC,GAAgBpL,GAAsB,CACrCA,EAAA,GAAG,UAAW,IAAM,CACnB,IAACA,EAAK,QAAS,OAEb,MAAAqL,EAAsBrL,EAAK,QAAQ,SAAS,KAIlDA,EAAK,QAAQ,SAAS,KAAQnJ,GAAuB,OACnDmJ,EAAK,KAAK,QAAQhG,EAAAgG,EAAK,UAAL,YAAAhG,EAAc,KAAK,EAEjCgG,EAAK,SACPqL,EAAoBxU,CAAK,CAC3B,CACF,CACD,CACH,ECZMyU,GAAiBtL,GAAsB,CAC3C,MAAMtG,EAASC,KACT,CAAE,MAAAxF,CAAU,EAAA6L,EAClBA,EAAK,SAAS,CAAC,YAAa,eAAe,CAAC,EAE5C7L,EAAM,UAAY+D,EAAM,WAAM,QAAA8B,EAAAN,EAAO,aAAP,YAAAM,EAAmB,MAAO,MAAK,EAC7D7F,EAAM,cAAgB+D,EACpB,WAAM,mBAAW8B,EAAAN,EAAO,aAAP,YAAAM,EAAmB,OAAQ,MAAQ,OAAS,OAAO,IAExE,ECbMuR,GAAavL,GAAsB,CAClCA,EAAA,SAAS,CAAC,QAAQ,CAAC,EAEnBA,EAAA,GAAG,UAAW,IAAM,CACjB,MAAE,MAAA7L,CAAU,EAAA6L,EAEd7L,EAAM,SACRA,EAAM,WAAa,UAGrB6L,EAAK,GAAG,cAAe,CAAC,CAAE,QAAAwL,KAAc,CAClCA,EACIrX,EAAA,WAAa,GAAGA,EAAM,UAAU,UAC7BA,EAAM,aACfA,EAAM,WAAaA,EAAM,WAAW,QAAQ,SAAU,EAAE,EAC1D,CACD,EACF,CACH,ECXMsX,GAAmB,CAAC,QAAS,cAAe,MAAM,EAClDC,GAAmB,CAAC,aAAa,EAEjCC,GAAiB,CAAC3L,EAAmB4L,IAAkC,CAC3E,MAAMC,EAAgE,CACpE,GAAGD,CAAA,EAGY,OAAAF,GAAA,QAASI,GAAS,CAE/BA,KAAQF,IACP,CAAC5L,EAAK,MAAM8L,CAAI,GAAK9L,EAAK,MAAM8L,CAAI,EAAE,QAAUF,EAAME,CAAI,IAG3D9L,EAAK,MAAM,IACT+L,GAAc,CACZ,IAAKD,EACL,KAAM,KACN,MAAOF,EAAME,CAAI,EAClB,GAID9L,EAAK,MAAM8L,CAAI,GAAK9L,EAAK,MAAM8L,CAAI,EAAE,QACvBD,EAAA,YAAcvX,EAAS,IAC9Bc,EAAK,EAAE4K,EAAK,MAAM,YAAY,KAAe,CACrD,EACH,CACD,EAEM6L,CACT,EAEMG,GAAyBhM,GAAsB,CACnDA,EAAK,KAAK,KAAK,CAAC,CAAE,KAAAiM,EAAM,MAAA5M,GAAS6M,IAAS,CACxC,MAAMC,EAAWF,EACjB,OAAIE,IAAa,SAAW,CAACC,GAAQ/M,CAAK,IAEhCA,EAAAsM,GAAe3L,EAAMX,CAAK,GAEhCoM,GAAiB,SAASU,CAAQ,KAEhC,CAACnM,EAAK,MAAMmM,CAAQ,GAAKnM,EAAK,MAAMmM,CAAQ,EAAE,QAAU9M,IAC1DW,EAAK,MAAM,IACT+L,GAAc,CACZ,IAAKI,EACL,KAAM,KACN,MAAA9M,CAAA,CACD,GAID8M,IAAa,QAEf9M,EAAQ/K,EAAS,IACRc,EAAK,EACV4K,EAAK,MAAMmM,CAAQ,EAAE,MACrB,GAAInM,EAAK,MAAM,kBAAoB,CAAC,EAEvC,EAGDX,EAAQ/K,EAAS,IACRc,EAAK,EAAE4K,EAAK,MAAMmM,CAAQ,EAAE,KAAe,CACnD,GAGED,EAAK,CAAE,KAAAD,EAAM,MAAA5M,CAAO,GAC5B,EAGIW,EAAA,GAAG,UAAW,IAAM,CACNyL,GAAA,QAASQ,GAAS,CAC7BA,KAAQjM,EAAK,QAEfA,EAAK,MAAMiM,CAAI,EAAIjM,EAAK,MAAMiM,CAAI,EACpC,CACD,EACF,CACH,EC/EMI,GAA2C,CAC/C,SACA,cACA,mBACA,UACF,EAEMC,GAEF,CACF,SAAU,CAACN,GAAuBT,GAAWH,GAAcE,EAAa,EACxE,MAAOe,EACT,ECqBME,GAA4B,CAChCC,EACAC,EAGI,GACJjS,EAA+B,KAC5B,CACG,MACJ,gBAAAkS,EAAkB,GAClB,mBAAAC,EAAqB,GACrB,SAAAC,EAAW,EACT,EAAApS,EAEEqS,EAAkBL,EAMxB,GALgBK,EAAA,MAAQ,MAAM,QAAQA,EAAgB,KAAK,EACvDA,EAAgB,MAChB,GACYA,EAAA,WAAhBA,EAAgB,SAAa,CAAC,GAE1BrS,EAAQ,OAAQ,CAWZ,MAAAsS,EAAc,CAVEC,GACpBC,GAAM,QAAQ,EACdC,GACE5Y,GAAK,SAAU,OAAO,EACtB6Y,GAAO,EACP1S,EAAQ,OAAO,EACf2S,GAAO,EACP9Y,GAAK,QAAQ,CACf,EAEgC,EAE9BuY,GACUE,EAAA,KAAKlC,IAAO,EAGdkC,EAAA,KAAK7B,IAAM,EAEvB4B,EAAgB,OAASO,GACvBtC,GAAM,GAAGgC,CAAW,EACpBO,GAAK,OAAO,EACZC,GAASC,GAAQ,gBAAgB,CAAC,EAEtC,CAEM,MAAAC,EAAkB,MAAM,QAAQf,EAA4B,KAAK,EACnEA,EAA4B,MAC5B,GACJ,GAAIC,EAAiB,CACnB,MAAMe,EAA8B,MAAM,QACxCnB,GAAuB,OAErBA,GAAuB,MACvB,GAEJO,EAAgB,MAAQpF,GACtBoF,EAAgB,MAChBY,EAA4B,OAAOD,CAAe,EAEtD,CAEM,MAAAE,EAAqBjB,EAA4B,UAAY,GAC/DE,IACFE,EAAgB,SAAWpF,GACzB6E,GAAuB,SAAS,OAAOoB,CAAkB,EACzDb,EAAgB,UAGtB,ECpGA,IAAIc,GAAe,EAEnB,MAAMC,GAAeC,GACdA,EAEF,OAAOA,GAAQ,YAAcA,EAAI,SAAW,GAC1C,OAAOA,GAAQ,UACd,CAAC,MAAM,QAAQA,CAAG,GAClB,EAAE,QAASA,IACX,EAAE,SAAUA,IACZ,EAAE,OAAQA,GAPC,GAqBbC,GAAc,CAClBC,EACA5Z,EACA6Z,EAAmD,CAAC,EACpDxT,EAA+B,KACL,CAC1BwT,EAAiB,MAAQ7Z,EAEzB,MAAMqY,EAAa,CACjB,KAAM,QACN,GAAGwB,CAAA,EAED,IAAAC,EACA,GAAAL,GAAYG,CAAiB,EAAG,CAE5B,MAAAG,EAAU,wBAAwBP,IAAc,GAC7CM,EAAApD,GAAc,QAAS,KAAO,CACrC,KAAMqD,EACN,MAAO,CACL,QAAS,eACX,CACA,IACF1B,EAAW,QAAU,CAAE,CAAC0B,CAAO,EAAGhD,GAAQ6C,CAAiB,EAAE,MAE7DE,EAASpD,GAAc,QAAS,IAAMsD,GAASJ,CAAiB,CAAC,EAGnE,OAAAxB,GAA0BC,EAAY,CAAC,EAAG,CAAE,GAAGhS,EAAS,OAAAyT,EAAQ,EAE3DzB,EAAW,gBACdA,EAAW,cAAgB,GAAG,KAAK,QAAQ,IAGtCA,CACT,ECjEM4B,GAAWpO,GAAsB,CAC/B,MAAE,MAAA7L,CAAU,EAAA6L,EAKd,GAHJA,EAAK,SAAS,CAAC,OAAQ,WAAY,YAAa,aAAa,CAAC,EAG1DlM,GAAA,IAAiB,SAAU,OAEzB,MAAAua,EAAcC,GAAoB,CAClCA,EACFna,EAAM,WAAa,GAAGA,EAAM,YAAc,EAAE,qBACnCA,EAAM,aACfA,EAAM,WAAaA,EAAM,WAAW,QAAQ,oBAAqB,EAAE,EACrE,EAGG6L,EAAA,GAAG,UAAW,IAAM,CACZqO,EAAA,CAAC,CAACla,EAAM,IAAI,EAEvB6L,EAAK,GAAG,YAAa,CAAC,CAAE,QAAAwL,KAAc,CACzB6C,EAAA,CAAC,CAAC7C,CAAO,EACrB,EACF,CACH,ECxBM+C,GAAqB,CACzBC,EAAqC,SACrCC,EAAsB,MAEdzO,GAAsB,CACtB,MAAE,MAAA7L,CAAU,EAAA6L,EAElBA,EAAK,SAAS,CACZ,qBACA,qBACA,qBACD,EAEIA,EAAA,GAAG,UAAW,IAAM,CAClB7L,EAAM,qBACTA,EAAM,mBAAqBqa,GAI3Bra,EAAM,oBACNA,EAAM,qBAAuB,YAC5B,CAACA,EAAM,OAASA,EAAM,MAAQsa,KAE/Bta,EAAM,MAAQsa,GAGV,MAAE,QAAA1T,CAAY,EAAAiF,EAEfjF,GAGLiF,EAAK,KAAK,MAAM,CAACwL,EAASU,KACpBnR,EAAQ,qBAAoBA,EAAQ,mBAAqB,IAEtDmR,EAAKV,CAAO,EACpB,EACF,GClCCkD,GACJ3T,GACG,CACH,MAAM4T,EAAera,EAAS,IAAMyG,EAAQ,MAAM,MAAW,EAEvD6T,EAAWta,EAAS,IACjByG,EAAQ,MAAM,IAAI,SAAS4T,EAAa,KAAK,CACrD,EAEKE,EAAiBva,EAAc,IACnCyG,EAAQ,MAAM,SAAY4T,EAAa,MAAgB,CAACA,EAAa,KAAK,GAGtEG,EAAkBzP,GACjBuP,EAAS,MACNC,EAAe,MAAyB,SAASxP,CAAK,EADlC,GAIxB0P,EAAa,CAACC,EAAgB,KAAS,CACvC,IAACJ,EAAS,MAAO,OAGrB,MAAMG,EACJhU,EAAQ,MAAM,aAAe,OAAYA,EAAQ,MAAM,WAAa,KACtEA,EAAQ,MAAM,KAAK,MAAMgU,EAAYC,CAAa,GAU7C,OACL,WARiB1a,EAAS,CAC1B,IAAK,IAAMqa,EAAa,MACxB,IAAMtP,GAAU,CACNtE,EAAA,MAAM,KAAK,MAAMsE,CAAK,CAChC,EACD,EAIC,aAAAsP,EACA,SAAAC,EACA,eAAAC,EACA,eAAAC,EACA,WAAAC,CAAA,CAEJ,EC/BME,GAAmB,CAGvBzU,EACAO,IAUG,CACH,MAAMmU,EAASza,IAET,CAAE,aAAAka,EAAc,SAAAC,EAAU,eAAAC,EAAgB,WAAAE,GAC9CL,GAAS3T,CAAO,EAEZoU,EAAkB1a,EAAO,EAAkB,EAE3C2a,EAAmB9a,EAAS,IAAM,CACtC,GAAIkG,EAAQ,OAAS,CAAC,EACtB,GAAG2U,EAAgB,MACpB,EAEKE,EAAoB/a,EAAS,IACjC,cAAA0F,EAAAoV,EAAiB,QAAjB,YAAApV,EAAwB,KACrBsV,GAAYA,EAA2C,QAC1D,EAGIC,EAAoBjb,EAAS,IAAM,CACvC,GAAI,CAAC8a,EAAiB,MAAO,MAAO,GAE9B,MAAE,0BAAAI,CAA0B,EAAIzU,EAAQ,MAE9C,OAAOqU,EAAiB,MAAM,IAAKE,GAAW,CAC5C,MAAMtC,EACJwC,GAA6B,CAACF,EAAO,iBACjCA,EAAO,OAAS,GAChBla,EAAK,EAAEka,EAAO,MAAO,GAAIA,EAAO,kBAAoB,EAAG,EAEvDG,EAAUH,EACVI,EACJF,GAA6B,CAACC,EAAQ,mBAClCA,EAAQ,SAAW,GACnBra,EAAK,EAAEqa,EAAQ,QAAS,GAAIA,EAAQ,oBAAsB,EAAG,EAE5D,OACL,GAAGH,EACH,MAAAtC,EACA,QAAA0C,CAAA,CACF,CACD,EACF,EAEKC,EAAoBrb,EAAS,IACjCsb,GAAML,EAAkB,MAAO,OAAO,GAGlCM,EAAgBvb,EAAS,IAAM,CAC7B,MAAE,QAAAwb,CAAQ,EAAI/U,EAAQ,MAExB,OAAC+U,EAEDA,IAAY,SAAWA,IAAY,SAC7B,aAAK,+BAA+BA,CAAO,GAAG,EAC/CP,EAAkB,OAGpB,CAAC,GAAGA,EAAkB,KAAK,EAAG,KAAK,CAAC7H,EAAGC,IAAM,CAClD,MAAMoI,EAAgBrI,EAAEoI,CAAO,GAAKpI,EAAE,MAChCsI,EAAgBrI,EAAEmI,CAAO,GAAKpI,EAAE,MACtC,OAAO,OAAOqI,CAAa,EAAE,cAAc,OAAOC,CAAa,CAAC,EACjE,EAXoBT,EAAkB,KAWtC,CACF,EAEKU,EAAqBC,GAAiD,CACtE,UAAOA,GAAkB,UAAYA,IAAkB,KAClD,OAAAA,EACH,MAAAjR,EAAMiR,EAAc,WACnB,OAAAP,EAAkB,MAAM1Q,CAAG,GAG9BkR,EAAyBD,GAAsC,CAC7D,MAAAZ,EAASW,EAAkBC,CAAa,EAC9C,OAAOZ,GAAA,YAAAA,EAAQ,MAGXc,EAA0BF,GAAsC,CAChE,UAAOA,GAAkB,SAAiB,OAAAA,EACxC,MAAAZ,EAASW,EAAkBC,CAAa,EAC9C,OAAOZ,GAAA,YAAAA,EAAQ,OAGXe,EAA0BH,GAAsC,CAC9D,MAAAZ,EAASW,EAAkBC,CAAa,EAC9C,OAAOZ,GAAA,YAAAA,EAAQ,OAGXgB,EAA2BJ,GAAsC,CAC/D,MAAAZ,EAASW,EAAkBC,CAAa,EAG9C,OAAOZ,GAAA,YAAAA,EAAQ,QAGXiB,EACJL,GAECP,EAAkB,MAAMO,CAAa,GACnCP,EAAkB,MAAMO,CAAa,EAAuB,SAC/D,GAEIM,EAA6BN,GACjCK,EAAyBL,CAAa,EACnC,IAAKO,GAAgB,GAAGJ,EAAuBI,CAAW,CAAC,KAAU,EACrE,KAAK,EAAE,GACTJ,EAAuBH,CAAa,GACnC9a,EAAK,EAAE,eAAgB8a,EAAc,UAAU,GAE7CQ,EAAgBpB,GACbvU,EAAQ,MAAM,aACjB,CAAE,MAAOuU,EAAO,MAAO,MAAOA,EAAO,OACrCA,EAAO,MAGPqB,EAAgBrB,GAAiD,CACjE,IAACvU,EAAQ,MAAM,SAAU,CAC3BA,EAAQ,MAAM,KAAK,MAAM2V,EAAapB,CAAM,CAAC,EAC7C,MACF,CAEA,MAAMsB,EAAiBC,GAAUlC,EAAa,KAAK,GAAK,GAClDmC,EAAcF,EAAe,QAAQtB,EAAO,KAAK,EACnDwB,IAAgB,GAAmBF,EAAA,OAAOE,EAAa,CAAC,EACxCF,EAAA,KAAKF,EAAapB,CAAM,CAAC,EAC9BsB,EAAA,KACb,CAAClJ,EAAoBC,IACnBkI,EAAc,MAAM,UAAWP,GAAWA,EAAO,QAAU5H,CAAC,EAC5DmI,EAAc,MAAM,UAAWP,GAAWA,EAAO,QAAU3H,CAAC,GAExD5M,EAAA,MAAM,KAAK,MAAM6V,CAAc,GAGnCG,EAAyBC,GAAyC,OAChE,MAAAC,GAAmBjX,EAAAkV,EAAO,QAAP,YAAAlV,EAAc,cACnC,IAACiX,EAAkB,MAAO,GAE9B,MAAMC,EAAiB,MAAM,KAC3BD,EAAiB,iBAA8B,gBAAgB,GAE7D,OAACC,EAEDF,EACKE,EAAe,OACnBC,GACC,eAAAnX,EAAAmX,EAAc,WAAW,aAAa,MAAM,IAA5C,YAAAnX,EAA+C,SAAU,WAGxDkX,EARqB,EAQrB,EAGHE,EACJC,GACG,CACH,GAAI,CAACzC,EAAS,OAAS7T,EAAQ,MAAM,mBAAoB,OAEzD,MAAMuW,EAA+BD,GAA2B,GAE5D,GAAAtW,EAAQ,MAAM,SAAU,CACpB,MAAAwW,EAAkB5C,EAAa,MAAM,OACxC6C,GAAiC,CAC1B,MAAAC,EAAoB9B,EAAkB,MAAM6B,CAAW,EAE1D,OAAAF,GACC,OAAOG,EAAsB,MAC7BA,GAAA,YAAAA,EAAmB,YAAa,IACjC,CAACH,IACAG,GAAA,YAAAA,EAAmB,YAAa,EAEtC,GAGEF,EAAgB,SAAW5C,EAAa,MAAM,QAChD5T,EAAQ,MAAM,KAAK,MAAMwW,EAAiB,EAAK,EAGjD,MACF,CAEA,MAAMG,EAAqB/B,EAAkB,MAAMhB,EAAa,KAAK,GAElE2C,GACC,OAAOI,EAAuB,KAChCA,GAAA,MAAAA,EAAoB,WAEpB3C,EAAW,EAAK,GAuFb,OACL,OAAAG,EACA,kBAAAG,EACA,kBAAAE,EACA,kBAAAI,EACA,cAAAE,EACA,kBAAAI,EACA,uBAAAG,EACA,sBAAAD,EACA,uBAAAE,EACA,wBAAAC,EACA,yBAAAC,EACA,0BAAAC,EACA,aAAAG,EACA,sBAAAI,EACA,qCAhG2C,IAAM,OAC3C,MAAE,kBAAAY,CAAkB,EAAI5W,EAAQ,MAIlC,GAAAA,EAAQ,MAAM,0BAA4B,OAAW,CACvD,MAAM6W,EAAW7W,EAAQ,MAAM,KAAK,GAAG,OAAO,EACtCA,EAAA,MAAM,wBACZ6W,GACAA,EAAS,OAAS7W,EAAQ,MAAM,KAAK,MACrC,GAACf,EAAA4X,EAAS,UAAT,MAAA5X,EAAkB,oBACvB,CAGAe,EAAQ,MAAM,kBAAoB4U,EAG9B5U,EAAQ,MAAM,UAChBnB,GACE,IACEgV,EAAS,OACTC,EAAe,MAAM,SAAS,EAAE,GAChC9T,EAAQ,MAAM,WACd,CAACP,EAAQ,MAAM,KAAM8U,GAAWA,EAAO,QAAU,EAAE,EACrD,IAAM,CACJ,MAAMuC,EAA4B,CAChC,MAAO,GACP,MAAO,KAGP1C,EAAgB,MAAyB,QAAQ0C,CAAW,CAChE,GASF,CAAC9W,EAAQ,MAAM,yBACf6T,EAAS,OACT+C,IAEgBxC,EAAA,MAAQN,EAAe,MAAM,OAC3C,CAACiD,EAA6BzS,IAAuB,CACnD,MAAM2N,EAAQ2E,EAAkBtS,EAAM,SAAU,GAG9C,OAAA2N,GACA,CAACxS,EAAQ,MAAM,KAAM8U,GAAWA,EAAO,QAAUjQ,CAAK,EAEtDyS,EAAY,KAAK,CAAE,MAAAzS,EAAO,MAAA2N,CAAO,GAIjCjS,EAAQ,MAAM,UACd,CAACiS,GACD3N,IAAU,IACV,CAAC7E,EAAQ,MAAM,KAAM8U,GAAWA,EAAO,QAAUjQ,CAAK,GAEtDyS,EAAY,QAAQ,CAAE,MAAAzS,EAAO,MAAO,GAAK,GAGpCyS,CACT,EACA,CAAC,IAMLV,EACErW,EAAQ,MAAM,yBAKVnB,GAAAY,EAAS,IAAM4W,EAAA,CAA6C,GAmBlE,gBAAAjC,CAAA,CAEJ,ECzTa4C,GAAe,CAC1BhX,EACAiX,IACG,CACG,MAAAC,EAAUlX,EAAQ,MAAM,KAAK,GAAG,cAAe,CAAC,CAAE,QAAAyQ,KAAc,CAChE,GAAAzQ,EAAQ,MAAM,SAAU,OAE5B,MAAMtD,EAAS+T,EAAQ,OAGnB,CAAC/T,GAAUA,EAAO,UAAU,SAAS,cAAc,GACnDA,EAAO,cAAc,eAAe,GACpCA,EAAO,QAAQ,eAAe,GAElCua,EAAGxG,CAAO,EACX,EAED0G,GAAY,IAAM,CACRnX,EAAA,MAAM,KAAK,IAAIkX,CAAO,EAC/B,CACH,ECjBaE,GACXjL,GACG,CACH,IAAIkL,EAAS,GACT3J,EAAU,EAEd8B,GACGP,GAAM,CAED,KAAAA,EAAE,WAAa,GAAMA,EAAE,IAAI,SAAW,GAAKA,EAAE,MAAQ,aAGrD,IAAAA,EAAE,MAAQ,IAAK,CACjB,GAAIoI,IAAW,GAAI,OACnBhb,GAAU4S,CAAC,CACb,CAEA,OAAO,aAAavB,CAAO,EAEjBA,EAAA,OAAO,WAAW,IAAM,CAChC,MAAM6G,EAASrI,GAAqBoL,GAAanL,CAAS,CAAC,EAAE,KAC1DJ,GAAO,SACN,MAAMwL,IAAUtY,EAAA8M,EAAG,cAAH,YAAA9M,EAAgB,cAAc,SAAU,GAClDuY,EAAWH,EAAO,cACxB,OAAIE,EAAQ,WAAWC,CAAQ,EAAU,MAEvCtY,EAAA6M,EAAG,aAAa,YAAY,IAA5B,YAAA7M,EAA+B,cAAc,SAAU,IAC5C,WAAWsY,CAAQ,CAClC,GAEFjD,GAAA,MAAAA,EAAQ,QACC8C,EAAA,IACR,GAAG,EAEFpI,EAAE,MAAQ,YAAaoI,EAASA,EAAO,MAAM,EAAGA,EAAO,OAAS,CAAC,KACtDpI,EAAE,IACnB,EACA,CAAE,OAAQ9C,CAA8B,EAE5C,EClBMsL,OAAkB,IAAI,CAC1B,OACA,MACA,YACA,aACA,UACA,WACF,CAAC,EAEKC,GAAS,CAACxT,EAAayT,EAA+B,aACtDA,IAAc,aAAqBzT,IAAQ,aAC3CyT,IAAc,WAAmBzT,IAAQ,YACtCA,IAAQ,aAAeA,IAAQ,UAGlC0T,GAAa,CAAC1T,EAAayT,EAA+B,aAC1DA,IAAc,aAAqBzT,IAAQ,YAC3CyT,IAAc,WAAmBzT,IAAQ,UACtCA,IAAQ,WAAaA,IAAQ,YAGhC2T,GAAiB,CACrBC,EACA5T,EACAzE,IACG,SACH,MAAMsY,EAAeD,EAAS,QAAQ,SAAS,aAA4B,EAE3E,GAAIJ,GAAOxT,EAAKzE,EAAQ,SAAS,EAAG,CAClC,MAAMuY,EAAcF,EAASC,EAAe,CAAC,GAAKD,EAAS,CAAC,EAExD,QADW7Y,EAAAQ,EAAQ,SAAR,YAAAR,EAAA,KAAAQ,EAAiByE,EAAK8T,KAAgB,GAE9CA,EADa,IAEtB,CAEA,GAAIJ,GAAW1T,EAAKzE,EAAQ,SAAS,EAAG,CAChC,MAAAwY,EACJH,EAASC,EAAe,CAAC,GAAKD,EAASA,EAAS,OAAS,CAAC,EAExD,QADe5Y,EAAAO,EAAQ,aAAR,YAAAP,EAAA,KAAAO,EAAqByE,EAAK+T,KAAoB,GAE1DA,EADiB,IAE1B,CAEA,OAAI/T,IAAQ,OACH4T,EAAS,CAAC,EAGf5T,IAAQ,MACH4T,EAASA,EAAS,OAAS,CAAC,EAE9B,IACT,EAOaI,GAAqB,CAChC/L,EACA1M,EAA2B,KACxB,CACKA,EAAA,iBAARA,EAAQ,eAAmB,IAE3B+P,GACGP,GAAM,OACC,MAAE,IAAA/K,CAAQ,EAAA+K,EAUhB,GARI,CAACwI,GAAY,IAAIvT,CAAG,GAQpB,IAFmBjF,EAAAQ,EAAQ,KAAKyE,CAAG,MAAhB,YAAAjF,EAAA,KAAAQ,KAAuC,IAEzC,OAErB,IAAIqY,EAAW5L,GACboL,GAAanL,CAAS,EACtB1M,CAAA,EAOE,GAJAA,EAAQ,eACCqY,IAAS,OAAOrY,EAAQ,YAAY,GAG7C,CAACqY,EAAS,OAAQ,OAEtB,MAAME,EAAcH,GAAeC,EAAU5T,EAAKzE,CAAO,EAEpDuY,IAEL3b,GAAU4S,CAAC,EACX+I,EAAY,MAAM,EACdvY,EAAQ,gBACVuY,EAAY,eAAe,CAAE,MAAO,SAAW,GAEnD,EACA,CAAE,OAAQ7L,CAA2C,EAEzD,ECtHagM,GAAqB,CAChCC,EACAC,EACAC,EACAC,IACG,CACH,MAAM3f,EAAUG,KACVyf,EAAcC,KAEdC,EAAgBnf,EAAS,IAAM,CAC7B,MAAAof,EAAOC,GAAQR,CAAM,EAE3B,GAAIO,EAAK,aAAeA,EAAK,oBAAsBA,EAAK,iBAAkB,CACxE,MAAME,EAAQC,GAAcN,EAAY,MAAO,YAAY,EACrDO,EAAYJ,EAAK,mBACjBK,EAAUL,EAAK,iBAErB,OAAOI,GAAaF,EAAM,OAASG,GAAWH,EAAM,KACtD,CACO,SACR,EAEKI,EAAa1f,EAAS,IAAMqf,GAAQR,CAAM,EAAE,SAAW,EAAK,EAE5Dc,EAAkB3f,EACtB,WAAM,QAAA0F,EAAA2Z,GAAQL,CAAM,IAAd,YAAAtZ,EAAiB,mBAAoB,KAGvCka,EAAiB5f,EAAS,WAAM,OAAA0F,EAAA2Z,GAAQN,CAAI,IAAZ,YAAArZ,EAAe,OAAM,EACrDma,EAAoB7f,EAAS,WAAM,OAAA0F,EAAA2Z,GAAQN,CAAI,IAAZ,YAAArZ,EAAe,QAAO,EAEzDoa,EAAoB9f,EACxB,WAAM,QAAA0F,EAAA2Z,GAAQN,CAAI,IAAZ,YAAArZ,EAAe,OAAQqa,GAAe,UAGxCC,EAAmBhgB,EACvB,WAAM,QAAA0F,EAAA2Z,GAAQN,CAAI,IAAZ,YAAArZ,EAAe,OAAQqa,GAAe,SAGxCE,EAAgBjgB,EAAS,IACzB0f,EAAW,MAAc,4BACzBC,EAAgB,MAAc,kCAC9BR,EAAc,MAAc,iCAE5BU,EAAkB,OAASC,EAAkB,MACxC,mCAELD,EAAkB,OAASG,EAAiB,MACvC,kCAELF,EAAkB,OAASzgB,IAAY,UAClC,2BAEL2gB,EAAiB,OAAS3gB,IAAY,SACjC,0BAELugB,EAAe,MAAc,wBAC1B,IACR,EAEKM,EAAiBlgB,EAAS,IAAM,CACpC,GAAI0f,EAAW,MAAc,OAAA5e,EAAK,EAAE,kBAAkB,EACtD,GAAI6e,EAAgB,MAAc,OAAA7e,EAAK,EAAE,oBAAoB,EAEzD,GAAAqe,EAAc,OAASE,GAAQP,CAAQ,EAClC,OAAAhe,EAAK,EAAE,sBAAsB,EAEtC,GAAIqe,EAAc,MAAc,OAAAre,EAAK,EAAE,uBAAuB,EAE1D,GAAA+e,EAAkB,OAASC,EAAkB,MACxC,OAAAhf,EAAK,EAAE,4BAA4B,EAExC,GAAA+e,EAAkB,OAASG,EAAiB,MACvC,OAAAlf,EAAK,EAAE,2BAA2B,EAE3C,GAAI+e,EAAkB,MAAc,OAAA/e,EAAK,EAAE,iBAAiB,EAExD,GAAAgf,EAAkB,OAASzgB,IAAY,UAClC,OAAAyB,EAAK,EAAE,oBAAoB,EAEhC,GAAAkf,EAAiB,OAAS3gB,IAAY,SACjC,OAAAyB,EAAK,EAAE,mBAAmB,EAEnC,GAAI8e,EAAe,MAAc,OAAA9e,EAAK,EAAE,cAAc,CAE/C,CACR,EAEKqf,EAAkBngB,EACtB,IACE0f,EAAW,OACXP,EAAc,OACdQ,EAAgB,OAChBC,EAAe,OAGZ,OACL,WAAAF,EACA,kBAAAI,EACA,kBAAAD,EACA,eAAAD,EACA,iBAAAI,EACA,cAAAb,EACA,gBAAAQ,EACA,cAAAM,EACA,eAAAC,EACA,gBAAAC,CAAA,CAEJ,ECvHA,IAAIC,GAAwC,CAC1C,iBAAkB,CAAC,CACrB,EAEa,MAAAC,GAA+B1gB,GAAgC,CACtDygB,GAAAzgB,CACtB,EAEa2gB,GAAuB,IAAMF,GCT7BG,GAA0B,EAC1BC,GAAiBzU,GAC5B,OACAwU,EACF,ECHA,IAAIE,GAAgC,CAClC,KAAM,qBACN,QAAS,yBACT,gBAAiB,gCACnB,EAEa,MAAAC,GAA2B/gB,GAA4B,CAClD8gB,GAAA9gB,CAClB,EAEaghB,GAAmB,IAAMF,mMCOtC,MAAM5gB,EAAQC,EAKR8gB,EAAY,CAChB,GAAI,KACJ,MAAO,QACP,OAAQ,OACR,OAAQ,SACR,MAAO,QACP,GAAI,MAGAC,EAAW7gB,EAAS,IACnBH,EAAM,KACJ+gB,EAAU/gB,EAAM,IAAI,EADH,QAEzB,EAEKihB,EAAc9gB,EAAS,IAAM,CAC7B,IAAAH,EAAM,WACV,OAAOA,EAAM,WAAaiB,EAAK,EAAE,0BAA2BjB,EAAM,QAAQ,EAC3E,EAEKI,EAAW0gB,82BC9CFI,GAAA,4xFCqCf,MAAMlhB,EAAQC,EAIRkhB,EAAWhhB,EAAS,IAAM,CAC9B,KAAM,CAAE,SAAAoK,EAAU,UAAAD,EAAW,MAAAE,GAAO,MAAAJ,EAAO,OAAAK,GAAWzK,EAAM,OAE5D,OAAOqK,GAAYC,EAAWC,EAAUC,GAAOJ,EAAOK,CAAM,EAC7D,EAEK,CAAE,iBAAA2W,GAAqBX,KAEvBY,EAAWlhB,EAAS,IAAM,CAC9B,KAAM,CAAE,SAAAoK,EAAU,UAAAD,EAAW,SAAAgX,EAAA,EAAathB,EAAM,OAEhD,OAAIshB,IAEG,CAAChX,EAAWC,CAAQ,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EACtD,EAEKgX,EAAaphB,EAAS,IAAM,CAC1B,MAAE,GAAA8L,CAAG,EAAIjM,EAAM,OAEfwhB,EAAahV,GAAmBP,CAAE,EAEpC,OAAAuV,IAAed,GAAgC,WAI5CU,EAAiBI,GAAcJ,EAAiB,OAAS,EAAE,EACnE,EAEKK,EAAU,CAAC,WAAY,SAAS,EAEhCvhB,EAAOC,EAAS,IAAM,CACpB,MAAE,OAAA6U,CAAO,EAAIhV,EAAM,OACzB,OAAIgV,GAAUyM,EAAQ,SAASzM,CAAM,EAAUA,EACxC,KACR,EAEKxV,EAAUG,KACVkB,EAAcC,IAEd4gB,EAAQvhB,EAAS,IACjBD,EAAK,OAASF,EAAM,aAAqB,KACzCA,EAAM,OAAO,KAAO2gB,GAAuBO,GAC1ClhB,EAAM,OAAO,MAGdA,EAAM,OAAO,MAAM,WAAW,OAAO,EAAUA,EAAM,OAAO,MAKzD,GADQ,OAAOa,EAAY,OAAO,QAAQ,CACjC,gBAAgBb,EAAM,OAAO,KAAK,GARlB,IASjC,EAEK2hB,EAAQxhB,EAAS,IACd,CAACH,EAAM,UAAYA,EAAM,OAAO,GACxC,EAEK,CAAE,cAAAogB,EAAe,eAAAC,EAAgB,gBAAAC,CAAoB,EAAAvB,GACzDhb,EAAM/D,EAAO,QAAQ,EACrB+D,EAAM/D,EAAO,UAAU,EACvB+D,EAAM/D,EAAO,MAAM,EACnB+D,EAAM/D,EAAO,QAAQ,GAGjB4hB,EAAUzhB,EAAS,IAAM,CAACH,EAAM,SAAWsgB,EAAgB,KAAK,EAEhEhf,EAAYnB,EAAS,IAAM,CACzB,MAAAL,EAAU,CAACyhB,EAAW,KAAK,EAEjC,OAAIK,EAAQ,OACV9hB,EAAQ,KAAK,YAAY,EAGpBA,CAAA,CACR,EAEK+Y,EAAQ1Y,EAAS,IAAM,CACvB0Y,MAAQ5X,EAAK,EAAE,QAAQ,EAC3B,MAAMvB,EAAO2hB,EAAS,OAASrhB,EAAM,OAAO,MAC5C,OAAIN,IAAMmZ,GAAS,KAAKnZ,CAAI,KACxBiiB,EAAM,QAAO9I,GAAS,KAAK5X,EAAK,EAAE,KAAK,CAAC,KACrC4X,CAAA,CACR,EAEKgJ,EAAY1hB,EAAS,IACrBX,IAAY0gB,GAAe,QAAUlgB,EAAM,YAAoB,KAC5DogB,EAAc,KACtB,EAEK0B,EAAiB3hB,EAAS,IAC1ByhB,EAAQ,MAAc,uCACnB,4BACR,EAEKG,EAAiB,CACrB,GAAI,KACJ,MAAO,KACP,OAAQ,KACR,OAAQ,OACR,MAAO,QACP,GAAI,UAGAC,EAAgB7hB,EAAS,IAAM4hB,EAAe/hB,EAAM,IAAI,CAAC,4eC3I/D,IAAIiiB,GAAwD,CAC1D,KAAM,kCACN,SAAU,qCACZ,EAEa,MAAAC,GACXpiB,GACG,CACyBmiB,GAAAniB,CAC9B,EAEaqiB,GAA+B,IAAMF,8ECClD,MAAMjiB,EAAQC,EAERC,EAAOC,EAAS,IACbH,EAAM,OAAO,OAAS,eAAiB,uBAC/C,EAEK,CAAE,KAAAwD,EAAM,SAAA4e,CAAS,EAAID,GAA6B,qPCjB3CE,GAAiB,CAC5B,YACA,aACA,UACA,UACA,OACF,ECFaC,GAAe1b,GAAkC,CAC5D,MAAM2b,EAAapiB,EAAS,IAAMyG,EAAQ,MAAM,OAAS,UAAU,EAE7D4b,EAAcriB,EAAS,IACvBoiB,EAAW,MAAc,MACtB,YACR,EAEKE,EAAcjd,KAEdkd,EAAWviB,EAAS,IACxB,eAAA0F,EAAA4c,EAAY,aAAZ,YAAA5c,EAAwB,OAAQ8c,GAAkB,IAAM,QAAU,SAG9DC,EAAUziB,EAAS,IACnByG,EAAQ,MAAM,eAAuB,KAClCA,EAAQ,MAAM,OACtB,EAEKic,EAAgB1iB,EAAS,IAAM,CAC/B,IAAAyH,EAAS3G,EAAK,gBAElB,OAAIshB,EAAW,QAAgB3a,EAAA3G,EAAK,kBAAkB,GAE7C2G,IAAO,QAAQ,KAAM,KAAK,EAC1BA,IAAO,QAAQ,KAAM,GAAG,EACxBA,IAAO,QAAQ,SAAU,GAAG,EAC5BA,IAAO,QAAQ,KAAM,GAAG,EACxBA,IAAO,QAAQ,KAAM,KAAK,EAE5BA,CAAA,CACR,EAEKkb,EAAO3iB,EAAS,IAAMc,EAAK,sBAAwB,QAAQ,EAoE1D,OACL,WAnEiBd,EAAS,KAAO,CACjC,cAAec,EAAK,EAAE,oBAAoB,EAC1C,KAAMA,EAAK,EAAE,iBAAiB,EAC9B,MAAOA,EAAK,EAAE,wBAAwB,EACtC,eAAgBA,EAAK,EAAE,sBAAsB,EAC7C,gBAAiBA,EAAK,EAAE,uBAAuB,EAC/C,eAAiBkL,GAAiB,CAChC,OAAQA,EAAM,CACZ,IAAK,QACI,OAAAlL,EAAK,EAAE,uBAAuB,EACvC,IAAK,UACI,OAAAA,EAAK,EAAE,yBAAyB,EACzC,IAAK,UACL,QACS,OAAAA,EAAK,EAAE,yBAAyB,CAC3C,CACF,EACA,eAAiBkL,GAAiB,CAChC,OAAQA,EAAM,CACZ,IAAK,QACI,OAAAlL,EAAK,EAAE,uBAAuB,EACvC,IAAK,UACI,OAAAA,EAAK,EAAE,yBAAyB,EACzC,IAAK,UACL,QACS,OAAAA,EAAK,EAAE,yBAAyB,CAC3C,CACF,EACA,cAAgBkL,GAAiB,CAC/B,OAAQA,EAAM,CACZ,IAAK,QACI,OAAAlL,EAAK,EAAE,wBAAwB,EACxC,IAAK,UACI,OAAAA,EAAK,EAAE,0BAA0B,EAC1C,IAAK,UACL,QACS,OAAAA,EAAK,EAAE,0BAA0B,CAC5C,CACF,EACA,WAAYA,EAAK,EAAE,mBAAmB,EACtC,iBAAkBA,EAAK,EAAE,wBAAwB,EACjD,kBAAmBA,EAAK,EAAE,yBAAyB,EACnD,UAAWA,EAAK,EAAE,YAAY,EAC9B,UAAWA,EAAK,EAAE,gBAAgB,EAClC,SAAUA,EAAK,EAAE,WAAW,EAC5B,SAAUA,EAAK,EAAE,eAAe,EAChC,WAAYA,EAAK,EAAE,iBAAiB,EACpC,aAAcA,EAAK,EAAE,mBAAmB,EACxC,WAAYA,EAAK,EAAE,iBAAiB,EACpC,YAAc8hB,GACZA,EAAU9hB,EAAK,EAAE,0BAA0B,EAAIA,EAAK,EAAE,kBAAkB,EAC1E,WAAa8hB,GACXA,EAAU9hB,EAAK,EAAE,yBAAyB,EAAIA,EAAK,EAAE,iBAAiB,EACxE,YAAckL,GAA0C,CACtD,OAAQA,EAAM,CACZ,IAAK,QACI,OAAAlL,EAAK,EAAE,mBAAmB,EACnC,IAAK,UACI,OAAAA,EAAK,EAAE,qBAAqB,EACrC,IAAK,UACL,QACS,OAAAA,EAAK,EAAE,qBAAqB,CACvC,CACF,CACA,IAIA,cAAA4hB,EACA,KAAAC,EACA,YAAAL,EACA,QAAAG,EACA,SAAAF,EACA,WAAAH,EACA,YAAAC,CAAA,CAEJ,ECrHeQ,GAAA,CACb,SAAU,aACV,KAAOnX,GAAgC,CAC/B,MAAE,MAAAX,CAAU,EAAAW,EAEZ8T,EAAYzU,EAAM,GAAG,CAAC,EACtB0U,EAAU1U,EAAM,GAAG,CAAC,EAE1B,MAAI,CAACyU,GAAa,CAACC,EAAgB,GAE5BD,GAAaC,CACtB,EACA,cAAe,IACN,GAAG,gDAAgD,CAE9D,2GCZaqD,GAA8Dhd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MCG9Did,GACXtc,IAgCO,CACL,WAAY,SAEZ,SAAUqc,GAEV,sBAnC4B,IAAM,SAClC,MAAME,EAAmD,CACvD,OAAQvc,EAAQ,MAAM,OACtB,cAAeA,EAAQ,MAAM,KAAK,MAG9B,CAAE,4BAAAwc,EAA6B,OAAA5X,EAAQ,OAAA5C,CAAA,EAAWhC,EAAQ,MAE1DgG,EAAmD,GAGnDD,GAAe7G,GAAAD,EAAAe,EAAQ,MAAM,KAAK,GAAG,OAAO,IAA7B,YAAAf,EAAgC,UAAhC,YAAAC,EACjB,oBAMJ,GALI6G,IACFC,EAAsB,GAAGhE,EAAO,aAAa,IAAI,EAAI+D,EAAa,IAIhEyW,EAA6B,CAC/B,MAAMC,EACJD,EAA4B5X,EAAQmB,CAAY,GAAK,GAEhD,cAAOC,EAAuByW,CAA+B,CACtE,CAEAF,SAAsB,sBAAwBvW,EAEvCuW,CAAA,EAUP,aAAc,GAGd,IAAI,YAAa,CACf,MAAO,EACT,EAEA,qBAAsB,CAACtZ,EAAeqB,IACpCA,CAAA,GCtDOoY,GAAoCrd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmB3Csd,EAAgC,GCfzBC,GAAyCvd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAehDqd,EAAiC,GClB1BG,GAAyBC,IAC7B,CACL,MAAOA,EAAa,KACpB,MACEA,EAAa,aACZA,EAAa,GACVtX,GAAgB,eAAgBsX,EAAa,EAAE,EAC/C,MACN,aAAAA,CAAA,GCLSC,GAA+C,IACnD,CACLC,EACA1Y,EACAtE,IACG,CACH,GAAI,CAACA,EAAQ,sBAAwB,CAACgd,EAA4B,YAE5D,MAAAC,EAAkBD,EACtBhd,EAAQ,oBACV,EAEI,OAACid,EAEEJ,GAAsBI,CAAe,EAFf,IAEe,ECfnCC,GAAsC7d;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MCC7C8d,GAAWC,GAAMF,EAAmC,EAE7CG,GAA2BpY,GAAsB,CACtD,MAAE,MAAA7L,CAAU,EAAA6L,EAElBA,EAAK,SAAS,CAAC,UAAW,UAAU,CAAC,EAGrC7L,EAAM,mBAAqB,GAIvBA,EAAM,UAAY,SACpBA,EAAM,sBAAwB,CAC5B,QAAS,SAELA,EAAA,uBAAyB,GAAG,+BAA+B,EAGjEA,EAAM,sBAAwB,8BAE9BA,EAAM,sBAAwB,CAC5B,QAAS,SAELA,EAAA,uBAAyB,GAAG,gCAAgC,EAClEA,EAAM,sBAAwB,SAGhCA,EAAM,SAAW+jB,EACnB,ECxBaG,GAAmB,CAC9Btd,EACAud,IACG,CACG,MAAAC,EAAkBjkB,EAAS,IACxB,OAAO,KAAKyG,EAAQ,MAAM,iBAAmB,EAAE,EAAE,KAAM2M,GACxDA,IAAM8Q,GAAsB,IAAY,GACxC9Q,IAAM8Q,GAAsB,MAAc,EACvC,CACR,CACF,EAEKC,EAAgBnkB,EACpB,IACE,eAAA0F,EAAAse,EAAW,QAAX,YAAAte,EAAkB,UAEjBue,EAAgB,MAAM,KACpBlZ,GAAUA,IAAUmZ,GAAsB,QAE3CD,EAAgB,MAAM,CAAC,KAGvBG,EAA2BpJ,GAC/B,cAAC,GAACtV,EAAAse,EAAW,QAAX,MAAAte,EAAkB,QAAQ,SAASsV,KAEjCqJ,EAA4BrJ,GAChC,gBAAAvU,EAAQ,MAAM,UACd,GAACd,GAAAD,EAAAe,EAAQ,MAAM,kBAAd,YAAAf,EAAgCye,EAAc,SAA9C,MAAAxe,EAAsD,SAASqV,KAE5DsJ,EAAkBC,UACtB,QAAA7e,EAAAe,EAAQ,MAAM,yBAAd,YAAAf,EAAuC6e,KAAW,IAE9CC,EAAgB,CACpBD,EACAre,IAEOA,EACJ,OAAQ8U,GACP,gBAAArV,GAAAD,EAAAe,EAAQ,MAAM,kBAAd,YAAAf,EAAgC6e,KAAhC,YAAA5e,EAAyC,SAASqV,KAEnD,KAAK,EAYH,OACL,gBAAAiJ,EACA,cAAAE,EACA,wBAAAC,EACA,yBAAAC,EACA,oBAd2BE,GAAkC,CAE7D,MAAME,EAAaD,EAAcD,EAAQD,EAAeC,CAAM,CAAC,EAC/DP,EAAW,MAAQ,CACjB,OAAAO,EACA,QAASE,CAAA,CACX,CAQA,CAEJ,ECnEaC,GAA4BC,GAAqB,CAC5D,MAAMC,EAAa,CACjB,CAACV,GAAsB,GAAG,EAAG,GAAG,KAAK,EACrC,CAACA,GAAsB,KAAK,EAAG,GAAG,QAAQ,GAG5C,OAAOpjB,EAAK,EAAE8jB,EAAWD,CAAQ,GAAKA,CAAQ,CAChD,ECCME,GAA+CnZ,GAAsB,CACnE,MAAAoZ,EAAsB,CAC1B5N,EACAzQ,IACG,CACH,MAAM4U,EAAoB5U,EAAQ,kBAE9B,SAAM,QAAQyQ,CAAO,EAShB,OAPiBA,EAAQ,OAC7BgG,GACE,OAAO7B,EAAkB6B,CAAW,EAAM,KACzC,CAAC7B,EAAkB6B,CAAW,EAAE,UAClCA,IAAgB,IAOpB,UAAO7B,EAAkBnE,CAAO,EAAM,KACtCmE,EAAkBnE,CAAO,EAAE,SAC3B,CACA,GAAI,OAAOmE,EAAkB3P,EAAK,MAAM,KAAK,EAAM,IAAa,CAC9D,MAAMqZ,EACJte,EAAQ,kBAEV,OAAOA,EAAQ,WAAase,IAAsB,OAC9C,OACAA,GACN,CAEA,OAAOrZ,EAAK,MAAM,KACpB,CAEO,OAAAwL,CAAA,EAGJxL,EAAA,GAAG,UAAW,IAAM,OACjB,MAAE,QAAAjF,CAAY,EAAAiF,EAEfjF,KAELf,EAAAgG,EAAK,GAAG,OAAO,IAAf,MAAAhG,EAAkB,QAAQ,KAAK,IAAM,CACnCgG,EAAK,KAAK,MAAM,CAACwL,EAASU,IACpB,CAACnR,EAAQ,IAAI,SAASyQ,CAAO,GAAK,CAACzQ,EAAQ,kBACtCmR,EAAKV,CAAO,EAEdU,EAAKkN,EAAoB5N,EAASzQ,CAAO,CAAC,CAClD,IACF,CACF,CACH,ECxDMue,GAAqB,CACzB9e,EACAO,IAMG,CACH,KAAM,CAAE,SAAA6T,CAAA,EAAaF,GAAS3T,CAAO,EAG/Bse,EAAoB,aACxB,OAAApf,GAAAD,EAAAQ,EAAQ,QAAR,YAAAR,EAAe,KAAMsV,GAAW,CAACA,EAAO,YAAxC,YAAArV,EAAmD,OAGrDc,EAAQ,MAAM,kBAAoBse,EAIlC,MAAME,EAAkB,IAAM,CAE1B,CAAC3K,EAAS,OACV,CAAC7T,EAAQ,MAAM,UACf,CAACA,EAAQ,MAAM,UACf,CAACA,EAAQ,MAAM,WACfP,EAAQ,OACRA,EAAQ,MAAM,OAAS,GAEvBO,EAAQ,MAAM,KAAK,MAAMse,EAAA,EAAqB,EAAK,CACrD,EAGFG,GAAU,IAAM,CACTze,EAAQ,MAAM,wBAAwCwe,EAAA,EAE3D3f,GACE,IACE,CAACgV,EAAS,OACV,CAAC7T,EAAQ,MAAM,UACf,CAACA,EAAQ,MAAM,UACf,CAACA,EAAQ,MAAM,WACfP,EAAQ,MACV+e,CAAA,CACF,CACD,CACH,EClDA,IAAIE,GAA4B,CAC9B,OAAQ,oBACR,cAAe,2BACjB,EAEa,MAAAC,GAAyBzlB,GAA0B,CAChDwlB,GAAAxlB,CAChB,EAEa0lB,GAAiB,IAAMF,GCTpC,IAAIG,GAAgC,CAClC,MAAO,qBACP,QAAS,yBACT,KAAM,mBACR,EAEa,MAAAC,GAA2B5lB,GAA4B,CAClD2lB,GAAA3lB,CAClB,EAEa6lB,GAAmB,IAAMF,GCVtC,IAAIG,GAAkC,CACpC,UAAW,CACT,gBAAiB,GACjB,mBAAoB,GACpB,aAAc,CACZ,KAAM,GACN,OAAQ,CACN,WAAY,CACV,MAAO,GACP,KAAM,EACR,CACF,CACF,EACA,cAAe,CACb,OAAQ,CACN,WAAY,CACV,MAAO,GACP,KAAM,EACR,CACF,CACF,EACA,eAAgB,CACd,OAAQ,CACN,IAAK,GACL,OAAQ,EACV,CACF,EACA,OAAQ,CACN,KAAM,GACN,OAAQ,EACV,CACF,EACA,MAAO,CACL,UAAW,EACb,CACF,EAEa,MAAAC,GAAgC/lB,GAA8B,CACzD8lB,GAAA9lB,CAClB,EAEagmB,GAAwB,IAAMF,GAE3C,IAAIG,GAAgC,CAClC,UAAW,CACT,OAAQ,CACN,KAAM,CACJ,KAAM,OACR,CACF,CACF,CACF,EAEa,MAAAC,GAA8BhmB,GAA4B,CACvD+lB,GAAA/lB,CAChB,EAEaimB,GAAsB,IAAMF,GC1DnCG,GAAYra,GAAsB,CAChC,MAAE,MAAA7L,EAAO,QAAA4G,CAAY,EAAAiF,EAEvB,CAAC7L,EAAM,YAAc,CAAC4G,GAAWiF,EAAK,OAAS,UAE3CjF,EAAA,SAAS,SAAYlH,GAAkBmW,GAAahK,EAAK,KAAKnM,EAAMmW,CAAC,EAC/E,2GC0BY,IAAAsQ,QACVA,EAAA,OAAS,SACTA,EAAA,QAAU,UACVA,EAAA,QAAU,UACVA,EAAA,MAAQ,QAJEA,QAAA,ICrBZ,MAAMC,GAAyB,CAC7Bva,EACAwa,EACAC,EACAC,EAAmCJ,GAAqB,MACxDK,EAAkB,KAEf,CACG,MAAE,MAAAxmB,CAAU,EAAA6L,EAEd,IAAC7L,EAAM,WAAY,OAEvB,MAAMqY,EAAamO,EACf9J,GAAU1c,EAAM,UAAU,EAC1BA,EAAM,WAEJymB,EAAiBpO,EAAW,OAEvBA,EAAA,OAAUqO,GAAe,CAC9B,IAAAC,EAIJ,MAAMC,EAAmBF,EAAWL,CAAU,GAAK,GAE/C,GAAAE,IAAeJ,GAAqB,MAElC,OAAOS,GAAqB,SACLD,EAAAL,EAEAK,EAAAE,GAAOD,EAAkBN,CAAe,UAI1DC,IAAeJ,GAAqB,QACpBQ,EAAAL,MACpB,CACL,IAAIQ,EAEA,KAEFF,GACA,OAAOA,GAAqB,UAC5B,aAAcA,GACd,MAAM,QAAQA,EAAiB,QAAQ,IAEvCE,EAAkBF,EAAiB,UAGjCE,EACuBH,EAAA,CACvB,SACEJ,IAAeJ,GAAqB,OAChC,CAAC,GAAGW,EAAiBR,CAAe,EACpC,CAACA,EAAiB,GAAGQ,CAAe,GAGnBH,EAAA,CACvB,SAAU,CAACL,CAAe,EAGhC,CAEA,MAAMS,EAAkB,CACtB,GAAGL,EACH,CAACL,CAAU,EAAGM,CAAA,EAEhB,OAAOF,EAAeM,CAAe,GAGvC/mB,EAAM,WAAaqY,CACrB,EC7EM2O,GAAuBnb,GAAsB,CAC3C,MAAE,MAAA7L,EAAO,QAAA4G,CAAY,EAAAiF,EAEvB,CAAC7L,EAAM,YAAc,CAAC4G,IAE1BA,EAAQ,IAAI,SAAW,CAACyM,EAAkBnI,IACnC,MAAM,QAAQmI,CAAK,EACjBA,EAAM,SAASnI,CAAK,EADO,GAIhCW,EAAK,OAAS,UAIbA,EAAA,SAAS,CAAC,aAAa,CAAC,EAGrBjF,EAAA,IAAI,SAAYsE,GAClB,OAAOA,GAAU,SAAiB,CAAC+M,GAAQ/M,CAAK,EAE7CA,GAAS,MAAQA,IAAU,GAGpCtE,EAAQ,IAAI,QAAU,CACpBqgB,EACAC,IAEOD,EAAY,KAAME,GAASA,EAAK,OAASD,CAAQ,EAG1Dd,GAAuBva,EAAM,QAAS,CACpC,MAAO,CACL,iBAAkB,CAChB,GAAI,wBACJ,KAAM,OACN,KAAM,MACR,EACA,oBAAqB,CACnB,GAAI,wBACJ,KAAM,OACN,KAAM,MACR,EACA,gBAAiB,CACf,GAAI,yCACJ,KAAM,OACN,KAAM,MACR,EACA,aAAc,CACZ,GAAI,eACJ,KAAM,OACN,KAAM,MACR,EACA,6BAA8B,CAC5B,GAAI,sBACJ,KAAM,OACN,KAAM,MACR,CACF,EACD,GACH,2GC9DMub,GAAevb,GAAsB,CACzCua,GAAuBva,EAAM,QAAS,CACpC,MAAO,CACL,GAAI,mBACN,EACD,CACH,2GCRMwb,GAEJC,GAEI,MAAM,QAAQA,CAAU,GACrBA,EAAW,SAAS,CAAC,UAAU,CAAC,GAAcA,EAAA,KAAK,CAAC,UAAU,CAAC,EAE7DA,GAGJA,EAIAA,EAAW,SAAS,UAAU,EAI5BA,EAHE,GAAGA,CAAU,YAJb,WAULC,GAEJD,GAEKA,IAED,MAAM,QAAQA,CAAU,EACnBA,EAAW,OAAO,CAAC,CAACH,CAAI,IAAMA,IAAS,UAAU,EAGtDG,EAAW,SAAS,UAAU,EACzBA,EACJ,MAAM,GAAG,EACT,OAAQH,GAAiB,CAACA,EAAK,SAAS,UAAU,CAAC,EACnD,KAAK,GAAG,EAGNG,GAGHE,GAA+BxnB,GAAiC,CAC9D,MAAE,WAAAsnB,CAAe,EAAAtnB,EAEjBA,EAAA,WAAaqnB,GAAYC,CAAU,CAC3C,EAEMG,GAAoCznB,GAAiC,CACnE,MAAE,WAAAsnB,CAAe,EAAAtnB,EAEjBA,EAAA,WAAaunB,GAAeD,CAAU,CAC9C,EAEMI,GAAyB7b,GAAsB,CAC7C,MAAE,MAAA7L,EAAO,QAAA4G,CAAY,EAAAiF,EAEvB,CAAC7L,EAAM,YAAc,CAAC4G,GAAWiF,EAAK,OAAS,UAE9CA,EAAA,SAAS,CAAC,UAAU,CAAC,EAEtB7L,EAAM,UACRwnB,GAA4BxnB,CAAK,EAGnC6L,EAAK,KAAK,KAAK,CAAC,CAAE,KAAAiM,EAAM,MAAA5M,GAAS6M,KAC3BD,IAAS,eACP9X,EAAM,SACRkL,EAAQmc,GAAYnc,CAAK,EAEzBA,EAAQqc,GAAerc,CAAK,GAIzB6M,EAAK,CAAE,KAAAD,EAAM,MAAA5M,CAAO,GAC5B,EAEDW,EAAK,GAAG,gBAAiB,CAAC,CAAE,QAAAwL,KAAc,CACpCA,EACFmQ,GAA4BxnB,CAAK,EAEjCynB,GAAiCznB,CAAK,CACxC,CACD,EACH,2GCjFM2nB,GAAoB,IAA8B,CACtD,KAAM,CAAE,MAAOC,EAAa,QAASC,CAAA,EAAsBvlB,KACrDwlB,EAA4BC,GAAOF,CAAiB,EAEnD,cAAO,KAAKD,CAAW,EAAE,OAC9B,CAACjmB,EAA+BjC,IAAS,CACjC,MAAAsoB,EAAQF,EAA0BpoB,CAAI,EAC5C,OAAAiC,EAAMqmB,GAAStoB,CAAI,EAAIkoB,EAAYloB,CAAI,EAEhCiC,CACT,EACA,CAAC,EAEL,ECAMsmB,GAA2Bpc,GAAsB,CACrDua,GAAuBva,EAAM,UAAW,CACtC,MAAO,CACL,eAAgB,UAClB,EACD,CACH,EAEMqc,GAAqBrc,GAAsB,CACzC,MAAE,MAAA7L,CAAU,EAAA6L,EAEbA,EAAA,SAAS,CAAC,SAAS,CAAC,EAEpBA,EAAA,GAAG,UAAW,IAAM,CAClBsc,GAAInoB,EAAO,SAAS,IACvBA,EAAM,QAAU,UAClB,CACD,CACH,EAEMooB,GAAsD,CAC1D,OAAQC,GACR,OAAQC,EACV,EAEMC,GAAgC,GAEtC,OAAO,KAAKH,EAAyB,EAAE,QAASI,GAAe,CACnCpQ,GAAAgQ,GAA0BI,CAAU,EAAG,CAC/D,SAAU,CAACN,GAAmBD,EAAuB,EACtD,EAEDM,GAAa,KAAK,CAChB,UAAWC,EACX,WAAYJ,GAA0BI,CAAU,EACjD,CACH,CAAC,iHC3CKC,GAA2B5c,GAAsB,CACrDua,GAAuBva,EAAM,UAAW,CACtC,MAAO,CACL,kBAAmB,CACjB,GAAI,SACJ,KAAM,OACN,KAAM,MACR,EACA,eAAgB,gBAClB,EACD,CACH,EAEM6c,GAA2B7c,GAAsB,CAEjD,GAAAlM,GAAA,IAAiB,UAAW,OAE1B,MAAE,MAAAK,CAAU,EAAA6L,EAEbA,EAAA,SAAS,CAAC,mBAAmB,CAAC,EAE7B,MAAA8c,EAAcC,GAA+B,CAC7CA,EACF5oB,EAAM,eACJ,4NAEFA,EAAM,eACJ,2NACJ,EAGG6L,EAAA,GAAG,UAAW,IAAM,CAClBsc,GAAInoB,EAAO,mBAAmB,MAAS,kBAAoB,IAEhE2oB,EAAW3oB,EAAM,iBAAiB,EAElC6L,EAAK,GAAG,yBAA0B,CAAC,CAAE,QAAAwL,KAAc,CACjDsR,EAAWtR,CAAO,EACnB,EACF,CACH,EAEAe,GAA0ByQ,GAAoB,CAC5C,MAAO,CAAC,mBAAmB,EAC3B,SAAU,CACRJ,GACAC,GACAtO,GAAmB,CACrB,CACF,CAAC,EAED,MAAe0O,GAAA,CACb,UAAW,WACX,WAAYD,EACd,2GC9DME,GAA2Bld,GAAsB,CACrDA,EAAK,KAAK,MAAM,CAACwL,EAASU,IAEfA,EADLV,IAAY,OACF,GAEFA,CAFI,CAGjB,CACH,yMCGA,MAAMrX,EAAQC,EAER+oB,EAA2B7oB,EAAS,IAAM,CACxC,MAAE,UAAA8oB,CAAU,EAAIjpB,EAAM,OACxB,OAACipB,EACEA,EAAYjpB,EAAM,WADF,CACE,CAC1B,+fCND,MAAMkpB,EAAcC,GAAqB,IAAMC,GAAA,WAAO,gCAAwB,EAAC,kDAMzEppB,EAAQC,EAERopB,EAAoBlpB,EAAS,IAG1B,GADMH,EAAM,QAAQ,cAAgB,aAAe,QAAU,MACtD,IAAIA,EAAM,QAAQ,EAAE,EACnC,EAEKspB,EAAoD,GACpDC,EAAepV,GAA8C,CACjEmV,EAAO,KAAKnV,CAAE,GAGVqV,EAAa,CACjB,OAAAF,EACA,eAAgB,IAAM,GACtB,aAAeG,GACbF,EAAa3iB,GAAYA,EAAQ,aAAa6iB,CAAS,CAAC,EAC1D,gBAAiB,IAAMF,EAAa3iB,GAAYA,EAAQ,iBAAiB,EACzE,MAAO,IAAM2iB,EAAa3iB,GAAY8iB,GAAS,IAAM9iB,EAAQ,MAAM,CAAC,CAAC,GAGhE,qBAAO5G,EAAM,QAASwpB,CAAU,0bClCjCG,GAAkBhQ,GACtBiQ,GACA,CAAC,UAAW,WAAY,aAAc,OAAQ,aAAa,EAC3D,CACE,SAAU,CAACxP,GAAmB,UAAW,GAAG,EAAG2O,EAAuB,CACxE,CACF,EAEec,GAAA,CACb,UAAW,SACX,WAAYF,EACd,2GC+BMG,GAAoB,CAAC,aAAc,WAAW,EAE9CC,GAAa,CAACjgB,EAAWkgB,IACzBlgB,EAAI,KAAOkgB,EAAI,IAAY,EAC3BlgB,EAAI,KAAOkgB,EAAI,IAAY,GAC3BlgB,EAAI,KAAOkgB,EAAI,IAAY,GAC3BlgB,EAAI,KAAOkgB,EAAI,IAAY,GACxB,GAGIC,GAAgB,CAC3BC,EACA/d,EACA9F,IACG,CACG,MAAA8jB,EAAM,IAAI,MAEVC,EAAU,IAAI,QAAiB1W,GAAY,CAC/CyW,EAAI,OAAS,IAAM,OACX,MACJ,EAAGE,EAAO,OACV,EAAGC,EAAO,OACV,QAAAC,EAAU,OACV,MAAAC,EAAQ,EACR,KAAMC,EAAWte,KACftG,EAAAQ,GAAA,YAAAA,EAAS,aAAT,YAAAR,EAAA,KAAAQ,EAAsB8jB,EAAKhe,KAAS,GAElCue,EAAaP,EAAI,MACjBQ,EAAcR,EAAI,OAExBxnB,GAAI,MAAM,kCAAmC,CAC3C,WAAA+nB,EACA,YAAAC,CAAA,CACD,EAED,IAAI7gB,EAAIugB,EACJL,EAAIM,EAaR,GAXIN,IAAM,QAAUlgB,IAAM,SACpBA,EAAA4gB,EACAV,EAAAW,GAIF7gB,IAAM,QAAUA,EAAI4gB,IAAgB5gB,EAAA4gB,GAEpCV,IAAM,QAAUA,EAAIW,IAAiBX,EAAAW,GAGrCX,IAAM,OAAQ,CAChB,MAAMY,EAASF,EAAc5gB,EAC7BkgB,EAAIW,EAAcC,CACpB,CAEA,GAAI9gB,IAAM,OAAQ,CAChB,MAAM8gB,EAASD,EAAcX,EAC7BlgB,EAAI4gB,EAAaE,CACnB,CAEM,MAAAC,EAAS,SAAS,cAAc,QAAQ,EAG3C/gB,EAAI4gB,GAAc5gB,EAAI0gB,EAAQE,GAC9BV,EAAIW,GAAeX,EAAIQ,EAAQG,GAE3B7gB,GAAA0gB,EACAR,GAAAQ,EAGLK,EAAO,MAAQ/gB,EACf+gB,EAAO,OAASb,EAGAa,EAAO,WAAW,IAAI,EAC9B,UAAUV,EAAK,EAAG,EAAGrgB,EAAGkgB,CAAC,IAEjCa,EAAO,MAAQH,EACfG,EAAO,OAASF,EAEAE,EAAO,WAAW,IAAI,EAC9B,UAAUV,EAAK,EAAG,EAAGO,EAAYC,CAAW,GAGtD,MAAMG,EACJP,IAAY,OAASR,GAAWW,EAAYC,CAAW,EAAIJ,EAEzD,IACF,MAAMQ,EAASF,EAAO,UAAUJ,EAAUK,CAAY,EACtDnoB,GAAI,MAAM,sCAAuC,CAC/C,QAASmoB,EACT,KAAML,EACN,EAAA3gB,EACA,EAAAkgB,EACA,KAAM,GAAIe,EAAO,OAAS,IAAQ,KAAO,IAAI,MAC9C,EACDrX,EAAQqX,CAAM,QACPlV,EAAG,CACNlT,GAAA,MAAM,8CAA+CkT,CAAC,EAC1DnC,EAAQwW,CAAQ,CAClB,GAEEC,EAAA,QAAU,IAAMzW,EAAQwW,CAAQ,EACrC,EACD,OAAAC,EAAI,IAAMD,EACHE,CACT,EAEaY,GAAe,MAAOC,GACjC,IAAI,QAAgB,CAACvX,EAASgB,IAAW,CACjC,MAAAwW,EAAS,IAAI,WACnBA,EAAO,OAAS,IAAMxX,EAAQwX,EAAO,MAAgB,EACrDA,EAAO,QAAU,IAAMxW,EAAOwW,EAAO,KAAK,EAC1CA,EAAO,cAAcD,CAAI,CAC3B,CAAC,EAEUE,GAAiBC,GAAoB,CAC1C,MAAAC,EAAa,OAAO,KAAKD,EAAQ,MAAM,GAAG,EAAE,CAAC,CAAC,EAC9CE,EAAaF,EAAQ,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAG7DG,EAAK,WAAW,KAAKF,EAAaG,GAAMA,EAAE,WAAW,CAAC,CAAC,EAEtD,WAAI,KAAK,CAACD,CAAE,EAAG,CAAE,KAAMD,EAAY,CAC5C,EAEaG,GAAkB,MAC7BC,EACArlB,EAA2B,KACE,CAG7B,MAAMslB,EAFQ,MAAM,KAAKD,GAAa,CAAE,GAEjB,IAAI,MAAOE,GAAS,CACrC,IAAAb,EAAS,MAAMC,GAAaY,CAAI,EAEpC,OAAIvlB,GAAA,MAAAA,EAAS,UAAYyjB,GAAkB,SAAS8B,EAAK,IAAI,IAC3Db,EAAS,MAAMd,GAAcc,EAAQa,EAAK,KAAMvlB,CAAO,GAGlD,CACL,KAAMulB,EAAK,KACX,KAAMA,EAAK,KACX,QAASb,CAAA,CACX,CACD,EAID,OAFkB,MAAM,QAAQ,IAAIY,CAAQ,GAE3B,OAAQC,GAASA,EAAK,OAAO,CAChD,EAkCaC,GAAmB1f,GACvB,GAAQA,GAAQA,IAAS,aAGrB2f,GAAoB,IAAM,CAC/B,MAAE,OAAAlnB,GAAW9D,IAEZ,OAAA8D,EAAO,wCAAwC,GAAK,EAC7D,EAEamnB,GAA0B,IAC9BD,GAAoB,OAAK,GAAG,EAGxBE,GAAkB7f,GACxBA,EAED2f,GAAkB,EAAE,SAAS3f,CAAI,EAAU,QAC3CA,IAAS,gBAAwB,WAE9B,GALW,GAQP8f,GAAgC,CAC3CzgB,EACA0gB,IACG,CACH,MAAMC,EAAQD,GAAA,YAAAA,EAAa,IAAKN,IAAU,CACxC,KAAMA,EAAK,KACX,KAAMA,EAAK,IACX,IACF,MAAI,CAACO,GAAS,CAACA,EAAM,OAAe,KAC7B,CACL,MAAAA,EACA,OAAA3gB,CAAA,CAEJ,EAMa4gB,GAAwB,CAACR,EAAYS,IACzCT,EAAK,MAAQS,EAGTC,GAAoB,CAC/BH,EACAI,IACG,CACH,MAAMC,EAAqD,GACrD,OAAAL,EAAA,QAASP,GAAS,CACTW,EAAA,QAASE,GAAgB,CAC/BA,EAAY,MAAM,SAASb,EAAK,IAAI,IACpCQ,GAAsBR,EAAMa,EAAY,IAAI,GAC/CD,EAAY,KAAK,CACf,KAAAZ,EACA,MAAOa,EAAY,MACnB,QAASA,EAAY,KACtB,GACJ,EACF,EACMD,CACT,EAKaE,GACXH,GACW,CACX,MAAM3kB,EAAsB,IAAI,IAAI,EAAE,EACzB,OAAA2kB,EAAA,QAASX,GAAS,CACxBA,EAAA,MAAM,QAASzf,GAAS,CAC3BvE,EAAO,IAAIuE,CAAI,EAChB,EACF,EACM,MAAM,KAAKvE,CAAM,EAAE,KAAK,IAAI,CACrC,EAKa+kB,GAAoBC,GAC3BA,EAAO,KAAO,KAAO,KAChB,GAAG,KAAK,MAAOA,EAAO,IAAO,KAAO,KAAK,EAAI,EAAE,MAEpDA,EAAO,KACF,GAAG,KAAK,MAAMA,EAAO,IAAI,CAAC,MAE5B,GAAGA,CAAI,SCvTHC,GAAoB,KAkCxB,CAAE,iBAjCgB,CACvBhhB,EACAsgB,EACAI,EACAlmB,EAAU,CACR,gBAAiB,MAEhB,CACG,MAAAymB,EAAW,MAAM,QAAQX,CAAK,EAAIA,EAAQ,MAAM,KAAKA,CAAK,EAC1DK,EAAcF,GAAkBQ,EAAUP,CAAY,EACxD,GAAAC,EAAY,SAAW,EAAU,SAC/B,MAAAO,EAAaP,EAAY,CAAC,EAC1BQ,EAAW/rB,EAAK,EACpB,+CACA8rB,EAAW,MACXJ,GAAiBI,EAAW,OAAO,GAErC,OAAI1mB,EAAQ,gBACVwF,EAAK,MAAM,IACT+L,GAAc,CACZ,IAAK,gBACL,SAAU,GACV,MAAOoV,EACP,KAAM,aACN,QAAS,GACV,GAGHnhB,EAAK,UAAUmhB,CAAQ,EAGlB,GAEiB,GCpCtB,CAAE,iBAAAC,EAAiB,EAAIJ,KAChBK,GAAkBrhB,GAAsB,CAC/C,IAAAshB,EAECthB,EAAA,GAAG,UAAW,IAAM,CACvBA,EAAK,GAAG,oBAAqB,CAAC,CAAE,QAAAwL,EAAS,OAAQxL,KAAW,CACtDwL,GAAWxL,EAAK,OACFohB,GAAiBphB,EAAgBA,EAAK,MAAOwL,EAAS,CACpE,gBAAiB,GAClB,GAGCxL,EAAK,KAAK,4BAA6B2J,EAAyB,IAAI,EAGhD3J,IAAK,GAAG,SAAU,CAAC,CAAE,QAAAwL,EAAS,OAAQxL,KAAW,OACjE,MAACA,IAAK,UAALA,QAAc,cAAc,OACjBohB,GACdphB,EACAwL,EACexL,EAAK,QAAQ,aAC5B,CACE,gBAAiB,EACnB,IAGAA,EAAK,MAAM,OAAO,eAAe,EACjCA,EAAK,KACH,4BACA2J,EAAyB,OAG3B3J,EAAK,KACH,4BACA2J,EAAyB,OAE7B,CACD,GACQ,CAAC6B,GAAW8V,IACrBthB,EAAK,MAAM,OAAO,eAAe,EACjCA,EAAK,IAAIshB,CAAmB,EAC5BthB,EAAK,KAAK,4BAA6B2J,EAAyB,MAAM,EACxE,CACD,EACF,CACH,EC9CM4X,GAAoB,CAACvhB,EAAmBsgB,IAA0B,OAChE,MAAAkB,GAASxnB,EAAAgG,EAAK,UAAL,YAAAhG,EAAc,OACvBynB,EAAkBnB,EAAM,OAC3BP,GAASA,EAAK,MAAQ,CAACyB,EAAO,SAASzB,EAAK,IAAI,GAG/C,OAAA0B,EAAgB,SAAW,EAAU,IAEzCzhB,EAAK,MAAM,IACT+L,GAAc,CACZ,IAAK,kBACL,SAAU,GACV,MAAO3W,EAAK,EACV,mCACAqsB,EAAgB,CAAC,EAAE,IACrB,EACA,KAAM,aACN,QAAS,GACV,GAGI,GACT,EAEaC,GAAkB1hB,GAAsB,CAC/C,IAAAshB,EAECthB,EAAA,GAAG,UAAW,IAAM,CACvBA,EAAK,GAAG,cAAe,CAAC,CAAE,QAAAwL,EAAS,OAAQxL,KAAW,CAChDwL,GAAWxL,EAAK,OACFuhB,GAAkBvhB,EAAMA,EAAK,KAAuB,GAGlEA,EAAK,KAAK,4BAA6B2J,EAAyB,IAAI,EAEhD3J,IAAK,GAAG,SAAU,CAAC,CAAE,QAAAwL,EAAS,OAAQxL,KAAW,CACrDuhB,GAAkBvhB,EAAMwL,CAAO,GAE7CxL,EAAK,MAAM,OAAO,iBAAiB,EACnCA,EAAK,KACH,4BACA2J,EAAyB,OAG3B3J,EAAK,KACH,4BACA2J,EAAyB,OAE7B,CACD,GACQ,CAAC6B,GAAW8V,IACrBthB,EAAK,MAAM,OAAO,iBAAiB,EACnCA,EAAK,IAAIshB,CAAmB,EAC5BthB,EAAK,KAAK,4BAA6B2J,EAAyB,MAAM,EACxE,CACD,EACF,CACH,EC1DagY,GAAsB3hB,GAAsB,CAClDA,EAAA,GAAG,UAAW,IAAM,CACnB,IAAAshB,EAEJthB,EAAK,GAAG,gBAAiB,CAAC,CAAE,QAAAwL,EAAS,OAAQxL,KAAW,CAClD,CAACwL,GAAW,MAAM,QAAQxL,EAAK,KAAK,GAAKA,EAAK,MAAM,OAAS,GAC/DA,EAAK,MAAM,IACT+L,GAAc,CACZ,IAAK,qBACL,SAAU,GACV,MAAO3W,EAAK,EAAE,kCAAkC,EAChD,KAAM,aACN,QAAS,GACV,GAGH4K,EAAK,KAAK,4BAA6B2J,EAAyB,IAAI,EAEpE2X,EAAsBthB,EAAK,GAAG,SAAU,CAAC,CAAE,QAASlG,KAAe,CAC7D,MAAM,QAAQA,CAAQ,GAAKA,EAAS,SAAW,IACjDkG,EAAK,MAAM,OAAO,oBAAoB,EACtCA,EAAK,KACH,4BACA2J,EAAyB,QAE7B,CACD,GACQ6B,GAAW8V,IACpBthB,EAAK,IAAIshB,CAAmB,EAC5BthB,EAAK,MAAM,OAAO,oBAAoB,EACtCA,EAAK,KAAK,4BAA6B2J,EAAyB,MAAM,EACxE,CACD,EACF,CACH,EC3BMiY,GAA0C,CAC9C,iBAAkB,CAChB,MAAO,MACP,QAAS,UACT,QAAS,CAAC,CACZ,EACA,QAAS,CACP,KAAM,SACN,UAAW,IAAM,IACnB,EACA,YAAa,CACX,gBAAiB,IAAM,KACvB,YAAa,CAAC,CAChB,EACA,UAAW,CACT,gBAAiB,IAAM,IACzB,CACF,EAEaC,GAAwB,IAC5BD,GAGIE,GAA2B/oB,GAA+B,CAC9D,cAAO6oB,GAAqB7oB,CAAM,CAC3C,EClCagpB,GAAiB,IAAM,CAC5B,MAAAC,EAAgBvtB,EAAI,EAAK,EAE/B,GAAI,OAAQ,CACN,IAAAwtB,EAEJ,MAAMC,EAAkB,IAAM,CAC5BF,EAAc,MAAQ,OAAO,WAAW,mBAAmB,EAAE,QACjDC,GAAA,MAAAA,EAAA,oBAAoB,SAAUC,GAC7BD,EAAA,OAAO,WAAW,mBAAmB,EAClDA,EAAW,iBAAiB,SAAUC,EAAiB,CAAE,KAAM,GAAM,GAGvDA,IAEhBC,GAAkB,IAAM,CACVF,GAAA,MAAAA,EAAA,oBAAoB,SAAUC,EAAe,CAC1D,CACH,CAEO,OACL,cAAAF,CAAA,CAEJ,ECvBA,IAAII,GAA0C,CAC5C,KAAM,sBACN,QAAS,8BACT,KAAM,2BACN,QAAS,8BACT,KAAM,2BACN,KAAM,0BACR,EAEa,MAAAC,GAAgCpuB,GAAiC,CACvDmuB,GAAAnuB,CACvB,EAEaquB,GAAwB,IAAMF,GChB9BG,GAAwBjiB,GAAyB,CACxD,IAACA,EAAa,aAClB,MAAMkiB,EAAcliB,EAAK,QAAQ,yBAA0B,IAAI,EA+CxD,MA7C+B,CAEpC,aAAc,SACd,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,aAAc,SAEd,YAAa,QACb,YAAa,QACb,aAAc,QACd,YAAa,QACb,YAAa,QAEb,YAAa,QACb,YAAa,QAEb,kBAAmB,UACnB,qBAAsB,WACtB,0BAA2B,WAC3B,0CAA2C,WAC3C,0EACE,WACF,0EACE,WACF,2BAA4B,OAC5B,oEAAqE,OACrE,iDAAkD,OAClD,gCAAiC,OACjC,4EACE,OACF,kDAAmD,OAEnD,YAAa,WACb,mBAAoB,WACpB,iBAAkB,YAElB,aAAc,WACd,WAAY,WACZ,gBAAiB,WAEjB,mBAAoB,aACpB,kBAAmB,cAERkiB,CAAW,GAAK,MAC/B,0RClBA,MAAMruB,EAAQC,EAERsC,EAAOC,EAKPhD,EAAUG,KAEV2uB,EAAchuB,EAAI,EAAK,EAEvBiuB,EAAapuB,EAAS,IAAM,CAC1B,MAAE,KAAAyrB,EAAM,WAAA4C,CAAe,EAAAxuB,EAE7B,GAAI,CAACwuB,GAAcF,EAAY,MAAc,SAEvC,MAAAniB,EAAO6f,GAAeJ,EAAK,IAAI,EAGrC,OAAIpsB,IAAY,UAAY2M,IAAS,QAAgB,GAE9CA,CAAA,CACR,EAEKsiB,EAActuB,EAAS,IAAM0rB,GAAgB7rB,EAAM,KAAK,IAAI,CAAC,EAC7DE,EAAOC,EAAS,IAAMiuB,GAAqBpuB,EAAM,KAAK,IAAI,CAAC,EAE3D0uB,EAAgBvuB,EAAS,IACzBH,EAAM,YAAoB,aACvB,KACR,EAEK2uB,EAAYxuB,EAAS,IACrBH,EAAM,aAAeyuB,EAAY,MAC5BxtB,EAAK,EAAE,cAAejB,EAAM,KAAK,IAAI,EAC1CA,EAAM,aAAe,CAACyuB,EAAY,MAC7BxtB,EAAK,EAAE,UAAWjB,EAAM,KAAK,IAAI,EACnCA,EAAM,KAAK,IACnB,EAEK4uB,EAAkBlsB,GAAiB,CAClC6rB,EAAW,OAEXhsB,EAAA,UAAWG,EAAO6rB,EAAW,KAAK,GAGnC,CAAE,cAAAV,GAAkBD,KAEpB,CAAE,YAAaiB,CAAkB,EAAInB,GAAsB,EAE3DttB,EAAW+tB,+3ECtDXW,GAAsBxuB,EAAQ,OAAkC,EAChEyuB,GAAuBzuB,EAAwB,EAC/C0uB,GAAsB1uB,EAAI,CAAC,EAEpB2uB,GAAkB,IAAM,CACnC,MAAMzvB,EAAUG,KAEVuvB,EAAsB,CAC1Bpb,EACAzN,EAGI,GACJ3G,EAA2B,SACxB,CACH,MAAMyvB,EACJ3vB,IAAY,UAAYE,GAAQ0vB,GAAY,iBAE9C,OAAIN,GAAoB,MAAM,IAAIK,CAAU,EACnC,IAAI,QAAoBzb,GAAY,CACzCA,EAAQ,MAAS,EAClB,EAGI,IAAI,QAA8BA,GAAY,CAC/Bob,GAAA,MAAM,IAAIK,EAAY,CACxC,GAAG9oB,EACH,KAAAyN,EACA,iBAAkB,CAChBJ,EAAQ,EAAI,CACd,EACA,gBAAiB,CACfA,EAAQ,EAAK,CACf,EACA,eAAgB,CACdA,EAAQ,MAAS,CACnB,EACD,EAEDqb,GAAqB,MAAQI,EAC7BH,GAAoB,OAAS,EAC9B,GAqBI,OACL,qBAAAD,GACA,oBAAAC,GACA,oBAAAF,GACA,oBAAAI,EACA,2BAvBiC,CACjC5T,EAA+B,UAC/BjV,EAGI,GACJ3G,EAA2B,SAEpBwvB,EACL,GACA,CACE,GAAG7oB,EACH,oBAAqBiV,CACvB,EACA5b,CAAA,CASF,CAEJ,ECxEa2vB,GAAqB/uB,EAAmB,CACnD,QAAS,GACT,MAAO,EACP,OAAQ,CAAC,CACX,CAAC,EAEYgvB,GAAkBC,GAA2C,CAClE,MAAAC,MAAe,QAErB,IAAIC,EAAyB,GAE7B,OAAAC,GAAY,IAAM,CAChBD,EAAS3qB,EAAMyqB,CAAS,EACrB,OAAQ3D,GAAS,CACV,MAAA2C,EAAavC,GAAeJ,EAAK,IAAI,EAE3C,OAAO2C,GAAcA,IAAe,OACrC,GACA,IAAI,CAAC7M,EAAOpY,KAGFkmB,EAAA,IAAI9N,EAAOpY,CAAK,EAClB,CACL,IAAKoY,EAAM,QAAUA,EAAM,SAAWA,EAAM,QAC5C,MAAOA,EAAM,MAEhB,EACJ,EAqBM,CACL,WAHkBkK,GAA0B4D,EAAS,IAAI5D,CAAI,EAI7D,UArBiBlK,GAA2B,CAC5C,MAAMiO,EAAaH,EAAS,IAAI9N,CAAK,GAAK,EAC1C2N,GAAmB,MAAQ,CACzB,MAAOM,EACP,OAAAF,EACA,QAAS,GACX,EAgBA,UAbgB,IAAM,CACtBJ,GAAmB,MAAQ,CACzB,OAAQ,CAAC,EACT,MAAO,EACP,QAAS,GACX,CAQA,CAEJ,EC1EaO,GAA0B,CAACpkB,EAAgBqkB,IAAsB,CACtE,MAAAC,EAAYpkB,GAAcF,EAAQqkB,CAAS,EAiB1C,OACL,wBAhB8B,IAAM,QACpChqB,EAAAiqB,GAAA,YAAAA,EAAW,OAAX,MAAAjqB,EAAiB,MAAM,IACrB+R,GAAc,CACZ,SAAU,GACV,IAAK,mBACL,MAAO,GACP,QAAS,GACV,EACH,EASA,2BANiC,IAAM,QAC5B/R,EAAAiqB,GAAA,YAAAA,EAAA,aAAAjqB,EAAM,MAAM,OAAO,mBAAkB,CAKhD,CAEJ,ECrBakqB,GAA6B9pB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAY1B,SAAA+pB,GAA8B3pB,EAAuQ,GAAI,CAChT,OAAAC,GAA6GypB,GAA4B1pB,CAAO,CACzJ,CCdO,MAAM4pB,GAAgChqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAO7B,SAAAiqB,GAAiC7pB,EAAmR,GAAI,CAC/T,OAAAC,GAAmH2pB,GAA+B5pB,CAAO,CAClK,4SCcA,MAAMrG,EAAQC,EAERkwB,EAAkBpsB,EAAM/D,EAAO,SAAS,EAExC,CAAE,iBAAAitB,GAAqBJ,KAIvBuD,EAAcjwB,EAAyB,CAC3C,KAAM,CACG,OAAAgwB,EAAgB,MAAM,QAAU,EACzC,EACA,IAAIjlB,EAAO,CACHlL,EAAA,QAAQ,KAAK,MAAMkL,CAAK,CAChC,EACD,EAEKmlB,EAAe/vB,EAA4B,EAAE,EAC7CgwB,EAAehwB,EAAuC,EAAE,EAGxDiwB,EAAyBpwB,EAAS,IAC/BiwB,EAAY,MAAM,IAAKxE,GAAS,CACrC,MAAMzN,EAAUkS,EAAa,MAAMzE,EAAK,EAAE,EACnC,OAAE,GAAGA,EAAM,QAAAzN,EAAQ,CAC3B,CACF,EAEKqS,EAAkB,IAAI3oB,GAAgBmoB,GAA8B,EAAE,CAAC,EACvES,EAAiBD,EAAgB,UAEjCE,EAAqB,IAAI7oB,GAC7BqoB,GAAiC,EAAE,GAE/BS,EAAoBH,EAAgB,UAEpCI,EAAczwB,EAClB,IACE,CAACH,EAAM,QAAQ,UACf,CAACywB,EAAe,OAChB,CAACE,EAAkB,OAGjB,CAAE,wBAAAE,EAAyB,2BAAAC,CAC/B,EAAAlB,GAAwB5vB,EAAM,QAAQ,OAAQA,EAAM,QAAQ,KAAK,IAAI,EAEjE+wB,EAAYC,GAAe,YAAY,EAEvCC,EAAQ,IAAM,CAClBX,EAAa,MAAQ,GACrB,MAAMY,EAAQH,EAAU,MACnBG,IACLA,EAAM,MAAQ,GACdA,EAAM,MAAQ,KAEaJ,IAAA,EAGvBK,EAAY,MAAOhF,GAA6B,OACvCmE,EAAA,MAAQ,MAAM,KAAKnE,GAAS,EAAE,EAAE,IAAKP,IAAU,CAC1D,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,KAAMA,EAAK,IACX,IAEsBiF,IAElB,MAAAO,EAAU,MAAM3F,GAAgBU,CAAK,EAErC5Z,EAAO,MAAMie,EAChB,KAAK,CACJ,OAAQxwB,EAAM,QAAQ,OACtB,MAAOoxB,CAAA,CACR,EACA,MAAM,IAAM,CACLH,GAAA,CACP,EAEGI,IAAgBxrB,EAAA0M,GAAA,YAAAA,EAAM,qBAAN,YAAA1M,EAA0B,cAEhD,GAAI,CAACwrB,GAAe,CACZJ,IACN,MACF,CAEA,MAAMK,EAAkBD,GAAc,OACpC,CAACE,EAAsC3F,GAAMtiB,MAC3CioB,EAAa3F,GAAK,EAAE,EAAIwF,EAAQ9nB,EAAK,EAAE,QAChCioB,GAET,CAAC,GAGHlB,EAAa,MAAQ,CAAE,GAAGA,EAAa,MAAO,GAAGiB,GACjDlB,EAAY,MAAQ,CAAC,GAAGA,EAAY,MAAO,GAAGiB,EAAa,EAErDJ,GAAA,EAGD,cAAOjxB,EAAM,QAAS,CAC3B,YAAamxB,CAAA,CACd,EAEK,MAAAK,EAAgB,MAAOC,GAAkB,CAC7C,MAAMP,EAAQO,EAAO,OAEf,CAAE,MAAAtF,CAAU,EAAA+E,EAEhBlxB,EAAM,QAAQ,cACdmsB,GACA,CAACc,EAAiBjtB,EAAM,QAAQ,KAAMmsB,EAAOnsB,EAAM,QAAQ,YAAY,GAIpEmsB,GAEL,MAAMgF,EAAUhF,CAAK,GAGjB,CAAE,oBAAA+C,GAAwBD,KAE1ByC,EAAa,MAAO9F,GAAuB,CAC/C,MAAM+F,EAAS/F,EAAK,GAUpB,GAAI,CATc,MAAMsD,EACtB,GAAG,uCAAuC,EAC1C,CACE,gBAAiB,CAACtD,EAAK,IAAI,EAC3B,YAAa,GAAG,QAAQ,EACxB,cAAe,QACjB,GAGc,OAEhB,GAAI,CAAC+F,EAAQ,CACXvB,EAAY,MAAQA,EAAY,MAAM,OAAQwB,GAASA,IAAShG,CAAI,EACpE,MACF,CAEM,MAAAiG,GAAkBzB,EAAY,MAAM,KAAMxE,GAASA,EAAK,KAAO+F,CAAM,EACvEE,KACFA,GAAgB,aAAe,IAGjCnB,EACG,KAAK,CAAE,OAAQ1wB,EAAM,QAAQ,OAAQ,QAAS,CAAC2xB,CAAM,CAAE,CAAC,EACxD,KAAMpf,GAAS,QACV1M,EAAA0M,GAAA,YAAAA,EAAM,wBAAN,MAAA1M,EAA6B,UAC/BuqB,EAAY,MAAQA,EAAY,MAAM,OAAQwB,GACrCA,EAAK,KAAOD,CACpB,EACH,CACD,GAGCG,EAAc3xB,EAAS,IACtBH,EAAM,QAAQ,SAGfowB,EAAY,MAAM,SAAW,EACxB,GAAG,cAAc,EAEnB,GAAG,qBAAqB,EALtB,GAAG,aAAa,CAM1B,EAEK2B,EAAqB5xB,EAAS,IAEhC,CAACH,EAAM,QAAQ,WACdowB,EAAY,MAAM,QAAU,GAAKE,EAAa,MAAM,QAAU,EAElE,EAEK0B,EAAwB1xB,EAAI,GAAG,EAE/B2xB,GAAiBvvB,GAAmB,CACxC,MAAMY,EAASZ,EAAM,OACfwvB,EAAY,GAEZC,EADY7uB,EAAO,aAAeA,EAAO,aACjB4uB,EACxB,CAAE,UAAAE,CAAc,EAAA9uB,EACtB,GAAI8uB,GAAaD,EAAW,CAC1BH,EAAsB,MAAQ,IAC9B,MACF,CACM,MAAAK,GAAeD,EAAYD,GAAaD,EAC9CF,EAAsB,OAAS,EAAIK,GAAa,QAAQ,CAAC,GAGrD,CAAE,UAAAC,CAAA,EAAchD,GAAeiB,CAAsB,EAErDgC,EAAiBvB,GAAe,iBAAiB,EAEvDlS,GAAmByT,EAAgB,CACjC,UAAW,WACZ,EAED,MAAM/yB,EAAUG,KACVS,EAAWolB,KACX,CAAE,UAAWgN,CAAgB,EAAI9E,GAAsB,EAEvD+E,EAActyB,EAAS,IAEzBC,EAAS,SACT,CAAC2xB,EAAmB,QACnB3B,EAAY,MAAM,QAAUE,EAAa,MAAM,OAEnD,EAEKoC,GAAevyB,EAAS,IAE1BX,IAAY,WACX4wB,EAAY,MAAM,OAAS,GAAKE,EAAa,MAAM,OAAS,EAEhE,EAEKqC,GAAsBxyB,EAAS,WAAM,OAAA0F,EAAA7F,EAAM,QAAQ,SAAd,YAAA6F,EAAsB,MAAM,KAAI,EAErE+sB,GAAkB5B,GAAe,WAAW,EAE5C,CAAE,eAAA6B,EAAA,EAAmBC,GAAYF,GAAiB,CACtD,UAAWD,GACX,OAASxG,GAAyB,CAC3BA,GAELgF,EAAUhF,CAAK,CACjB,EACD,s7ECvPKxC,GAAkBhQ,GACtBoZ,GACA,CAAC,WAAY,UAAW,SAAU,cAAc,EAChD,CACE,SAAU,CAACvF,GAAoBN,GAAgBK,EAAc,CAC/D,CACF,EAEeyF,GAAA,CACb,UAAW,OACX,WAAYrJ,EACd,2GChBesJ,GAAA,CACb,UAAW,QACX,WAAYC,EACd,2GCAA9a,GAA0B+a,GAAkB,CAC1C,SAAU,CAAC/Y,IAAoB,CACjC,CAAC,EAED,MAAegZ,GAAA,CACb,UAAW,SACX,WAAYD,EACd,2GCVME,GAAkBxnB,GAAsB,CAEvCA,EAAA,SAAS,CAAC,UAAU,CAAC,EAErBA,EAAA,GAAG,UAAW,IAAM,CACnB,CAACA,EAAK,SAAW,OAAOA,EAAK,MAAM,UAAa,aAEpDA,EAAK,QAAQ,MAAM,WAAcnJ,GAAyB,CACpDA,EAAM,MAAQ,UAGlBA,EAAM,eAAe,EAErBmJ,EAAK,MAAM,SAAS,KAClB,KACA,IAAI,YAAY,SAAU,CACxB,UAAWnJ,EAAM,OAClB,GACH,EACF,CACD,CACH,ECtBa4wB,GAAgCznB,GAAsB,CACjE,IAAI0nB,EAAgB,GAEd,MAAAC,EAAoB3d,GAAuB,CAE7C,IAACA,GACAA,EAAE,gBAAkB,mBACnBA,EAAE,gBAAkB,iBACrBA,EAAE,gBAAkB,iBAAmB,CAAC0d,EAEzC,OAIF,MAAME,EAFe5d,EAAE,cAEW,QAChC,kBAGF,GAAK4d,EAED,IAAA5d,EAAE,gBAAkB,kBAAmB,CACzB0d,EAAA,GAChBE,EAAa,QAAQ,UAAY,OACjC,MACF,CAEgBF,EAAA,GAChB,OAAOE,EAAa,QAAQ,YAGzB5nB,EAAA,GAAG,UAAW,IAAM,CAClBA,EAAK,UAGLA,EAAA,QAAQ,MAAM,iBAAmB2nB,EAAA,CACvC,CACH,ECfME,GAAqD,CACzD,KAAMC,GACN,MAAOC,GACP,MAAOC,GACP,OAAQC,GACR,IAAKC,GACL,KAAMC,GACN,IAAKC,EACP,EAEMC,GAA+B,GAErC,OAAO,KAAKR,EAAwB,EAAE,QAASS,GAAc,CAC3D/b,GACEsb,GAAyBS,CAAS,EAClC,CACE,SAAU,CACRla,GACAoZ,GACAjZ,GAAmB,SAAS,EAC5BkZ,GACAvK,EACF,CACF,EACA,CAAE,OAAQqL,EAAU,GAGtBF,GAAY,KAAK,CACf,UAAWC,EACX,WAAYT,GAAyBS,CAAS,EAC/C,CACH,CAAC,iHCnDcE,GAAA,CACb,UAAW,OACX,WAAYC,EACd,2GCIMC,GAA0B7X,GAAU8X,EAAkB,EAEtDC,GAA4B5oB,GAAsB,CAChD,MAAE,MAAA7L,CAAU,EAAA6L,EAElB7L,EAAM,gBAAkB,6BACxBA,EAAM,WAAa,OACnBA,EAAM,kBAAoB,IAAM,CAC9BA,EAAM,KAAOA,EAAM,OAAS,WAAa,OAAS,YAGpD6L,EAAK,GAAG,UAAW,CAAC,CAAE,OAAA6oB,KAAa,OACjC,GAAIA,EAAO,OAAS,YAAc,CAAC10B,EAAM,GAAI,OAE7C,MAAM20B,GAAa9uB,EAAA,SAAS,eAC1B7F,EAAM,EACL,IAFgB,YAAA6F,EAEhB,mBAEC8uB,GACeC,GAAAD,EAAY,UAAYjyB,GAAyB,CAC5DA,EAAM,OAAS,UACjB1C,EAAM,KAAOA,EAAM,OAAS,WAAa,OAAS,YACrD,EACJ,EAED6L,EAAK,GAAG,YAAa,CAAC,CAAE,QAAAwL,EAAS,OAAAqd,KAAa,CACtC,MAAE,MAAA10B,CAAU,EAAA00B,EAClB10B,EAAM,WAAaqX,IAAY,WAAa,OAAS,OACtD,CACH,EAEAe,GAA0Bmc,GAAyB,CACjD,SAAU,CAACE,GAA0Bra,GAAmB,SAAS,CAAC,CACpE,CAAC,EAED,MAAeya,GAAA,CACb,UAAW,WACX,WAAYN,EACd,2GCtCMO,GAAiCjpB,GAAsB,CAC3Dua,GAAuBva,EAAM,UAAW,CACtC,MAAO,CACL,kBAAmB,CACjB,GAAI,gCACJ,KAAM,OACN,KAAM,MACR,EACA,eAAgB,aAClB,EACD,CACH,EAEMwnB,GAAkBxnB,GAAsB,CACxC,OAAOA,EAAK,MAAM,UAAa,YAEnCua,GAAuBva,EAAM,UAAW,CACtC,MAAO,CACL,WAAanJ,GAAyB,CAChCA,EAAM,MAAQ,UAChBA,EAAM,eAAe,EAErBmJ,EAAK,MAAM,SAAS,KAClB,KACA,IAAI,YAAY,SAAU,CACxB,UAAWnJ,EAAM,OAClB,GAGP,CACF,EACD,CACH,EAEMqyB,GAAgBlpB,GAAsB,CAC1Cua,GAAuBva,EAAM,QAAS,CACpC,MAAO,CACL,GAAI,IACN,EACA,SAAU,CACR,CACE,GAAI,eACJ,KAAM,aACN,MAAO,CACL,MAAO,gCACP,KAAM,eACN,KAAM,MACR,CACF,EACA,eACF,EACD,CACH,EAEMmpB,GAAoBnpB,GAAsB,CACxC,MAAE,MAAA7L,CAAU,EAAA6L,EAEbA,EAAA,SAAS,CAAC,SAAS,CAAC,EAEnB,MAAA8c,EAAcsM,GAAqB,CACnCA,GACFj1B,EAAM,aAAe,+BACrBA,EAAM,YAAc,8BAEpBA,EAAM,WAAa,SACnBA,EAAM,aACJ,iNACFA,EAAM,WAAa,iBACnBA,EAAM,eAAiB,UAEvBA,EAAM,WACJ,oNACJ,EAGG6L,EAAA,GAAG,UAAW,IAAM,CAClBsc,GAAInoB,EAAO,SAAS,IACvBA,EAAM,QAAU,IAGlB2oB,EAAW3oB,EAAM,OAAO,EAExB6L,EAAK,GAAG,eAAgB,CAAC,CAAE,QAAAwL,KAAc,CACvCsR,EAAWtR,CAAO,EACnB,EACF,CACH,EAEAe,GAA0B8c,GAAiB,CACzC,SAAU,CACRJ,GACAzB,GACA2B,GACAD,GACA3a,GAAmB,CACrB,CACF,CAAC,EAED,MAAe+a,GAAA,CACb,UAAW,QACX,WAAYD,EACd,mNCrEeE,GAAA,CACb,aAAc,EAChB,kMAnBA,MAAMnX,EAASoX,GALDp1B,EAKkB,aAFnBuC,CAEqC,EAE5C8yB,EAActE,GAAe,cAAc,EAE3CuE,EAAQ,IAAM,QAClB1vB,EAAAyvB,EAAY,QAAZ,MAAAzvB,EAAmB,OAAM,EAGd1B,EAAA,CAAE,MAAAoxB,EAAO,EAEtB,MAAMC,EAAc,IAAM,CACxBvX,EAAO,MAAQ,GACTsX,GAAA,i9BCrBR,MAAMv1B,EAAQC,EAER,CAAE,WAAAkkB,CAAW,EAAI5J,GAASxW,EAAM/D,EAAO,SAAS,CAAC,iaCbjD2pB,GAAkBhQ,GAAY8b,GAAkB,CAAC,UAAU,CAAC,EAEnDC,GAAA,CACb,UAAW,SACX,WAAY/L,EACd,2GCHAvR,GAA0Bud,GAAoB,CAC5C,SAAU,CAACvb,GAAmB,SAAS,EAAG2O,EAAuB,CACnE,CAAC,EAID,MAAe6M,GAAA,CACb,UAAW,WACX,WAAYD,EACd,yQCJA,MAAM31B,EAAQC,EAWR2G,EAAU7C,EAAM/D,EAAO,SAAS,EAChC,CAAE,WAAAmkB,CAAA,EAAe5J,GAAS3T,CAAO,EAEjCivB,EAAW11B,EAAS,IAAMH,EAAM,QAAQ,UAAY,EAAE,EAE5DyF,GACE,IAAMzF,EAAM,QAAQ,SACnB61B,GAAa,CACZ,GAAI,CAACA,EAAU,CACL,aACN,iEAEF,MACF,CAEI,GAAA1R,EAAW,QAAU,OAAW,CAC5B,MAAA9d,EAAU,OAAO,KAAKwvB,CAAQ,EAChCxvB,EAAQ,SAAW,GACrBqjB,GAAS,IAAM,CACFvF,EAAA,MAAQ9d,EAAQ,CAAC,IAAM,OACnC,EAEH,MACF,CAKA,IAHoB8d,EAAW,MAAQ,OAAS,WAG7B0R,EAAU,OAK7B,MAAMlwB,GADiBwe,EAAW,MAAQ,QAAU,UACjB0R,EAAW,CAAC1R,EAAW,MAAQ,OAElEA,EAAW,MAAQxe,CACrB,EACA,CAAE,UAAW,EAAK,GAGd,MAAAmwB,EAAW31B,EAAS,IACpBH,EAAM,QAAQ,SAAiB,GAK5B,GAHiBmkB,EAAW,MAAQ,QAAU,UAGzB0R,EAAS,MACtC,EAEKE,EAAoBlgB,GAAa,CAGrC,GAFA5S,GAAU4S,CAAC,EAEPigB,EAAS,MAAO,OAEd,MAAAnwB,EAAWwe,EAAW,MAAQ,QAAU,OAE1Cxe,KAAYkwB,EAAS,QACvB1R,EAAW,MAAQxe,IAAa,OAClC,EAGIqwB,EAAc71B,EAAS,IAAOgkB,EAAW,MAAQ,OAAS,OAAQ,EAElE8R,EAAoB91B,EAAS,IAC7ByG,EAAQ,MAAM,OAAS,QAAgB,UAEpC,UACR,EAEKsvB,EAAkB/1B,EAAS,IAC3ByG,EAAQ,MAAM,OAAS,QAAgB,oBAEpC,mBACR,EAEKuvB,EAAuBh2B,EAAS,IAChCyG,EAAQ,MAAM,OAAS,QAClB,iDAEF,gDACR,EAEKxG,EAAWulB,qsBC9EXgE,GAAkBhQ,GAAYyc,GAAkB,CAAC,WAAY,MAAM,EAAG,CAC1E,SAAU,CAACnc,GAASG,IAAoB,CAC1C,CAAC,EAEc9Q,GAAA,CACb,UAAW,SACX,WAAYqgB,EACd,2GChBM0M,+tBAIAC,GAAmC,CACvC,KAAMC,EACR,EAEMC,GACJH,GACG,CACI,cAAOA,CAAY,EAAE,QACzBI,GAA+D,CAC9D,MAAMC,EAAiBD,EAAO,QAI1BE,GAAQD,CAAc,EACTA,EAAA,QAASE,GAAkB,CACjCN,GAAAM,EAAc,SAAS,EAAIA,EAAc,WACjD,EAEMN,GAAAI,EAAe,SAAS,EAAIA,EAAe,UAEtD,EAEJ,EAEMG,GACJC,IAIAN,GAAyBH,EAAY,EAEjCS,GACFN,GAAyBM,CAAsB,EAG1CC,GAA2BT,EAAM,GCxCpCU,GAAc,KACX,CACL,GAAI,CAIF,IAAK,IAAM/1B,EAAK,EAAE,KAAK,EAIvB,OAAQ,IAAMA,EAAK,EAAE,QAAQ,EAI7B,UAAW,IAAMA,EAAK,EAAE,YAAY,EAIpC,WAAY,IACVA,EAAK,EAAE,iDAAiD,EAI1D,OAAQ,IAAMA,EAAK,EAAE,QAAQ,EAI7B,QAAS,IAAMA,EAAK,EAAE,iBAAiB,EAIvC,OAAQ,IAAMA,EAAK,EAAE,SAAS,EAI9B,SAAU,IAAMA,EAAK,EAAE,WAAW,EAIlC,UAAW,IAAMA,EAAK,EAAE,UAAU,EAIlC,SAAU,IAAMA,EAAK,EAAE,WAAW,EAIlC,KAAM,IAAMA,EAAK,EAAE,MAAM,EAIzB,KAAM,IAAMA,EAAK,EAAE,UAAU,EAI7B,aAAc,IAAMA,EAAK,EAAE,gBAAgB,EAI3C,kBAAmB,IAAMA,EAAK,EAAE,qBAAqB,EAIrD,gBAAiB,IAAMA,EAAK,EAAE,mBAAmB,EAIjD,qBAAsB,IAAMA,EAAK,EAAE,wBAAwB,EAI3D,WAAY,IAAMA,EAAK,EAAE,aAAa,EAItC,WAAY,IAAMA,EAAK,EAAE,aAAa,EAKtC,cAAe,IAAMA,EAAK,EAAE,iCAAiC,EAI7D,MAAO,IAAMA,EAAK,EAAE,OAAO,EAI3B,KAAM,IAAMA,EAAK,EAAE,MAAM,CAC3B,EAEA,WAAY,CAKV,SAAS,CAAE,KAAAvB,GAAQ,CAEV,OAAAuB,EAAK,EAAE,wBAAyBvB,CAAI,CAE7C,EAMA,cAAe,CAEN,OAAAuB,EAAK,EAAE,iDAAiD,CAEjE,EAMA,WAAW,CAAE,KAAAwT,GAAQ,CACnB,OAAI,MAAM,QAAQA,CAAI,GAAKA,EAAK,OAEvBxT,EAAK,EACV,iDACAA,EAAK,KAAKwT,EAAK,CAAC,CAAC,GAKdxT,EAAK,EAAE,qDAAqD,CAErE,EAMA,OAAQ,CAEC,OAAAA,EAAK,EAAE,sDAAsD,CAEtE,EAMA,cAAe,CAEN,OAAAA,EAAK,EAAE,kDAAkD,CAElE,EAMA,gBAAiB,CAER,OAAAA,EAAK,EAAE,kDAAkD,CAElE,EAMA,uBAAwB,CAEf,OAAAA,EAAK,EAAE,6CAA6C,CAE7D,EAMA,uBAAwB,CAEf,OAAAA,EAAK,EAAE,4CAA4C,CAE5D,EAMA,iBAAkB,CAET,OAAAA,EAAK,EAAE,mCAAmC,CAEnD,EAMA,oBAAqB,CAEZ,OAAAA,EAAK,EAAE,8CAA8C,CAE9D,EAMA,oBAAqB,CAEZ,OAAAA,EAAK,EAAE,6CAA6C,CAE7D,EAMA,kBAAmB,CAEV,OAAAA,EAAK,EAAE,kCAAkC,CAElD,EAMA,QAAS,CAEA,OAAAA,EAAK,EAAE,8BAA8B,CAE9C,EAMA,WAAY,CAEH,OAAAA,EAAK,EAAE,gDAAgD,CAEhE,EAMA,WAAY,CAEH,OAAAA,EAAK,EAAE,gDAAgD,CAEhE,EAMA,YAAY,CAAE,KAAAwT,GAAQ,CACpB,OAAI,MAAM,QAAQA,CAAI,GAAKA,EAAK,OAEvBxT,EAAK,EACV,kDACAA,EAAK,KAAKwT,EAAK,CAAC,CAAC,GAKdxT,EAAK,EAAE,mDAAmD,CAEnE,EAMA,QAAQ,CAAE,KAAAwT,GAAQ,CACZ,UAAO,MAAMA,EAAK,CAAC,CAAC,GAAK,OAAO,MAAMA,EAAK,CAAC,CAAC,EAE/C,OAAOxT,EAAK,EACV,iEAKE,MAACwI,EAAOC,CAAM,EAAIF,GAAMiL,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,EAG9C,OAAOxT,EAAK,EACV,0DACAwI,EACAC,CAAA,CAGJ,EAMA,SAAU,CAGD,OAAAzI,EAAK,EAAE,sDAAsD,CAEtE,EAMA,YAAY,CAAE,KAAAwT,GAAQ,CACpB,OAAI,MAAM,QAAQA,CAAI,GAAKA,EAAK,OAEvBxT,EAAK,EACV,6DACAwT,EAAK,CAAC,GAKHxT,EAAK,EACV,gEAGJ,EAMA,aAAa,CAAE,KAAAwT,GAAQ,CAErB,OAAOxT,EAAK,EACV,0DACAA,EAAK,KAAKwT,EAAK,CAAC,CAAC,EACjBxT,EAAK,KAAKwT,EAAK,CAAC,CAAC,EAGrB,EAMA,MAAOxT,EAAK,EAAE,qCAAqC,EAMnD,UAAU,CAAE,KAAAwT,GAAQ,CAElB,OAAOxT,EAAK,EACV,oCACAgI,GAAmBwL,CAAI,EAG3B,EAMA,IAAK,CAEI,OAAAxT,EAAK,EAAE,8CAA8C,CAE9D,EAMA,OAAO,CAAE,KAAM,CAACwI,EAAQ,EAAGC,EAAS,GAAQ,GAAK,CAC/C,MAAMutB,EAAM,OAAOxtB,CAAK,GAAK,OAAOC,CAAM,EAAID,EAAQC,EAChDwtB,EAAM,OAAOxtB,CAAM,GAAK,OAAOD,CAAK,EAAIC,EAASD,EACnD,OAAAwtB,IAAQ,GAAKC,IAAQ,IAEhBj2B,EAAK,EAAE,iDAAiD,EAG7Dg2B,IAAQ,GAAKC,EAERj2B,EAAK,EACV,uDACAi2B,CAAA,EAIAD,GAAOC,IAAQ,IAEVj2B,EAAK,EAAE,kDAAmDg2B,CAAG,EAI/Dh2B,EAAK,EACV,wDACAg2B,EACAC,CAAA,CAGJ,EAMA,SAAU,CAED,OAAAj2B,EAAK,EAAE,8CAA8C,CAE9D,EAMA,IAAI,CAAE,KAAM,CAAE,MAAAiK,CAAM,EAAG,KAAAuJ,GAAQ,CACzB,aAAM,QAAQvJ,CAAK,EAEdjK,EAAK,EAAE,8CAA+CwT,EAAK,CAAC,CAAC,EAI/DxT,EAAK,EACV,mDACAwT,EAAK,CAAC,EAGV,EAMA,KAAK,CAAE,KAAAA,GAAQ,CACT,OAACA,EAAK,CAAC,EAMJxT,EAAK,EAAE,uCAAwCwT,EAAK,CAAC,CAAC,EAJpDxT,EAAK,EAAE,0BAA0B,CAM5C,EAMA,IAAI,CAAE,KAAM,CAAE,MAAAiK,CAAM,EAAG,KAAAuJ,GAAQ,CACzB,aAAM,QAAQvJ,CAAK,EAEdjK,EAAK,EAAE,8CAA+CwT,EAAK,CAAC,CAAC,EAI/DxT,EAAK,EACV,oDACAwT,EAAK,CAAC,EAGV,EAMA,IAAI,CAAE,KAAM,CAAE,MAAAvJ,IAAW,CAEvB,OAAOjK,EAAK,EACV,2CACAiK,CAAA,CAGJ,EAMA,QAAS,CAEA,OAAAjK,EAAK,EAAE,mCAAmC,CAEnD,EAMA,UAAW,CAEF,OAAAA,EAAK,EAAE,yBAAyB,CAEzC,EAMA,YAAa,CAAC,CAAE,KAAAvB,EAAM,KAAAmM,EAAM,KAAMsrB,KAAiB,CACjD,MAAMC,EAASD,EACZ,IAAKz3B,GAAS,CACP,MAAA23B,EAAgBxrB,EAAK,GAAGnM,CAAI,EAClC,OAAI23B,EACKC,GAAkBD,CAAa,EAEjC,EACR,GACA,OAAQ33B,GAAS,CAAC,CAACA,CAAI,EAC1B03B,EAAO,QAAQ13B,CAAsC,EAI/C,MAAA63B,EAAsBt2B,EAAK,EAAE,IAAI,EACvC,OAAOA,EAAK,EACV,kBACAm2B,EACG,IAAKve,GAA+BA,EAAM,KAAK,EAC/C,KAAK,IAAI0e,CAAmB,GAAG,EAGtC,EAMA,YAAY,CAAE,KAAA9iB,GAAQ,CAEpB,OAAOxT,EAAK,EACV,sCACAgI,GAAmBwL,CAAI,EAG3B,EAMA,KAAM,CAEG,OAAAxT,EAAK,EAAE,6BAA6B,CAE7C,EAKA,YAAa,IAAMA,EAAK,EAAE,+BAA+B,CAC3D,ICpiBEu2B,2DAGAC,GAAyB,IAAqB,CAClD,MAAMC,EAA6B,GAE5B,qBAAOF,EAAW,EAAE,QACxBf,GAA2D,CAC1D,MAAMkB,EAAiBlB,EAAO,QACzBkB,GAAA,MAAAA,EAAgB,WACfD,EAAAC,EAAe,QAAQ,EAAIA,EAAe,KAClD,GAGKC,GAA8B,CACnC,GAAGC,GACH,GAAGH,CAAA,CAC8B,CACrC,EAIaI,GAA4B,IAAiC,CACxE,MAAMC,EAAgD,GAE/C,qBAAOP,EAAW,EAAE,QACxBf,GAA2D,CAC1D,MAAMkB,EAAiBlB,EAAO,QACzBkB,GAAA,MAAAA,EAAgB,WACFI,EAAAJ,EAAe,QAAQ,EAAIA,EAAe,cAC/D,GAGKI,CACT,EC1CMC,GAAmB,IAAqB,CACtC,MAAAC,EAAeC,GAASlB,GAAA,CAAa,EAE3C,cAAO,OAAOiB,EAAa,WAAYH,GAA2B,GAE3DK,GAAwB,CAAE,aAAAF,CAAA,CAAc,CACjD,ECbMG,EAA2C,CAC/C,MAAO,yCACT,EAEMt4B,GAA4B,CAChC,OAAQ,CACN,QAAS,8BACT,MAAO,+BACP,KAAM,UACN,SAAU,YACV,QAAS,SACX,EACA,KAAMs4B,EACN,MAAOA,EACP,IAAKA,EACL,OAAQA,EACR,OAAQA,EACR,IAAKA,EACL,KAAMA,EACN,KAAMA,EACN,SAAUA,EACV,SAAUA,EACV,SAAUA,EACV,SAAU,CACR,QAAS,0CACT,MAAO,OACP,MACE,wEACF,UACE,yEACF,cAAe,UACjB,EACA,MAAO,CACL,QAAS,0CACT,MAAO,OACP,MACE,wEACF,UACE,yEACF,cAAe,UACjB,EACA,OAAQ,CACN,MAAO,kCACT,EACA,OAAQ,CACN,MAAO,kCACT,CACF,EClCMC,qBAGAC,GACJD,GACG,CACH,MAAM3R,EAAmC,GAElC,qBAAO2R,CAAiB,EAAE,QAC9B5B,GAAuD,CACtD,MAAM8B,EAAY9B,EAAO,QAEzB/P,EAAW,KAAK6R,CAAS,CAC3B,GAGK7R,CACT,EACM8R,GAAwB,CAACC,EAAwC,KAAO,CAC5E,MAAMC,EAAwC,CAC5C,GAAGJ,GAAyBD,EAAiB,GAG3CI,EAAgB,aACFC,EAAA,KAAKD,EAAgB,WAAW,EAG9CA,EAAgB,YACFC,EAAA,KACd,GAAGJ,GAAyBG,EAAgB,UAAU,GAI1D,IAAI34B,EAAU64B,GAEE,OAAAD,EAAA,QAASH,GAAc,CAC/B,MAAAK,EAAaL,EAAUz4B,CAAO,EAC1BA,EAAA+mB,GAAO/mB,EAAS84B,CAAU,EACrC,EAEMC,GAAgB/4B,CAAO,CAChC,ECjCag5B,GACXC,GACoB,CACpB,MAAMC,EAAgC,GAE/B,qBAAOD,CAAO,EAAE,QACpBtC,GAAkD,CACjD,MAAMwC,EAASxC,EAAO,QACtBuC,EAAQ,KAAKC,CAAM,CACrB,GAGKD,CACT,EAEME,GAAsD,8CAAA9pB,GAAA,2CAAAC,GAAA,kCAAAC,GAAA,yCAAAC,EAAA,GAItDypB,GAAUF,GAAeI,EAAa,EAEtCC,GACJ,8UAEWC,GAA2B,CACtCx0B,EACAy0B,EAA6E,GAC7EC,EAAsC,CAAC,EACvCC,EAAyC,GACzCC,EAAgD,KAC7C,CACH,MAAM5R,EAAcD,KAEb,OACL,QAAS,CACPkP,GAAkBwC,CAAuB,EACzCI,GACAzB,GAAiB,EACjBP,GAAuB,EACvBiC,GACE,OACA,CACE,kBACEF,EAA0B,mBAAqBL,GACjD,eAAgBK,EAA0B,gBAAkBL,GAC5D,GAAGvR,CACL,EACA,OACA,MACF,EACA,GAAGoR,GACH,GAAGM,CACL,EACA,OAAQ,eACR,OAAQ,CACN,QAASd,GAAsBe,CAAgB,EAC/C,GAAG30B,CACL,EACA,MAAO,CACL,cAAe,SACjB,EAEJ,EAEA,SAAwB+0B,GACtB11B,EACA21B,EACAP,EAA6E,CAC7E,EAAAC,EAAsC,GACtCC,EAAyC,GACzCC,EAAgD,GAChD,CACIv1B,EAAA,IACF41B,GACAT,GACEQ,EACAP,EACAC,EACAC,EACAC,CACF,EAEJ,CCvGa,MAAAM,GAASlwB,GAAgBA,EAAI,QAAQ,UAAW,GAAG,EAAE,KAAK,EAC1DmwB,GAAgB,CAC3BC,EACApB,IACG,CACG,MAAAqB,EAAgB,CAAE,GAAGrB,GAEpB,sBAAQoB,GAAmB,CAAE,GAAE,QAAQ,CAAC,CAAC7tB,EAAM+tB,CAAa,IAAM,CACjE/tB,KAAQ8tB,EAGZA,EAAc9tB,CAAI,EAAI2tB,GACpB,GAAGI,GAAiB,EAAE,IAAItB,EAAWzsB,CAAI,GAAK,EAAE,IAHlD8tB,EAAc9tB,CAAI,EAAI+tB,CAKxB,CACD,EAEMD,CACT,ECpBME,GAAWC,GAAgC,CACzC,MAAE,KAAAC,CAAS,WACb,IAAAC,EAAS,SAAS,eAAe,qBAAqB,EAGrDA,IACMA,EAAA,SAAS,gBAAgB,6BAA8B,KAAK,EACrEA,EAAO,MAAM,SAAW,WACxBA,EAAO,MAAM,MAAQ,IACrBA,EAAO,MAAM,OAAS,IACtBA,EAAO,GAAK,sBACLA,EAAA,aAAa,QAAS,4BAA4B,EAClDA,EAAA,aAAa,aAAc,8BAA8B,GAE5D,MAAAC,EAAOH,EAAQ,IAAKI,GAASA,EAAK,CAAC,CAAC,EAAE,KAAK;AAAA,CAAI,EACrDF,EAAO,UAAYC,EACdF,EAAA,aAAaC,EAAQD,EAAK,SAAS,CAC1C,EAEaI,GAAkBL,GAAgC,CACzD,SAAS,aAAe,UAC1B,SAAS,iBAAiB,mBAAoB,IAAMD,GAAQC,CAAO,CAAC,EAEpED,GAAQC,CAAO,CAEnB,ECzBA,IAAIM,GAAyB,CAC3B,gBAAiB,CACf,KAAM,GACN,OAAQ,EACV,CACF,EAEa,MAAAC,GACX76B,GACG,CACsB46B,GAAA56B,CAC3B,EAEa86B,GAA4B,IAAMF,GCV/C,IAAIG,GAA4C,CAC9C,KAAM,sBACN,cAAe,gCACf,MAAO,4BACP,KAAM,2BACN,QAAS,8BACT,QAAS,8BACT,KAAM,0BACR,EAEa,MAAAC,GACXh7B,GACG,CACmB+6B,GAAA/6B,CACxB,EAEai7B,GAAyB,IAAMF,GCV5C,IAAIG,GAAsB,GACtBC,GAAiB,GACjBC,GAAiB,GACjBC,GAA+C,KAC/CC,GAAwC,KAExCC,GAAsB,EAEtBC,OACE,QAEN,MAAMC,GAAiB,IAAM,CAExB,0BAAiB,kBAAkB,EACnC,QAAS1vB,GAASA,GAAA,YAAAA,EAAM,QAAQ,EAClBovB,GAAA,EACnB,EAEMO,GAAoB,CAAC1mB,EAAyB2mB,IAAyB,CACvEH,GAAqB,IAAIxmB,CAAO,IAEbumB,IAAA,EACvBC,GAAqB,IAAIxmB,EAAS,CAChC,UAAA2mB,CAAA,CACD,EACH,EAEMC,GAAwB5mB,GAA4B,CACnDwmB,GAAqB,IAAIxmB,CAAO,IACdumB,IAAA,EACvBC,GAAqB,OAAOxmB,CAAO,EACrC,EAEM6mB,GAAqBC,GAClBN,GAAqB,IAAIM,CAAG,GAAK,KAGpCC,GAAgB,CACpB,CAAE,IAAAC,EAAK,KAAAC,CAAA,EACP3iB,IACG,CACG,MAAA4iB,EAAc,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAU,IAAI,SAAS,EAEnCA,EAAY,MAAM,IAAMF,EACxBE,EAAY,MAAM,KAAOD,EACbC,EAAA,aAAa,cAAe,MAAM,EAClCA,EAAA,aAAa,OAAQ,SAAS,EAGpC,MAAAC,EAAiB,OAAO,WAAa,EAC/BD,EAAA,MAAM,SAAW,GAAGC,CAAc,KAExC,MAAAC,EAAqB,SAAS,cAAc,GAAG,EACrD,OAAAA,EAAmB,YAAc9iB,EAErB4iB,EAAA,sBAAsB,aAAcE,CAAkB,EAE3DF,CACT,EAEMG,GAAyB,CAACC,EAAiBC,IAA8B,OAC7E,MAAMC,IAAQz2B,EAAAL,GAAA,EAAiB,aAAjB,YAAAK,EAA6B,OAAQ,MAEnD,IAAIk2B,EAAO,GAEX,GAAIO,EAAO,CAEH,MAAAC,EAAYH,EAAUC,EAAiB,MAC7CN,EAAO,GAAGQ,CAAS,KAEfA,EAAY,IAEPR,EAAA,MACT,MAGAA,EAAO,GAAGK,CAAO,KAEbA,EAAUC,EAAiB,MAAQ,OAAO,aAE5CN,EAAO,GAAG,OAAO,WAAaM,EAAiB,KAAK,MAIjD,OAAAN,CACT,EAEMS,GAAa,CACjBC,EACArjB,EACA,CACE,MAAA1W,CACF,IAGG,CACH,GAAI,CAACA,EAAO,OAEN,MAAAs5B,EAAcH,GAAc,CAAE,IAAK,MAAO,KAAM,OAASziB,CAAO,EAC7D,cAAK,YAAY4iB,CAAW,EAE/B,MAAAK,EAAmBL,EAAY,wBAEjC,IAAAF,EACAC,EACJ,GAAKr5B,EACL,IAAI,YAAaA,EAAO,CACtB,KAAM,CAAE,QAAA05B,EAAS,QAAAM,CAAA,EAAYh6B,EAAM,QAAQ,CAAC,EAE5Co5B,EAAM,GAAGY,CAAO,KACTX,EAAAI,GAAuBC,EAASC,CAAgB,MAClD,CACC,MAAE,QAAAD,EAAS,QAAAM,CAAY,EAAAh6B,EACvBi6B,EAAoB,GAGE,OAAO,YAAcD,EAFvB,GAKAL,EAAiB,OACzCP,EAAM,GAAGY,EAAUC,EAAoBN,EAAiB,MAAM,KAExDP,EAAA,GAAGY,EAAUC,CAAiB,KAE/BZ,EAAAI,GAAuBC,EAASC,CAAgB,CACzD,CAEAL,EAAY,MAAM,IAAMF,EACxBE,EAAY,MAAM,KAAOD,EAEhB,cAAK,sBAAsB,YAAaC,CAAW,EAE5D,WAAW,IAAM,CACHA,EAAA,UAAU,IAAI,iBAAiB,GAC1C,GAAG,EACR,EAEMY,GAAsB9nB,GAAyB,CAC7C,MAAE,cAAA+nB,CAAkB,EAAA/nB,EAE1B,OAAK+nB,EAEEA,EAAc,YAAcA,EAAc,YAFtB/nB,EAAQ,YAAcA,EAAQ,WAG3D,EAEMgoB,GAAoB,CAAChoB,EAAsBzO,IAAwB,CACvE,MAAM02B,EAAgB,CACpB,YAAa,GACb,IAAK,IAGP,OAAI12B,GAAA,MAAAA,EAAS,WACG02B,EAAA,YAAcH,GAAmB9nB,CAAO,GAGjDioB,CACT,EAEMC,GACJloB,IAC0BA,GAAA,YAAAA,EAAS,QAAQ,oBAAqB,KAE5DmoB,GAAyBv6B,GAAmC,CAG5D,GAFAu4B,IAA+BM,KAE/B,CAAC74B,EAAM,OAAQ,OAGb,MAAAw6B,EAAoBF,GAAkBt6B,EAAM,MAAwB,EAC1E,GAAI,CAACw6B,EAAmB,OAGlB,MAAA9jB,EAAU8jB,EAAkB,aAAa,YAAY,EAKvD,GAJA,CAAC9jB,GAID8jB,EAAkB,QAAQ,aAAa,EAAG,OAE7BhC,GAAA,GAEX,MAAAiC,EAAgBxB,GAAkBuB,CAAiB,EAEnD,CAAE,YAAAE,GAAgBN,GACtBI,EACAC,GAAA,YAAAA,EAAe,WAIb,CAACC,IAAeD,GAAA,MAAAA,EAAe,UAAU,YAEzC/B,iBAA6BA,EAAc,EAE/CA,GAAiB,WAAW,IAAM,CAChCoB,GAAWU,EAAmB9jB,EAAmB,CAC/C,MAAO+hB,EAAA,CACR,EACgBF,GAAA,IAChB,GAAG,EACR,EAEMoC,GAAe36B,GAAmC,CAClDw4B,KAA+BC,GAAAz4B,EACrC,EAEM46B,GAA2B,IAAM,CACjClC,iBAA6BA,EAAc,EAC3CH,IAA+BM,IACrC,EAEMgC,GAAoB,IAAM,CACvB,wBAAiB,SAAUD,GAA0B,CAC1D,QAAS,GACT,QAAS,GACV,EAEM,wBAAiB,aAAcL,GAAuB,CAC3D,QAAS,GACV,EACM,wBAAiB,YAAaI,GAAa,CAChD,QAAS,GACV,EACM,wBAAiB,cAAeC,GAA0B,CAC/D,QAAS,GACV,EAEM,wBAAiB,YAAaL,GAAuB,CAC1D,QAAS,GACV,EACM,wBAAiB,YAAaI,GAAa,CAChD,QAAS,GACV,EACM,wBAAiB,WAAYC,GAA0B,CAC5D,QAAS,GACV,CACH,EAEME,GAAuB,IAAM,CAC1B,2BAAoB,aAAcP,EAAqB,EACvD,2BAAoB,YAAaI,EAAW,EAC5C,2BAAoB,cAAeC,EAAwB,EAE3D,2BAAoB,YAAaL,EAAqB,EACtD,2BAAoB,YAAaI,EAAW,EAC5C,2BAAoB,WAAYC,EAAwB,EAExD,2BAAoB,SAAUA,EAAwB,CAC/D,EAEMG,GAA8B,IAAM,CACnBD,KACHD,IACpB,EAEeG,GAAA,CACb,KAAM,UACN,UAAW,CACT,QAAS,CAAC5oB,EAAyB,CAAE,MAAOsE,EAAS,UAAAqiB,KAAgB,CAC9DriB,IAEGtE,EAAA,aAAa,aAAcsE,CAAO,EAGtCzZ,GAAA,IAAiB,WAEbmV,EAAA,aAAa,eAAgB,MAAM,EAE3C0mB,GAAkB1mB,EAAS2mB,CAAS,EAE/BT,KACeuC,KACIvC,GAAA,GAEf,wBAAiB,SAAUyC,EAA2B,IAEjE,EACA,QAAQ3oB,EAAyB,CAAE,MAAOsE,GAAW,CACnD,GAAI,CAACA,EAAS,CACRtE,EAAQ,aAAa,YAAY,GACnCA,EAAQ,gBAAgB,YAAY,EACtC,MACF,CAIIA,EAAQ,aAAa,YAAY,IAAMsE,GACjCtE,EAAA,aAAa,aAAcsE,CAAO,CAC9C,EACA,cAActE,EAAS,CAErB4mB,GAAqB5mB,CAAO,EAGxBumB,KAAwB,IAGxBJ,IAA+BM,KAE/BP,IAA0CwC,KAExBxC,GAAA,GACtBM,OAA2B,QACLD,GAAA,EAEf,2BAAoB,SAAUoC,EAA2B,EAClE,CACF,CACF,EC1TaE,GAA8B15B,GAAa,CAChD,MAAE,KAAAvE,EAAM,UAAAk+B,CAAc,EAAAF,GACxBz5B,EAAA,UAAUvE,EAAMk+B,CAAS,CAC/B,ECAaC,GAAmB,CAC9B/jB,EACAzT,IAEkByT,EAAO,MACtBjO,GAAS,EAAE,OAAOA,GAAS,UAAY,aAAcA,EAAA,EAIjD,CACL,CACE,SAAU,GACV,UAAW,YACX,MAAOxF,EACP,SAAUyT,CACZ,GAPqBA,ECRb,IAAAgkB,QACVA,EAAA,YAAc,QACdA,EAAA,mBAAqB,WAFXA,QAAA,IAcZ,MAAMrZ,GAA+B,CACnC,MAAO,GAAG,WAAW,EACrB,QAAS,GAAG,0BAA0B,EACtC,mBAAoB,CAAC,EACrB,WAAYsZ,GAAiB,QAC/B,EAEaC,GAAe19B,EAAkB,CAAE,GAAGmkB,GAAgB,EAEtDwZ,GAAwCC,GAAO,CAGrDA,EAAG,MAAM,WACCF,GAAA,MAAQ,CAAE,GAAGvZ,IAE9B,EAEa0Z,GAAqB,CAAC93B,EAAiC,MAClE23B,GAAa,MAAQ,CACnB,GAAGvZ,GACH,GAAGpe,CAAA,EAGE,CACL,KAAMA,EAAQ,MAAQ,QACtB,MAAO,CACL,SAAU,GACZ,IAIS+3B,GAAkB,CAC7BC,EACAh4B,EAAiC,KAC9Bg4B,EAAO,QAAQF,GAAmB93B,CAAO,CAAC,EChDzCi4B,GAAiBpG,GAAS,CAC9B,MAAO,GACP,eAAgB,EAClB,CAAC,EAEKqG,GAAep+B,EAAS,IAAM,CAE5B,MAAAq+B,EADc19B,IACY,OAAO,aAEnC,IAACw9B,GAAe,MAAc,OAAAE,EAE5B,MAAAC,EAAmBH,GAAe,eACpCr9B,EAAK,EAAEq9B,GAAe,KAAK,EAC3BA,GAAe,MAEZ,SAAGE,CAAW,MAAMC,CAAgB,EAC7C,CAAC,EAEKC,GAAsB,IAAM,CAChCj5B,GACE84B,GACA,CAACI,EAAUC,IAAa,CAClBC,GAASF,CAAQ,GAAKA,IAAaC,GAAY,WACjD,SAAS,MAAQD,EACrB,EACA,CAAE,UAAW,EAAK,EAEtB,EAEA,SAAwBG,IAAe,CAK9B,OACL,oBAAAJ,GACA,aANmB,CAACK,EAAeC,EAAY,KAAS,CACxD,OAAO,OAAOV,GAAgB,CAAE,MAAAS,EAAO,eAAgBC,EAAW,GAMlE,aAAAT,EAAA,CAEJ,CCzCA,MAAMU,GAAyCf,GAAgC,CACzE,GAAAA,EAAG,KAAK,MAAO,CACX,MAAE,aAAAgB,GAAiBJ,KACZI,EAAAhB,EAAG,KAAK,KAAK,CAC5B,CACF,ECIMiB,GAAqB,CACzBjB,EACAnmB,IACG,CACG,MAAE,cAAA5Q,GAAkBF,KAEtBi3B,EAAG,OAAS,SAAWA,EAAG,KAAK,cAAgB,CAAC/2B,GAC9CxE,GAAA,MACF,oBAAoBu7B,EAAG,IAAI,oDAGzBA,EAAG,WAAa,IACbnmB,EAAA,CAAE,KAAM,SAAU,MAAO,CAAE,SAAUmmB,EAAG,QAAS,EAAG,EAEpDnmB,EAAA,CAAE,KAAM,SAAU,GAEhBmmB,EAAG,KAAK,wBAA0B/2B,GAEvCxE,GAAA,MACF,oBAAoBu7B,EAAG,IAAI,kDAE7BnmB,EAAK,GAAG,IAEJpV,GAAA,MACF,oBAAoBu7B,EAAG,IAAI,yCAExBnmB,IAET,EAEMqnB,GAAuC,CAC3ClB,EACAmB,EACAtnB,IACG,CACC,IAAAunB,EACJ,MAAMz+B,EAAcC,IAEhBD,EAAY,QACJy+B,EAAA75B,GACR,IAAM5E,EAAY,OAClB,IAAM,CACJs+B,GAAmBjB,EAAInmB,CAAI,CAC7B,IAGEunB,IACMA,IACEA,EAAA,QAEZH,GAAmBjB,EAAInmB,CAAI,EAE/B,ECpDMwnB,GAAmC,CACvCrB,EACAmB,EACAtnB,IACG,CAGH,GAAI,CAACmmB,EAAG,KAAK,oBAAsB,CAACj3B,KAAyB,cAAe,CAC1EtE,GAAI,MAAM,oBAAoBu7B,EAAG,IAAI,uBAAuB,EACvDnmB,IACL,MACF,CAMA,GAAI,CAHkBzS,KAAkB,cACtC44B,EAAG,KAAK,oBAEU,CAClBv7B,GAAI,MAAM,oBAAoBu7B,EAAG,IAAI,4BAA4B,EAEjEF,GAAa,MAAQ,CACnB,MAAO,GAAG,WAAW,EACrB,QAAS,GACP,+DACF,EACA,WAAYD,GAAiB,UAC7B,MAAOG,EAAG,UAGPnmB,EAAA,CACH,KAAM,QACN,MAAO,CACL,SAAU,GACZ,EACA,QAAS,GACV,EACD,MACF,CAEApV,GAAI,MAAM,oBAAoBu7B,EAAG,IAAI,0BAA0B,EAC1DnmB,GACP,EClDaynB,GAAN,MAAMA,EAAO,CAKlB,YAAoBnB,EAAgB,CAAhB,YAAAA,EAJZ,mBAAgB/9B,EAAmB,IAAI,EAKxC,mBAAc,MAAQk/B,GAAO,oBAAoB,EAEtDnB,EAAO,UAAU,IAAM,CAChB,mBAAc,MAAQmB,GAAO,oBAAoB,EACvD,CACH,CAEA,OAAe,qBAAqC,CAC9C,UAAO,OAAW,IAAoB,YACpC,MAAE,MAAAC,CAAM,EAAI,OAAO,QAEzB,OAAIA,GAAS,OAAOA,EAAM,MAAS,SAC1BA,EAAM,KAGR,IACT,CAEO,WAAWC,EAA+B,CACxC,YAAK,cAAc,OAASA,CACrC,CAEA,IAAW,YAAa,CACf,YAAK,cAAc,QAAU,IACtC,CAEA,MAAa,KAAKx7B,EAAwBy7B,EAAmB,GAAI,CACzD,MAAAC,EAAW,KAAK,cAAc,MAChC,OAAAA,GAAY,CAACD,EAAO,KAAME,GAAUD,EAAS,SAASC,CAAK,CAAC,EACvD,KAAK,OAAO,OAEd,KAAK,OAAO,KAAK37B,CAAI,CAC9B,CACF,EAvCas7B,GAGJ,WAAa,OAAO,QAAQ,EAH9B,IAAMM,GAANN,GA+CA,MAAMO,GAAY,IAChBC,GAAOF,GAAO,UAAU,EAGpBG,GAAmB,CAACh8B,EAAUo6B,IAAmB,CACtD,MAAA6B,EAAS,IAAIJ,GAAOzB,CAAM,EAC5Bp6B,EAAA,QAAQ67B,GAAO,WAAYI,CAAM,EACjCj8B,EAAA,OAAO,iBAAiB,QAAUi8B,CACxC,EClCA,SAAwBC,GACtBl8B,EACAm8B,EACAC,EACAC,EACAC,EACQ,CACR,MAAMlC,EAAiBmC,GAAa,CAClC,QAASC,GAAiBF,CAAW,EACrC,OAAAH,CAAA,CACD,EAEKM,EAAoBrC,EAAO,cAAc,IAAM,CAC7C,MAAE,eAAAsC,GAAmB7/B,IACZ6/B,IACGD,GAAA,CACnB,EAED,OAAArC,EAAO,WAAWe,EAAmB,EACrCf,EAAO,WAAWkB,EAAe,EAEjCc,GAAA,MAAAA,EAAc,QAASO,GAAUvC,EAAO,WAAWuC,CAAK,GAExDvC,EAAO,UAAUY,EAAgB,EACjCZ,EAAO,UAAUJ,EAAe,EAEhCqC,GAAA,MAAAA,EAAa,QAASM,GAAUvC,EAAO,UAAUuC,CAAK,GAEtD38B,EAAI,IAAIo6B,CAAM,EAEd4B,GAAiBh8B,EAAKo6B,CAAM,EAErBA,CACT,0YClDA,MAAMwC,EAA2B9F,KAE3B,CAAE,cAAA+F,EAAe,mBAAAC,CAAmB,EAAIC,GAAiB,EAEzDC,EAAgBC,GACbL,EAAyBK,EAAa,IAAI,EAG7CC,EAAgBD,GAA+B,CAC7C,MAAE,SAAAE,CAAa,EAAAF,EACrBH,EAAmBG,EAAa,EAAE,EAC9BE,GAAmBA,GAAA,stBCdb,IAAAC,QACVA,EAAA,KAAO,yBACPA,EAAA,QAAU,4BAFAA,QAAA,IAKZ,MAAMC,GAAc,CAClBvC,EACAwC,IAEO,IAAI,YAAexC,EAAO,CAAE,OAAAwC,CAAQ,GAGhCC,GAAgB,MAC3B9hC,EACAuM,EACAw1B,EACAzhC,EAAQ,KACL,CACG,MAAA0C,EAAQ4+B,GAAY,yBAAa,CACrC,KAAA5hC,EACA,GAAAuM,EACA,IAAAw1B,EACA,MAAOvJ,GAASl4B,CAAK,EACtB,EAED,OAAO,cAAc0C,CAAK,EAE1B,MAAMgnB,GAAS,CACjB,EAGagY,GAAmB,MAAOhiC,EAAcuM,IAAgB,CACnE,MAAMvJ,EAAQ4+B,GAAY,4BAAgB,CAAE,KAAA5hC,EAAM,GAAAuM,EAAI,EAEtD,OAAO,cAAcvJ,CAAK,EAE1B,MAAMgnB,GAAS,CACjB,2ECjCA,MAAM1pB,EAAQC,EAWR0hC,EAAaC,GAAgC,EAAE,EAErD,OAAAhN,GACE,OACAyM,GAAO,KACP,CAAC,CAAE,OAAAE,CAAA,IAA6C,CAC1CA,EAAO,OAASvhC,EAAM,OAE1B2hC,EAAW,MAAQ,CACjB,GAAGA,EAAW,MACd,CACE,GAAGJ,EACH,IAAKxqB,GAAQwqB,EAAO,GAAG,CACzB,GAEJ,GAGF3M,GACE,OACAyM,GAAO,QACP,CAAC,CAAE,OAAAE,CAAA,IAAgD,CAC7C,GAAAA,EAAO,OAASvhC,EAAM,KAEtB,KAACuhC,EAAO,GAAI,CACdI,EAAW,MAAQ,GAEnB,MACF,CAEWA,EAAA,MAAQA,EAAW,MAAM,OACjCt4B,GAAS,EAAEA,EAAK,OAASk4B,EAAO,MAAQl4B,EAAK,KAAOk4B,EAAO,KAEhE,4ZC7CIM,GAA2B,IAAM,CACrC,MAAMx8B,EAAUC,KACVw8B,EAAiB76B,KACjBpG,EAAcC,IAEdu9B,EAAS0D,KACTr+B,EAAQs+B,KAECF,EAAA,WAAW,MAAOG,EAAUxC,IAAU,CAC/CA,EAAM,eAAiB,CAACp6B,EAAQ,GAClCA,EAAQ,aAAa,EAAE,KAAK,MAAO68B,GAAc,CAC3CA,GACF,MAAMJ,EAAe,6BAGnBp+B,EAAM,OAAS,SACjB26B,EAAO,QAAQ,GAAG,CACpB,CACD,EACQ,CAACoB,EAAM,eAAiBp6B,EAAQ,IAAM,CAACo6B,EAAM,iBACtD,MAAMqC,EAAe,sBACrBzD,EAAO,QAAQ,QAAQ,EACzB,CACD,EAED54B,GACE,IAAM5E,EAAY,OAAO,iBACzB,MAAO8E,EAAUC,IAAa,CAE1B,CAACA,GACDD,GACAm8B,EAAe,eACf,CAACz8B,EAAQ,cAAc,CAAC,oBAAqB,aAAa,CAAC,IAE3D,MAAMy8B,EAAe,SACrBzD,EAAO,QAAQ,QAAQ,EAE3B,EAEJ,EC3CM8D,GAAmB,IAChBnC,GAAO,OAAO,IAAI,eAAe,CAAC,ECA9BoC,GAAmCn8B;AAAA;AAAA;AAAA;AAAA,MAKhC,SAAAo8B,GAAiCh8B,EAA6Z,GAAI,CAChd,OAAOuK,GAAgHwxB,GAAkC,GAAI/7B,CAAO,CACtK,CCPO,MAAMi8B,GAAyBr8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOtB,SAAAs8B,GAA8Bl8B,EAAga,GAAI,CAChd,OAAOm8B,GAAiHF,GAAwB,GAAIj8B,CAAO,CAC7J,CCQA,IAAIo8B,GAIAC,GACAC,GASJ,MAAMC,GAAyB,CAC7BC,EAAoD,KACjD,CACG,MAAAC,EAAS,CAAC1pB,EAAiBgoB,IAA0B,CACzDJ,GAAA,EAAmB,OAAO,CACxB,GAAI,kBACJ,QAAA5nB,EACA,KAAM2pB,GAAkB,KACxB,WAAY,GACZ,SAAA3B,CAAA,CACD,GAGH/b,GAAU,IAAM,CACd,GAAIod,GAAe,OAGnB,MAAMO,EAAsB,GAAK,IAE3BC,EAAkCC,GACtC,kCACAF,EAAoB,SAAS,GAGzB38B,EAAU6xB,GAAS,CACvB,aAAc,SAAS+K,EAAgC,MAAO,EAAE,EACjE,EAEDx9B,GAAMw9B,EAAiC,IAAM,CAC3C58B,EAAQ,aAAe,SAAS48B,EAAgC,MAAO,EAAE,EAC1E,EAEDR,GAAgB,IAAIxxB,GAAaoxB,GAAiCh8B,CAAO,CAAC,EAE1E,MAAM88B,EAAsB,GAC1B,4EAGYV,GAAA,cAAeW,GAAsB,CAC5CA,GAAA,MAAAA,EAAa,yBAAyB,SACtCV,KACHA,GAAmBU,GAAA,YAAAA,EAAa,yBAChCt7B,GAAU,IAAI,8CAA8C,IAE1Ds7B,GAAA,YAAAA,EAAa,4BAA6BV,IACrCI,EAAAK,EAAqBN,EAAmB,aAAa,EAC9D,CACD,EAEDF,GAA6B,IAAIU,GAC/Bd,GAA8B,GAELI,GAAA,SAAU/6B,GAAW,SACxC,MAAAuE,GAAOrG,GAAAD,EAAA+B,EAAO,OAAP,YAAA/B,EAAa,iBAAb,YAAAC,EAA6B,KAC1C,IAAIsT,EAAU+pB,EAEd,GAAI,CAACh3B,EAAM,CACTrE,GAAU,IAAI,0CAA0C,EACxD,MACF,CACA,OAAQqE,EAAM,CACZ,KAAKm3B,GAAuB,cAChBlqB,EAAA,GACR,4EAEF,MACF,KAAKkqB,GAAuB,YAC5B,KAAKA,GAAuB,cAE1B,KAGJ,CACAR,EAAO1pB,EAAS,IAAM,OAAO,SAAS,OAAQ,GAC/C,EACF,CACH,EC3GamqB,GAAuBt9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQpB,SAAAu9B,GAA4Bn9B,EAAoZ,GAAI,CAClc,OAAOm8B,GAA6Ge,GAAsB,GAAIl9B,CAAO,CACvJ,CCDA,IAAIo9B,GAKJ,MAAMC,GAAkB,IAAM,CACtB,MAAAZ,EAAU1pB,GAAoB,CAClC4nB,GAAA,EAAmB,OAAO,CACxB,QAAA5nB,EACA,KAAM2pB,GAAkB,KACxB,WAAY,GACb,GAGH1d,GAAU,IAAM,CACVoe,KAEWA,GAAA,IAAIJ,GAAoBG,GAAA,CAA6B,EACvDC,GAAA,SAAU77B,GAAW,OAC1B,MAAAwR,GAAUvT,EAAA+B,EAAO,OAAP,YAAA/B,EAAa,aAC7B,GAAI,EAACuT,GAAA,MAAAA,EAAS,QAAS,EAACA,GAAA,MAAAA,EAAS,MAAM,CACrCtR,GAAU,IAAI,wCAAwC,EACtD,MACF,CACAg7B,EAAO,GAAG1pB,EAAQ,KAAK,KAAKA,EAAQ,IAAI,EAAE,EAC3C,GACF,CACH,ECxCauqB,GAAgC19B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["appName","initializeAppName","name","useAppName","alertClasses","initializeAlertClasses","classes","getAlertClasses","props","__props","icon","computed","classMap","dismissed","ref","badgeClasses","initializeBadgeClasses","getBadgeClasses","sizeClasses","paddingClasses","borderRadiusClass","application","useApplicationStore","outputFormat","outputAbsoluteDate","i18n","usePrivateIcon","animationClassMap","sizeMap","iconClass","className","animation","finalSize","useRawHTMLIcon","renameIcons","icons","iconsMap","svg","iconName","iconsSymbols","iconsContent","iconsAliasesMap","provideIcons","globImports","aliases","htmlIcon","useIcons","emit","__emit","onClick","event","log","fontSizeClassMap","iconClassMap","linkClasses","initializeLinkClasses","getLinkClasses","stopEvent","stopOptions","preventDefault","propagation","immediatePropagation","target","linkClass","base","href","route","navigate","isActive","isExactActive","useLink","toRef","isInternalLink","app","path","__expose","initializeGlobalComponents","CommonAlert","CommonIcon","CommonLink","CommonDateTime","CommonLabel","CommonBadge","applicationConfigPlugin","config","storeToRefs","unref","initializeGlobalProperties","abstracts","initializeAbstracts","abstractsArgs","getAbstracts","initializeStoreSubscriptions","session","useSessionStore","locale","useLocaleStore","watch","triggerWebSocketReconnect","newValue","oldValue","_a","_b","_c","ErrorsFragmentDoc","gql","LoginDocument","SessionFragmentDoc","useLoginMutation","options","VueApolloComposable.useMutation","LogoutDocument","useLogoutMutation","usedStores","pinia","createPinia","context","initializeStore","resetAndDisposeStores","requiresAuth","usedStore","useAuthenticationStore","defineStore","authenticated","useLocalStorage","externalLogout","fingerprint","useFingerprint","clearAuthentication","clearApolloClientStore","refreshAfterAuthentication","logout","result","MutationHandler","testFlags","setAuthenticatedSessionId","newSessionId","login","password","rememberMe","twoFactorAuthentication","recoveryCode","loginInput","_d","_e","_g","_f","FieldResolver","object","objectAttribute","resolvedAttributes","FieldResolverActive","__vite_glob_0_0$3","commaSeparatedList","items","conjunction","oxford","item","index","oxfordList","order","first","second","camelize","str","_","x","capitalize","toClassName","lowerCase","upperCase","phoneify","phone","getInitials","firstname","lastname","email","mobile","replaceTags","template","objects","encodeLink","key","levels","dataRef","level","value","FieldResolverAutocompletionCustomerOrganization","__vite_glob_0_1$2","FieldResolverAutocompletionCustomer","__vite_glob_0_2$2","getNodeId","formId","selector","getNodeByName","getNode","setErrors","node","errors","UserError","isGraphQLId","id","convertToGraphQLId","type","ensureGraphqlId","parseGraphqlId","relation","idString","getIdFromGraphQLId","graphqlId","FieldResolverAutocompletionExternalDataSource","entityObject","templateRenderContext","EnumObjectManagerObjects","__vite_glob_0_3$2","FieldResolverAutocompletion","__vite_glob_0_4$1","FieldResolverBoolean","__vite_glob_0_5$1","FieldResolverDate","__vite_glob_0_6$1","FieldResolverDateTime","__vite_glob_0_7$1","FieldResolverUserGroupPermissions","__vite_glob_0_8$1","FieldResolverInput","valiadtion","__vite_glob_0_9$1","FieldResolverInteger","__vite_glob_0_10$1","FieldResolverSelect","attributes","__vite_glob_0_14","FieldResolverMultiselect","__vite_glob_0_11$1","FieldResolverTreeselect","mapTreeSelectOptions","treeSelectOptions","children","treeSelectOption","__vite_glob_0_17","FieldResolverMultiTreeselect","__vite_glob_0_12$1","FieldResolverRichtext","__vite_glob_0_13","FieldResolverTag","__vite_glob_0_15","FieldResolverTextarea","__vite_glob_0_16","FieldResolverUserPermissions","__vite_glob_0_18","fieldResolverModules","__vite_glob_0_0","__vite_glob_0_1","__vite_glob_0_2","__vite_glob_0_3","__vite_glob_0_4","__vite_glob_0_5","__vite_glob_0_6","__vite_glob_0_7","__vite_glob_0_8","__vite_glob_0_9","__vite_glob_0_10","__vite_glob_0_11","__vite_glob_0_12","fieldResolverClasses","resolverModule","getFieldResolver","attribute","transformResolvedFieldForScreen","screen","resolvedField","getFieldFromAttribute","ObjectManagerFrontendAttributesDocument","useObjectManagerFrontendAttributesQuery","variables","VueApolloComposable.useQuery","useObjectAttributes","objectAttributes","useObjectAttributesStore","handler","QueryHandler","attributesRaw","attributesLoading","staticObjectAttributesByEntity","screens","attributesLookup","lookup","formFieldAttributesLookup","toRefs","initializeDefaultObjectAttributes","useObjectAttributesScreen","getScreenAttributes","screenAttributes","attributeName","staticObjectAttributes","useOrganizationObjectAttributesStore","viewScreenAttributes","useUserObjectAttributesStore","staticObjectAttributesEntityModules","entitiesStaticObjectAttributes","entityItem","objectAttributesObjectLookup","data","objectAttributesObject","FOCUSABLE_QUERY","isElementVisible","el","isNegativeTabIndex","tabIndex","getFocusableElements","container","getFirstFocusableElement","truthy","edgesToArray","edge","normalizeEdges","array","mergeArray","a","b","waitForAnimationFrame","resolve","textCleanup","ascii","textToHtml","text","linkifyStr","textTruncate","length","debouncedQuery","fn","defaultValue","delay","timeout","lastResolve","lastResult","args","reject","waitForElement","query","tries","element","markup","source","cleanupMarkup","formGroupClasses","initializeFormGroupClasses","getFormGroupClasses","formClasses","initializeFormClasses","getFormClasses","FormValidationVisibility","FormHandlerExecution","useTrapTab","noAutoActivation","trapFocus","e","focusableElements","firstFocusableElement","lastFocusableElement","active","activateTabTrap","deactivateTabTrap","onKeyStroke","dummyElement","popoverClasses","initializePopoverClasses","getPopoverClasses","arrow","createSection","block","initializeFieldLinkClasses","getFieldLinkClasses","link","markRaw","FormFieldLink","addBlurEvent","originalBlurHandler","formLocaleDir","hideField","payload","propsToTranslate","attrsToTranslate","translateAttrs","attrs","translatedAttrs","attr","createMessage","translateWrapperProps","prop","next","propName","isEmpty","defaultProps","defaulfFieldDefinition","initializeFieldDefinition","definition","additionalDefinitionOptions","addDefaultProps","addDefaultFeatures","addArrow","localDefinition","blockSchema","wrapper","label","inner","prefix","suffix","outer","help","messages","message","additionalProps","defaulfFieldDefinitionProps","additionalFeatures","totalCreated","isComponent","obj","createInput","schemaOrComponent","customDefinition","schema","cmpName","cloneAny","addLink","toggleLink","isLink","formUpdaterTrigger","defaultTrigger","defaultTriggerDelay","useValue","currentValue","hasValue","valueContainer","isCurrentValue","clearValue","asyncSettling","useSelectOptions","dialog","appendedOptions","availableOptions","hasStatusProperty","option","translatedOptions","noOptionsLabelTranslation","variant","heading","optionValueLookup","keyBy","sortedOptions","sorting","aLabelOrValue","bLabelOrValue","getSelectedOption","selectedValue","getSelectedOptionIcon","getSelectedOptionValue","getSelectedOptionLabel","getSelectedOptionStatus","getSelectedOptionParents","getSelectedOptionFullPath","parentValue","valueBuilder","selectOption","selectedValues","cloneDeep","optionIndex","getDialogFocusTargets","optionsOnly","containerElement","targetElements","targetElement","handleValuesForNonExistingOrDisabledOptions","rejectNonExistentValues","localRejectNonExistentValues","availableValues","selectValue","selectValueOption","currentValueOption","historicalOptions","rootNode","emptyOption","accumulator","useFormBlock","cb","receipt","onUnmounted","useFocusWhenTyping","filter","unrefElement","content","filtered","processKeys","isNext","direction","isPrevious","getNextElement","elements","currentIndex","nextElement","previousElement","useTraverseOptions","useAvatarIndicator","entity","personal","live","access","currentDate","useReactiveNow","isOutOfOffice","user","toValue","today","useDateFormat","startDate","endDate","isInactive","isWithoutAccess","isLiveUserIdle","isLiveUserEditing","isLiveUserDesktop","EnumTaskbarApp","isLiveUserMobile","indicatorIcon","indicatorLabel","indicatorIsIdle","userAvatarClasses","initializeUserAvatarClasses","getUserAvatarClasses","SYSTEM_USER_INTERNAL_ID","SYSTEM_USER_ID","avatarClasses","initializeAvatarClasses","getAvatarClasses","iconSizes","iconSize","avatarLabel","logo","initials","backgroundColors","fullName","fullname","colorClass","internalId","sources","image","isVip","isMuted","indicator","indicatorClass","indicatorSizes","indicatorSize","organizationAvatarClasses","initializeOrganizationAvatarClasses","getOrganizationAvatarClasses","inactive","dateFieldProps","useDateTime","timePicker","valueFormat","localeStore","position","EnumTextDirection","minDate","displayFormat","is24","overlay","dateRange","AutocompleteSearchObjectAttributeExternalDataSourceDocument","useFieldExternalDataSourceWrapper","additionalQueryParams","searchTemplateRenderContext","additionaltemplateRenderContext","OrganizationAttributesFragmentDoc","ObjectAttributeValuesFragmentDoc","AutocompleteSearchOrganizationDocument","getAutoCompleteOption","organization","useFormFieldOrganizationInitialOptionBuilder","initialEntityObject","belongsToObject","AutocompleteSearchRecipientDocument","gqlQuery","print","setAutoCompleteBehavior","useFieldSecurity","localValue","securityMethods","EnumSecurityStateType","previewMethod","isCurrentSecurityOption","isSecurityOptionDisabled","defaultOptions","method","filterOptions","newOptions","translateArticleSecurity","security","typeLabels","removeValuesForNonExistingOrDisabledOptions","handleNewInputValue","getPreselectValue","useSelectPreselect","preselectOption","onMounted","fileClasses","initializeFileClasses","getFileClasses","toggleClasses","initializeToggleClasses","getToggleClasses","editorClasses","initializeFieldEditorClasses","getFieldEditorClasses","editorProps","initializeFieldEditorProps","getFieldEditorProps","bindEmit","FormSchemaExtendType","extendSchemaDefinition","sectionKey","schemaExtension","extendType","cloneDefinition","originalSchema","extensions","sectionSchemaExtension","currentExtension","extend","currentChildren","localExtensions","extendDataAttribues","parsedRules","ruleName","rule","extendLabel","addRequired","validation","removeRequired","addRequiredToValidationProp","removeRequiredFromValidationProp","addRequiredValidation","createCustomIcons","customIcons","customIconAliases","reversedCustomIconAliases","invert","alias","addVariantDataAttribute","setVariantDefault","has","buttonFieldDefinitionList","buttonDefinition","submitDefinition","buttonInputs","buttonType","addCheckedDataAttribute","handleAlternativeBorder","setClasses","alternativeBorder","checkboxDefinition","index$a","defaultEmptyValueString","availableCharactersCount","maxlength","FieldEditor","defineAsyncComponent","__vitePreload","editorRerenderKey","onLoad","queueAction","preContext","signature","nextTick","fieldDefinition","FieldEditorWrapper","index$9","allowCompressMime","getQuality","y","compressImage","imageSrc","img","promise","imgX","imgY","quality","scale","mimeType","imageWidth","imageHeight","factor","canvas","qualityValue","base64","blobToBase64","blob","reader","dataURLToBlob","dataURL","byteString","mimeString","ia","c","convertFileList","filesList","promises","file","canDownloadFile","allowedImageTypes","allowedImageTypesString","canPreviewFile","convertFilesToAttachmentInput","attachments","files","validateFileSizeLimit","allowedSize","validateFileSizes","allowedFiles","failedFiles","allowedFile","getAcceptableFileTypesString","humanizeFileSize","size","useFileValidation","fileList","failedFile","errorMsg","validateFileSize","filesSizeError","commitEventListener","validateForErrors","accept","notAllowedFiles","filesTypeError","multipleFilesError","currentVisualConfig","useSharedVisualConfig","setupCommonVisualConfig","useTouchDevice","isTouchDevice","mediaQuery","observeCallback","tryOnScopeDispose","filePreviewClasses","initializeFilePreviewClasses","getFilePreviewClasses","getIconByContentType","contentType","imageFailed","canPreview","previewUrl","canDownload","componentType","ariaLabel","onPreviewClick","filePreviewConfig","confirmationOptions","lastConfirmationUuid","triggerConfirmation","useConfirmation","waitForConfirmation","uniqueName","getUuid","imageViewerOptions","useImageViewer","viewFiles","indexMap","images","watchEffect","foundIndex","useFileUploadProcessing","fieldName","fieldNode","FormUploadCacheAddDocument","useFormUploadCacheAddMutation","FormUploadCacheRemoveDocument","useFormUploadCacheRemoveMutation","contextReactive","uploadFiles","contentFiles","loadingFiles","uploadFilesWithContent","addFileMutation","addFileLoading","removeFileMutation","removeFileLoading","canInteract","setFileUploadProcessing","removeFileUploadProcessing","fileInput","useTemplateRef","reset","input","loadFiles","uploads","uploadedFiles","previewableFile","filesContent","onFileChanged","$event","removeFile","fileId","elem","toBeDeletedFile","uploadTitle","reachedUploadLimit","bottomGradientOpacity","onFilesScroll","scrollMin","bottomMin","scrollTop","opacityPart","showImage","filesContainer","fieldFileConfig","showDivider","showGradient","acceptableFileTypes","dropZoneElement","isOverDropZone","useDropZone","FieldFileInput","index$8","index$7","groupDefinition","hiddenDefinition","index$6","addSubmitEvent","setPopulatedOnWebkitAutofill","autofillField","onAnimationstart","outerElement","inputFieldDefinitionList","inputTextDefinition","inputColorDefinition","inputEmailDefinition","inputCNumberDefinition","inputTelDefinition","inputTimeDefinition","inputUrlDefinition","inputFields","inputType","textInput","index$5","listDefinition","localPasswordDefinition","passwordDefinition","switchPasswordVisibility","origin","suffixIcon","useEventListener","index$4","addOptionCheckedDataAttribute","addIconLabel","handleButtonMode","buttons","radioDefinition","index$3","__default__","useVModel","filterInput","focus","clearFilter","FieldInputSearch","index$2","textareaDefinition","index$1","variants","disabled","updateLocalValue","ariaChecked","buttonSizeClasses","knobSizeClasses","knobTranslateClasses","FieldToggleInput","fieldModules","fields","formFieldDefinition","registerFieldFromModules","module","formFieldTypes","isArray","formFieldType","createFieldPlugin","appSpecificFieldModues","formKitCreateLibraryPlugin","loadLocales","min","max","inputNames","labels","dependentNode","createMessageName","translatedSeparator","ruleModules","createValidationPlugin","rules","validationRule","formKitCreateValidationPlugin","defaultRules","getValidationRuleMessages","ruleLocaleMessages","createI18nPlugin","staticLocale","reactive","formKitCreateI18nPlugin","defaultTextInput","extensionsModules","getExtensionsFromModules","extension","createTailwindClasses","additionalTheme","themeExtensions","commonClasses","newClasses","generateClasses","getFormPlugins","modules","plugins","plugin","pluginModules","checkIcon","buildFormKitPluginConfig","appSpecificFieldModules","appSpecificPlugins","appSpecificTheme","appSpecificDecoratorIcons","bindingsPlugin","createThemePlugin","initializeForm","appSpecificConfig","formPlugin","clean","extendClasses","originalClasses","mergedClasses","originalClass","loadSvg","symbols","body","svgDom","html","symb","injectSvgIcons","editorColorMenuClasses","initializeEditorColorMenuClasses","getEditorColorMenuClasses","notificationClasses","initializeNotificationClasses","getNotificationClasses","isListeningToEvents","isTooltipInDom","hasHoverOnNode","currentEvent","tooltipTimeout","tooltipRecordsCount","tooltipTargetRecords","removeTooltips","addModifierRecord","modifiers","removeModifierRecord","getModifierRecord","$el","createTooltip","top","left","tooltipNode","availableWidth","tooltipMessageNode","getLeftBasedOnLanguage","clientX","tooltipRectangle","isRTL","leftValue","addTooltip","targetNode","clientY","verticalThreshold","isContentTruncated","parentElement","evaluateModifiers","modifications","findTooltipTarget","handleTooltipAddEvent","tooltipTargetNode","tooltipRecord","isTruncated","handleEvent","handleTooltipRemoveEvent","addEventListeners","cleanupEventHandlers","cleanupAndAddEventListeners","tooltip","initializeTooltipDirective","directive","defineFormSchema","ErrorRouteType","ErrorStatusCodes","errorOptions","errorAfterGuard","to","redirectErrorRoute","redirectToError","router","viewMetaHeader","currentTitle","productName","transformedTitle","initializeMetaTitle","newTitle","oldTitle","isString","useMetaTitle","title","translate","headerTitleGuard","setViewTitle","checkAuthenticated","authenticationGuard","from","unwatch","permissionGuard","_Walker","state","backupRoute","ignore","previous","entry","Walker","useWalker","inject","initializeWalker","walker","initializeRouter","routes","beforeGuards","afterGuards","historyBase","createRouter","createWebHistory","removeInitializer","setInitialized","guard","notificationTypeClassMap","notifications","removeNotification","useNotifications","getClassName","notification","clickHandler","callback","Events","createEvent","detail","pushComponent","cmp","destroyComponent","components","shallowRef","useAuthenticationChanges","authentication","useRouter","useRoute","mutation","sessionId","useFormKitConfig","ApplicationBuildChecksumDocument","useApplicationBuildChecksumQuery","AppMaintenanceDocument","useAppMaintenanceSubscription","VueApolloComposable.useSubscription","checksumQuery","previousChecksum","appMaintenanceSubscription","useAppMaintenanceCheck","maintenanceOptions","notify","NotificationTypes","defaultPollInterval","applicationRebuildCheckInterval","useRouteQuery","notificationMessage","queryResult","SubscriptionHandler","EnumAppMaintenanceType","PushMessagesDocument","usePushMessagesSubscription","subscription","usePushMessages","OverviewAttributesFragmentDoc"],"ignoreList":[],"sources":["../../../../../app/frontend/shared/composables/useAppName.ts","../../../../../app/frontend/shared/initializer/initializeAlertClasses.ts","../../../../../app/frontend/shared/components/CommonAlert/CommonAlert.vue","../../../../../app/frontend/shared/initializer/initializeBadgeClasses.ts","../../../../../app/frontend/shared/components/CommonBadge/CommonBadge.vue","../../../../../app/frontend/shared/components/CommonDateTime/CommonDateTime.vue","../../../../../app/frontend/shared/components/CommonIcon/usePrivateIcon.ts","../../../../../app/frontend/shared/components/CommonIcon/useRawHTMLIcon.ts","../../../../../app/frontend/shared/components/CommonIcon/useIcons.ts","../../../../../app/frontend/shared/components/CommonIcon/CommonIcon.vue","../../../../../app/frontend/shared/components/CommonLabel/CommonLabel.vue","../../../../../app/frontend/shared/initializer/initializeLinkClasses.ts","../../../../../app/frontend/shared/utils/events.ts","../../../../../app/frontend/shared/components/CommonLink/CommonLink.vue","../../../../../app/frontend/shared/initializer/globalComponents.ts","../../../../../app/frontend/shared/plugins/applicationConfigPlugin.ts","../../../../../app/frontend/shared/initializer/globalProperties.ts","../../../../../app/frontend/shared/initializer/initializeAbstracts.ts","../../../../../app/frontend/shared/initializer/storeSubscriptions.ts","../../../../../app/frontend/shared/graphql/fragments/errors.api.ts","../../../../../app/frontend/shared/graphql/mutations/login.api.ts","../../../../../app/frontend/shared/graphql/mutations/logout.api.ts","../../../../../app/frontend/shared/stores/index.ts","../../../../../app/frontend/shared/stores/authentication.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/FieldResolver.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/active.ts","../../../../../app/frontend/shared/utils/formatter.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/autocompletion-customer-organization.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/autocompletion-customer.ts","../../../../../app/frontend/shared/components/Form/utils.ts","../../../../../app/frontend/shared/graphql/utils.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/autocompletion-external-data-source.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/autocompletion.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/boolean.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/date.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/datetime.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/group-permissions.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/input.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/integer.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/select.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/multiselect.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/treeselect.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/multitreeselect.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/richtext.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/tag.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/textarea.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/fields/user-permissions.ts","../../../../../app/frontend/shared/entities/object-attributes/form/resolver/getFieldResolver.ts","../../../../../app/frontend/shared/entities/object-attributes/form/getFieldFromAttribute.ts","../../../../../app/frontend/shared/entities/object-attributes/graphql/queries/objectManagerFrontendAttributes.api.ts","../../../../../app/frontend/shared/entities/object-attributes/composables/useObjectAttributes.ts","../../../../../app/frontend/shared/entities/object-attributes/composables/useObjectAttributesScreen.ts","../../../../../app/frontend/shared/entities/organization/stores/objectAttributes.ts","../../../../../app/frontend/shared/entities/ticket/stores/objectAttributes.ts","../../../../../app/frontend/shared/entities/user/stores/objectAttributes.ts","../../../../../app/frontend/shared/entities/object-attributes/stores/objectAttributes.ts","../../../../../app/frontend/shared/utils/getFocusableElements.ts","../../../../../app/frontend/shared/utils/helpers.ts","../../../../../app/frontend/shared/utils/markup.ts","../../../../../app/frontend/shared/components/Form/initializeFormGroupClasses.ts","../../../../../app/frontend/shared/components/Form/initializeFormClasses.ts","../../../../../app/frontend/shared/components/Form/types.ts","../../../../../app/frontend/shared/composables/useTrapTab.ts","../../../../../app/frontend/shared/initializer/initializePopover.ts","../../../../../app/frontend/shared/form/sections/arrow.ts","../../../../../app/frontend/shared/form/sections/block.ts","../../../../../app/frontend/shared/components/Form/initializeFieldLinkClasses.ts","../../../../../app/frontend/shared/components/Form/FormFieldLink.vue","../../../../../app/frontend/shared/form/sections/link.ts","../../../../../app/frontend/shared/form/features/addBlurEvent.ts","../../../../../app/frontend/shared/form/features/formLocaleDir.ts","../../../../../app/frontend/shared/form/features/hideField.ts","../../../../../app/frontend/shared/form/features/translateWrapperProps.ts","../../../../../app/frontend/shared/form/core/defaultFieldDefinition.ts","../../../../../app/frontend/shared/form/core/initializeFieldDefinition.ts","../../../../../app/frontend/shared/form/core/createInput.ts","../../../../../app/frontend/shared/form/features/addLink.ts","../../../../../app/frontend/shared/form/features/formUpdaterTrigger.ts","../../../../../app/frontend/shared/components/Form/composables/useValue.ts","../../../../../app/frontend/shared/composables/useSelectOptions.ts","../../../../../app/frontend/shared/form/useFormBlock.ts","../../../../../app/frontend/shared/composables/useFocusWhenTyping.ts","../../../../../app/frontend/shared/composables/useTraverseOptions.ts","../../../../../app/frontend/shared/composables/useAvatarIndicator.ts","../../../../../app/frontend/shared/initializer/initializeUserAvatarClasses.ts","../../../../../app/frontend/shared/utils/constants.ts","../../../../../app/frontend/shared/initializer/initializeAvatarClasses.ts","../../../../../app/frontend/shared/components/CommonAvatar/CommonAvatar.vue","../../../../../app/frontend/shared/components/CommonUserAvatar/assets/logo.svg","../../../../../app/frontend/shared/components/CommonUserAvatar/CommonUserAvatar.vue","../../../../../app/frontend/shared/initializer/initializeOrganizationAvatarClasses.ts","../../../../../app/frontend/shared/components/CommonOrganizationAvatar/CommonOrganizationAvatar.vue","../../../../../app/frontend/shared/components/Form/fields/FieldDate/types.ts","../../../../../app/frontend/shared/components/Form/fields/FieldDate/useDateTime.ts","../../../../../app/frontend/shared/form/validation/rules/date-range.ts","../../../../../app/frontend/shared/components/Form/fields/FieldExternalDataSource/graphql/queries/autocompleteSearchObjectAttributeExternalDataSource.api.ts","../../../../../app/frontend/shared/components/Form/fields/FieldExternalDataSource/useFieldExternalDataSourceWrapper.ts","../../../../../app/frontend/shared/entities/organization/graphql/fragments/organizationAttributes.api.ts","../../../../../app/frontend/shared/components/Form/fields/FieldOrganization/graphql/queries/autocompleteSearch/organization.api.ts","../../../../../app/frontend/shared/entities/organization/utils/getAutoCompleteOption.ts","../../../../../app/frontend/shared/components/Form/fields/FieldOrganization/useFieldOrganizationInitialOptionBuilder.ts","../../../../../app/frontend/shared/components/Form/fields/FieldRecipient/graphql/queries/autocompleteSearch/recipient.api.ts","../../../../../app/frontend/shared/components/Form/fields/FieldRecipient/features/setAutoCompleteBehavior.ts","../../../../../app/frontend/shared/components/Form/fields/FieldSecurity/useFieldSecurity.ts","../../../../../app/frontend/shared/entities/ticket-article/composables/translateArticleSecurity.ts","../../../../../app/frontend/shared/form/features/removeValuesForNonExistingOrDisabledOptions.ts","../../../../../app/frontend/shared/composables/useSelectPreselect.ts","../../../../../app/frontend/shared/components/Form/fields/FieldFile/initializeFileClasses.ts","../../../../../app/frontend/shared/components/Form/fields/FieldToggle/initializeToggleClasses.ts","../../../../../app/frontend/shared/components/Form/initializeFieldEditor.ts","../../../../../app/frontend/shared/form/plugins/global/bindEmit.ts","../../../../../app/frontend/shared/types/form.ts","../../../../../app/frontend/shared/form/utils/extendSchemaDefinition.ts","../../../../../app/frontend/shared/form/plugins/global/extendDataAttributes.ts","../../../../../app/frontend/shared/form/plugins/global/extendLabel.ts","../../../../../app/frontend/shared/form/plugins/global/requiredValidation.ts","../../../../../app/frontend/shared/form/core/createCustomIcons.ts","../../../../../app/frontend/shared/components/Form/fields/FieldButton/index.ts","../../../../../app/frontend/shared/components/Form/fields/FieldCheckbox/index.ts","../../../../../app/frontend/shared/form/features/defaultEmptyValueString.ts","../../../../../app/frontend/shared/components/Form/fields/FieldEditor/FieldEditorFooter.vue","../../../../../app/frontend/shared/components/Form/fields/FieldEditor/FieldEditorWrapper.vue","../../../../../app/frontend/shared/components/Form/fields/FieldEditor/index.ts","../../../../../app/frontend/shared/utils/files.ts","../../../../../app/frontend/shared/components/Form/fields/FieldFile/composable/useFileValidation.ts","../../../../../app/frontend/shared/components/Form/fields/FieldFile/features/filesSizeError.ts","../../../../../app/frontend/shared/components/Form/fields/FieldFile/features/filesTypeError.ts","../../../../../app/frontend/shared/components/Form/fields/FieldFile/features/multipleFilesError.ts","../../../../../app/frontend/shared/composables/useSharedVisualConfig.ts","../../../../../app/frontend/shared/composables/useTouchDevice.ts","../../../../../app/frontend/shared/initializer/initializeFilePreviewClasses.ts","../../../../../app/frontend/shared/utils/icons.ts","../../../../../app/frontend/shared/components/CommonFilePreview/CommonFilePreview.vue","../../../../../app/frontend/shared/composables/useConfirmation.ts","../../../../../app/frontend/shared/composables/useImageViewer.ts","../../../../../app/frontend/shared/components/Form/composables/useFileUploadProcessing.ts","../../../../../app/frontend/shared/components/Form/fields/FieldFile/graphql/mutations/uploadCache/add.api.ts","../../../../../app/frontend/shared/components/Form/fields/FieldFile/graphql/mutations/uploadCache/remove.api.ts","../../../../../app/frontend/shared/components/Form/fields/FieldFile/FieldFileInput.vue","../../../../../app/frontend/shared/components/Form/fields/FieldFile/index.ts","../../../../../app/frontend/shared/components/Form/fields/FieldGroup/index.ts","../../../../../app/frontend/shared/components/Form/fields/FieldHidden/index.ts","../../../../../app/frontend/shared/form/features/addSubmitEvent.ts","../../../../../app/frontend/shared/form/features/setPopulatedOnWebkitAutofill.ts","../../../../../app/frontend/shared/components/Form/fields/FieldInputs/index.ts","../../../../../app/frontend/shared/components/Form/fields/FieldList/index.ts","../../../../../app/frontend/shared/components/Form/fields/FieldPassword/index.ts","../../../../../app/frontend/shared/components/Form/fields/FieldRadio/index.ts","../../../../../app/frontend/shared/components/CommonInputSearch/CommonInputSearch.vue","../../../../../app/frontend/shared/components/Form/fields/FieldSearch/FieldSearch.vue","../../../../../app/frontend/shared/components/Form/fields/FieldSearch/index.ts","../../../../../app/frontend/shared/components/Form/fields/FieldTextarea/index.ts","../../../../../app/frontend/shared/components/Form/fields/FieldToggle/FieldToggleInput.vue","../../../../../app/frontend/shared/components/Form/fields/FieldToggle/index.ts","../../../../../app/frontend/shared/form/core/createFieldPlugin.ts","../../../../../app/frontend/shared/form/i18n/locales.ts","../../../../../app/frontend/shared/form/core/createValidationPlugin.ts","../../../../../app/frontend/shared/form/core/createI18nPlugin.ts","../../../../../app/frontend/shared/form/theme/global/index.ts","../../../../../app/frontend/shared/form/core/createTailwindClasses.ts","../../../../../app/frontend/shared/form/index.ts","../../../../../app/frontend/shared/form/plugins/utils.ts","../../../../../app/frontend/shared/components/CommonIcon/injectIcons.ts","../../../../../app/frontend/shared/components/Form/fields/FieldEditor/FieldEditorColorMenu/initializeEditorColorMenu.ts","../../../../../app/frontend/shared/initializer/initializeNotificationClasses.ts","../../../../../app/frontend/shared/plugins/directives/tooltip/index.ts","../../../../../app/frontend/shared/initializer/initializeDirectives.ts","../../../../../app/frontend/shared/form/defineFormSchema.ts","../../../../../app/frontend/shared/router/error.ts","../../../../../app/frontend/shared/composables/useMetaTitle.ts","../../../../../app/frontend/shared/router/guards/after/headerTitle.ts","../../../../../app/frontend/shared/router/guards/before/authentication.ts","../../../../../app/frontend/shared/router/guards/before/permission.ts","../../../../../app/frontend/shared/router/walker.ts","../../../../../app/frontend/shared/router/index.ts","../../../../../app/frontend/shared/components/CommonNotifications/CommonNotifications.vue","../../../../../app/frontend/shared/components/DynamicInitializer/manage.ts","../../../../../app/frontend/shared/components/DynamicInitializer/DynamicInitializer.vue","../../../../../app/frontend/shared/composables/authentication/useAuthenticationUpdates.ts","../../../../../app/frontend/shared/composables/form/useFormKitConfig.ts","../../../../../app/frontend/shared/graphql/queries/applicationBuildChecksum.api.ts","../../../../../app/frontend/shared/graphql/subscriptions/appMaintenance.api.ts","../../../../../app/frontend/shared/composables/useAppMaintenanceCheck.ts","../../../../../app/frontend/shared/graphql/subscriptions/pushMessages.api.ts","../../../../../app/frontend/shared/composables/usePushMessages.ts","../../../../../app/frontend/shared/entities/ticket/graphql/fragments/overviewAttributes.api.ts"],"sourcesContent":["// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AppName } from '#shared/types/app.ts'\n\nlet appName: AppName\n\nexport const initializeAppName = (name: AppName) => {\n  appName = name\n}\n\nexport const useAppName = () => appName\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AlertClassMap } from '#shared/components/CommonAlert/types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet alertClasses: AlertClassMap = {\n  base: 'common-alert',\n  danger: 'common-alert-danger',\n  info: 'common-alert-info',\n  success: 'common-alert-success',\n  warning: 'common-alert-warning',\n}\n\nexport const initializeAlertClasses = (classes: AlertClassMap) => {\n  alertClasses = classes\n}\n\nexport const getAlertClasses = () => alertClasses\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\n\nimport { getAlertClasses } from '#shared/initializer/initializeAlertClasses.ts'\n\nimport type { AlertVariant } from './types.ts'\n\nexport interface Props {\n  variant?: AlertVariant\n  dismissible?: boolean\n  id?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  variant: 'info',\n  dismissible: false,\n})\n\nconst icon = computed(() => {\n  switch (props.variant) {\n    case 'success':\n      return 'common-alert-success'\n    case 'warning':\n      return 'common-alert-warning'\n    case 'danger':\n      return 'common-alert-danger'\n    case 'info':\n    default:\n      return 'common-alert-info'\n  }\n})\n\nconst classMap = getAlertClasses()\n\nconst dismissed = ref(false)\n</script>\n\n<template>\n  <div\n    v-if=\"!dismissed\"\n    :id=\"props.id\"\n    class=\"gap-1.5 rounded-lg border-transparent p-2\"\n    :class=\"[classMap.base, classMap[props.variant]]\"\n    role=\"alert\"\n    data-test-id=\"common-alert\"\n  >\n    <CommonIcon\n      class=\"mx-auto mt-0.5 md:mx-0\"\n      :name=\"icon\"\n      size=\"tiny\"\n      decorative\n    />\n\n    <slot />\n\n    <div v-if=\"props.dismissible\">\n      <CommonIcon\n        v-if=\"props.dismissible\"\n        size=\"tiny\"\n        decorative\n        name=\"common-alert-dismiss\"\n        class=\"mx-auto cursor-pointer md:mx-0\"\n        @click=\"dismissed = true\"\n      />\n    </div>\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { BadgeClassMap } from '#shared/components/CommonBadge/types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet badgeClasses: BadgeClassMap = {\n  base: 'common-badge',\n  danger: 'common-badge-danger',\n  info: 'common-badge-info',\n  success: 'common-badge-success',\n  warning: 'common-badge-warning',\n  neutral: 'common-badge-neutral',\n  tertiary: 'common-badge-tertiary',\n  custom: 'common-badge-custom',\n}\n\nexport const initializeBadgeClasses = (classes: BadgeClassMap) => {\n  badgeClasses = classes\n}\n\nexport const getBadgeClasses = () => badgeClasses\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { getBadgeClasses } from '#shared/initializer/initializeBadgeClasses.ts'\n\nimport type { BadgeSize, BadgeVariant } from './types.ts'\n\nexport interface Props {\n  variant?: BadgeVariant\n  size?: BadgeSize\n  tag?: 'span' | 'div'\n  rounded?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  variant: 'info',\n  size: 'small',\n  tag: 'span',\n})\n\nconst sizeClasses = computed(() => {\n  switch (props.size) {\n    case 'large':\n      return 'text-base'\n    case 'medium':\n      return 'text-sm'\n    case 'xs':\n      return 'text-[10px]'\n    case 'small':\n    default:\n      return 'text-xs'\n  }\n})\n\nconst paddingClasses = computed(() => {\n  switch (props.size) {\n    case 'large':\n      return ['px-4', 'py-2.5']\n    case 'medium':\n      return ['px-3', 'py-2']\n    case 'xs':\n      return ['px-1.5', 'py-0.5']\n    case 'small':\n    default:\n      return ['px-2', 'py-1']\n  }\n})\n\nconst borderRadiusClass = computed(() => {\n  if (props.rounded) return 'rounded-full'\n\n  switch (props.size) {\n    case 'large':\n      return 'rounded-xl'\n    case 'medium':\n      return 'rounded-lg'\n    case 'small':\n    default:\n      return 'rounded-md'\n  }\n})\n\nconst classMap = getBadgeClasses()\n</script>\n\n<template>\n  <component\n    :is=\"tag\"\n    class=\"cursor-default\"\n    :class=\"[\n      classMap.base,\n      classMap[props.variant],\n      ...paddingClasses,\n      sizeClasses,\n      borderRadiusClass,\n    ]\"\n    data-test-id=\"common-badge\"\n  >\n    <slot />\n  </component>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { i18n } from '#shared/i18n.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport type { DateTimeType, DateTimeAbsoluteFormat } from './types.ts'\nimport type { ComputedRef } from 'vue'\n\nexport interface Props {\n  dateTime: string\n  type?: DateTimeType\n  absoluteFormat?: DateTimeAbsoluteFormat\n}\n\ntype OutputType = Exclude<DateTimeType, 'configured'>\n\nconst props = withDefaults(defineProps<Props>(), {\n  type: 'configured',\n  absoluteFormat: 'datetime',\n})\n\nconst application = useApplicationStore()\n\nconst outputFormat: ComputedRef<OutputType> = computed(() => {\n  if (props.type !== 'configured') return props.type\n\n  return application.config.pretty_date_format === 'relative'\n    ? 'relative'\n    : 'absolute'\n})\n\nconst outputAbsoluteDate = computed(() => {\n  if (props.absoluteFormat === 'date') return i18n.date(props.dateTime)\n  return i18n.dateTime(props.dateTime)\n})\n</script>\n\n<template>\n  <time v-if=\"outputFormat === 'absolute'\" data-test-id=\"date-time-absolute\">\n    <slot name=\"prefix\" />\n    {{ outputAbsoluteDate }}\n  </time>\n  <time\n    v-else\n    v-tooltip=\"i18n.dateTime(dateTime)\"\n    :datetime=\"dateTime\"\n    data-test-id=\"date-time-relative\"\n  >\n    <slot name=\"prefix\" />\n    {{ i18n.relativeDateTime(dateTime) }}\n  </time>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed } from 'vue'\n\nimport type { Props } from './CommonIcon.vue'\nimport type { Animations, Sizes } from './types.ts'\n\nexport const usePrivateIcon = (\n  props: Omit<Props, 'size'> & { size: Sizes },\n) => {\n  const animationClassMap: Record<Animations, string> = {\n    pulse: 'animate-pulse',\n    spin: 'animate-spin',\n    ping: 'animate-ping',\n    bounce: 'animate-bounce',\n  }\n\n  const sizeMap: Record<Sizes, number> = {\n    xs: 12,\n    tiny: 16,\n    small: 20,\n    base: 24,\n    medium: 32,\n    large: 48,\n    xl: 96,\n  }\n\n  const iconClass = computed(() => {\n    let className = `icon-${props.name}`\n    // by default, always spin the spinner\n    const animation = props.animation || (props.name === 'spinner' && 'spin')\n    if (animation) {\n      className += ` ${animationClassMap[animation]}`\n    }\n    return className\n  })\n\n  const finalSize = computed(() => {\n    if (props.fixedSize) return props.fixedSize\n\n    return {\n      width: sizeMap[props.size],\n      height: sizeMap[props.size],\n    }\n  })\n\n  return {\n    iconClass,\n    finalSize,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { i18n } from '#shared/i18n.ts'\n\nimport { usePrivateIcon } from './usePrivateIcon.ts'\n\nimport type { Props } from './CommonIcon.vue'\n\nexport const useRawHTMLIcon = (props: Props & { class?: string }) => {\n  const { iconClass, finalSize } = usePrivateIcon({ size: 'medium', ...props })\n  const html = String.raw\n\n  return html`\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon ${iconClass.value} ${props.class || ''} fill-current\"\n      width=\"${finalSize.value.width}\"\n      height=\"${finalSize.value.height}\"\n      ${!props.decorative &&\n      `aria-label=${i18n.t(props.label || props.name) || ''}`}\n      ${(props.decorative && 'aria-hidden=\"true\"') || ''}\n    >\n      <use href=\"#icon-${props.name}\" />\n    </svg>\n  `\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useRawHTMLIcon } from './useRawHTMLIcon.ts'\n\nconst renameIcons = (icons: [string, { default: string }][]) => {\n  const iconsMap: [string, string][] = []\n  for (const [icon, svg] of icons) {\n    const name = icon.match(/assets\\/([\\w-/]+)\\.svg$/)\n    if (!name) throw new Error(`Icon name not found for ${icon}`)\n    const iconName = name[1].replace(/\\//, '-')\n    iconsMap.push([iconName, svg.default])\n  }\n  return iconsMap\n}\n\nlet iconsSymbols: [string, string][] = []\nlet iconsContent: Record<string, string> = {}\nlet iconsAliasesMap: Record<string, string> = {}\n\nexport const provideIcons = (\n  globImports: [string, { default: string }][],\n  aliases: Record<string, string>,\n) => {\n  iconsSymbols = renameIcons(globImports)\n  iconsContent = {}\n  iconsAliasesMap = aliases\n  for (const [name] of iconsSymbols) {\n    const htmlIcon = useRawHTMLIcon({ name, size: 'base' })\n    iconsContent[name] = htmlIcon\n  }\n  return {\n    icons: iconsContent,\n    symbols: iconsSymbols,\n  }\n}\n\nexport const useIcons = () => {\n  return {\n    icons: iconsContent,\n    symbols: iconsSymbols,\n    aliases: iconsAliasesMap,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport log from '#shared/utils/log.ts'\n\nimport { useIcons } from './useIcons.ts'\nimport { usePrivateIcon } from './usePrivateIcon.ts'\n\nimport type { Animations, Sizes } from './types.ts'\n\nexport interface Props {\n  size?: Sizes\n  fixedSize?: { width: number; height: number }\n  name: string\n  label?: string\n  decorative?: boolean\n  animation?: Animations\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  size: 'medium',\n  decorative: false,\n})\n\nconst emit = defineEmits<{\n  click: [MouseEvent]\n}>()\n\nconst onClick = (event: MouseEvent) => {\n  emit('click', event)\n}\n\nconst { iconClass, finalSize } = usePrivateIcon(props)\nconst { icons, aliases } = useIcons()\n\nconst iconName = computed(() => {\n  const alias = aliases[props.name]\n  const name = alias || props.name\n  if (!icons[name]) {\n    log.warn(`Icon ${name} not found`)\n  }\n  return name\n})\n</script>\n\n<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"icon fill-current\"\n    :class=\"iconClass\"\n    :width=\"finalSize.width\"\n    :height=\"finalSize.height\"\n    :aria-label=\"decorative ? undefined : $t(label || iconName)\"\n    :aria-hidden=\"decorative\"\n    @click=\"onClick\"\n  >\n    <use :href=\"`#icon-${iconName}`\" />\n  </svg>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport type { Sizes } from './types.ts'\n\nexport interface Props {\n  size?: Sizes\n  iconColor?: string\n  prefixIcon?: string\n  suffixIcon?: string\n  tag?: 'span' | 'p' | 'h2' | 'h3' | 'div'\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  size: 'medium',\n  tag: 'span',\n})\n\nconst fontSizeClassMap = {\n  xs: 'text-[10px] leading-[10px]',\n  small: 'text-xs leading-snug',\n  medium: 'text-sm leading-snug',\n  large: 'text-base leading-snug',\n  xl: 'text-xl leading-snug',\n}\n\nconst iconClassMap = {\n  xs: 'xs',\n  small: 'xs',\n  medium: 'tiny',\n  large: 'small',\n  xl: 'base',\n} as const\n</script>\n\n<template>\n  <component\n    :is=\"tag\"\n    class=\"inline-flex items-center justify-start gap-1 text-gray-100 dark:text-neutral-400\"\n    :class=\"fontSizeClassMap[props.size]\"\n    data-test-id=\"common-label\"\n  >\n    <CommonIcon\n      v-if=\"prefixIcon\"\n      class=\"shrink-0\"\n      :size=\"iconClassMap[props.size]\"\n      :name=\"prefixIcon\"\n      :class=\"iconColor\"\n      decorative\n    />\n\n    <slot />\n\n    <CommonIcon\n      v-if=\"suffixIcon\"\n      class=\"shrink-0\"\n      :size=\"iconClassMap[props.size]\"\n      :name=\"suffixIcon\"\n      :class=\"iconColor\"\n      decorative\n    />\n  </component>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { LinkClassMap } from '#shared/components/CommonLink/types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet linkClasses: LinkClassMap = {\n  base: 'common-link',\n}\n\nexport const initializeLinkClasses = (classes: LinkClassMap) => {\n  linkClasses = classes\n}\n\nexport const getLinkClasses = () => linkClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { StopEventOptions } from '#shared/types/events.ts'\n\nconst stopEvent = (event: Event, stopOptions: StopEventOptions = {}): void => {\n  const {\n    preventDefault = true,\n    propagation = true,\n    immediatePropagation = false,\n  }: StopEventOptions = stopOptions\n\n  if (preventDefault) {\n    event.preventDefault()\n  }\n  if (propagation) {\n    event.stopPropagation()\n  }\n  if (immediatePropagation) {\n    event.stopImmediatePropagation()\n  }\n}\n\nexport default stopEvent\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\nimport { useLink } from 'vue-router'\n\nimport { getLinkClasses } from '#shared/initializer/initializeLinkClasses.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport type { Link } from '#shared/types/router.ts'\nimport stopEvent from '#shared/utils/events.ts'\n\nimport type { Sizes } from './types.ts'\n\nexport interface Props {\n  link: Link\n  external?: boolean\n  internal?: boolean\n  restApi?: boolean\n  disabled?: boolean\n  rel?: string\n  target?: string\n  openInNewTab?: boolean\n  replace?: boolean\n  activeClass?: string\n  exactActiveClass?: string\n  size?: Sizes\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  external: false,\n  internal: false,\n  replace: false,\n  append: false,\n  openInNewTab: false,\n  disabled: false,\n  activeClass: 'router-link-active',\n  exactActiveClass: 'router-link-exact-active',\n  size: 'large',\n})\n\nconst emit = defineEmits<{\n  click: [event: MouseEvent]\n}>()\n\nconst target = computed(() => {\n  if (props.target) return props.target\n  if (props.openInNewTab) return '_blank'\n  return undefined\n})\n\nconst linkClass = computed(() => {\n  const { base } = getLinkClasses()\n  if (props.disabled) return `${base} pointer-events-none`\n  return base\n})\n\nconst fontSizeClassMap = {\n  xs: 'text-[10px] leading-[10px]',\n  small: 'text-xs leading-snug',\n  medium: 'text-sm leading-snug',\n  large: 'text-base leading-snug',\n  xl: 'text-xl leading-snug',\n}\n\nconst { href, route, navigate, isActive, isExactActive } = useLink({\n  to: toRef(props, 'link'),\n  replace: toRef(props, 'replace'),\n})\n\nconst isInternalLink = computed(() => {\n  if (props.external || props.restApi) return false\n  if (props.internal) return true\n  // zammad desktop urls\n  if (route.value.fullPath.startsWith('/#')) return false\n  return route.value.matched.length > 0 && route.value.name !== 'Error'\n})\n\nconst app = useApplicationStore()\n\nconst path = computed(() => {\n  if (isInternalLink.value) {\n    return href.value\n  }\n\n  if (props.restApi) {\n    return `${app.config.api_path}${props.link}`\n  }\n\n  return props.link as string\n})\n\nconst onClick = (event: MouseEvent) => {\n  if (props.disabled) {\n    stopEvent(event, { immediatePropagation: true })\n    return\n  }\n  emit('click', event)\n\n  if (isInternalLink.value) {\n    navigate(event)\n  }\n\n  // Stop the scroll-to-top behavior or navigation on regular links when href is just '#'.\n  if (!isInternalLink.value && props.link === '#') {\n    stopEvent(event, { propagation: false })\n  }\n}\n\ndefineExpose({\n  isActive,\n  isExactActive,\n})\n</script>\n\n<template>\n  <a\n    data-test-id=\"common-link\"\n    :href=\"path\"\n    :target=\"target\"\n    :rel=\"rel\"\n    :class=\"[\n      linkClass,\n      fontSizeClassMap[props.size],\n      {\n        [activeClass]: isActive,\n        [exactActiveClass]: isExactActive,\n      },\n    ]\"\n    @click=\"onClick\"\n  >\n    <slot :is-active=\"isExactActive\" :is-exact-active=\"isExactActive\" />\n  </a>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport CommonAlert from '#shared/components/CommonAlert/CommonAlert.vue'\nimport CommonBadge from '#shared/components/CommonBadge/CommonBadge.vue'\nimport CommonDateTime from '#shared/components/CommonDateTime/CommonDateTime.vue'\nimport CommonIcon from '#shared/components/CommonIcon/CommonIcon.vue'\nimport CommonLabel from '#shared/components/CommonLabel/CommonLabel.vue'\nimport CommonLink from '#shared/components/CommonLink/CommonLink.vue'\n\nimport type { FormKit } from '@formkit/vue'\nimport type { App } from 'vue'\nimport type { RouterLink, RouterView } from 'vue-router'\n\ndeclare module '@vue/runtime-core' {\n  export interface GlobalComponents {\n    CommonAlert: typeof CommonAlert\n    CommonIcon: typeof CommonIcon\n    CommonLink: typeof CommonLink\n    CommonDateTime: typeof CommonDateTime\n    CommonBadge: typeof CommonBadge\n    CommonLabel: typeof CommonLabel\n    FormKit: typeof FormKit\n\n    RouterView: typeof RouterView\n    RouterLink: typeof RouterLink\n  }\n}\n\nexport default function initializeGlobalComponents(app: App): void {\n  app.component('CommonAlert', CommonAlert)\n  app.component('CommonIcon', CommonIcon)\n  app.component('CommonLink', CommonLink)\n  app.component('CommonDateTime', CommonDateTime)\n  app.component('CommonLabel', CommonLabel)\n  app.component('CommonBadge', CommonBadge)\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { storeToRefs } from 'pinia'\nimport { unref } from 'vue'\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport type { ConfigList } from '#shared/types/store.ts'\n\nimport type { App } from 'vue'\n\ndeclare module '@vue/runtime-core' {\n  export interface ComponentCustomProperties {\n    $c: ConfigList\n  }\n}\n\nconst applicationConfigPlugin = (app: App) => {\n  const application = useApplicationStore()\n  const { config } = storeToRefs(application)\n\n  Object.defineProperty(app.config.globalProperties, '$c', {\n    enumerable: true,\n    get: () => unref(config),\n  })\n}\n\nexport default applicationConfigPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { i18n } from '#shared/i18n.ts'\n\nimport applicationConfigPlugin from '../plugins/applicationConfigPlugin.ts'\n\nimport type { App } from 'vue'\n\nexport default function initializeGlobalProperties(app: App): void {\n  app.config.globalProperties.i18n = i18n\n  app.config.globalProperties.$t = i18n.t.bind(i18n)\n\n  app.use(applicationConfigPlugin)\n\n  app.config.globalProperties.__ = window.__\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nlet abstracts = {\n  durations: {\n    normal: {\n      enter: 0,\n      leave: 0,\n    },\n  },\n}\n\nexport const initializeAbstracts = (abstractsArgs: typeof abstracts) => {\n  abstracts = abstractsArgs\n}\n\nexport const getAbstracts = () => abstracts\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { watch } from 'vue'\n\nimport { triggerWebSocketReconnect } from '#shared/server/connection.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useLocaleStore } from '#shared/stores/locale.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nexport default function initializeStoreSubscriptions(): void {\n  const session = useSessionStore()\n  const locale = useLocaleStore()\n  const application = useApplicationStore()\n\n  watch(\n    () => application.loaded,\n    () => {\n      watch(\n        () => session.id,\n        () => {\n          // Reopen WS connection to reflect authentication state.\n          triggerWebSocketReconnect()\n        },\n      )\n\n      watch(\n        () => session.user,\n        (newValue, oldValue) => {\n          if (\n            !newValue ||\n            (oldValue?.preferences?.locale &&\n              locale.localeData &&\n              newValue.preferences?.locale !== locale.localeData.locale)\n          ) {\n            locale.setLocale(newValue?.preferences?.locale)\n          }\n        },\n      )\n    },\n  )\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const ErrorsFragmentDoc = gql`\n    fragment errors on UserError {\n  message\n  field\n  exception\n}\n    `;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { SessionFragmentDoc } from '../fragments/session.api';\nimport { ErrorsFragmentDoc } from '../fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const LoginDocument = gql`\n    mutation login($input: LoginInput!) {\n  login(input: $input) {\n    session {\n      ...session\n    }\n    errors {\n      ...errors\n    }\n    twoFactorRequired {\n      availableTwoFactorAuthenticationMethods\n      defaultTwoFactorAuthenticationMethod\n      recoveryCodesAvailable\n    }\n  }\n}\n    ${SessionFragmentDoc}\n${ErrorsFragmentDoc}`;\nexport function useLoginMutation(options: VueApolloComposable.UseMutationOptions<Types.LoginMutation, Types.LoginMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.LoginMutation, Types.LoginMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.LoginMutation, Types.LoginMutationVariables>(LoginDocument, options);\n}\nexport type LoginMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.LoginMutation, Types.LoginMutationVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const LogoutDocument = gql`\n    mutation logout {\n  logout {\n    success\n    externalLogoutUrl\n  }\n}\n    `;\nexport function useLogoutMutation(options: VueApolloComposable.UseMutationOptions<Types.LogoutMutation, Types.LogoutMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.LogoutMutation, Types.LogoutMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.LogoutMutation, Types.LogoutMutationVariables>(LogoutDocument, options);\n}\nexport type LogoutMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.LogoutMutation, Types.LogoutMutationVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createPinia, type Pinia } from 'pinia'\n\nimport type { UsedStore } from '#shared/types/store.ts'\n\nimport type { App } from 'vue'\n\ndeclare module 'pinia' {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  export interface DefineStoreOptionsBase<S, Store> {\n    requiresAuth?: boolean\n  }\n}\n\nconst usedStores = new Set<UsedStore>()\n\nconst pinia: Pinia = createPinia()\n\n// Remember all stores, for example to cleanup the private stores after logout.\npinia.use((context) => {\n  usedStores.add({\n    store: context.store,\n    requiresAuth: context.options.requiresAuth ?? true,\n  })\n})\n\nexport default function initializeStore(app: App) {\n  app.use(pinia)\n}\n\nexport const resetAndDisposeStores = (requiresAuth?: boolean) => {\n  usedStores.forEach((usedStore) => {\n    if (requiresAuth !== undefined && usedStore.requiresAuth !== requiresAuth) {\n      return\n    }\n\n    usedStore.store.$dispose()\n    delete pinia.state.value[usedStore.store.$id]\n    usedStores.delete(usedStore)\n  })\n}\n\nexport { pinia }\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useLocalStorage } from '@vueuse/core'\nimport { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nimport useFingerprint from '#shared/composables/useFingerprint.ts'\nimport { useLoginMutation } from '#shared/graphql/mutations/login.api.ts'\nimport { useLogoutMutation } from '#shared/graphql/mutations/logout.api.ts'\nimport {\n  type EnumTwoFactorAuthenticationMethod,\n  type LoginInput,\n} from '#shared/graphql/types.ts'\nimport { clearApolloClientStore } from '#shared/server/apollo/client.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport testFlags from '#shared/utils/testFlags.ts'\n\nimport { useApplicationStore } from './application.ts'\nimport { resetAndDisposeStores } from './index.ts'\nimport { useSessionStore } from './session.ts'\n\ninterface LoginOptions {\n  login: string\n  password: string\n  rememberMe: boolean\n  twoFactorAuthentication?: {\n    method: EnumTwoFactorAuthenticationMethod\n    payload: unknown\n  }\n  recoveryCode?: string\n}\n\nexport const useAuthenticationStore = defineStore(\n  'authentication',\n  () => {\n    const authenticated = useLocalStorage<boolean>('authenticated', false)\n    const externalLogout = ref(false)\n    const { fingerprint } = useFingerprint()\n\n    const clearAuthentication = async (): Promise<void> => {\n      await clearApolloClientStore()\n\n      const session = useSessionStore()\n      session.resetCurrentSession()\n      authenticated.value = false\n      resetAndDisposeStores(true)\n\n      // Refresh the config after logout, to have only the non authenticated version.\n      await useApplicationStore().resetAndGetConfig()\n\n      session.initialized = false\n    }\n\n    const refreshAfterAuthentication = async (): Promise<void> => {\n      await Promise.all([\n        useApplicationStore().getConfig(),\n        useSessionStore().getCurrentUser(),\n      ])\n    }\n\n    const logout = async (): Promise<void> => {\n      const logoutMutation = new MutationHandler(\n        useLogoutMutation({\n          context: {\n            batch: {\n              active: false,\n            },\n          },\n        }),\n      )\n\n      const result = await logoutMutation.send()\n      if (result?.logout?.success) {\n        if (result.logout.externalLogoutUrl) {\n          externalLogout.value = true\n          authenticated.value = false\n          window.location.href = result.logout.externalLogoutUrl\n          return\n        }\n\n        await clearAuthentication()\n\n        testFlags.set('logout.success')\n      }\n    }\n\n    const setAuthenticatedSessionId = async (newSessionId: string | null) => {\n      if (!newSessionId) return false\n\n      const session = useSessionStore()\n      session.id = newSessionId\n      authenticated.value = true\n\n      await refreshAfterAuthentication()\n\n      session.initialized = true\n\n      return true\n    }\n\n    const login = async ({\n      login,\n      password,\n      rememberMe,\n      twoFactorAuthentication,\n      recoveryCode,\n    }: LoginOptions) => {\n      const loginInput: LoginInput = {\n        login,\n        password,\n        rememberMe,\n      }\n\n      if (twoFactorAuthentication) {\n        loginInput.twoFactorAuthentication = {\n          twoFactorMethod: twoFactorAuthentication.method,\n          twoFactorPayload: twoFactorAuthentication.payload,\n        }\n      } else if (recoveryCode) {\n        loginInput.twoFactorRecovery = {\n          recoveryCode,\n        }\n      }\n\n      const loginMutation = new MutationHandler(\n        useLoginMutation({\n          variables: {\n            input: loginInput,\n          },\n          context: {\n            headers: {\n              'X-Browser-Fingerprint': fingerprint.value,\n            },\n            batch: {\n              active: false,\n            },\n          },\n        }),\n      )\n\n      const result = await loginMutation.send()\n\n      if (result?.login?.errors || !result) {\n        return Promise.reject(result?.login?.errors)\n      }\n\n      await setAuthenticatedSessionId(result.login?.session?.id || null)\n\n      return {\n        twoFactor: result.login?.twoFactorRequired,\n        afterAuth: result.login?.session?.afterAuth,\n      }\n    }\n\n    return {\n      authenticated,\n      externalLogout,\n      clearAuthentication,\n      logout,\n      login,\n      refreshAfterAuthentication,\n      setAuthenticatedSessionId,\n    }\n  },\n  {\n    requiresAuth: false,\n  },\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type {\n  FormFieldValue,\n  FormSchemaField,\n} from '#shared/components/Form/types.ts'\nimport type { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\n\nimport type { ObjectAttribute } from '../../types/store.ts'\nimport type { JsonValue } from 'type-fest'\n\nexport default abstract class FieldResolver {\n  protected name: string\n\n  protected object: EnumObjectManagerObjects\n\n  protected label: string\n\n  protected internal: boolean\n\n  protected attributeType: string\n\n  protected attributeConfig: Record<string, JsonValue | undefined>\n\n  abstract fieldType: string | (() => string)\n\n  constructor(\n    object: EnumObjectManagerObjects,\n    objectAttribute: ObjectAttribute,\n  ) {\n    this.object = object\n    this.name = objectAttribute.name\n    this.label = objectAttribute.display\n    this.internal = objectAttribute.isInternal\n    this.attributeType = objectAttribute.dataType\n    this.attributeConfig = objectAttribute.dataOption || {}\n  }\n\n  private getFieldType(): string {\n    if (typeof this.fieldType === 'function') {\n      return this.fieldType()\n    }\n\n    return this.fieldType\n  }\n\n  public fieldAttributes(): FormSchemaField {\n    const resolvedAttributes: FormSchemaField = {\n      type: this.getFieldType(),\n      label: this.label,\n      name: this.name,\n      required: 'null' in this.attributeConfig && !this.attributeConfig.null, // will normally be overriden with the screen config\n      internal: this.internal,\n      ...this.fieldTypeAttributes(),\n    }\n\n    if (this.attributeConfig.default) {\n      resolvedAttributes.value = this.attributeConfig.default as FormFieldValue\n    }\n\n    // TODO: Support half-sized/single column fields based on the information hard-coded in the object attribute\n    //   backend for now. Later we can make this a concern of the frontend only, and ignore the hard-coded values.\n    if (\n      this.attributeConfig.item_class &&\n      (this.attributeConfig.item_class as string).indexOf(\n        'formGroup--halfSize',\n      ) !== -1\n    ) {\n      resolvedAttributes.outerClass = 'form-group-single-column'\n    }\n\n    return resolvedAttributes\n  }\n\n  abstract fieldTypeAttributes(): Partial<FormSchemaField>\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverActive extends FieldResolver {\n  fieldType = 'toggle'\n\n  // eslint-disable-next-line class-methods-use-this\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        variants: {\n          true: __('yes'),\n          false: __('no'),\n        },\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'active',\n  resolver: FieldResolverActive,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\n/**\n * Creates an oxford-comma separated list of items.\n * @param args - items to list out\n * @param conjunction - in: x, y, and z \"and\" is the conjunction to use\n * @returns\n */\nexport const commaSeparatedList = (\n  items: string[],\n  conjunction = 'or',\n): string => {\n  return items.reduce((oxford, item, index) => {\n    let oxfordList = oxford + item\n    if (index <= items.length - 2 && items.length > 2) {\n      oxfordList += ', '\n    }\n    if (index === items.length - 2) {\n      oxfordList += `${items.length === 2 ? ' ' : ''}${conjunction} `\n    }\n    return oxfordList\n  }, '')\n}\n\n/**\n * Orders two variables smallest to largest.\n * @param first - first argument\n * @param second - Second argument\n * @returns\n */\nexport const order = (\n  first: string | number,\n  second: string | number,\n): [smaller: number | string, larger: number | string] => {\n  return Number(first) >= Number(second) ? [second, first] : [first, second]\n}\n\nexport const camelize = (str: string) => {\n  return str.replace(/[_.-](\\w|$)/g, (_, x) => x.toUpperCase())\n}\n\nexport const capitalize = (str: string) => {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nexport const toClassName = (str: string) => {\n  return str.replace(\n    /([a-z])([A-Z])/g,\n    (_, lowerCase, upperCase) => `${lowerCase}::${upperCase}`,\n  )\n}\n\n// app/assets/javascripts/app/lib/app_post/utils.coffee:230\nexport const phoneify = (phone: string) => {\n  return phone.replace(/[^0-9,+,#,*]+/g, '').replace(/(.)\\+/, '$1')\n}\n\n/**\n * Returns user's initials based on their first name, last name and email, if any present.\n * @param firstname - user's first name\n * @param lastname - user's last name\n * @param email - user's email address\n * @param phone - user's phone number\n * @param mobile - user's mobile number\n */\nexport const getInitials = (\n  firstname?: Maybe<string>,\n  lastname?: Maybe<string>,\n  email?: Maybe<string>,\n  phone?: Maybe<string>,\n  mobile?: Maybe<string>,\n) => {\n  if (firstname && lastname) {\n    return firstname[0] + lastname[0]\n  }\n\n  if (firstname || lastname || email) {\n    return (firstname || lastname || email)?.substring(0, 2).toUpperCase()\n  }\n\n  if (phone || mobile) {\n    return (phone || mobile)?.slice(-2).toUpperCase()\n  }\n\n  return '??'\n}\n\n/**\n * Replaces code inside `#{obj.key}` with the value of the corresponding object.\n * @param template - string to replace\n * @param objects - reference object\n * @param encodeLink - should result be encoded\n */\nexport const replaceTags = (\n  template: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  objects: any,\n  encodeLink = false,\n): string => {\n  return template.replace(/#\\{\\s{0,2}(.+?)\\s{0,2}\\}/g, (index, key) => {\n    const levels = key.replace(/<.+?>/g, '').split(/\\./)\n    let dataRef = objects\n    for (const level of levels) {\n      if (typeof dataRef === 'object' && level in dataRef) {\n        dataRef = dataRef[level]\n      } else {\n        dataRef = ''\n        break\n      }\n    }\n\n    let value\n\n    // if value is a function, execute function\n    if (typeof dataRef === 'function') {\n      value = dataRef()\n    }\n    // if value has content\n    else if (dataRef != null && dataRef.toString) {\n      // in case if we have a references object, check what datatype the attribute has\n      // and e. g. convert timestamps/dates to browser locale\n      // if dataRefLast?.constructor?.className\n      //   localClassRef = App[dataRefLast.constructor.className]\n      //   if localClassRef?.attributesGet\n      //     attributes = localClassRef.attributesGet()\n      //     if attributes?[level]\n      //       if attributes[level]['tag'] is 'datetime'\n      //         value = App.i18n.translateTimestamp(dataRef)\n      //       else if attributes[level]['tag'] is 'date'\n      //         value = App.i18n.translateDate(dataRef)\n\n      // as fallback use value of toString()\n      if (!value) value = dataRef.toString()\n    } else {\n      value = ''\n    }\n\n    if (value === '') value = '-'\n    if (encodeLink) value = encodeURIComponent(value)\n\n    return value\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\nimport { camelize } from '#shared/utils/formatter.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverAutocompletionCustomerOrganization extends FieldResolver {\n  fieldType = 'organization'\n\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        clearable: this.attributeConfig.nulloption ?? true,\n        noOptionsLabelTranslation: !this.attributeConfig.translate,\n        belongsToObjectField: camelize(\n          (this.attributeConfig.belongs_to as string) || '',\n        ),\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'autocompletion_ajax_customer_organization',\n  resolver: FieldResolverAutocompletionCustomerOrganization,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\nimport { camelize } from '#shared/utils/formatter.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverAutocompletionCustomer extends FieldResolver {\n  fieldType = 'customer'\n\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        clearable: this.attributeConfig.nulloption ?? true,\n        noOptionsLabelTranslation: !this.attributeConfig.translate,\n        belongsToObjectField: camelize(\n          (this.attributeConfig.belongs_to as string) || '',\n        ),\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'user_autocompletion',\n  resolver: FieldResolverAutocompletionCustomer,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { getNode, type FormKitNode } from '@formkit/core'\n\nimport UserError from '#shared/errors/UserError.ts'\n\nimport type { MutationSendError } from '../../types/error.ts'\n\nexport const getNodeId = (formId: string, selector: string) => {\n  return `${selector}-${formId}`\n}\n\nexport const getNodeByName = (formId: string, selector: string) => {\n  return getNode(getNodeId(formId, selector))\n}\n\nexport const setErrors = (node: FormKitNode, errors: MutationSendError) => {\n  // TODO: we need to check if translations are working as expected for this errors here.\n  // TODO: we need to check/style the general error output when we want to show it related to the form.\n  if (errors instanceof UserError) {\n    node.setErrors(errors.generalErrors as string[], errors.getFieldErrorList())\n  } else {\n    node.setErrors(errors?.message || __('An unexpected error has occurred.'))\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nexport const isGraphQLId = (id: unknown): id is string => {\n  return typeof id === 'string' && id.startsWith('gid://zammad/')\n}\n\nexport const convertToGraphQLId = (type: string, id: number | string) => {\n  return `gid://zammad/${type}/${id}`\n}\n\nexport const ensureGraphqlId = (type: string, id: number | string): string => {\n  if (isGraphQLId(id)) {\n    return id\n  }\n\n  return convertToGraphQLId(type, id)\n}\n\nexport const parseGraphqlId = (\n  id: string,\n): { relation: string; id: number } => {\n  const [relation, idString] = id.slice('gid://zammad/'.length).split('/')\n\n  return {\n    relation,\n    id: parseInt(idString, 10),\n  }\n}\n\nexport const getIdFromGraphQLId = (graphqlId: string) => {\n  const parsedGraphqlId = parseGraphqlId(graphqlId)\n  return parsedGraphqlId.id\n}\n\nexport const convertToGraphQLIds = (type: string, ids: (number | string)[]) => {\n  return ids.map((id) => convertToGraphQLId(type, id))\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { getNodeByName } from '#shared/components/Form/utils.ts'\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\nimport { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\nimport { ensureGraphqlId } from '#shared/graphql/utils.ts'\nimport type { ObjectLike } from '#shared/types/utils.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nimport type { JsonValue } from 'type-fest'\n\nexport class FieldResolverAutocompletionExternalDataSource extends FieldResolver {\n  fieldType = 'externalDataSource'\n\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        clearable: !!this.attributeConfig.nulloption,\n        noOptionsLabelTranslation: !this.attributeConfig.translate,\n        object: this.object,\n        searchTemplateRenderContext: (\n          formId: string,\n          entityObject: ObjectLike,\n        ) => {\n          const templateRenderContext: Record<string, JsonValue> = {}\n\n          switch (this.object) {\n            case EnumObjectManagerObjects.Ticket:\n              if (entityObject) {\n                templateRenderContext.customerId = entityObject.customer?.id\n              }\n\n              if (!templateRenderContext.customerId) {\n                const node = getNodeByName(formId, 'customer_id')\n                const value = node?.value as string\n\n                if (value) {\n                  templateRenderContext.customerId = ensureGraphqlId(\n                    'User',\n                    value,\n                  )\n                }\n              }\n\n              return templateRenderContext\n            case EnumObjectManagerObjects.User:\n            case EnumObjectManagerObjects.Organization:\n            case EnumObjectManagerObjects.Group:\n            default:\n              return templateRenderContext\n          }\n        },\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'autocompletion_ajax_external_data_source',\n  resolver: FieldResolverAutocompletionExternalDataSource,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\nimport { camelize } from '#shared/utils/formatter.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverAutocompletion extends FieldResolver {\n  fieldType = () => {\n    switch (this.attributeConfig.relation) {\n      case 'Organization':\n        return 'organization'\n      case 'User':\n        return 'customer'\n      case 'Group':\n      case 'TicketState':\n      case 'TicketPriority':\n        throw new Error(\n          `Relation ${this.attributeConfig.relation} is not implemented yet`,\n        )\n      // TODO which relation is recipient?\n      default:\n        throw new Error(`Unknown relation ${this.attributeConfig.relation}`)\n    }\n  }\n\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        clearable: !!this.attributeConfig.nulloption,\n        noOptionsLabelTranslation: !this.attributeConfig.translate,\n        belongsToObjectField: camelize(\n          (this.attributeConfig.belongs_to as string) || '',\n        ),\n        multiple: this.attributeConfig.multiple,\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'autocompletion_ajax',\n  resolver: FieldResolverAutocompletion,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverBoolean extends FieldResolver {\n  fieldType = 'toggle'\n\n  public fieldTypeAttributes() {\n    const variants = this.attributeConfig.options as Record<string, string>\n\n    return {\n      value: false, // if it has default, it will be overriden after\n      props: {\n        variants,\n      },\n      // Add top margin only in multi-column mode, so the field aligns nicely with other which have visible labels.\n      //   More info in `app/frontend/apps/desktop/styles/main.css:77`.\n      wrapperClass: '@lg/form-group:mt-6',\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'boolean',\n  resolver: FieldResolverBoolean,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverDate extends FieldResolver {\n  fieldType = 'date'\n\n  // TODO: there are also :diff, :future and :past attributes, what about them?\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        clearable: !!this.attributeConfig.null,\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'date',\n  resolver: FieldResolverDate,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverDateTime extends FieldResolver {\n  fieldType = 'datetime'\n\n  // TODO: there are also :diff, :future and :past attributes, what about them?\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        clearable: !!this.attributeConfig.null,\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'datetime',\n  resolver: FieldResolverDateTime,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useAppName } from '#shared/composables/useAppName.ts'\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverUserGroupPermissions extends FieldResolver {\n  // NB: The group permissions field is currently supported only in desktop app.\n  fieldType = useAppName() === 'desktop' ? 'groupPermissions' : 'hidden'\n\n  public fieldTypeAttributes() {\n    return {}\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'group_permissions',\n  resolver: FieldResolverUserGroupPermissions,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormFieldAdditionalProps } from '#shared/components/Form/types.ts'\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverInput extends FieldResolver {\n  fieldType = () => {\n    switch (this.attributeConfig.type) {\n      case 'password':\n        return 'password'\n      case 'tel':\n        return 'tel'\n      case 'email':\n        return 'email'\n      case 'url':\n        return 'url'\n      default:\n        return 'text'\n    }\n  }\n\n  public fieldTypeAttributes() {\n    const props: FormFieldAdditionalProps = {\n      maxlength: this.attributeConfig.maxlength,\n    }\n\n    const valiadtion = this.validation()\n    if (valiadtion) {\n      props.validation = valiadtion\n    }\n\n    return {\n      props,\n    }\n  }\n\n  private validation() {\n    switch (this.attributeConfig.type) {\n      case 'email':\n        return 'email'\n      case 'url':\n        return 'url'\n      default:\n        return null\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'input',\n  resolver: FieldResolverInput,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverInteger extends FieldResolver {\n  fieldType = 'number'\n\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        min: this.attributeConfig.min,\n        max: this.attributeConfig.max,\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'integer',\n  resolver: FieldResolverInteger,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type {\n  FormFieldAdditionalProps,\n  FormSchemaField,\n} from '#shared/components/Form/types.ts'\nimport type {\n  FieldResolverModule,\n  ObjectAttributeSelectOptions,\n} from '#shared/entities/object-attributes/types/resolver.ts'\nimport { camelize } from '#shared/utils/formatter.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport type ObjectSelectValue = string | number | boolean\n\nexport interface ObjectSelectOption {\n  label?: string\n  disabled?: boolean\n  value: ObjectSelectValue\n}\n\nexport class FieldResolverSelect extends FieldResolver {\n  fieldType = 'select'\n\n  protected multiFieldAttributeType = 'multiselect'\n\n  public fieldTypeAttributes() {\n    const attributes: Partial<FormSchemaField> = {}\n    const props: FormFieldAdditionalProps = {\n      noOptionsLabelTranslation: !this.attributeConfig.translate,\n      clearable: !!this.attributeConfig.nulloption,\n      options: [],\n      historicalOptions: this.attributeConfig.historical_options,\n    }\n\n    if (this.attributeConfig.relation) {\n      attributes.relation = {\n        type: this.attributeConfig.relation as string,\n      }\n\n      if (this.attributeConfig.filter) {\n        attributes.relation.filterIds = this.attributeConfig.filter as number[]\n      }\n\n      props.belongsToObjectField = camelize(\n        (this.attributeConfig.belongs_to as string) || '',\n      )\n\n      props.sorting = 'label'\n    } else if (this.attributeConfig.options) {\n      props.options = this.mappedOptions()\n    }\n\n    if (this.attributeType === this.multiFieldAttributeType)\n      props.multiple = true\n\n    return {\n      ...attributes,\n      props,\n    }\n  }\n\n  protected mappedOptions(): ObjectSelectOption[] {\n    const options = this.attributeConfig.options as ObjectAttributeSelectOptions\n\n    if (Array.isArray(options)) {\n      return options.map(({ name, value }) => ({\n        label: name,\n        value,\n      }))\n    }\n\n    return Object.keys(options).map((key) => ({\n      label: key,\n      value: options[key],\n    }))\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'select',\n  resolver: FieldResolverSelect,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport { FieldResolverSelect } from './select.ts'\n\nexport class FieldResolverMultiselect extends FieldResolverSelect {}\n\nexport default <FieldResolverModule>{\n  type: 'multiselect',\n  resolver: FieldResolverMultiselect,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type {\n  FieldResolverModule,\n  ObjectAttributeTreeSelectOption,\n} from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport { FieldResolverSelect } from './select.ts'\n\nexport interface ObjectTreeSelectOption {\n  label?: string\n  value: string\n  children?: ObjectTreeSelectOption[]\n}\n\nexport class FieldResolverTreeselect extends FieldResolverSelect {\n  fieldType = 'treeselect'\n\n  multiFieldAttributeType = 'multi_tree_select'\n\n  mappedOptions(): ObjectTreeSelectOption[] {\n    const mapTreeSelectOptions = (\n      options: ObjectAttributeTreeSelectOption[],\n    ) => {\n      return options.reduce(\n        (\n          treeSelectOptions: ObjectTreeSelectOption[],\n          { children, name, value },\n        ) => {\n          const treeSelectOption: ObjectTreeSelectOption = {\n            label: name,\n            value,\n          }\n\n          if (children) {\n            treeSelectOption.children = mapTreeSelectOptions(children)\n          }\n\n          treeSelectOptions.push(treeSelectOption)\n\n          return treeSelectOptions\n        },\n        [],\n      )\n    }\n\n    return mapTreeSelectOptions(\n      this.attributeConfig\n        .options as unknown as ObjectAttributeTreeSelectOption[],\n    )\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'tree_select',\n  resolver: FieldResolverTreeselect,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport { FieldResolverTreeselect } from './treeselect.ts'\n\nexport class FieldResolverMultiTreeselect extends FieldResolverTreeselect {}\n\nexport default <FieldResolverModule>{\n  type: 'multi_tree_select',\n  resolver: FieldResolverMultiTreeselect,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverRichtext extends FieldResolver {\n  fieldType = 'editor'\n\n  // TODO:\n  // def field_for_oa_type_richtext(context:, attribute:)\n  //   FormSchema::Field::Editor.new(\n  //     **base_attributes(context: context, attribute: attribute),\n  //     // TODO: the OA has a maxlength attribute, but Field::Editor does not support that yet.\n  //     // maxlength: attribute[:data_option]['maxlength']\n  //   )\n  // end\n  // eslint-disable-next-line class-methods-use-this\n  public fieldTypeAttributes() {\n    return {\n      props: {},\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'richtext',\n  resolver: FieldResolverRichtext,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverTag extends FieldResolver {\n  fieldType = 'tags'\n\n  // eslint-disable-next-line class-methods-use-this\n  public fieldTypeAttributes() {\n    const application = useApplicationStore()\n\n    return {\n      props: {\n        canCreate: Boolean(application.config.tag_new),\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'tag',\n  resolver: FieldResolverTag,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverTextarea extends FieldResolver {\n  fieldType = 'textarea'\n\n  public fieldTypeAttributes() {\n    return {\n      props: {\n        maxlength: this.attributeConfig.maxlength,\n        rows: this.attributeConfig.rows,\n      },\n    }\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'textarea',\n  resolver: FieldResolverTextarea,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\n/* eslint-disable zammad/zammad-detect-translatable-string */\n\nimport { useAppName } from '#shared/composables/useAppName.ts'\nimport type { FieldResolverModule } from '#shared/entities/object-attributes/types/resolver.ts'\n\nimport FieldResolver from '../FieldResolver.ts'\n\nexport class FieldResolverUserPermissions extends FieldResolver {\n  // NB: The user permissions field is currently supported only in desktop app.\n  fieldType = useAppName() === 'desktop' ? 'toggleList' : 'hidden'\n\n  public fieldTypeAttributes() {\n    return {}\n  }\n}\n\nexport default <FieldResolverModule>{\n  type: 'user_permission',\n  resolver: FieldResolverUserPermissions,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\n\nimport type FieldResolver from './FieldResolver.ts'\nimport type {\n  FieldResolverClass,\n  FieldResolverModule,\n} from '../../types/resolver.ts'\nimport type { ObjectAttribute } from '../../types/store.ts'\n\nconst fieldResolverModules = import.meta.glob<FieldResolverModule>(\n  ['./fields/*.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nconst fieldResolverClasses: Record<string, FieldResolverClass> = {}\n\nObject.entries(fieldResolverModules).forEach(([, resolverModule]) => {\n  fieldResolverClasses[resolverModule.type] = resolverModule.resolver\n})\n\nconst getFieldResolver = (\n  object: EnumObjectManagerObjects,\n  attribute: ObjectAttribute,\n): FieldResolver => {\n  if (!fieldResolverClasses[attribute.dataType]) {\n    throw new Error(\n      `No field resolver for type ${attribute.dataType} (${attribute.name})`,\n    )\n  }\n\n  return new fieldResolverClasses[attribute.dataType](object, attribute)\n}\n\nexport default getFieldResolver\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type {\n  FormSchemaField,\n  FormFieldValue,\n} from '#shared/components/Form/types.ts'\nimport type { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\n\nimport getFieldResolver from './resolver/getFieldResolver.ts'\n\nimport type { ScreenConfig } from '../types/resolver.ts'\nimport type { ObjectAttribute } from '../types/store.ts'\n\nexport const transformResolvedFieldForScreen = (\n  screen: ScreenConfig,\n  resolvedField: FormSchemaField,\n) => {\n  resolvedField.required = screen.required || ('null' in screen && !screen.null)\n\n  if ('default' in screen) {\n    resolvedField.value = screen.default as FormFieldValue\n  }\n\n  if ('filter' in screen && resolvedField.relation) {\n    resolvedField.relation.filterIds = screen.filter as number[]\n  }\n\n  // Special handling for the clearable prop in the select/treeselect/autocomplete fields.\n  if (\n    'nulloption' in screen &&\n    resolvedField.props &&\n    'clearable' in resolvedField.props\n  ) {\n    resolvedField.props.clearable = screen.nulloption\n  }\n}\n\nconst getFieldFromAttribute = (\n  object: EnumObjectManagerObjects,\n  attribute: ObjectAttribute,\n): FormSchemaField => {\n  const fieldResolver = getFieldResolver(object, attribute)\n\n  return fieldResolver.fieldAttributes()\n}\n\nexport default getFieldFromAttribute\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const ObjectManagerFrontendAttributesDocument = gql`\n    query objectManagerFrontendAttributes($object: EnumObjectManagerObjects!) {\n  objectManagerFrontendAttributes(object: $object) {\n    attributes {\n      name\n      display\n      dataType\n      dataOption\n      isInternal\n      screens\n    }\n    screens {\n      name\n      attributes\n    }\n  }\n}\n    `;\nexport function useObjectManagerFrontendAttributesQuery(variables: Types.ObjectManagerFrontendAttributesQueryVariables | VueCompositionApi.Ref<Types.ObjectManagerFrontendAttributesQueryVariables> | ReactiveFunction<Types.ObjectManagerFrontendAttributesQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables>(ObjectManagerFrontendAttributesDocument, variables, options);\n}\nexport function useObjectManagerFrontendAttributesLazyQuery(variables?: Types.ObjectManagerFrontendAttributesQueryVariables | VueCompositionApi.Ref<Types.ObjectManagerFrontendAttributesQueryVariables> | ReactiveFunction<Types.ObjectManagerFrontendAttributesQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables>(ObjectManagerFrontendAttributesDocument, variables, options);\n}\nexport type ObjectManagerFrontendAttributesQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.ObjectManagerFrontendAttributesQuery, Types.ObjectManagerFrontendAttributesQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed, toRefs } from 'vue'\n\nimport type { FormSchemaField } from '#shared/components/Form/types.ts'\nimport { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport getFieldFromAttribute from '../form/getFieldFromAttribute.ts'\nimport { useObjectManagerFrontendAttributesQuery } from '../graphql/queries/objectManagerFrontendAttributes.api.ts'\nimport {\n  staticObjectAttributesByEntity,\n  useObjectAttributesStore,\n} from '../stores/objectAttributes.ts'\n\nimport type { ObjectAttribute } from '../types/store.ts'\n\nexport const useObjectAttributes = (object: EnumObjectManagerObjects) => {\n  const objectAttributes = useObjectAttributesStore()\n\n  // Check if we have already a instance of the requested object\n  // attribute object, otherwise trigger the query.\n  if (!objectAttributes.objectAttributesObjectLookup[object]) {\n    const handler = new QueryHandler(\n      useObjectManagerFrontendAttributesQuery({\n        object,\n      }),\n    )\n    const attributesRaw = handler.result()\n    const attributesLoading = handler.loading()\n\n    const attributes = computed<ObjectAttribute[]>(() => {\n      return [\n        ...(staticObjectAttributesByEntity[object] || []),\n        ...(attributesRaw.value?.objectManagerFrontendAttributes?.attributes ||\n          []),\n      ]\n    })\n\n    const screens = computed(() => {\n      return (\n        attributesRaw.value?.objectManagerFrontendAttributes?.screens.reduce(\n          (screens: Record<string, string[]>, screen) => {\n            screens[screen.name] = screen.attributes\n            return screens\n          },\n          {},\n        ) || {}\n      )\n    })\n\n    const attributesLookup = computed(() => {\n      const lookup: Map<string, ObjectAttribute> = new Map()\n\n      attributes.value?.forEach((attribute) =>\n        lookup.set(attribute.name, attribute),\n      )\n\n      return lookup\n    })\n\n    const formFieldAttributesLookup = computed(() => {\n      const lookup: Map<string, FormSchemaField> = new Map()\n\n      attributes.value?.forEach((attribute) => {\n        if (!attribute.isStatic) {\n          lookup.set(attribute.name, getFieldFromAttribute(object, attribute))\n        }\n      })\n\n      return lookup\n    })\n\n    objectAttributes.setObjectAttributesForObject(object, {\n      attributes,\n      screens,\n      attributesLookup,\n      formFieldAttributesLookup,\n      loading: attributesLoading,\n    })\n  }\n\n  return {\n    ...toRefs(objectAttributes.objectAttributesObjectLookup[object]),\n  }\n}\n\nexport const initializeDefaultObjectAttributes = () => {\n  useObjectAttributes(EnumObjectManagerObjects.Ticket)\n  useObjectAttributes(EnumObjectManagerObjects.TicketArticle)\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed, type ComputedRef } from 'vue'\n\nimport type { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\n\nimport { useObjectAttributes } from './useObjectAttributes.ts'\n\nimport type { ObjectAttribute } from '../types/store.ts'\n\nexport const useObjectAttributesScreen = (\n  object: EnumObjectManagerObjects,\n  screen: string,\n) => {\n  const objectAttributes = useObjectAttributes(object)\n\n  const getScreenAttributes = (\n    screen: string,\n    screens: ComputedRef<Record<string, string[]>>,\n    attributesLookup: ComputedRef<Map<string, ObjectAttribute>>,\n  ) => {\n    if (!screens.value[screen]) return []\n\n    return screens.value[screen].reduce(\n      (screenAttributes: ObjectAttribute[], attributeName) => {\n        screenAttributes.push(\n          attributesLookup.value.get(attributeName) as ObjectAttribute,\n        )\n        return screenAttributes\n      },\n      [],\n    )\n  }\n\n  const screenAttributes = computed(() => {\n    return getScreenAttributes(\n      screen,\n      objectAttributes.screens,\n      objectAttributes.attributesLookup,\n    )\n  })\n\n  return {\n    screenAttributes,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { defineStore } from 'pinia'\n\nimport { useObjectAttributesScreen } from '#shared/entities/object-attributes/composables/useObjectAttributesScreen.ts'\nimport type { EntityStaticObjectAttributes } from '#shared/entities/object-attributes/types/store.ts'\nimport { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\n\nexport const staticObjectAttributes: EntityStaticObjectAttributes = {\n  name: EnumObjectManagerObjects.Organization,\n  attributes: [\n    {\n      name: 'created_by_id',\n      display: __('Created by'),\n      dataOption: {\n        relation: 'User',\n      },\n      dataType: 'autocomplete',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'created_at',\n      display: __('Created at'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'updated_by_id',\n      display: __('Updated by'),\n      dataOption: {\n        relation: 'User',\n      },\n      dataType: 'autocomplete',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'updated_at',\n      display: __('Updated at'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n  ],\n}\n\nexport const useOrganizationObjectAttributesStore = defineStore(\n  'organizationObjectAttributes',\n  () => {\n    const { screenAttributes: viewScreenAttributes } =\n      useObjectAttributesScreen(EnumObjectManagerObjects.Organization, 'view')\n\n    return {\n      viewScreenAttributes,\n    }\n  },\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { EntityStaticObjectAttributes } from '#shared/entities/object-attributes/types/store.ts'\nimport { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\n\nexport const staticObjectAttributes: EntityStaticObjectAttributes = {\n  name: EnumObjectManagerObjects.Ticket,\n  attributes: [\n    {\n      name: 'number',\n      display: '#',\n      dataType: 'input',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'time_unit',\n      display: __('Accounted Time'),\n      dataType: 'time_unit',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'escalation_at',\n      display: __('Escalation at'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'first_response_escalation_at',\n      display: __('Escalation at (First Response Time)'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'update_escalation_at',\n      display: __('Escalation at (Update Time)'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'close_escalation_at',\n      display: __('Escalation at (Close Time)'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'last_contact_at',\n      display: __('Last contact'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'last_contact_agent_at',\n      display: __('Last contact (agent)'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'last_contact_customer_at',\n      display: __('Last contact (customer)'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'first_response_at',\n      display: __('First response'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'close_at',\n      display: __('Closing time'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'last_close_at',\n      display: __('Last closing time'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'created_by_id',\n      display: __('Created by'),\n      dataOption: {\n        relation: 'User',\n        belongs_to: 'createdBy',\n      },\n      dataType: 'autocompletion_ajax',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'created_at',\n      display: __('Created at'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'updated_by_id',\n      display: __('Updated by'),\n      dataOption: {\n        relation: 'User',\n        belongs_to: 'updatedBy',\n      },\n      dataType: 'autocompletion_ajax',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'updated_at',\n      display: __('Updated at'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'last_owner_update_at',\n      display: __('Last owner update'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n  ],\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { defineStore } from 'pinia'\n\nimport { useObjectAttributesScreen } from '#shared/entities/object-attributes/composables/useObjectAttributesScreen.ts'\nimport type { EntityStaticObjectAttributes } from '#shared/entities/object-attributes/types/store.ts'\nimport { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\n\nexport const staticObjectAttributes: EntityStaticObjectAttributes = {\n  name: EnumObjectManagerObjects.User,\n  attributes: [\n    {\n      name: 'created_by_id',\n      display: __('Created by'),\n      dataOption: {\n        relation: 'User',\n      },\n      dataType: 'autocomplete',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'created_at',\n      display: __('Created at'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'updated_by_id',\n      display: __('Updated by'),\n      dataOption: {\n        relation: 'User',\n      },\n      dataType: 'autocomplete',\n      isStatic: true,\n      isInternal: true,\n    },\n    {\n      name: 'updated_at',\n      display: __('Updated at'),\n      dataType: 'datetime',\n      isStatic: true,\n      isInternal: true,\n    },\n  ],\n}\n\nexport const useUserObjectAttributesStore = defineStore(\n  'userObjectAttributes',\n  () => {\n    const { screenAttributes: viewScreenAttributes } =\n      useObjectAttributesScreen(EnumObjectManagerObjects.User, 'view')\n\n    return {\n      viewScreenAttributes,\n    }\n  },\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nimport type { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\nimport log from '#shared/utils/log.ts'\n\nimport type {\n  EntityStaticObjectAttributes,\n  ObjectAttribute,\n  ObjectAttributesObject,\n} from '../types/store.ts'\n\nconst staticObjectAttributesEntityModules: Record<\n  string,\n  EntityStaticObjectAttributes\n> = import.meta.glob(['../../*/stores/objectAttributes.ts'], {\n  eager: true,\n  import: 'staticObjectAttributes',\n})\n\nexport const entitiesStaticObjectAttributes = Object.values(\n  staticObjectAttributesEntityModules,\n)\nexport const staticObjectAttributesByEntity =\n  entitiesStaticObjectAttributes.reduce<\n    Record<EnumObjectManagerObjects, ObjectAttribute[]>\n  >(\n    (result, entityItem) => {\n      result[entityItem.name] = entityItem.attributes\n      return result\n    },\n    {} as Record<EnumObjectManagerObjects, ObjectAttribute[]>,\n  )\n\nexport const useObjectAttributesStore = defineStore('objectAttributes', () => {\n  const objectAttributesObjectLookup = ref<\n    Record<string, ObjectAttributesObject>\n  >({})\n\n  const getObjectAttributesForObject = (object: EnumObjectManagerObjects) => {\n    const objectAttributesObject = objectAttributesObjectLookup.value[object]\n\n    if (!objectAttributesObject) {\n      log.error(\n        `Please load the form object attributes first, the object \"${object}\" does not exists in the store.`,\n      )\n    }\n\n    return objectAttributesObject\n  }\n\n  const setObjectAttributesForObject = (\n    object: EnumObjectManagerObjects,\n    data: ObjectAttributesObject,\n  ) => {\n    objectAttributesObjectLookup.value[object] = data\n  }\n\n  return {\n    objectAttributesObjectLookup,\n    setObjectAttributesForObject,\n    getObjectAttributesForObject,\n  }\n})\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nexport interface FocusableOptions {\n  ignoreTabindex?: boolean\n}\n\nconst FOCUSABLE_QUERY =\n  'button, a[href]:not([href=\"\"]), input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n\nexport const isElementVisible = (el: HTMLElement) => {\n  // In Vitest, a visibility check is unreliable due to the used JSDOM test environment.\n  //   Therefore, we always assume the element is visible.\n  if (import.meta.env.VITEST) return true\n  return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length) // from jQuery\n}\n\nconst isNegativeTabIndex = (el: HTMLElement) => {\n  const tabIndex = el.getAttribute('tabindex')\n  return tabIndex && parseInt(tabIndex, 10) < 0\n}\n\nexport const getFocusableElements = (\n  container?: Maybe<HTMLElement>,\n  options: FocusableOptions = {},\n) => {\n  return Array.from<HTMLElement>(\n    container?.querySelectorAll(FOCUSABLE_QUERY) || [],\n  ).filter(\n    (el) =>\n      isElementVisible(el) &&\n      (options.ignoreTabindex || !isNegativeTabIndex(el)) &&\n      !el.hasAttribute('disabled') &&\n      el.getAttribute('aria-disabled') !== 'true',\n  )\n}\n\nexport const getFirstFocusableElement = (container?: Maybe<HTMLElement>) => {\n  return getFocusableElements(container)[0]\n}\n\nexport const getPreviousFocusableElement = (\n  currentElement?: Maybe<HTMLElement>,\n) => {\n  if (!currentElement) return null\n\n  const focusableElements = getFocusableElements(document.body)\n\n  return focusableElements[focusableElements.indexOf(currentElement) - 1]\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport linkifyStr from 'linkify-string'\nimport { isEqual } from 'lodash-es'\n\nexport { htmlCleanup } from './htmlCleanup.ts'\n\ntype Falsy = false | 0 | '' | null | undefined\ntype IsTruthy<T> = T extends Falsy ? never : T\n\nexport const truthy = <T>(value: Maybe<T>): value is IsTruthy<T> => {\n  return !!value\n}\n\nexport const edgesToArray = <T>(\n  object?: Maybe<{ edges?: Maybe<{ node: T }[]> }>,\n): T[] => {\n  return object?.edges?.map((edge) => edge.node) || []\n}\n\nexport const normalizeEdges = <T>(\n  object?: Maybe<{ edges?: { node: T }[]; totalCount?: number }>,\n): { array: T[]; totalCount: number } => {\n  const array = edgesToArray<T>(object)\n  return {\n    array,\n    totalCount: object?.totalCount ?? array.length,\n  }\n}\n\nexport const mergeArray = <T extends unknown[]>(a: T, b: T) => {\n  return [...new Set([...a, ...b])]\n}\n\nexport const waitForAnimationFrame = () => {\n  return new Promise((resolve) => requestAnimationFrame(resolve))\n}\n\nexport const textCleanup = (ascii: string) => {\n  if (!ascii) return ''\n\n  return ascii\n    .trim()\n    .replace(/(\\r\\n|\\n\\r)/g, '\\n') // cleanup\n    .replace(/\\r/g, '\\n') // cleanup\n    .replace(/[ ]\\n/g, '\\n') // remove tailing spaces\n    .replace(/\\n{3,20}/g, '\\n\\n') // remove multiple empty lines\n}\n\n// taken from App.Utils.text2html for consistency\nexport const textToHtml = (text: string) => {\n  text = textCleanup(text)\n  text = linkifyStr(text)\n  text = text.replace(/(\\n\\r|\\r\\n|\\r)/g, '\\n')\n  text = text.replace(/ {2}/g, ' &nbsp;')\n  text = `<div>${text.replace(/\\n/g, '</div><div>')}</div>`\n  return text.replace(/<div><\\/div>/g, '<div><br></div>')\n}\n\nexport const textTruncate = (text: string, length = 100) => {\n  if (!text) return text\n\n  text = text.replace(/<([^>]+)>/g, '')\n\n  if (text.length < length) return text\n\n  return `${text.substring(0, length)}…`\n}\n\nexport const debouncedQuery = <A extends unknown[], R>(\n  fn: (...args: A) => Promise<R>,\n  defaultValue: R,\n  delay = 200,\n) => {\n  let timeout: number | undefined\n  let lastResolve: (() => void) | null = null\n  let lastResult = defaultValue\n  return (...args: A): Promise<R> => {\n    if (timeout) {\n      lastResolve?.()\n      clearTimeout(timeout)\n    }\n    return new Promise<R>((resolve, reject) => {\n      lastResolve = () => resolve(lastResult)\n      timeout = window.setTimeout(() => {\n        fn(...args).then((result) => {\n          lastResult = result\n          resolve(result)\n        }, reject)\n      }, delay)\n    })\n  }\n}\n\nexport const createDeferred = <T>() => {\n  let resolve: (value: T | PromiseLike<T>) => void\n  let reject: (reason?: unknown) => void\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { resolve: resolve!, reject: reject!, promise }\n}\n\nexport const waitForElement = async (\n  query: string,\n  tries = 60,\n): Promise<Element | null> => {\n  if (tries === 0) return null\n  const element = document.querySelector(query)\n  if (element) return element\n  await new Promise((resolve) => requestAnimationFrame(resolve))\n  return waitForElement(query, tries - 1)\n}\n\n/**\n * **Note:** @Generic T supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays.\n * `Object` objects are compared\n * by their own, not inherited, enumerable properties.\n * Functions and DOM\n * nodes are **not** supported.\n * */\nexport const findChangedIndex = <T>(oldArray: T[], newArray: T[]) =>\n  oldArray.findIndex((item, index) => !isEqual(item, newArray[index]))\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\n// to be compatible with app/assets/javascripts/app/lib/app_post/i18n.coffee:267\nexport const markup = (source: string): string =>\n  source\n    .replace(/\\|\\|(.+?)\\|\\|/gm, '<i>$1</i>')\n    .replace(/\\|(.+?)\\|/gm, '<b>$1</b>')\n    .replace(/_(.+?)_/gm, '<u>$1</u>')\n    .replace(/\\/\\/(.+?)\\/\\//gm, '<del>$1</del>')\n    .replace(/§(.+?)§/gm, '<kbd>$1</kbd>')\n    .replace(/\\[(.+?)\\]\\((.+?)\\)/gm, '<a href=\"$2\" target=\"_blank\">$1</a>')\n\nexport const cleanupMarkup = (source: string): string =>\n  source\n    .replace(/\\|\\|(.+?)\\|\\|/gm, '$1')\n    .replace(/\\|(.+?)\\|/gm, '$1')\n    .replace(/_(.+?)_/gm, '$1')\n    .replace(/\\/\\/(.+?)\\/\\//gm, '$1')\n    .replace(/§(.+?)§/gm, '$1')\n    .replace(/\\[(.+?)\\]\\((.+?)\\)/gm, '$1')\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormGroupClassMap } from './types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet formGroupClasses: FormGroupClassMap = {\n  container: 'form-group',\n  help: 'form-group-help',\n  dirtyMark: 'form-group-mark-dirty',\n  bottomMargin: 'form-group-bottom-margin',\n}\n\nexport const initializeFormGroupClasses = (classes: FormGroupClassMap) => {\n  formGroupClasses = classes\n}\n\nexport const getFormGroupClasses = () => formGroupClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormClassMap } from './types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet formClasses: FormClassMap = {\n  loading: 'form-loading',\n}\n\nexport const initializeFormClasses = (classes: FormClassMap) => {\n  formClasses = classes\n}\n\nexport const getFormClasses = () => formClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { Sizes } from '#shared/components/CommonIcon/types.ts'\nimport type {\n  EnumObjectManagerObjects,\n  FormUpdaterQuery,\n} from '#shared/graphql/types.ts'\nimport type { EntityObject } from '#shared/types/entity.ts'\nimport type { FormUpdaterOptions } from '#shared/types/form.ts'\nimport type { ObjectLike } from '#shared/types/utils.ts'\n\nimport type {\n  FormKitClasses,\n  FormKitGroupValue,\n  FormKitNode,\n  FormKitPlugin,\n  FormKitSchemaAttributes,\n  FormKitSchemaCondition,\n  FormKitSchemaNode,\n} from '@formkit/core'\nimport type {\n  FormKitValidationMessages,\n  FormKitValidationRules,\n} from '@formkit/validation'\nimport type { Except, Primitive, SetOptional, SetRequired } from 'type-fest'\nimport type { Ref, ShallowRef } from 'vue'\n\nexport interface FormFieldAdditionalProps {\n  belongsToObjectField?: string\n\n  [index: string]: unknown\n}\n\ntype SimpleFormFieldValueBase =\n  | Primitive\n  | Primitive[]\n  | Record<string, Primitive | Primitive[]>\n\ntype SimpleFormFieldValue =\n  | SimpleFormFieldValueBase\n  | Record<string, SimpleFormFieldValueBase>\n\nexport type FormFieldValue =\n  | SimpleFormFieldValue\n  | SimpleFormFieldValue[]\n  | Record<string, SimpleFormFieldValue>\n  | Record<string, SimpleFormFieldValue>[]\n\nexport interface FormValues {\n  [index: string]: FormFieldValue\n}\n\nexport type FormSubmitData<TFormValues = FormValues> = FormKitGroupValue &\n  TFormValues\n\n// https://formkit.com/essentials/validation#showing-errors\nexport enum FormValidationVisibility {\n  Blur = 'blur',\n  Live = 'live',\n  Dirty = 'dirty',\n  Submit = 'submit',\n}\n\nexport type AllowedClasses = string | Record<string, boolean> | FormKitClasses\n\nexport interface FormSchemaField {\n  if?: string\n  show?: boolean\n  relation?: {\n    type: string\n    filterIds?: number[]\n  }\n  updateFields?: boolean\n  triggerFormUpdater?: boolean\n  pendingValueUpdate?: boolean\n  type: string\n  name: string\n  internal?: boolean\n  value?: FormFieldValue\n  initialValue?: FormFieldValue\n  label?: string\n  labelSrOnly?: boolean\n  labelPlaceholder?: string\n  placeholder?: string\n  help?: string\n  disabled?: boolean\n  required?: boolean\n  delay?: number\n  errors?: string[]\n  hidden?: boolean\n  id?: string\n  sectionsSchema?: Record<\n    string,\n    Partial<FormKitSchemaNode> | FormKitSchemaCondition\n  >\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  validation?: string | Array<[rule: string, ...args: any]>\n  validationMessages?: FormKitValidationMessages\n  validationVisibility?: Exclude<\n    FormValidationVisibility,\n    FormValidationVisibility.Submit\n  >\n  validationRules?: FormKitValidationRules\n  config?: Record<string, unknown>\n  plugins?: FormKitPlugin[]\n  classes?: AllowedClasses\n  props?: FormFieldAdditionalProps\n  outerClass?: AllowedClasses\n  wrapperClass?: AllowedClasses\n  labelClass?: AllowedClasses\n  prefixClass?: AllowedClasses\n  innerClass?: AllowedClasses\n  suffixClass?: AllowedClasses\n  inputClass?: AllowedClasses\n  blockClass?: AllowedClasses\n  helpClass?: AllowedClasses\n  fieldsetClass?: AllowedClasses\n  messagesClass?: AllowedClasses\n  messageClass?: AllowedClasses\n}\n\nexport interface FormSchemaGroupOrList {\n  if?: string\n  isGroupOrList: boolean\n  type: 'group' | 'list'\n  name: string\n  plugins?: FormKitPlugin[]\n}\n\ninterface FormSchemaLayoutBase {\n  isLayout: boolean\n  hidden?: string\n}\n\nexport interface FormSchemaComponent extends FormSchemaLayoutBase {\n  if?: string\n  component: string\n  props?: {\n    [index: string]: unknown\n  }\n}\n\nexport interface FormSchemaDOMElement extends FormSchemaLayoutBase {\n  if?: string\n  element: string\n  attrs?: FormKitSchemaAttributes\n}\n\nexport interface FormSchemaFieldsForObjectAttributeScreen {\n  screen: string\n  object: EnumObjectManagerObjects\n}\n\nexport type FormSchemaFieldObjectAttribute = SetRequired<\n  Partial<FormSchemaField>,\n  'name'\n> & {\n  screen?: string\n  object: EnumObjectManagerObjects\n}\n\nexport type FormSchemaLayout = FormSchemaComponent | FormSchemaDOMElement\n\nexport type FormSchemaNodeWithChildren = (\n  | FormSchemaLayout\n  | FormSchemaGroupOrList\n) & {\n  children:\n    | (\n        | FormSchemaField\n        | FormSchemaFieldObjectAttribute\n        | FormSchemaFieldsForObjectAttributeScreen\n        | FormSchemaNodeWithChildren\n        | string\n      )[]\n    | string\n    | FormKitSchemaCondition\n}\n\nexport type FormSchemaNode =\n  | FormSchemaNodeWithChildren\n  | FormSchemaField\n  | FormSchemaFieldObjectAttribute\n  | FormSchemaFieldsForObjectAttributeScreen\n  | string\n\nexport interface ReactiveFormSchemaDataField {\n  show: boolean\n  staticCondition: boolean\n  updateFields: boolean\n  props: Except<\n    SetOptional<FormSchemaField, 'type'>,\n    'show' | 'props' | 'updateFields' | 'relation'\n  >\n}\n\nexport interface ReactiveFormSchemData {\n  fields: Record<string, ReactiveFormSchemaDataField>\n  flags: Record<string, boolean>\n\n  [index: string]: unknown\n}\n\nexport interface ChangedField {\n  name: string\n  newValue: FormFieldValue\n  oldValue: FormFieldValue\n}\n\nexport type ChangedFieldFunction = {\n  (\n    name: string,\n    callback: (\n      newValue: FormFieldValue,\n      oldValue: FormFieldValue,\n      node: FormKitNode,\n    ) => void,\n  ): void\n}\n\nexport enum FormHandlerExecution {\n  Initial = 'initial',\n  InitialSettled = 'initialSettled',\n  FieldChange = 'fieldChange',\n}\n\nexport interface FormHandlerFunctionData {\n  formNode: FormKitNode | undefined\n\n  getNodeByName(id: string): FormKitNode | undefined\n\n  findNodeByName(name: string): FormKitNode | undefined\n\n  values: FormValues\n  changedField?: ChangedField\n  initialEntityObject?: ObjectLike\n\n  formUpdaterData?: FormUpdaterQuery['formUpdater']\n}\n\ntype UpdateSchemaDataFieldFunction = (\n  field: FormSchemaField | SetRequired<Partial<FormSchemaField>, 'name'>,\n) => void\n\nexport interface FormHandlerFunctionReactivity {\n  changeFields: Ref<Record<string, Partial<FormSchemaField>>>\n  schemaData: ReactiveFormSchemData\n  // This can be used to update the current schema data, but without remembering it inside\n  // the changeFields and schemaData objects (which means it's persistent).\n  updateSchemaDataField: UpdateSchemaDataFieldFunction\n}\n\nexport type FormHandlerFunction = (\n  execution: FormHandlerExecution,\n  reactivity: FormHandlerFunctionReactivity,\n  data: FormHandlerFunctionData,\n) => void\n\nexport interface FormHandler {\n  execution: FormHandlerExecution[]\n  callback: FormHandlerFunction\n}\n\n// With this it's possible to add an own reset handling to the form submit\n// and also an finally function after the reset.\n// A use case is when you have two groups inside a form but one group is not available\n// when you start with the from (e.g. article in ticket context). With the normal reset\n// the default initial values will be set with the two groups (when both are active during the submit).\nexport interface FormOnSubmitFunctionCallbacks {\n  reset?: (values: FormSubmitData, nodeValues: FormValues) => void\n  finally?: () => void\n}\n\nexport interface FormResetData {\n  values?: FormValues\n  object?: EntityObject\n}\n\nexport interface FormResetOptions {\n  /**\n   * Should reset dirty fields to new values.\n   * @default true\n   */\n  resetDirty?: boolean\n  /**\n   * Should reset flags to false.\n   * @default true\n   */\n  resetFlags?: boolean\n  groupNode?: FormKitNode\n}\n\nexport interface FormRef {\n  formId: string\n  formNode: FormKitNode\n  formInitialSettled: boolean\n  values: FormValues\n  flags: Record<string, boolean>\n  updateSchemaDataField: UpdateSchemaDataFieldFunction\n  updateChangedFields: (\n    changedFields: Record<string, Partial<FormSchemaField>>,\n  ) => void\n\n  getNodeByName(id: string): FormKitNode | undefined\n\n  findNodeByName(name: string): FormKitNode | undefined\n\n  resetForm(data?: FormResetData, options?: FormResetOptions): void\n\n  triggerFormUpdater(options?: FormUpdaterOptions): void\n}\n\nexport type FormRefParameter = ShallowRef<FormRef | undefined>\n\nexport interface FormStep {\n  label: string\n  order: number\n  errorCount: number\n  valid: boolean\n  disabled: boolean\n  completed: boolean\n}\n\nexport type FormClass = 'loading'\nexport type FormClassMap = Record<FormClass, string>\n\nexport type FormGroupClass = 'container' | 'help' | 'dirtyMark' | 'bottomMargin'\nexport type FormGroupClassMap = Record<FormGroupClass, string>\n\nexport type FieldLinkClass = 'container' | 'base' | 'link'\nexport type FieldLinkClassMap = Record<FieldLinkClass, string>\n\nexport type FieldEditorClass = {\n  actionBar: {\n    buttonContainer: string\n    tableMenuContainer: string\n    leftGradient: {\n      left: string\n      before: {\n        background: {\n          light: string\n          dark: string\n        }\n      }\n    }\n    rightGradient: {\n      before: {\n        background: {\n          light: string\n          dark: string\n        }\n      }\n    }\n    shadowGradient: {\n      before: {\n        top: string\n        height: string\n      }\n    }\n    button: {\n      base: string\n      active: string\n      action?: Record<string, string>\n    }\n  }\n  input: {\n    container: string\n  }\n}\n\nexport type FieldEditorProps = {\n  actionBar: {\n    visible?: boolean\n    button: {\n      icon: {\n        size: Sizes\n      }\n    }\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { onKeyStroke } from '@vueuse/core'\nimport { ref, type Ref, type ShallowRef } from 'vue'\n\nimport { getFocusableElements } from '#shared/utils/getFocusableElements.ts'\n\nexport const useTrapTab = <T extends HTMLElement>(\n  container: Readonly<ShallowRef<T | null>>,\n  noAutoActivation = false,\n) => {\n  const trapFocus = (e: KeyboardEvent) => {\n    const focusableElements = getFocusableElements(container.value)\n    const firstFocusableElement = focusableElements[0]\n    const lastFocusableElement = focusableElements[focusableElements.length - 1]\n\n    if (e.shiftKey) {\n      // if shift key pressed for shift + tab combination\n      if (document.activeElement === firstFocusableElement) {\n        lastFocusableElement.focus() // add focus for the last focusable element\n        e.preventDefault()\n      }\n      return\n    }\n\n    if (document.activeElement === lastFocusableElement) {\n      // if focused has reached to last focusable element then focus first focusable element after pressing tab\n      firstFocusableElement.focus() // add focus for the first focusable element\n      e.preventDefault()\n    }\n  }\n\n  const active = ref(!noAutoActivation)\n\n  const activateTabTrap = () => {\n    active.value = true\n  }\n\n  const deactivateTabTrap = () => {\n    active.value = false\n  }\n\n  onKeyStroke(\n    (e) => {\n      if (!active.value) return\n\n      const isTab = e.key === 'Tab' || e.keyCode === 9\n\n      if (!isTab) return\n\n      trapFocus(e)\n    },\n    { target: container as Ref<EventTarget> },\n  )\n\n  const moveNextFocusToTrap = () => {\n    if (!container.value) return\n\n    const dummyElement = document.createElement('div')\n    dummyElement.tabIndex = 0\n\n    requestAnimationFrame(() => {\n      container.value?.prepend(dummyElement)\n      dummyElement.focus()\n      dummyElement.remove()\n    })\n  }\n\n  return {\n    activateTabTrap,\n    deactivateTabTrap,\n    moveNextFocusToTrap,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\n// Classes\nlet popoverClasses = {\n  base: '',\n  arrow: '',\n}\n\nexport const initializePopoverClasses = (classes: typeof popoverClasses) => {\n  popoverClasses = classes\n}\nexport const getPopoverClasses = () => popoverClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createSection } from '@formkit/inputs'\n\nimport type { FormKitSchemaNode } from '@formkit/core'\n\nexport const arrow = createSection(\n  'arrow',\n  () =>\n    ({\n      $el: 'div',\n      attrs: {\n        class: '$classes.arrow',\n      },\n      children: [\n        {\n          $cmp: 'CommonIcon',\n          props: {\n            size: 'base',\n            class: 'shrink-0',\n            name: '$arrowIconName',\n            decorative: true,\n          },\n        },\n      ],\n    }) as FormKitSchemaNode,\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createSection } from '@formkit/inputs'\n\nexport const block = createSection('block', () => {\n  return {\n    $el: 'div',\n    attrs: {\n      onClick: \"$handlers.bindEmit('block-click')\",\n    },\n  }\n})\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldLinkClassMap } from './types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet linkClasses: FieldLinkClassMap = {\n  container: 'field-link-container',\n  base: 'field-link-base',\n  link: 'field-link-link',\n}\n\nexport const initializeFieldLinkClasses = (classes: FieldLinkClassMap) => {\n  linkClasses = classes\n}\n\nexport const getFieldLinkClasses = () => linkClasses\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { getFieldLinkClasses } from './initializeFieldLinkClasses.ts'\n\nimport type { RouteLocationRaw } from 'vue-router'\n\nwithDefaults(\n  defineProps<{\n    id: string\n    link: RouteLocationRaw\n    linkIcon?: string\n    linkLabel?: string\n    onLinkClick?: (e: MouseEvent) => void\n  }>(),\n  {\n    linkIcon: 'form-field-link',\n    linkLabel: __('Link'),\n  },\n)\n\nconst classMap = getFieldLinkClasses()\n</script>\n\n<template>\n  <div :class=\"classMap.container\">\n    <div\n      :class=\"classMap.base\"\n      class=\"flex h-full items-center focus:outline-hidden\"\n    >\n      <CommonLink\n        v-if=\"link\"\n        :link=\"link\"\n        :class=\"classMap.link\"\n        :aria-label=\"$t(linkLabel)\"\n        class=\"flex items-center justify-center\"\n        open-in-new-tab\n        @click=\"onLinkClick\"\n      >\n        <CommonIcon :name=\"linkIcon\" size=\"small\" decorative />\n      </CommonLink>\n    </div>\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createSection } from '@formkit/inputs'\nimport { markRaw } from 'vue'\n\nimport FormFieldLink from '#shared/components/Form/FormFieldLink.vue'\n\nimport type { FormKitSchemaNode } from '@formkit/core'\n\nexport const link = createSection(\n  'link',\n  () =>\n    ({\n      $cmp: markRaw(FormFieldLink),\n      if: '$link',\n      props: {\n        id: '$id',\n        link: '$link',\n        linkIcon: '$linkIcon',\n        linkLabel: '$linkLabel',\n        onLinkClick: '$onLinkClick',\n      },\n    }) as unknown as FormKitSchemaNode,\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst addBlurEvent = (node: FormKitNode) => {\n  node.on('created', () => {\n    if (!node.context) return\n\n    const originalBlurHandler = node.context.handlers.blur as (\n      e?: FocusEvent,\n    ) => void\n\n    node.context.handlers.blur = (event?: FocusEvent) => {\n      node.emit('blur', node.context?.value)\n      // if node was not destroyed\n      if (node.context) {\n        originalBlurHandler(event)\n      }\n    }\n  })\n}\n\nexport default addBlurEvent\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { toRef } from 'vue'\n\nimport { useLocaleStore } from '#shared/stores/locale.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst formLocaleDir = (node: FormKitNode) => {\n  const locale = useLocaleStore()\n  const { props } = node\n  node.addProps(['localeDir', 'arrowIconName'])\n\n  props.localeDir = toRef(() => locale.localeData?.dir ?? 'ltr')\n  props.arrowIconName = toRef(\n    () => `chevron-${locale.localeData?.dir === 'rtl' ? 'left' : 'right'}`,\n  )\n}\n\nexport default formLocaleDir\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst hideField = (node: FormKitNode) => {\n  node.addProps(['hidden'])\n\n  node.on('created', () => {\n    const { props } = node\n\n    if (props.hidden) {\n      props.outerClass = 'hidden'\n    }\n\n    node.on('prop:hidden', ({ payload }) => {\n      if (payload) {\n        props.outerClass = `${props.outerClass} hidden`\n      } else if (props.outerClass) {\n        props.outerClass = props.outerClass.replace('hidden', '')\n      }\n    })\n  })\n}\n\nexport default hideField\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createMessage } from '@formkit/core'\nimport { isEmpty } from 'lodash-es'\nimport { computed } from 'vue'\n\nimport { i18n } from '#shared/i18n.ts'\n\nimport type { FormKitNode } from '@formkit/core'\nimport type { ComputedRef } from 'vue'\n\nconst propsToTranslate = ['label', 'placeholder', 'help']\nconst attrsToTranslate = ['placeholder']\n\nconst translateAttrs = (node: FormKitNode, attrs: Record<string, string>) => {\n  const translatedAttrs: Record<string, string | ComputedRef<string>> = {\n    ...attrs,\n  }\n\n  attrsToTranslate.forEach((attr) => {\n    if (\n      attr in attrs &&\n      (!node.store[attr] || node.store[attr].value !== attrs[attr])\n    ) {\n      // Remember the source message.\n      node.store.set(\n        createMessage({\n          key: attr,\n          type: 'ui',\n          value: attrs[attr] as string,\n        }),\n      )\n    }\n\n    if (node.store[attr] && node.store[attr].value) {\n      translatedAttrs.placeholder = computed(() => {\n        return i18n.t(node.store.placeholder.value as string)\n      })\n    }\n  })\n\n  return translatedAttrs\n}\n\nconst translateWrapperProps = (node: FormKitNode) => {\n  node.hook.prop(({ prop, value }, next) => {\n    const propName = prop as string\n    if (propName === 'attrs' && !isEmpty(value)) {\n      // eslint-disable-next-line vue/no-ref-as-operand\n      value = translateAttrs(node, value)\n    }\n    if (propsToTranslate.includes(propName)) {\n      // eslint-disable-next-line vue/no-ref-as-operand\n      if (!node.store[propName] || node.store[propName].value !== value) {\n        node.store.set(\n          createMessage({\n            key: propName,\n            type: 'ui',\n            value,\n          }),\n        )\n      }\n\n      if (propName === 'label') {\n        // eslint-disable-next-line vue/no-ref-as-operand\n        value = computed(() => {\n          return i18n.t(\n            node.store[propName].value as string,\n            ...(node.props.labelPlaceholder || []),\n          )\n        })\n      } else {\n        // eslint-disable-next-line vue/no-ref-as-operand\n        value = computed(() => {\n          return i18n.t(node.store[propName].value as string)\n        })\n      }\n    }\n    return next({ prop, value })\n  })\n\n  // Trigger hooks for props that were already set (at the moment more a hack, will be improvd in FormKit).\n  node.on('created', () => {\n    propsToTranslate.forEach((prop) => {\n      if (prop in node.props) {\n        // eslint-disable-next-line no-self-assign\n        node.props[prop] = node.props[prop]\n      }\n    })\n  })\n}\n\nexport default translateWrapperProps\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormDefaultProps } from '#shared/types/form.ts'\n\nimport addBlurEvent from '../features/addBlurEvent.ts'\nimport formLocaleDir from '../features/formLocaleDir.ts'\nimport hideField from '../features/hideField.ts'\nimport translateWrapperProps from '../features/translateWrapperProps.ts'\n\nimport type { FormKitTypeDefinition } from '@formkit/core'\n\nconst defaultProps: (keyof FormDefaultProps)[] = [\n  'formId',\n  'labelSrOnly',\n  'labelPlaceholder',\n  'internal',\n]\n\nconst defaulfFieldDefinition: Required<\n  Pick<FormKitTypeDefinition, 'props' | 'features'>\n> = {\n  features: [translateWrapperProps, hideField, addBlurEvent, formLocaleDir],\n  props: defaultProps,\n}\n\nexport default defaulfFieldDefinition\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport {\n  outer,\n  inner,\n  wrapper,\n  icon,\n  help,\n  messages,\n  message,\n  prefix,\n  suffix,\n  label,\n} from '@formkit/inputs'\n\nimport { mergeArray } from '#shared/utils/helpers.ts'\n\nimport { arrow } from '../sections/arrow.ts'\nimport { block } from '../sections/block.ts'\nimport { link } from '../sections/link.ts'\n\nimport defaulfFieldDefinition from './defaultFieldDefinition.ts'\n\nimport type { FormKitTypeDefinition } from '@formkit/core'\nimport type {\n  FormKitSchemaExtendableSection,\n  FormKitInputs,\n  FormKitSlotData,\n} from '@formkit/inputs'\n\ndeclare module '@formkit/inputs' {\n  interface FormKitBaseSlots<Props extends FormKitInputs<Props>> {\n    // Add new slots or modify existing ones directly here\n    link: FormKitSlotData<Props>\n  }\n}\n\nexport interface FieldsCustomOptions {\n  addDefaultProps?: boolean\n  addDefaultFeatures?: boolean\n  addArrow?: boolean\n  schema?: () => FormKitSchemaExtendableSection\n}\n\nconst initializeFieldDefinition = (\n  definition: FormKitTypeDefinition,\n  additionalDefinitionOptions: Pick<\n    FormKitTypeDefinition,\n    'props' | 'features'\n  > = {},\n  options: FieldsCustomOptions = {},\n) => {\n  const {\n    addDefaultProps = true,\n    addDefaultFeatures = true,\n    addArrow = false,\n  } = options\n\n  const localDefinition = definition\n  localDefinition.props = Array.isArray(localDefinition.props)\n    ? localDefinition.props\n    : []\n  localDefinition.features ||= []\n\n  if (options.schema) {\n    const wrapperSchema = wrapper(\n      label('$label'),\n      inner(\n        icon('prefix', 'label'),\n        prefix(),\n        options.schema(),\n        suffix(),\n        icon('suffix'),\n      ),\n    )\n    const blockSchema = [wrapperSchema]\n\n    if (addArrow) {\n      blockSchema.push(arrow())\n    }\n\n    blockSchema.push(link())\n\n    localDefinition.schema = outer(\n      block(...blockSchema),\n      help('$help'),\n      messages(message('$message.value')),\n    )\n  }\n\n  const additionalProps = Array.isArray(additionalDefinitionOptions.props)\n    ? additionalDefinitionOptions.props\n    : []\n  if (addDefaultProps) {\n    const defaulfFieldDefinitionProps = Array.isArray(\n      defaulfFieldDefinition.props,\n    )\n      ? defaulfFieldDefinition.props\n      : []\n\n    localDefinition.props = mergeArray(\n      localDefinition.props,\n      defaulfFieldDefinitionProps.concat(additionalProps),\n    )\n  }\n\n  const additionalFeatures = additionalDefinitionOptions.features || []\n  if (addDefaultFeatures) {\n    localDefinition.features = mergeArray(\n      defaulfFieldDefinition.features.concat(additionalFeatures),\n      localDefinition.features,\n    )\n  }\n}\n\nexport default initializeFieldDefinition\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createSection } from '@formkit/inputs'\nimport { cloneAny } from '@formkit/utils'\nimport { markRaw } from 'vue'\n\nimport initializeFieldDefinition from './initializeFieldDefinition.ts'\n\nimport type { FieldsCustomOptions } from './initializeFieldDefinition.ts'\nimport type { FormKitSchemaNode, FormKitTypeDefinition } from '@formkit/core'\nimport type { FormKitSchemaExtendableSection } from '@formkit/inputs'\nimport type { Component } from 'vue'\n\nlet totalCreated = 0\n\nconst isComponent = (obj: unknown): obj is Component => {\n  if (!obj) return false\n  return Boolean(\n    (typeof obj === 'function' && obj.length === 2) ||\n      (typeof obj === 'object' &&\n        !Array.isArray(obj) &&\n        !('$el' in obj) &&\n        !('$cmp' in obj) &&\n        !('if' in obj)),\n  )\n}\n\n/**\n * Wrapper around the formkit createInput function. This function adds the default initilization of the\n * field definition.\n *\n * @param schemaOrComponent - The actual input schema or component.\n * @param props - The additional props for the field.\n * @param customDefinition - Additional formkit type definition options.\n * @param options - Add some field custom options.\n * @public\n */\nconst createInput = (\n  schemaOrComponent: FormKitSchemaNode | Component,\n  props?: string[],\n  customDefinition: Partial<FormKitTypeDefinition> = {},\n  options: FieldsCustomOptions = {},\n): FormKitTypeDefinition => {\n  customDefinition.props = props\n\n  const definition = {\n    type: 'input' as const,\n    ...customDefinition,\n  }\n  let schema: () => FormKitSchemaExtendableSection\n  if (isComponent(schemaOrComponent)) {\n    // eslint-disable-next-line no-plusplus\n    const cmpName = `CustomSchemaComponent${totalCreated++}`\n    schema = createSection('input', () => ({\n      $cmp: cmpName,\n      props: {\n        context: '$node.context',\n      },\n    }))\n    definition.library = { [cmpName]: markRaw(schemaOrComponent) }\n  } else {\n    schema = createSection('input', () => cloneAny(schemaOrComponent))\n  }\n\n  initializeFieldDefinition(definition, {}, { ...options, schema })\n\n  if (!definition.schemaMemoKey) {\n    definition.schemaMemoKey = `${Math.random()}`\n  }\n\n  return definition\n}\n\nexport default createInput\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useAppName } from '#shared/composables/useAppName.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst addLink = (node: FormKitNode) => {\n  const { props } = node\n\n  node.addProps(['link', 'linkIcon', 'linkLabel', 'onLinkClick'])\n\n  // The padding below is specific to mobile field layout only.\n  if (useAppName() !== 'mobile') return\n\n  const toggleLink = (isLink: boolean) => {\n    if (isLink) {\n      props.inputClass = `${props.inputClass || ''} ltr:pr-2 rtl:pl-2`\n    } else if (props.inputClass) {\n      props.inputClass = props.inputClass.replace('ltr:pr-2 rtl:pl-2', '')\n    }\n  }\n\n  node.on('created', () => {\n    toggleLink(!!props.link)\n\n    node.on('prop:link', ({ payload }) => {\n      toggleLink(!!payload)\n    })\n  })\n}\n\nexport default addLink\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormUpdaterTrigger } from '../../types/form.ts'\nimport type { FormKitNode } from '@formkit/core'\n\nconst formUpdaterTrigger = (\n  defaultTrigger: FormUpdaterTrigger = 'direct',\n  defaultTriggerDelay = 300,\n) => {\n  return (node: FormKitNode) => {\n    const { props } = node\n\n    node.addProps([\n      'triggerFormUpdater',\n      'formUpdaterTrigger',\n      'pendingValueUpdate',\n    ])\n\n    node.on('created', () => {\n      if (!props.formUpdaterTrigger) {\n        props.formUpdaterTrigger = defaultTrigger\n      }\n\n      if (\n        props.triggerFormUpdater &&\n        props.formUpdaterTrigger === 'delayed' &&\n        (!props.delay || props.delay < defaultTriggerDelay)\n      ) {\n        props.delay = defaultTriggerDelay\n      }\n\n      const { context } = node\n\n      if (!context) return\n\n      // Reset pending value update prop if needed.\n      node.hook.input((payload, next) => {\n        if (context.pendingValueUpdate) context.pendingValueUpdate = false\n\n        return next(payload)\n      })\n    })\n  }\n}\n\nexport default formUpdaterTrigger\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed, type Ref } from 'vue'\n\nimport { type FormFieldContext } from '../types/field.ts'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst useValue = <T = any>(\n  context: Ref<FormFieldContext<{ multiple?: boolean; clearValue?: unknown }>>,\n) => {\n  const currentValue = computed(() => context.value._value as T)\n\n  const hasValue = computed(() => {\n    return context.value.fns.hasValue(currentValue.value)\n  })\n\n  const valueContainer = computed<T[]>(() =>\n    context.value.multiple ? (currentValue.value as T[]) : [currentValue.value],\n  )\n\n  const isCurrentValue = (value: T) => {\n    if (!hasValue.value) return false\n    return (valueContainer.value as unknown as T[]).includes(value)\n  }\n\n  const clearValue = (asyncSettling = true) => {\n    if (!hasValue.value) return\n    // if value is undefined, it is not sent to the backend\n    // we want to clear the value, so we set it to null\n    const clearValue =\n      context.value.clearValue !== undefined ? context.value.clearValue : null\n    context.value.node.input(clearValue, asyncSettling)\n  }\n\n  const localValue = computed({\n    get: () => currentValue.value,\n    set: (value) => {\n      context.value.node.input(value)\n    },\n  })\n\n  return {\n    localValue,\n    currentValue,\n    hasValue,\n    valueContainer,\n    isCurrentValue,\n    clearValue,\n  }\n}\n\nexport default useValue\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { cloneDeep, keyBy } from 'lodash-es'\nimport { computed, ref, type Ref, watch } from 'vue'\n\nimport type {\n  SelectOption,\n  SelectValue,\n} from '#shared/components/CommonSelect/types.ts'\nimport useValue from '#shared/components/Form/composables/useValue.ts'\nimport type { AutoCompleteOption } from '#shared/components/Form/fields/FieldAutocomplete/types'\nimport type { SelectOptionSorting } from '#shared/components/Form/fields/FieldSelect/types.ts'\nimport type { FlatSelectOption } from '#shared/components/Form/fields/FieldTreeSelect/types.ts'\nimport type { FormFieldContext } from '#shared/components/Form/types/field.ts'\nimport { i18n } from '#shared/i18n.ts'\n\ntype AllowedSelectValue = SelectValue | Record<string, unknown>\n\nconst useSelectOptions = <\n  T extends SelectOption[] | FlatSelectOption[] | AutoCompleteOption[],\n>(\n  options: Ref<T>,\n  context: Ref<\n    FormFieldContext<{\n      historicalOptions?: Record<string, string>\n      multiple?: boolean\n      noOptionsLabelTranslation?: boolean\n      rejectNonExistentValues?: boolean\n      sorting?: SelectOptionSorting\n      complexValue?: boolean\n    }>\n  >,\n) => {\n  const dialog = ref<HTMLElement>()\n\n  const { currentValue, hasValue, valueContainer, clearValue } =\n    useValue(context)\n\n  const appendedOptions = ref<T>([] as unknown as T)\n\n  const availableOptions = computed(() => [\n    ...(options.value || []),\n    ...appendedOptions.value,\n  ])\n\n  const hasStatusProperty = computed(() =>\n    availableOptions.value?.some(\n      (option) => (option as SelectOption | FlatSelectOption).status,\n    ),\n  )\n\n  const translatedOptions = computed(() => {\n    if (!availableOptions.value) return []\n\n    const { noOptionsLabelTranslation } = context.value\n\n    return availableOptions.value.map((option) => {\n      const label =\n        noOptionsLabelTranslation && !option.labelPlaceholder\n          ? option.label || ''\n          : i18n.t(option.label, ...(option.labelPlaceholder || []))\n\n      const variant = option as AutoCompleteOption\n      const heading =\n        noOptionsLabelTranslation && !variant.headingPlaceholder\n          ? variant.heading || ''\n          : i18n.t(variant.heading, ...(variant.headingPlaceholder || []))\n\n      return {\n        ...option,\n        label,\n        heading,\n      }\n    })\n  })\n\n  const optionValueLookup = computed(() =>\n    keyBy(translatedOptions.value, 'value'),\n  )\n\n  const sortedOptions = computed(() => {\n    const { sorting } = context.value\n\n    if (!sorting) return translatedOptions.value\n\n    if (sorting !== 'label' && sorting !== 'value') {\n      console.warn(`Unsupported sorting option \"${sorting}\"`)\n      return translatedOptions.value\n    }\n\n    return [...translatedOptions.value]?.sort((a, b) => {\n      const aLabelOrValue = a[sorting] || a.value\n      const bLabelOrValue = b[sorting] || a.value\n      return String(aLabelOrValue).localeCompare(String(bLabelOrValue))\n    })\n  })\n\n  const getSelectedOption = (selectedValue: AllowedSelectValue): T[number] => {\n    if (typeof selectedValue === 'object' && selectedValue !== null)\n      return selectedValue as unknown as T[number]\n    const key = selectedValue.toString()\n    return optionValueLookup.value[key]\n  }\n\n  const getSelectedOptionIcon = (selectedValue: AllowedSelectValue) => {\n    const option = getSelectedOption(selectedValue)\n    return option?.icon as string\n  }\n\n  const getSelectedOptionValue = (selectedValue: AllowedSelectValue) => {\n    if (typeof selectedValue !== 'object') return selectedValue\n    const option = getSelectedOption(selectedValue)\n    return option?.value\n  }\n\n  const getSelectedOptionLabel = (selectedValue: AllowedSelectValue) => {\n    const option = getSelectedOption(selectedValue)\n    return option?.label\n  }\n\n  const getSelectedOptionStatus = (selectedValue: AllowedSelectValue) => {\n    const option = getSelectedOption(selectedValue) as\n      | SelectOption\n      | FlatSelectOption\n    return option?.status\n  }\n\n  const getSelectedOptionParents = (\n    selectedValue: string | number,\n  ): SelectValue[] =>\n    (optionValueLookup.value[selectedValue] &&\n      (optionValueLookup.value[selectedValue] as FlatSelectOption).parents) ||\n    []\n\n  const getSelectedOptionFullPath = (selectedValue: string | number) =>\n    getSelectedOptionParents(selectedValue)\n      .map((parentValue) => `${getSelectedOptionLabel(parentValue)} \\u203A `)\n      .join('') +\n    (getSelectedOptionLabel(selectedValue) ||\n      i18n.t('%s (unknown)', selectedValue.toString()))\n\n  const valueBuilder = (option: SelectOption): AllowedSelectValue => {\n    return context.value.complexValue\n      ? { value: option.value, label: option.label }\n      : option.value\n  }\n\n  const selectOption = (option: T extends Array<infer V> ? V : never) => {\n    if (!context.value.multiple) {\n      context.value.node.input(valueBuilder(option))\n      return\n    }\n\n    const selectedValues = cloneDeep(currentValue.value) || []\n    const optionIndex = selectedValues.indexOf(option.value)\n    if (optionIndex !== -1) selectedValues.splice(optionIndex, 1)\n    else selectedValues.push(valueBuilder(option))\n    selectedValues.sort(\n      (a: string | number, b: string | number) =>\n        sortedOptions.value.findIndex((option) => option.value === a) -\n        sortedOptions.value.findIndex((option) => option.value === b),\n    )\n    context.value.node.input(selectedValues)\n  }\n\n  const getDialogFocusTargets = (optionsOnly?: boolean): HTMLElement[] => {\n    const containerElement = dialog.value?.parentElement\n    if (!containerElement) return []\n\n    const targetElements = Array.from(\n      containerElement.querySelectorAll<HTMLElement>('[tabindex=\"0\"]'),\n    )\n    if (!targetElements) return []\n\n    if (optionsOnly)\n      return targetElements.filter(\n        (targetElement) =>\n          targetElement.attributes.getNamedItem('role')?.value === 'option',\n      )\n\n    return targetElements\n  }\n\n  const handleValuesForNonExistingOrDisabledOptions = (\n    rejectNonExistentValues?: boolean,\n  ) => {\n    if (!hasValue.value || context.value.pendingValueUpdate) return\n\n    const localRejectNonExistentValues = rejectNonExistentValues ?? true\n\n    if (context.value.multiple) {\n      const availableValues = currentValue.value.filter(\n        (selectValue: string | number) => {\n          const selectValueOption = optionValueLookup.value[selectValue]\n          return (\n            (localRejectNonExistentValues &&\n              typeof selectValueOption !== 'undefined' &&\n              selectValueOption?.disabled !== true) ||\n            (!localRejectNonExistentValues &&\n              selectValueOption?.disabled !== true)\n          )\n        },\n      ) as SelectValue[]\n\n      if (availableValues.length !== currentValue.value.length) {\n        context.value.node.input(availableValues, false)\n      }\n\n      return\n    }\n\n    const currentValueOption = optionValueLookup.value[currentValue.value]\n    if (\n      (localRejectNonExistentValues &&\n        typeof currentValueOption === 'undefined') ||\n      currentValueOption?.disabled\n    )\n      clearValue(false)\n  }\n\n  // Setup a mechanism to handle missing and disabled options, including:\n  //   - appending historical options for current values\n  //   - clearing value in case options are missing\n  const setupMissingOrDisabledOptionHandling = () => {\n    const { historicalOptions } = context.value\n\n    // When we are in a \"create\" form situation and no 'rejectNonExistentValues' flag\n    // is given, it should be activated.\n    if (context.value.rejectNonExistentValues === undefined) {\n      const rootNode = context.value.node.at('$root')\n      context.value.rejectNonExistentValues =\n        rootNode &&\n        rootNode.name !== context.value.node.name &&\n        !rootNode.context?.initialEntityObject\n    }\n\n    // Remember current optionValueLookup in node context.\n    context.value.optionValueLookup = optionValueLookup\n\n    // TODO: Workaround for empty string, because currently the \"nulloption\" exists also for multiselect fields (#4513).\n    if (context.value.multiple) {\n      watch(\n        () =>\n          hasValue.value &&\n          valueContainer.value.includes('') &&\n          context.value.clearable &&\n          !options.value.some((option) => option.value === ''),\n        () => {\n          const emptyOption: SelectOption = {\n            value: '',\n            label: '-',\n          }\n\n          ;(appendedOptions.value as SelectOption[]).unshift(emptyOption)\n        },\n      )\n    }\n\n    // Append historical options to the list of available options, if:\n    //   - non-existent values are not supposed to be rejected\n    //   - we have a current value\n    //   - we have a list of historical options\n    if (\n      !context.value.rejectNonExistentValues &&\n      hasValue.value &&\n      historicalOptions\n    ) {\n      appendedOptions.value = valueContainer.value.reduce(\n        (accumulator: SelectOption[], value: SelectValue) => {\n          const label = historicalOptions[value.toString()]\n          // Make sure the options are not duplicated!\n          if (\n            label &&\n            !options.value.some((option) => option.value === value)\n          ) {\n            accumulator.push({ value, label })\n          }\n          // TODO: Workaround, because currently the \"nulloption\" exists also for multiselect fields (#4513).\n          else if (\n            context.value.multiple &&\n            !label &&\n            value === '' &&\n            !options.value.some((option) => option.value === value)\n          ) {\n            accumulator.unshift({ value, label: '-' })\n          }\n\n          return accumulator\n        },\n        [],\n      )\n    }\n\n    // Reject non-existent or disabled option values during the initialization phase (note that\n    //  the non-existent values behavior is controlled by a dedicated flag).\n    handleValuesForNonExistingOrDisabledOptions(\n      context.value.rejectNonExistentValues,\n    )\n\n    // Set up a watcher that clears a missing option value or disabled options on subsequent mutations\n    //  of the options prop (in this case, the dedicated \"rejectNonExistentValues\" flag is ignored).\n    watch(options, () => handleValuesForNonExistingOrDisabledOptions())\n  }\n\n  return {\n    dialog,\n    hasStatusProperty,\n    translatedOptions,\n    optionValueLookup,\n    sortedOptions,\n    getSelectedOption,\n    getSelectedOptionValue,\n    getSelectedOptionIcon,\n    getSelectedOptionLabel,\n    getSelectedOptionStatus,\n    getSelectedOptionParents,\n    getSelectedOptionFullPath,\n    selectOption,\n    getDialogFocusTargets,\n    setupMissingOrDisabledOptionHandling,\n    appendedOptions,\n  }\n}\n\nexport default useSelectOptions\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { onUnmounted } from 'vue'\n\nimport type { FormFieldContext } from '#shared/components/Form/types/field.ts'\n\nimport type { Ref } from 'vue'\n\n// TODO maybe there is a better way to do this with FormKit?\nexport const useFormBlock = (\n  context: Ref<FormFieldContext>,\n  cb: (e: MouseEvent) => void,\n) => {\n  const receipt = context.value.node.on('block-click', ({ payload }) => {\n    if (context.value.disabled) return\n\n    const target = payload.target as HTMLElement | null\n\n    // ignore link\n    if (!target || target.classList.contains('formkit-link')) return\n    if (target.querySelector('.formkit-link')) return\n    if (target.closest('.formkit-link')) return\n\n    cb(payload)\n  })\n\n  onUnmounted(() => {\n    context.value.node.off(receipt)\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { onKeyStroke, unrefElement } from '@vueuse/core'\n\nimport stopEvent from '#shared/utils/events.ts'\nimport { getFocusableElements } from '#shared/utils/getFocusableElements.ts'\n\nimport type { MaybeRefOrGetter } from '@vueuse/core'\nimport type { Ref } from 'vue'\n\n// https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#keyboard_interactions\n// - Type-ahead is recommended for all listboxes, especially those with more than seven options\nexport const useFocusWhenTyping = (\n  container: MaybeRefOrGetter<HTMLElement | undefined | null>,\n) => {\n  let filter = ''\n  let timeout = 0\n\n  onKeyStroke(\n    (e) => {\n      // only process alphanumeric keys\n      if (e.location !== 0 || (e.key.length !== 1 && e.key !== 'Backspace'))\n        return\n\n      if (e.key === ' ') {\n        if (filter === '') return // don't start timeout, if not filtering\n        stopEvent(e) // don't select option, if in the process of filtering\n      }\n\n      window.clearTimeout(timeout)\n\n      timeout = window.setTimeout(() => {\n        const option = getFocusableElements(unrefElement(container)).find(\n          (el) => {\n            const content = el.textContent?.toLowerCase().trim() ?? ''\n            const filtered = filter.toLowerCase()\n            if (content.startsWith(filtered)) return true\n            const label =\n              el.getAttribute('aria-label')?.toLowerCase().trim() ?? ''\n            return label.startsWith(filtered)\n          },\n        )\n        option?.focus()\n        filter = ''\n      }, 250)\n\n      if (e.key === 'Backspace') filter = filter.slice(0, filter.length - 1)\n      else filter += e.key\n    },\n    { target: container as Ref<EventTarget> },\n  )\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { onKeyStroke, unrefElement } from '@vueuse/core'\n\nimport stopEvent from '#shared/utils/events.ts'\nimport { getFocusableElements } from '#shared/utils/getFocusableElements.ts'\nimport type { FocusableOptions } from '#shared/utils/getFocusableElements.ts'\n\nimport type { MaybeRefOrGetter } from '@vueuse/shared'\n\ntype TraverseDirection = 'horizontal' | 'vertical' | 'mixed'\ntype ReturnValue = boolean | null | void | undefined\n\ninterface TraverseOptions extends FocusableOptions {\n  onNext?(key: string, element: HTMLElement): ReturnValue\n  onPrevious?(key: string, element: HTMLElement): ReturnValue\n  /**\n   * @default true\n   */\n  scrollIntoView?: boolean\n  /**\n   * @default 'vertical'\n   */\n  direction?: TraverseDirection\n  filterOption?: (element: HTMLElement, index: number) => boolean\n  onArrowLeft?(): ReturnValue\n  onArrowRight?(): ReturnValue\n  onArrowUp?(): ReturnValue\n  onArrowDown?(): ReturnValue\n  onHome?(): ReturnValue\n  onEnd?(): ReturnValue\n}\n\nconst processKeys = new Set([\n  'Home',\n  'End',\n  'ArrowLeft',\n  'ArrowRight',\n  'ArrowUp',\n  'ArrowDown',\n])\n\nconst isNext = (key: string, direction: TraverseDirection = 'vertical') => {\n  if (direction === 'horizontal') return key === 'ArrowRight'\n  if (direction === 'vertical') return key === 'ArrowDown'\n  return key === 'ArrowDown' || key === 'ArrowUp'\n}\n\nconst isPrevious = (key: string, direction: TraverseDirection = 'vertical') => {\n  if (direction === 'horizontal') return key === 'ArrowLeft'\n  if (direction === 'vertical') return key === 'ArrowUp'\n  return key === 'ArrowUp' || key === 'ArrowLeft'\n}\n\nconst getNextElement = (\n  elements: HTMLElement[],\n  key: string,\n  options: TraverseOptions,\n) => {\n  const currentIndex = elements.indexOf(document.activeElement as HTMLElement)\n\n  if (isNext(key, options.direction)) {\n    const nextElement = elements[currentIndex + 1] || elements[0]\n    const goNext = options.onNext?.(key, nextElement) ?? true\n    if (!goNext) return null\n    return nextElement\n  }\n\n  if (isPrevious(key, options.direction)) {\n    const previousElement =\n      elements[currentIndex - 1] || elements[elements.length - 1]\n    const goPrevious = options.onPrevious?.(key, previousElement) ?? true\n    if (!goPrevious) return null\n    return previousElement\n  }\n\n  if (key === 'Home') {\n    return elements[0]\n  }\n\n  if (key === 'End') {\n    return elements[elements.length - 1]\n  }\n  return null\n}\n\n/**\n * Composable that makes it possible to select values by using keyboard arrows and home/end keys\n * @param container Parent element that has focusable options\n * @param options Configuration\n */\nexport const useTraverseOptions = (\n  container: MaybeRefOrGetter<HTMLElement | undefined | null>,\n  options: TraverseOptions = {},\n) => {\n  options.scrollIntoView ??= true\n\n  onKeyStroke(\n    (e) => {\n      const { key } = e\n\n      if (!processKeys.has(key)) {\n        return\n      }\n\n      // If there is a rule that checks if we should continue, check it.\n      //   Otherwise we assume that we should continue.\n      const shouldContinue = options[`on${key}` as 'onHome']?.() ?? true\n\n      if (!shouldContinue) return\n\n      let elements = getFocusableElements(\n        unrefElement(container) as HTMLElement,\n        options,\n      )\n\n      if (options.filterOption) {\n        elements = elements.filter(options.filterOption)\n      }\n\n      if (!elements.length) return\n\n      const nextElement = getNextElement(elements, key, options)\n\n      if (!nextElement) return\n\n      stopEvent(e)\n      nextElement.focus()\n      if (options.scrollIntoView) {\n        nextElement.scrollIntoView({ block: 'nearest' })\n      }\n    },\n    { target: container as MaybeRefOrGetter<EventTarget> },\n  )\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useDateFormat } from '@vueuse/shared'\nimport { computed, toValue, type MaybeRef } from 'vue'\n\nimport type {\n  AvatarUser,\n  AvatarUserAccess,\n  AvatarUserLive,\n} from '#shared/components/CommonUserAvatar/types.ts'\nimport { EnumTaskbarApp } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\n\nimport { useAppName } from './useAppName.ts'\nimport { useReactiveNow } from './useReactiveNow.ts'\n\nexport const useAvatarIndicator = (\n  entity: MaybeRef<AvatarUser>,\n  personal?: MaybeRef<boolean>,\n  live?: MaybeRef<AvatarUserLive | undefined>,\n  access?: MaybeRef<AvatarUserAccess | undefined>,\n) => {\n  const appName = useAppName()\n  const currentDate = useReactiveNow()\n\n  const isOutOfOffice = computed(() => {\n    const user = toValue(entity)\n\n    if (user.outOfOffice && user.outOfOfficeStartAt && user.outOfOfficeEndAt) {\n      const today = useDateFormat(currentDate.value, 'YYYY-MM-DD')\n      const startDate = user.outOfOfficeStartAt\n      const endDate = user.outOfOfficeEndAt\n\n      return startDate <= today.value && endDate >= today.value // Today is between start and end date\n    }\n    return false\n  })\n\n  const isInactive = computed(() => toValue(entity).active === false)\n\n  const isWithoutAccess = computed(\n    () => toValue(access)?.agentReadAccess === false,\n  )\n\n  const isLiveUserIdle = computed(() => toValue(live)?.isIdle)\n  const isLiveUserEditing = computed(() => toValue(live)?.editing)\n\n  const isLiveUserDesktop = computed(\n    () => toValue(live)?.app === EnumTaskbarApp.Desktop,\n  )\n\n  const isLiveUserMobile = computed(\n    () => toValue(live)?.app === EnumTaskbarApp.Mobile,\n  )\n\n  const indicatorIcon = computed(() => {\n    if (isInactive.value) return 'avatar-indicator-inactive'\n    if (isWithoutAccess.value) return 'avatar-indicator-without-access'\n    if (isOutOfOffice.value) return 'avatar-indicator-out-of-office'\n\n    if (isLiveUserEditing.value && isLiveUserDesktop.value)\n      return 'avatar-indicator-editing-desktop'\n\n    if (isLiveUserEditing.value && isLiveUserMobile.value)\n      return 'avatar-indicator-editing-mobile'\n\n    if (isLiveUserDesktop.value && appName !== 'desktop')\n      return 'avatar-indicator-desktop'\n\n    if (isLiveUserMobile.value && appName !== 'mobile')\n      return 'avatar-indicator-mobile'\n\n    if (isLiveUserIdle.value) return 'avatar-indicator-idle'\n    return null\n  })\n\n  const indicatorLabel = computed(() => {\n    if (isInactive.value) return i18n.t('User is inactive')\n    if (isWithoutAccess.value) return i18n.t('User has no access')\n\n    if (isOutOfOffice.value && toValue(personal))\n      return i18n.t('Out of office active')\n\n    if (isOutOfOffice.value) return i18n.t('User is out of office')\n\n    if (isLiveUserEditing.value && isLiveUserDesktop.value)\n      return i18n.t('User is editing on desktop')\n\n    if (isLiveUserEditing.value && isLiveUserMobile.value)\n      return i18n.t('User is editing on mobile')\n\n    if (isLiveUserEditing.value) return i18n.t('User is editing')\n\n    if (isLiveUserDesktop.value && appName !== 'desktop')\n      return i18n.t('User is on desktop')\n\n    if (isLiveUserMobile.value && appName !== 'mobile')\n      return i18n.t('User is on mobile')\n\n    if (isLiveUserIdle.value) return i18n.t('User is idle')\n\n    return undefined\n  })\n\n  const indicatorIsIdle = computed(\n    () =>\n      isInactive.value ||\n      isOutOfOffice.value ||\n      isWithoutAccess.value ||\n      isLiveUserIdle.value,\n  )\n\n  return {\n    isInactive,\n    isLiveUserDesktop,\n    isLiveUserEditing,\n    isLiveUserIdle,\n    isLiveUserMobile,\n    isOutOfOffice,\n    isWithoutAccess,\n    indicatorIcon,\n    indicatorLabel,\n    indicatorIsIdle,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { UserAvatarClassMap } from '#shared/components/CommonUserAvatar/types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet userAvatarClasses: UserAvatarClassMap = {\n  backgroundColors: [],\n}\n\nexport const initializeUserAvatarClasses = (classes: UserAvatarClassMap) => {\n  userAvatarClasses = classes\n}\n\nexport const getUserAvatarClasses = () => userAvatarClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { convertToGraphQLId } from '#shared/graphql/utils.ts'\n\nexport const SYSTEM_USER_INTERNAL_ID = 1\nexport const SYSTEM_USER_ID = convertToGraphQLId(\n  'User',\n  SYSTEM_USER_INTERNAL_ID,\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AvatarClassMap } from '#shared/components/CommonAvatar/types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet avatarClasses: AvatarClassMap = {\n  base: 'common-avatar-base',\n  vipUser: 'common-avatar-vip-user',\n  vipOrganization: 'common-avatar-vip-organization',\n}\n\nexport const initializeAvatarClasses = (classes: AvatarClassMap) => {\n  avatarClasses = classes\n}\n\nexport const getAvatarClasses = () => avatarClasses\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { i18n } from '#shared/i18n.ts'\nimport { getAvatarClasses } from '#shared/initializer/initializeAvatarClasses.ts'\n\nimport type { AvatarSize } from './types.ts'\n\nexport interface Props {\n  initials?: string\n  // path to image\n  image?: Maybe<string>\n  // name of the icon\n  icon?: Maybe<string>\n  size?: AvatarSize\n  vipIcon?: Maybe<'vip-user' | 'vip-organization'>\n  ariaLabel?: Maybe<string>\n  decorative?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  size: 'medium',\n  initials: '??',\n})\n\nconst iconSizes = {\n  xs: 'xs',\n  small: 'small',\n  medium: 'base',\n  normal: 'medium',\n  large: 'large',\n  xl: 'xl',\n} as const\n\nconst iconSize = computed(() => {\n  if (!props.icon) return 'medium'\n  return iconSizes[props.size]\n})\n\nconst avatarLabel = computed(() => {\n  if (props.decorative) return undefined\n  return props.ariaLabel || i18n.t('Avatar with initials %s', props.initials)\n})\n\nconst classMap = getAvatarClasses()\n</script>\n\n<template>\n  <span\n    class=\"relative flex shrink-0 items-center justify-center rounded-full bg-cover bg-center select-none\"\n    :class=\"[`size-${size}`, classMap.base]\"\n    :style=\"{\n      backgroundImage: image ? `url(${image})` : undefined,\n      backgroundRepeat: image ? 'no-repeat' : undefined,\n    }\"\n    role=\"img\"\n    :aria-label=\"avatarLabel\"\n    :aria-hidden=\"decorative ? 'true' : undefined\"\n    data-test-id=\"common-avatar\"\n  >\n    <CommonIcon\n      v-if=\"vipIcon\"\n      class=\"vip pointer-events-none absolute\"\n      :class=\"\n        vipIcon === 'vip-organization'\n          ? classMap.vipOrganization\n          : classMap.vipUser\n      \"\n      :name=\"vipIcon\"\n      :size=\"iconSizes[props.size]\"\n      decorative\n    />\n    <CommonIcon v-if=\"icon\" :name=\"icon\" :size=\"iconSize\" />\n    <slot v-else>\n      {{ image ? '' : initials }}\n    </slot>\n  </span>\n</template>\n\nSure, here is the refactored style using native CSS: ```css\n<style scoped>\n.size-xs {\n  height: 1.5rem;\n  width: 1.5rem;\n  font-size: 0.75rem;\n  line-height: 1.5rem;\n}\n\n.size-xs .vip {\n  transform: translateY(-0.75rem);\n}\n\n.size-small {\n  height: 2rem;\n  width: 2rem;\n  font-size: 0.75rem;\n  line-height: 2rem;\n}\n\n.size-small .vip {\n  transform: translateY(-1rem);\n}\n\n.size-medium {\n  height: 2.5rem;\n  width: 2.5rem;\n  font-size: 1rem;\n  line-height: 2.5rem;\n}\n\n.size-medium .vip {\n  transform: translateY(-1.25rem);\n}\n\n.size-normal {\n  height: 3.5rem;\n  width: 3.5rem;\n  font-size: 1.5rem;\n  line-height: 5rem;\n}\n\n.size-normal .vip {\n  transform: translateY(-1.85rem);\n}\n\n.size-large {\n  height: 5rem;\n  width: 5rem;\n  font-size: 2.25rem;\n  line-height: 5rem;\n}\n\n.size-large .vip {\n  transform: translateY(-2.65rem);\n}\n\n.size-xl {\n  height: 9rem;\n  width: 9rem;\n  font-size: 3.75rem;\n  line-height: 5rem;\n}\n\n.size-xl .vip {\n  transform: translateY(-4.85rem);\n}\n</style>\n```\n","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='utf-8'?%3e%3csvg%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23CA2317'%20points='15.7,9.3%2020.4,7.8%2017.6,9.6%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23E84F83'%20points='18.6,12.8%2017.6,9.6%2020.4,7.8%2019.6,10.7%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23CA2317'%20points='21.8,6.9%2021.3,7.8%2019.6,10.7%2020.4,7.8%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23E54011'%20points='22,7.5%2020.7,8.9%2021.3,7.8%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23E54011'%20points='16,8.4%2019.9,8%2017.2,8.8%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23CA2317'%20points='16.1,10.6%2017.6,9.6%2018.6,12.8%2018.1,13.8%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23B7DFF2'%20points='13.9,14.4%2013.2,5.6%2018.1,13.8%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23E54011'%20points='11.9,16.6%2013.9,14.4%2018.1,13.8%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23FFCE33'%20points='2,21%2011.9,16.6%2013.9,14.4%2010.7,14%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23D6B12D'%20points='2.4,17.4%207.4,16.6%209,15.4%208.3,15%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23FFDE85'%20points='4.2,13.3%209,15.4%2010.7,14%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23009EC6'%20points='12.8,8.8%2012.2,8.9%2010.7,14%2012.3,13%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%235EAFCE'%20points='13.7,12.1%2012.3,13%2013.2,5.6%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23045972'%20points='8.5,9.5%2012.8,8.8%2013,7.1%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%235A8591'%20points='8,5.5%2011.8,7.7%2013,7.1%2013.1,6.8%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23009EC6'%20points='8.8,3%2012.2,6.6%2013.1,6.8%2013.2,5.6%20'/%3e%3cpolygon%20fill-rule='evenodd'%20clip-rule='evenodd'%20fill='%23F39804'%20points='10.7,14%2013.7,12.1%2013.9,14.4%20'/%3e%3c/svg%3e\"","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\n\nimport { useAppName } from '#shared/composables/useAppName.ts'\nimport { useAvatarIndicator } from '#shared/composables/useAvatarIndicator.ts'\nimport { EnumTaskbarApp } from '#shared/graphql/types.ts'\nimport { getIdFromGraphQLId } from '#shared/graphql/utils.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { getUserAvatarClasses } from '#shared/initializer/initializeUserAvatarClasses.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport {\n  SYSTEM_USER_ID,\n  SYSTEM_USER_INTERNAL_ID,\n} from '#shared/utils/constants.ts'\nimport { getInitials } from '#shared/utils/formatter.ts'\n\nimport CommonAvatar from '../CommonAvatar/CommonAvatar.vue'\n\nimport logo from './assets/logo.svg'\n\nimport type { AvatarUserAccess, AvatarUserLive, AvatarUser } from './types.ts'\nimport type { AvatarSize } from '../CommonAvatar/index.ts'\n\nexport interface Props {\n  entity: AvatarUser\n  size?: AvatarSize\n  personal?: boolean\n  decorative?: boolean\n  initialsOnly?: boolean\n  live?: AvatarUserLive\n  access?: AvatarUserAccess\n  noMuted?: boolean\n  noIndicator?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  size: 'medium',\n})\n\nconst initials = computed(() => {\n  const { lastname, firstname, email, phone, mobile } = props.entity\n\n  return getInitials(firstname, lastname, email, phone, mobile)\n})\n\nconst { backgroundColors } = getUserAvatarClasses()\n\nconst fullName = computed(() => {\n  const { lastname, firstname, fullname } = props.entity\n\n  if (fullname) return fullname\n\n  return [firstname, lastname].filter(Boolean).join(' ')\n})\n\nconst colorClass = computed(() => {\n  const { id } = props.entity\n\n  const internalId = getIdFromGraphQLId(id)\n\n  if (internalId === SYSTEM_USER_INTERNAL_ID) return 'bg-white'\n\n  // get color based on mod of the integer ID\n  // so it stays consistent between different interfaces and logins\n  return backgroundColors[internalId % (backgroundColors.length - 1)]\n})\n\nconst sources = ['facebook', 'twitter']\n\nconst icon = computed(() => {\n  const { source } = props.entity\n  if (source && sources.includes(source)) return source\n  return null\n})\n\nconst appName = useAppName()\nconst application = useApplicationStore()\n\nconst image = computed(() => {\n  if (icon.value || props.initialsOnly) return null\n  if (props.entity.id === SYSTEM_USER_ID) return logo\n  if (!props.entity.image) return null\n\n  // Support the inline data URI as an image source.\n  if (props.entity.image.startsWith('data:')) return props.entity.image\n\n  // we're using the REST api here to get the image and to also use the browser image cache\n  // TODO: this should be re-evaluated when the desktop app is going to be implemented\n  const apiUrl = String(application.config.api_path)\n  return `${apiUrl}/users/image/${props.entity.image}`\n})\n\nconst isVip = computed(() => {\n  return !props.personal && props.entity.vip\n})\n\nconst { indicatorIcon, indicatorLabel, indicatorIsIdle } = useAvatarIndicator(\n  toRef(props, 'entity'),\n  toRef(props, 'personal'),\n  toRef(props, 'live'),\n  toRef(props, 'access'),\n)\n\nconst isMuted = computed(() => !props.noMuted && indicatorIsIdle.value)\n\nconst className = computed(() => {\n  const classes = [colorClass.value]\n\n  if (isMuted.value) {\n    classes.push('opacity-60')\n  }\n\n  return classes\n})\n\nconst label = computed(() => {\n  let label = i18n.t('Avatar')\n  const name = fullName.value || props.entity.email\n  if (name) label += ` (${name})`\n  if (isVip.value) label += ` (${i18n.t('VIP')})`\n  return label\n})\n\nconst indicator = computed(() => {\n  if (appName === EnumTaskbarApp.Mobile || props.noIndicator) return null\n  return indicatorIcon.value\n})\n\nconst indicatorClass = computed(() => {\n  if (isMuted.value) return 'fill-stone-200 dark:fill-neutral-500'\n  return 'text-black dark:text-white'\n})\n\nconst indicatorSizes = {\n  xs: 'xs',\n  small: 'xs',\n  medium: 'xs',\n  normal: 'tiny',\n  large: 'small',\n  xl: 'medium',\n} as const\n\nconst indicatorSize = computed(() => indicatorSizes[props.size])\n</script>\n\n<template>\n  <div class=\"relative h-fit\">\n    <CommonAvatar\n      :initials=\"initials\"\n      :size=\"size\"\n      :icon=\"icon\"\n      :class=\"className\"\n      :image=\"image\"\n      :vip-icon=\"isVip ? 'vip-user' : undefined\"\n      :decorative=\"decorative\"\n      :aria-label=\"label\"\n    />\n    <div\n      v-if=\"indicator\"\n      v-tooltip=\"indicatorLabel\"\n      class=\"absolute end-0 bottom-0 flex translate-y-1 items-center justify-center rounded-full bg-blue-200 p-[3px] outline-1 -outline-offset-1 outline-neutral-100 ltr:translate-x-2 rtl:-translate-x-2 dark:bg-gray-700 dark:outline-gray-900\"\n    >\n      <CommonIcon\n        :class=\"indicatorClass\"\n        :label=\"indicatorLabel\"\n        :size=\"indicatorSize\"\n        :name=\"indicator\"\n      />\n    </div>\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { OrganizationAvatarClassMap } from '#shared/components/CommonOrganizationAvatar/types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet organizationAvatarClasses: OrganizationAvatarClassMap = {\n  base: 'common-organization-avatar-base',\n  inactive: 'common-organization-avatar-inactive',\n}\n\nexport const initializeOrganizationAvatarClasses = (\n  classes: OrganizationAvatarClassMap,\n) => {\n  organizationAvatarClasses = classes\n}\n\nexport const getOrganizationAvatarClasses = () => organizationAvatarClasses\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { getOrganizationAvatarClasses } from '#shared/initializer/initializeOrganizationAvatarClasses.ts'\n\nimport CommonAvatar from '../CommonAvatar/CommonAvatar.vue'\n\nimport type { AvatarOrganization } from './types.ts'\nimport type { AvatarSize } from '../CommonAvatar/index.ts'\n\nexport interface Props {\n  entity: AvatarOrganization\n  size?: AvatarSize\n}\n\nconst props = defineProps<Props>()\n\nconst icon = computed(() => {\n  return props.entity.active ? 'organization' : 'inactive-organization'\n})\n\nconst { base, inactive } = getOrganizationAvatarClasses()\n</script>\n\n<template>\n  <CommonAvatar\n    :class=\"[\n      base,\n      {\n        [inactive]: !entity.active,\n      },\n    ]\"\n    :size=\"size\"\n    :icon=\"icon\"\n    :aria-label=\"`Avatar (${entity.name})`\"\n    :vip-icon=\"entity.vip ? 'vip-organization' : undefined\"\n  />\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormFieldContext } from '#shared/components/Form/types/field.ts'\n\nimport type { RangeConfig } from '@vuepic/vue-datepicker'\n\nexport const dateFieldProps = [\n  'clearable',\n  'futureOnly',\n  'maxDate',\n  'minDate',\n  'range',\n]\n\nexport type DateTimeContext = FormFieldContext<{\n  range?: boolean | RangeConfig\n  clearable?: boolean\n  futureOnly?: boolean\n  maxDate?: Date | string\n  minDate?: Date | string\n}>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed, type Ref } from 'vue'\n\nimport { EnumTextDirection } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { useLocaleStore } from '#shared/stores/locale.ts'\n\nimport type { DateTimeContext } from './types.ts'\n\nexport const useDateTime = (context: Ref<DateTimeContext>) => {\n  const timePicker = computed(() => context.value.type === 'datetime')\n\n  const valueFormat = computed(() => {\n    if (timePicker.value) return 'iso'\n    return 'yyyy-MM-dd'\n  })\n\n  const localeStore = useLocaleStore()\n\n  const position = computed(() =>\n    localeStore.localeData?.dir === EnumTextDirection.Rtl ? 'right' : 'left',\n  )\n\n  const minDate = computed(() => {\n    if (context.value.futureOnly) return new Date()\n    return context.value.minDate\n  })\n\n  const displayFormat = computed(() => {\n    let result = i18n.getDateFormat()\n\n    if (timePicker.value) result = i18n.getDateTimeFormat()\n\n    result = result.replace(/m/g, '{m}')\n    result = result.replace(/M/g, 'm')\n    result = result.replace(/\\{m\\}/g, 'M')\n    result = result.replace(/l/g, 'h')\n    result = result.replace(/P/g, 'aaa')\n\n    return result\n  })\n\n  const is24 = computed(() => i18n.getTimeFormatType() === '24hour')\n\n  const ariaLabels = computed(() => ({\n    toggleOverlay: i18n.t('Toggle the overlay'),\n    menu: i18n.t('Datepicker menu'),\n    input: i18n.t('Datepicker input field'),\n    openTimePicker: i18n.t('Open the time picker'),\n    closeTimePicker: i18n.t('Close the time picker'),\n    incrementValue: (type: string) => {\n      switch (type) {\n        case 'hours':\n          return i18n.t('Increment hours value')\n        case 'minutes':\n          return i18n.t('Increment minutes value')\n        case 'seconds':\n        default:\n          return i18n.t('Increment seconds value')\n      }\n    },\n    decrementValue: (type: string) => {\n      switch (type) {\n        case 'hours':\n          return i18n.t('Decrement hours value')\n        case 'minutes':\n          return i18n.t('Decrement minutes value')\n        case 'seconds':\n        default:\n          return i18n.t('Decrement seconds value')\n      }\n    },\n    openTpOverlay: (type: string) => {\n      switch (type) {\n        case 'hours':\n          return i18n.t('Open the hours overlay')\n        case 'minutes':\n          return i18n.t('Open the minutes overlay')\n        case 'seconds':\n        default:\n          return i18n.t('Open the seconds overlay')\n      }\n    },\n    amPmButton: i18n.t('Toggle AM/PM mode'),\n    openYearsOverlay: i18n.t('Open the years overlay'),\n    openMonthsOverlay: i18n.t('Open the months overlay'),\n    nextMonth: i18n.t('Next month'),\n    prevMonth: i18n.t('Previous month'),\n    nextYear: i18n.t('Next year'),\n    prevYear: i18n.t('Previous year'),\n    clearInput: i18n.t('Clear the value'),\n    calendarIcon: i18n.t('The calendar icon'),\n    timePicker: i18n.t('The time picker'),\n    monthPicker: (overlay: boolean) =>\n      overlay ? i18n.t('The month picker overlay') : i18n.t('The month picker'),\n    yearPicker: (overlay: boolean) =>\n      overlay ? i18n.t('The year picker overlay') : i18n.t('The year picker'),\n    timeOverlay: (type: 'hours' | 'minutes' | 'seconds') => {\n      switch (type) {\n        case 'hours':\n          return i18n.t('The hours overlay')\n        case 'minutes':\n          return i18n.t('The minutes overlay')\n        case 'seconds':\n        default:\n          return i18n.t('The seconds overlay')\n      }\n    },\n  }))\n\n  return {\n    ariaLabels,\n    displayFormat,\n    is24,\n    localeStore,\n    minDate,\n    position,\n    timePicker,\n    valueFormat,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormKitNode } from '@formkit/core'\n\nexport default {\n  ruleType: 'date_range',\n  rule: (node: FormKitNode<string[]>) => {\n    const { value } = node\n\n    const startDate = value.at(0)\n    const endDate = value.at(1)\n\n    if (!startDate || !endDate) return false\n\n    return startDate <= endDate\n  },\n  localeMessage: () => {\n    return __('The start date must precede or match end date.')\n  },\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const AutocompleteSearchObjectAttributeExternalDataSourceDocument = gql`\n    query autocompleteSearchObjectAttributeExternalDataSource($input: AutocompleteSearchObjectAttributeExternalDataSourceInput!) {\n  autocompleteSearchObjectAttributeExternalDataSource(input: $input) {\n    value\n    label\n    labelPlaceholder\n    heading\n    headingPlaceholder\n  }\n}\n    `;\nexport function useAutocompleteSearchObjectAttributeExternalDataSourceQuery(variables: Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables | VueCompositionApi.Ref<Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables> | ReactiveFunction<Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>(AutocompleteSearchObjectAttributeExternalDataSourceDocument, variables, options);\n}\nexport function useAutocompleteSearchObjectAttributeExternalDataSourceLazyQuery(variables?: Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables | VueCompositionApi.Ref<Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables> | ReactiveFunction<Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>(AutocompleteSearchObjectAttributeExternalDataSourceDocument, variables, options);\n}\nexport type AutocompleteSearchObjectAttributeExternalDataSourceQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.AutocompleteSearchObjectAttributeExternalDataSourceQuery, Types.AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { AutocompleteSearchObjectAttributeExternalDataSourceDocument } from '#shared/components/Form/fields/FieldExternalDataSource/graphql/queries/autocompleteSearchObjectAttributeExternalDataSource.api.ts'\nimport type { ObjectLike } from '#shared/types/utils.ts'\n\nimport type { ExternalDataSourceProps } from './types.ts'\nimport type { AutocompleteSelectValue } from '../FieldAutocomplete/types.ts'\nimport type { JsonValue } from 'type-fest'\nimport type { Ref } from 'vue'\n\nexport const useFieldExternalDataSourceWrapper = (\n  context: Ref<ExternalDataSourceProps['context']>,\n) => {\n  const additionalQueryParams = () => {\n    const additionalQueryParams: Record<string, JsonValue> = {\n      object: context.value.object,\n      attributeName: context.value.node.name,\n    }\n\n    const { searchTemplateRenderContext, formId, object } = context.value\n\n    const templateRenderContext: Record<string, JsonValue> = {}\n\n    // Add the main entity object id from the current object.\n    const entityObject = context.value.node.at('$root')?.context\n      ?.initialEntityObject as ObjectLike\n    if (entityObject) {\n      templateRenderContext[`${object.toLowerCase()}Id`] = entityObject.id\n    }\n\n    // Add additional data from the given search context information.\n    if (searchTemplateRenderContext) {\n      const additionaltemplateRenderContext =\n        searchTemplateRenderContext(formId, entityObject) || {}\n\n      Object.assign(templateRenderContext, additionaltemplateRenderContext)\n    }\n\n    additionalQueryParams.templateRenderContext = templateRenderContext\n\n    return additionalQueryParams\n  }\n\n  return {\n    actionIcon: 'search',\n\n    gqlQuery: AutocompleteSearchObjectAttributeExternalDataSourceDocument,\n\n    additionalQueryParams,\n\n    complexValue: true,\n\n    // use getter to return new value each time\n    get clearValue() {\n      return {}\n    },\n\n    initialOptionBuilder: (_: ObjectLike, value: AutocompleteSelectValue) =>\n      value,\n  }\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ObjectAttributeValuesFragmentDoc } from '../../../../graphql/fragments/objectAttributeValues.api';\nexport const OrganizationAttributesFragmentDoc = gql`\n    fragment organizationAttributes on Organization {\n  id\n  internalId\n  name\n  shared\n  domain\n  domainAssignment\n  active\n  note\n  vip\n  ticketsCount {\n    open\n    closed\n  }\n  objectAttributeValues {\n    ...objectAttributeValues\n  }\n}\n    ${ObjectAttributeValuesFragmentDoc}`;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { OrganizationAttributesFragmentDoc } from '../../../../../../../entities/organization/graphql/fragments/organizationAttributes.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const AutocompleteSearchOrganizationDocument = gql`\n    query autocompleteSearchOrganization($input: AutocompleteSearchOrganizationInput!) {\n  autocompleteSearchOrganization(input: $input) {\n    value\n    label\n    labelPlaceholder\n    heading\n    headingPlaceholder\n    disabled\n    icon\n    organization {\n      ...organizationAttributes\n    }\n  }\n}\n    ${OrganizationAttributesFragmentDoc}`;\nexport function useAutocompleteSearchOrganizationQuery(variables: Types.AutocompleteSearchOrganizationQueryVariables | VueCompositionApi.Ref<Types.AutocompleteSearchOrganizationQueryVariables> | ReactiveFunction<Types.AutocompleteSearchOrganizationQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables>(AutocompleteSearchOrganizationDocument, variables, options);\n}\nexport function useAutocompleteSearchOrganizationLazyQuery(variables?: Types.AutocompleteSearchOrganizationQueryVariables | VueCompositionApi.Ref<Types.AutocompleteSearchOrganizationQueryVariables> | ReactiveFunction<Types.AutocompleteSearchOrganizationQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables>(AutocompleteSearchOrganizationDocument, variables, options);\n}\nexport type AutocompleteSearchOrganizationQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.AutocompleteSearchOrganizationQuery, Types.AutocompleteSearchOrganizationQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { Organization } from '#shared/graphql/types.ts'\nimport { ensureGraphqlId } from '#shared/graphql/utils.ts'\n\nexport const getAutoCompleteOption = (organization: Partial<Organization>) => {\n  return {\n    label: organization.name,\n    value:\n      organization.internalId ||\n      (organization.id\n        ? ensureGraphqlId('Organization', organization.id)\n        : null),\n    organization,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { SelectValue } from '#shared/components/CommonSelect/types.ts'\nimport type { AutocompleteOrganizationProps } from '#shared/components/Form/fields/FieldOrganization/types.ts'\nimport { getAutoCompleteOption } from '#shared/entities/organization/utils/getAutoCompleteOption.ts'\nimport type { Organization } from '#shared/graphql/types.ts'\nimport type { ObjectLike } from '#shared/types/utils.ts'\n\nexport const useFormFieldOrganizationInitialOptionBuilder = () => {\n  return (\n    initialEntityObject: ObjectLike,\n    value: SelectValue,\n    context: AutocompleteOrganizationProps['context'],\n  ) => {\n    if (!context.belongsToObjectField || !initialEntityObject) return null\n\n    const belongsToObject = initialEntityObject[\n      context.belongsToObjectField\n    ] as Organization\n\n    if (!belongsToObject) return null\n\n    return getAutoCompleteOption(belongsToObject)\n  }\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const AutocompleteSearchRecipientDocument = gql`\n    query autocompleteSearchRecipient($input: AutocompleteSearchRecipientInput!) {\n  autocompleteSearchRecipient(input: $input) {\n    value\n    label\n    labelPlaceholder\n    heading\n    headingPlaceholder\n    disabled\n    icon\n  }\n}\n    `;\nexport function useAutocompleteSearchRecipientQuery(variables: Types.AutocompleteSearchRecipientQueryVariables | VueCompositionApi.Ref<Types.AutocompleteSearchRecipientQueryVariables> | ReactiveFunction<Types.AutocompleteSearchRecipientQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables>(AutocompleteSearchRecipientDocument, variables, options);\n}\nexport function useAutocompleteSearchRecipientLazyQuery(variables?: Types.AutocompleteSearchRecipientQueryVariables | VueCompositionApi.Ref<Types.AutocompleteSearchRecipientQueryVariables> | ReactiveFunction<Types.AutocompleteSearchRecipientQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables>(AutocompleteSearchRecipientDocument, variables, options);\n}\nexport type AutocompleteSearchRecipientQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.AutocompleteSearchRecipientQuery, Types.AutocompleteSearchRecipientQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { print } from 'graphql'\n\nimport { AutocompleteSearchRecipientDocument } from '#shared/components/Form/fields/FieldRecipient/graphql/queries/autocompleteSearch/recipient.api.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst gqlQuery = print(AutocompleteSearchRecipientDocument)\n\nexport const setAutoCompleteBehavior = (node: FormKitNode) => {\n  const { props } = node\n\n  node.addProps(['contact', 'gqlQuery'])\n\n  // Allow selection of unknown values, but only if they pass the validation.\n  props.allowUnknownValues = true\n\n  // Define validation of search input depending on the supplied user contact type.\n  //   Include helpful hint in the search input field.\n  if (props.contact === 'phone') {\n    props.additionalQueryParams = {\n      contact: 'phone',\n    }\n    props.filterInputPlaceholder = __('Search or enter phone number…')\n\n    // Very rudimentary validator for the E.164 telephone number format, i.e. +499876543210.\n    props.filterInputValidation = 'matches:/^\\\\+?[1-9]\\\\d+$/'\n  } else {\n    props.additionalQueryParams = {\n      contact: 'email',\n    }\n    props.filterInputPlaceholder = __('Search or enter email address…')\n    props.filterInputValidation = 'email'\n  }\n\n  props.gqlQuery = gqlQuery\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed, type Ref, type WritableComputedRef } from 'vue'\n\nimport {\n  EnumSecurityStateType,\n  type FieldSecurityContext,\n  type SecurityOption,\n  type SecurityValue,\n} from './types.ts'\n\nimport type { FormFieldContext } from '../../types/field.ts'\n\nexport const useFieldSecurity = (\n  context: Ref<FormFieldContext<FieldSecurityContext>>,\n  localValue: WritableComputedRef<SecurityValue>,\n) => {\n  const securityMethods = computed(() => {\n    return Object.keys(context.value.securityAllowed || {}).sort((a) => {\n      if (a === EnumSecurityStateType.Pgp) return -1\n      if (a === EnumSecurityStateType.Smime) return 1\n      return 0\n    }) as EnumSecurityStateType[]\n  })\n\n  const previewMethod = computed(\n    () =>\n      localValue.value?.method ??\n      // smime should have priority\n      (securityMethods.value.find(\n        (value) => value === EnumSecurityStateType.Smime,\n      ) ||\n        securityMethods.value[0]),\n  )\n\n  const isCurrentSecurityOption = (option: SecurityOption) =>\n    !!localValue.value?.options.includes(option)\n\n  const isSecurityOptionDisabled = (option: SecurityOption) =>\n    context.value.disabled ||\n    !context.value.securityAllowed?.[previewMethod.value]?.includes(option)\n\n  const defaultOptions = (method: EnumSecurityStateType) =>\n    context.value.securityDefaultOptions?.[method] || []\n\n  const filterOptions = (\n    method: EnumSecurityStateType,\n    options: SecurityOption[],\n  ) => {\n    return options\n      .filter((option) =>\n        context.value.securityAllowed?.[method]?.includes(option),\n      )\n      .sort()\n  }\n\n  const changeSecurityState = (method: EnumSecurityStateType) => {\n    // Reset the default behavior of the chosen method and remove unsupported options.\n    const newOptions = filterOptions(method, defaultOptions(method))\n    localValue.value = {\n      method,\n      options: newOptions,\n    }\n  }\n\n  return {\n    securityMethods,\n    previewMethod,\n    isCurrentSecurityOption,\n    isSecurityOptionDisabled,\n    changeSecurityState,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumSecurityStateType } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\n\nexport const translateArticleSecurity = (security: string) => {\n  const typeLabels = {\n    [EnumSecurityStateType.Pgp]: __('PGP'),\n    [EnumSecurityStateType.Smime]: __('S/MIME'),\n  } as Record<string, string>\n\n  return i18n.t(typeLabels[security] || security)\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type {\n  ObjectSelectOption,\n  ObjectSelectValue,\n} from '#shared/entities/object-attributes/form/resolver/fields/select.ts'\n\nimport type { FormKitFrameworkContext, FormKitNode } from '@formkit/core'\nimport type { Dictionary } from 'ts-essentials'\n\ntype OptionValueLookup = Dictionary<ObjectSelectOption>\ntype SelectValueWithoutBoolean = Exclude<ObjectSelectValue, boolean>\n\nconst removeValuesForNonExistingOrDisabledOptions = (node: FormKitNode) => {\n  const handleNewInputValue = (\n    payload: SelectValueWithoutBoolean | SelectValueWithoutBoolean[],\n    context: FormKitFrameworkContext,\n  ) => {\n    const optionValueLookup = context.optionValueLookup as OptionValueLookup\n\n    if (Array.isArray(payload)) {\n      // TODO: Workaround for empty string, because currently the \"nulloption\" exists also for multiselect fields (#4513).\n      const availableValues = payload.filter(\n        (selectValue: string | number) =>\n          (typeof optionValueLookup[selectValue] !== 'undefined' &&\n            !optionValueLookup[selectValue].disabled) ||\n          selectValue === '',\n      )\n\n      return availableValues\n    }\n\n    if (\n      typeof optionValueLookup[payload] === 'undefined' ||\n      optionValueLookup[payload].disabled\n    ) {\n      if (typeof optionValueLookup[node.props._init] === 'undefined') {\n        const getPreselectValue =\n          context.getPreselectValue as () => ObjectSelectValue\n\n        return context.clearable || getPreselectValue === undefined\n          ? undefined\n          : getPreselectValue()\n      }\n\n      return node.props._init\n    }\n\n    return payload\n  }\n\n  node.on('created', () => {\n    const { context } = node\n\n    if (!context) return\n\n    node.at('$root')?.settled.then(() => {\n      node.hook.input((payload, next) => {\n        if (!context.fns.hasValue(payload) || !context.optionValueLookup)\n          return next(payload)\n\n        return next(handleNewInputValue(payload, context))\n      })\n    })\n  })\n}\n\nexport default removeValuesForNonExistingOrDisabledOptions\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { type Ref, onMounted, watch } from 'vue'\n\nimport type { SelectOption } from '#shared/components/CommonSelect/types.ts'\nimport useValue from '#shared/components/Form/composables/useValue.ts'\nimport type { FlatSelectOption } from '#shared/components/Form/fields/FieldTreeSelect/types.ts'\nimport type { FormFieldContext } from '#shared/components/Form/types/field.ts'\n\nconst useSelectPreselect = (\n  options: Ref<SelectOption[] | FlatSelectOption[]>,\n  context: Ref<\n    FormFieldContext<{\n      clearable?: boolean\n      multiple?: boolean\n    }>\n  >,\n) => {\n  const { hasValue } = useValue(context)\n\n  // Consider only enabled options.\n  const getPreselectValue = () =>\n    options.value?.find((option) => !option.disabled)?.value\n\n  // Remember function to use it during the next value check.\n  context.value.getPreselectValue = getPreselectValue\n\n  // Pre-select the first option of a single select when and only when the field is not clearable nor disabled.\n  //   This mimics the behavior of the native select field.\n  const preselectOption = () => {\n    if (\n      !hasValue.value &&\n      !context.value.disabled &&\n      !context.value.multiple &&\n      !context.value.clearable &&\n      options.value &&\n      options.value.length > 0\n    ) {\n      context.value.node.input(getPreselectValue(), false)\n    }\n  }\n\n  onMounted(() => {\n    if (!context.value.noInitialAutoPreselect) preselectOption()\n\n    watch(\n      () =>\n        !hasValue.value &&\n        !context.value.disabled &&\n        !context.value.multiple &&\n        !context.value.clearable &&\n        options.value,\n      preselectOption,\n    )\n  })\n}\n\nexport default useSelectPreselect\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FileClassMap } from './types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet fileClasses: FileClassMap = {\n  button: 'field-file-button',\n  listContainer: 'field-file-list-container',\n}\n\nexport const initializeFileClasses = (classes: FileClassMap) => {\n  fileClasses = classes\n}\n\nexport const getFileClasses = () => fileClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { ToggleClassMap } from './types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet toggleClasses: ToggleClassMap = {\n  track: 'field-toggle-track',\n  trackOn: 'field-toggle-track--on',\n  knob: 'field-toggle-knob',\n}\n\nexport const initializeToggleClasses = (classes: ToggleClassMap) => {\n  toggleClasses = classes\n}\n\nexport const getToggleClasses = () => toggleClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FieldEditorClass, FieldEditorProps } from './types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet editorClasses: FieldEditorClass = {\n  actionBar: {\n    buttonContainer: '',\n    tableMenuContainer: '',\n    leftGradient: {\n      left: '',\n      before: {\n        background: {\n          light: '',\n          dark: '',\n        },\n      },\n    },\n    rightGradient: {\n      before: {\n        background: {\n          light: '',\n          dark: '',\n        },\n      },\n    },\n    shadowGradient: {\n      before: {\n        top: '',\n        height: '',\n      },\n    },\n    button: {\n      base: '',\n      active: '',\n    },\n  },\n  input: {\n    container: '',\n  },\n}\n\nexport const initializeFieldEditorClasses = (classes: FieldEditorClass) => {\n  editorClasses = classes\n}\n\nexport const getFieldEditorClasses = () => editorClasses\n\nlet editorProps: FieldEditorProps = {\n  actionBar: {\n    button: {\n      icon: {\n        size: 'small',\n      },\n    },\n  },\n}\n\nexport const initializeFieldEditorProps = (props: FieldEditorProps) => {\n  editorProps = props\n}\n\nexport const getFieldEditorProps = () => editorProps\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst bindEmit = (node: FormKitNode) => {\n  const { props, context } = node\n\n  if (!props.definition || !context || node.type !== 'input') return\n\n  context.handlers.bindEmit = (name: string) => (e: Event) => node.emit(name, e)\n}\n\nexport default bindEmit\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { ImportGlobEagerOutput } from './utils.ts'\nimport type { FormKitTypeDefinition } from '@formkit/core'\nimport type {\n  FormKitValidationRule,\n  FormKitValidationMessages,\n} from '@formkit/validation'\nimport type { App } from 'vue'\nimport type { RouteLocationRaw } from 'vue-router'\n\nexport type InitializeAppForm = (app: App) => void\n\nexport type FormFieldsTypeDefinition = Record<string, FormKitTypeDefinition>\nexport type FormValidationRules = Record<string, FormKitValidationRule>\n\nexport type FormThemeClasses = Record<string, Record<string, string>>\nexport type FormThemeExtension = (classes: FormThemeClasses) => FormThemeClasses\nexport interface FormAppSpecificTheme {\n  coreClasses?: FormThemeExtension\n  extensions?: ImportGlobEagerOutput<FormThemeExtension>\n}\n\nexport interface FormFieldType {\n  fieldType: string\n  definition: FormKitTypeDefinition\n}\n\nexport interface FormValidationRuleType {\n  ruleType: string\n  rule: FormKitValidationRule\n  localeMessage: FormKitValidationMessages['index']\n}\n\nexport type FormFieldTypeImportModules = FormFieldType | FormFieldType[]\n\nexport enum FormSchemaExtendType {\n  Append = 'append',\n  Prepend = 'prepend',\n  Replace = 'replace',\n  Merge = 'merge',\n}\n\nexport interface FormDefaultProps {\n  formId: string\n  link?: RouteLocationRaw\n  labelSrOnly?: boolean\n  labelPlaceholder?: string[]\n  internal?: boolean\n  disabled?: boolean\n}\n\nexport type FormUpdaterTrigger =\n  | 'direct'\n  | 'delayed'\n  | 'blur'\n  | 'form-reset'\n  | 'form-refresh' // When form is refreshed without dirty reset.\n  | 'manual'\n\nexport type FormUpdaterAdditionalParams = Record<string, unknown>\n\nexport interface FormUpdaterOptions {\n  includeDirtyFields?: boolean\n  additionalParams?: FormUpdaterAdditionalParams\n}\n\nexport interface FormDecoratorIcons {\n  checkboxDecorator?: string\n  radioDecorator?: string\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { extend } from '@formkit/utils'\nimport { cloneDeep } from 'lodash-es'\n\nimport { FormSchemaExtendType } from '#shared/types/form.ts'\n\nimport type {\n  FormKitExtendableSchemaRoot,\n  FormKitNode,\n  FormKitSchemaCondition,\n  FormKitSchemaNode,\n} from '@formkit/core'\n\n// Can later be switched to in built-in feature from FormKit (when it's available).\nconst extendSchemaDefinition = (\n  node: FormKitNode,\n  sectionKey: string,\n  schemaExtension: FormKitSchemaCondition | Partial<FormKitSchemaNode>,\n  extendType: FormSchemaExtendType = FormSchemaExtendType.Merge,\n  cloneDefinition = false,\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n) => {\n  const { props } = node\n\n  if (!props.definition) return\n\n  const definition = cloneDefinition\n    ? cloneDeep(props.definition)\n    : props.definition\n\n  const originalSchema = definition.schema as FormKitExtendableSchemaRoot\n\n  definition.schema = (extensions) => {\n    let sectionSchemaExtension:\n      | FormKitSchemaCondition\n      | Partial<FormKitSchemaNode>\n\n    const currentExtension = extensions[sectionKey] || {}\n\n    if (extendType === FormSchemaExtendType.Merge) {\n      // When current extenstions is a string, replace it.\n      if (typeof currentExtension === 'string') {\n        sectionSchemaExtension = schemaExtension\n      } else {\n        sectionSchemaExtension = extend(currentExtension, schemaExtension) as\n          | FormKitSchemaCondition\n          | Partial<FormKitSchemaNode>\n      }\n    } else if (extendType === FormSchemaExtendType.Replace) {\n      sectionSchemaExtension = schemaExtension\n    } else {\n      let currentChildren: Maybe<\n        (FormKitSchemaCondition | Partial<FormKitSchemaNode>)[]\n      > = null\n      if (\n        currentExtension &&\n        typeof currentExtension === 'object' &&\n        'children' in currentExtension &&\n        Array.isArray(currentExtension.children)\n      ) {\n        currentChildren = currentExtension.children\n      }\n\n      if (currentChildren) {\n        sectionSchemaExtension = {\n          children:\n            extendType === FormSchemaExtendType.Append\n              ? [...currentChildren, schemaExtension]\n              : [schemaExtension, ...currentChildren],\n        } as Partial<FormKitSchemaNode>\n      } else {\n        sectionSchemaExtension = {\n          children: [schemaExtension],\n        } as Partial<FormKitSchemaNode>\n      }\n    }\n\n    const localExtensions = {\n      ...extensions,\n      [sectionKey]: sectionSchemaExtension,\n    }\n    return originalSchema(localExtensions)\n  }\n\n  props.definition = definition\n}\n\nexport default extendSchemaDefinition\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { isEmpty } from 'lodash-es'\n\nimport extendSchemaDefinition from '#shared/form/utils/extendSchemaDefinition.ts'\n\nimport type { FormKitNode } from '@formkit/core'\nimport type { FormKitValidation } from '@formkit/validation'\n\nconst extendDataAttribues = (node: FormKitNode) => {\n  const { props, context } = node\n\n  if (!props.definition || !context) return\n\n  context.fns.includes = (array: unknown[], value: unknown): boolean => {\n    if (!Array.isArray(array)) return false\n    return array.includes(value)\n  }\n\n  if (node.type !== 'input') return\n\n  // Add the parsedRules as props, so that the value is reactive and\n  // `$parsedRules` can be used in the if condition (https://github.com/formkit/formkit/issues/356).\n  node.addProps(['parsedRules'])\n\n  // Adds a helper function to check the existing value inside of the context.\n  context.fns.hasValue = (value: unknown): boolean => {\n    if (typeof value === 'object') return !isEmpty(value)\n\n    return value != null && value !== ''\n  }\n\n  context.fns.hasRule = (\n    parsedRules: FormKitValidation[],\n    ruleName: string,\n  ) => {\n    return parsedRules.some((rule) => rule.name === ruleName)\n  }\n\n  extendSchemaDefinition(node, 'outer', {\n    attrs: {\n      'data-populated': {\n        if: '$fns.hasValue($value)',\n        then: 'true',\n        else: undefined,\n      },\n      'data-label-hidden': {\n        if: '$labelSrOnly === true',\n        then: 'true',\n        else: undefined,\n      },\n      'data-required': {\n        if: \"$fns.hasRule($parsedRules, 'required')\",\n        then: 'true',\n        else: undefined,\n      },\n      'data-dirty': {\n        if: '$state.dirty',\n        then: 'true',\n        else: undefined,\n      },\n      'data-triggers-form-updater': {\n        if: '$triggerFormUpdater',\n        then: 'true',\n        else: undefined,\n      },\n    },\n  })\n}\n\nexport default extendDataAttribues\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport extendSchemaDefinition from '#shared/form/utils/extendSchemaDefinition.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst extendLabel = (node: FormKitNode) => {\n  extendSchemaDefinition(node, 'label', {\n    attrs: {\n      id: '$: \"label-\" + $id',\n    },\n  })\n}\n\nexport default extendLabel\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormKitNode, FormKitProps } from '@formkit/core'\n\nconst addRequired = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  validation: string | Array<[rule: string, ...args: any]>,\n) => {\n  if (Array.isArray(validation)) {\n    if (!validation.includes(['required'])) validation.push(['required'])\n\n    return validation\n  }\n\n  if (!validation) {\n    return 'required'\n  }\n\n  if (!validation.includes('required')) {\n    return `${validation}|required`\n  }\n\n  return validation\n}\n\nconst removeRequired = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  validation: string | Array<[rule: string, ...args: any]>,\n) => {\n  if (!validation) return validation\n\n  if (Array.isArray(validation)) {\n    return validation.filter(([rule]) => rule !== 'required')\n  }\n\n  if (validation.includes('required')) {\n    return validation\n      .split('|')\n      .filter((rule: string) => !rule.includes('required'))\n      .join('|')\n  }\n\n  return validation\n}\n\nconst addRequiredToValidationProp = (props: Partial<FormKitProps>) => {\n  const { validation } = props\n\n  props.validation = addRequired(validation)\n}\n\nconst removeRequiredFromValidationProp = (props: Partial<FormKitProps>) => {\n  const { validation } = props\n\n  props.validation = removeRequired(validation)\n}\n\nconst addRequiredValidation = (node: FormKitNode) => {\n  const { props, context } = node\n\n  if (!props.definition || !context || node.type !== 'input') return\n\n  node.addProps(['required'])\n\n  if (props.required) {\n    addRequiredToValidationProp(props)\n  }\n\n  node.hook.prop(({ prop, value }, next) => {\n    if (prop === 'validation') {\n      if (props.required) {\n        value = addRequired(value)\n      } else {\n        value = removeRequired(value)\n      }\n    }\n\n    return next({ prop, value })\n  })\n\n  node.on('prop:required', ({ payload }) => {\n    if (payload) {\n      addRequiredToValidationProp(props)\n    } else {\n      removeRequiredFromValidationProp(props)\n    }\n  })\n}\n\nexport default addRequiredValidation\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { invert } from 'lodash-es'\n\nimport { useIcons } from '#shared/components/CommonIcon/useIcons.ts'\n\nconst createCustomIcons = (): Record<string, string> => {\n  const { icons: customIcons, aliases: customIconAliases } = useIcons()\n  const reversedCustomIconAliases = invert(customIconAliases)\n\n  return Object.keys(customIcons).reduce(\n    (icons: Record<string, string>, name) => {\n      const alias = reversedCustomIconAliases[name]\n      icons[alias || name] = customIcons[name]\n\n      return icons\n    },\n    {},\n  )\n}\n\nexport default createCustomIcons\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport {\n  button as buttonDefinition,\n  submit as submitDefinition,\n} from '@formkit/inputs'\nimport { has } from '@formkit/utils'\n\nimport initializeFieldDefinition from '#shared/form/core/initializeFieldDefinition.ts'\nimport extendSchemaDefinition from '#shared/form/utils/extendSchemaDefinition.ts'\nimport type {\n  FormFieldsTypeDefinition,\n  FormFieldType,\n} from '#shared/types/form.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\n// TODO: Build-In loading cycle funcitonality for the buttons or at least a disabled-state when loading is in progress?\n\nconst addVariantDataAttribute = (node: FormKitNode) => {\n  extendSchemaDefinition(node, 'wrapper', {\n    attrs: {\n      'data-variant': '$variant',\n    },\n  })\n}\n\nconst setVariantDefault = (node: FormKitNode) => {\n  const { props } = node\n\n  node.addProps(['variant'])\n\n  node.on('created', () => {\n    if (!has(props, 'variant')) {\n      props.variant = 'primary'\n    }\n  })\n}\n\nconst buttonFieldDefinitionList: FormFieldsTypeDefinition = {\n  button: buttonDefinition,\n  submit: submitDefinition,\n}\n\nconst buttonInputs: FormFieldType[] = []\n\nObject.keys(buttonFieldDefinitionList).forEach((buttonType) => {\n  initializeFieldDefinition(buttonFieldDefinitionList[buttonType], {\n    features: [setVariantDefault, addVariantDataAttribute],\n  })\n\n  buttonInputs.push({\n    fieldType: buttonType,\n    definition: buttonFieldDefinitionList[buttonType],\n  })\n})\n\nexport default buttonInputs\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { checkbox as checkboxDefinition } from '@formkit/inputs'\nimport { has } from '@formkit/utils'\n\nimport { useAppName } from '#shared/composables/useAppName.ts'\nimport initializeFieldDefinition from '#shared/form/core/initializeFieldDefinition.ts'\nimport formUpdaterTrigger from '#shared/form/features/formUpdaterTrigger.ts'\nimport extendSchemaDefinition from '#shared/form/utils/extendSchemaDefinition.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst addCheckedDataAttribute = (node: FormKitNode) => {\n  extendSchemaDefinition(node, 'wrapper', {\n    attrs: {\n      'data-is-checked': {\n        if: '$value',\n        then: 'true',\n        else: undefined,\n      },\n      'data-test-id': 'checkbox-label',\n    },\n  })\n}\n\nconst handleAlternativeBorder = (node: FormKitNode) => {\n  // The alternative border color below is specific to desktop field design only.\n  if (useAppName() !== 'desktop') return\n\n  const { props } = node\n\n  node.addProps(['alternativeBorder'])\n\n  const setClasses = (alternativeBorder: boolean) => {\n    if (alternativeBorder) {\n      props.decoratorClass =\n        'border-stone-200 dark:border-neutral-500 text-stone-200 dark:text-neutral-500 formkit-checked:border-gray-300 dark:formkit-checked:border-neutral-400 formkit-checked:text-gray-300 dark:formkit-checked:text-neutral-400'\n    } else {\n      props.decoratorClass =\n        'border-stone-200 dark:border-neutral-500 text-stone-200 dark:text-neutral-500 formkit-checked:border-gray-100 dark:formkit-checked:border-neutral-400 formkit-checked:text-gray-100 dark:formkit-checked:text-neutral-400'\n    }\n  }\n\n  node.on('created', () => {\n    if (!has(props, 'alternativeBorder')) props.alternativeBorder = false\n\n    setClasses(props.alternativeBorder)\n\n    node.on('prop:alternativeBorder', ({ payload }) => {\n      setClasses(payload)\n    })\n  })\n}\n\ninitializeFieldDefinition(checkboxDefinition, {\n  props: ['alternativeBorder'],\n  features: [\n    addCheckedDataAttribute,\n    handleAlternativeBorder,\n    formUpdaterTrigger(),\n  ],\n})\n\nexport default {\n  fieldType: 'checkbox',\n  definition: checkboxDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst defaultEmptyValueString = (node: FormKitNode) => {\n  node.hook.input((payload, next) => {\n    if (payload === undefined) {\n      return next('')\n    }\n    return next(payload)\n  })\n}\n\nexport default defaultEmptyValueString\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport type { ConfidentTake } from '#shared/types/utils.ts'\n\nimport type { FieldEditorProps } from './types.ts'\n\ninterface Props {\n  footer: ConfidentTake<FieldEditorProps, 'meta.footer'>\n  characters: number\n}\n\nconst props = defineProps<Props>()\n\nconst availableCharactersCount = computed(() => {\n  const { maxlength } = props.footer\n  if (!maxlength) return 0\n  return maxlength - props.characters\n})\n</script>\n\n<template>\n  <div class=\"flex\" data-test-id=\"editor-footer\">\n    <span class=\"flex-1 ltr:pr-2 rtl:pl-2\">{{ footer.text }}</span>\n    <span\n      v-if=\"footer.maxlength != null\"\n      title=\"Available characters\"\n      class=\"text-right\"\n      :class=\"{\n        'text-red': availableCharactersCount < 0,\n        'text-orange':\n          footer.warningLength &&\n          availableCharactersCount >= 0 &&\n          availableCharactersCount < footer.warningLength,\n      }\"\n    >\n      {{ availableCharactersCount }}\n    </span>\n    <span\n      v-if=\"footer.maxlength != null && availableCharactersCount < 0\"\n      class=\"sr-only\"\n      aria-atomic=\"true\"\n      aria-live=\"polite\"\n    >\n      {{\n        $t(\n          'You have exceeded the character limit by %s',\n          0 - availableCharactersCount,\n        )\n      }}\n    </span>\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n<script setup lang=\"ts\">\nimport { computed, defineAsyncComponent, nextTick } from 'vue'\n\nimport type { FormFieldContext } from '#shared/components/Form/types/field.ts'\n\nimport FieldEditorFooter from './FieldEditorFooter.vue'\n\nimport type {\n  FieldEditorContext,\n  FieldEditorProps,\n  PossibleSignature,\n} from './types.ts'\n\nconst FieldEditor = defineAsyncComponent(() => import('./FieldEditorInput.vue'))\n\ninterface Props {\n  context: FormFieldContext<FieldEditorProps>\n}\n\nconst props = defineProps<Props>()\n\nconst editorRerenderKey = computed(() => {\n  // when content-type changes, we need to rerender the editor\n  const type = props.context.contentType === 'text/plain' ? 'plain' : 'html'\n  return `${type}-${props.context.id}`\n})\n\nconst onLoad: ((context: FieldEditorContext) => void)[] = []\nconst queueAction = (fn: (context: FieldEditorContext) => void) => {\n  onLoad.push(fn)\n}\n\nconst preContext = {\n  onLoad,\n  getEditorValue: () => '',\n  addSignature: (signature: PossibleSignature) =>\n    queueAction((context) => context.addSignature(signature)),\n  removeSignature: () => queueAction((context) => context.removeSignature()),\n  focus: () => queueAction((context) => nextTick(() => context.focus())),\n}\n\nObject.assign(props.context, preContext)\n</script>\n\n<template>\n  <Suspense>\n    <FieldEditor v-bind=\"$attrs\" :key=\"editorRerenderKey\" :context=\"context\" />\n    <template #fallback>\n      <div class=\"p-2\">\n        <div class=\"h-20\" />\n        <FieldEditorFooter\n          v-if=\"context.meta?.footer && !context.meta.footer.disabled\"\n          :footer=\"context.meta.footer\"\n          :characters=\"context._value?.length || 0\"\n        />\n      </div>\n    </template>\n  </Suspense>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport createInput from '#shared/form/core/createInput.ts'\nimport defaultEmptyValueString from '#shared/form/features/defaultEmptyValueString.ts'\nimport formUpdaterTrigger from '#shared/form/features/formUpdaterTrigger.ts'\n\nimport FieldEditorWrapper from './FieldEditorWrapper.vue'\n\nconst fieldDefinition = createInput(\n  FieldEditorWrapper,\n  ['groupId', 'ticketId', 'customerId', 'meta', 'contentType'],\n  {\n    features: [formUpdaterTrigger('delayed', 500), defaultEmptyValueString],\n  },\n)\n\nexport default {\n  fieldType: 'editor',\n  definition: fieldDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FileUploaded } from '#shared/components/Form/fields/FieldFile/types.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport log from './log.ts'\n\nimport type { Except } from 'type-fest'\n\nexport type FilePreview = 'image' | 'calendar'\n\nexport interface ImageFileData {\n  name: string\n  type: string\n  content: string\n}\n\nexport interface ImageFileSource extends Except<ImageFileData, 'content'> {\n  name: string\n  type: string\n  src: string\n}\n\ninterface CompressData {\n  x?: number | 'auto'\n  y?: number | 'auto'\n  scale?: number\n  type?: string\n  quality?: number | 'auto'\n}\n\ninterface CompressOptions {\n  compress?: boolean\n\n  onCompress?(image: HTMLImageElement, type: string): CompressData\n}\n\ninterface ValidatedFile {\n  file: File\n  label: string\n  maxSize: number\n  allowedTypes: string[]\n}\n\nexport interface AllowedFile {\n  label: string\n  types: string[]\n  size: number\n}\n\nconst allowCompressMime = ['image/jpeg', 'image/png']\n\nconst getQuality = (x: number, y: number) => {\n  if (x < 200 && y < 200) return 1\n  if (x < 400 && y < 400) return 0.9\n  if (x < 600 && y < 600) return 0.8\n  if (x < 900 && y < 900) return 0.7\n  return 0.6\n}\n\nexport const compressImage = (\n  imageSrc: string,\n  type: string,\n  options?: CompressOptions,\n) => {\n  const img = new Image()\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  const promise = new Promise<string>((resolve) => {\n    img.onload = () => {\n      const {\n        x: imgX = 'auto',\n        y: imgY = 'auto',\n        quality = 'auto',\n        scale = 1,\n        type: mimeType = type,\n      } = options?.onCompress?.(img, type) || {}\n\n      const imageWidth = img.width\n      const imageHeight = img.height\n\n      log.debug('[Image Service] Image is loaded', {\n        imageWidth,\n        imageHeight,\n      })\n\n      let x = imgX\n      let y = imgY\n\n      if (y === 'auto' && x === 'auto') {\n        x = imageWidth\n        y = imageHeight\n      }\n\n      // set max x/y\n      if (x !== 'auto' && x > imageWidth) x = imageWidth\n\n      if (y !== 'auto' && y > imageHeight) y = imageHeight\n\n      // get auto dimensions\n      if (y === 'auto') {\n        const factor = imageWidth / (x as number)\n        y = imageHeight / factor\n      }\n\n      if (x === 'auto') {\n        const factor = imageHeight / y\n        x = imageWidth / factor\n      }\n\n      const canvas = document.createElement('canvas')\n\n      if (\n        (x < imageWidth && x * scale < imageWidth) ||\n        (y < imageHeight && y * scale < imageHeight)\n      ) {\n        x *= scale\n        y *= scale\n\n        // set dimensions\n        canvas.width = x\n        canvas.height = y\n\n        // draw image on canvas and set image dimensions\n        const context = canvas.getContext('2d') as CanvasRenderingContext2D\n        context.drawImage(img, 0, 0, x, y)\n      } else {\n        canvas.width = imageWidth\n        canvas.height = imageHeight\n\n        const context = canvas.getContext('2d') as CanvasRenderingContext2D\n        context.drawImage(img, 0, 0, imageWidth, imageHeight)\n      }\n\n      const qualityValue =\n        quality === 'auto' ? getQuality(imageWidth, imageHeight) : quality\n\n      try {\n        const base64 = canvas.toDataURL(mimeType, qualityValue)\n        log.debug('[Image Service] Image is compressed', {\n          quality: qualityValue,\n          type: mimeType,\n          x,\n          y,\n          size: `${(base64.length * 0.75) / 1024 / 1024} Mb`,\n        })\n        resolve(base64)\n      } catch (e) {\n        log.debug('[Image Service] Failed to compress an image', e)\n        resolve(imageSrc)\n      }\n    }\n    img.onerror = () => resolve(imageSrc)\n  })\n  img.src = imageSrc\n  return promise\n}\n\nexport const blobToBase64 = async (blob: Blob) =>\n  new Promise<string>((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = () => resolve(reader.result as string)\n    reader.onerror = () => reject(reader.error)\n    reader.readAsDataURL(blob)\n  })\n\nexport const dataURLToBlob = (dataURL: string) => {\n  const byteString = window.atob(dataURL.split(',')[1])\n  const mimeString = dataURL.split(',')[0].split(':')[1].split(';')[0]\n\n  // Create Uint8Array directly from the byteString\n  const ia = Uint8Array.from(byteString, (c) => c.charCodeAt(0))\n\n  return new Blob([ia], { type: mimeString })\n}\n\nexport const convertFileList = async (\n  filesList: Maybe<FileList | File[]>,\n  options: CompressOptions = {},\n): Promise<ImageFileData[]> => {\n  const files = Array.from(filesList || [])\n\n  const promises = files.map(async (file) => {\n    let base64 = await blobToBase64(file)\n\n    if (options?.compress && allowCompressMime.includes(file.type)) {\n      base64 = await compressImage(base64, file.type, options)\n    }\n\n    return {\n      name: file.name,\n      type: file.type,\n      content: base64,\n    }\n  })\n\n  const readFiles = await Promise.all(promises)\n\n  return readFiles.filter((file) => file.content)\n}\n\nexport const loadImageIntoBase64 = async (\n  src: string,\n  type?: string,\n  alt?: string,\n): Promise<string | null> => {\n  const img = new Image()\n  img.crossOrigin = 'anonymous'\n  const promise = new Promise<string | null>((resolve) => {\n    img.onload = () => {\n      const canvas = document.createElement('canvas')\n      canvas.width = img.width\n      canvas.height = img.height\n      const ctx = canvas.getContext('2d')\n      ctx?.drawImage(img, 0, 0, img.width, img.height)\n      const mime =\n        type || (img.alt?.match(/\\.(jpe?g)$/i) ? 'image/jpeg' : 'image/png')\n      try {\n        const base64 = canvas.toDataURL(mime)\n        resolve(base64)\n      } catch {\n        resolve(null)\n      }\n    }\n    img.onerror = () => {\n      resolve(null)\n    }\n  })\n  img.alt = alt || ''\n  img.src = src\n  return promise\n}\n\nexport const canDownloadFile = (type?: Maybe<string>) => {\n  return Boolean(type && type !== 'text/html')\n}\n\nexport const allowedImageTypes = () => {\n  const { config } = useApplicationStore()\n\n  return config['active_storage.web_image_content_types'] || []\n}\n\nexport const allowedImageTypesString = () => {\n  return allowedImageTypes().join(',')\n}\n\nexport const canPreviewFile = (type?: Maybe<string>): FilePreview | false => {\n  if (!type) return false\n\n  if (allowedImageTypes().includes(type)) return 'image'\n  if (type === 'text/calendar') return 'calendar'\n\n  return false\n}\n\nexport const convertFilesToAttachmentInput = (\n  formId: string,\n  attachments?: FileUploaded[],\n) => {\n  const files = attachments?.map((file) => ({\n    name: file.name,\n    type: file.type,\n  }))\n  if (!files || !files.length) return null\n  return {\n    files,\n    formId,\n  }\n}\n\n/**\n * @param file - file Size is in bytes\n * @param allowedSize - allowed size in bytes\n * * */\nexport const validateFileSizeLimit = (file: File, allowedSize: number) => {\n  return file.size <= allowedSize\n}\n\nexport const validateFileSizes = (\n  files: File[],\n  allowedFiles: AllowedFile[],\n) => {\n  const failedFiles: Omit<ValidatedFile, 'allowedTypes'>[] = []\n  files.forEach((file) => {\n    allowedFiles.forEach((allowedFile) => {\n      if (!allowedFile.types.includes(file.type)) return\n      if (!validateFileSizeLimit(file, allowedFile.size))\n        failedFiles.push({\n          file,\n          label: allowedFile.label,\n          maxSize: allowedFile.size,\n        })\n    })\n  })\n  return failedFiles\n}\n\n/**\n * @return {string} - A string of acceptable file types for input element.\n * * */\nexport const getAcceptableFileTypesString = (\n  allowedFiles: AllowedFile[],\n): string => {\n  const result: Set<string> = new Set([])\n  allowedFiles.forEach((file) => {\n    file.types.forEach((type) => {\n      result.add(type)\n    })\n  })\n  return Array.from(result).join(', ')\n}\n\n/**\n * @param size file size in bytes\n ** */\nexport const humanizeFileSize = (size: number) => {\n  if (size > 1024 * 1024 * 1024) {\n    return `${Math.round((size * 10) / (1024 * 1024)) / 10} MB`\n  }\n  if (size > 1024) {\n    return `${Math.round(size / 1024)} KB`\n  }\n  return `${size} Bytes`\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createMessage, type FormKitNode } from '@formkit/core'\n\nimport { i18n } from '#shared/i18n.ts'\nimport {\n  type AllowedFile,\n  humanizeFileSize,\n  validateFileSizes,\n} from '#shared/utils/files.ts'\n\nexport const useFileValidation = () => {\n  const validateFileSize = (\n    node: FormKitNode,\n    files: FileList | Array<File>,\n    allowedFiles: AllowedFile[],\n    options = {\n      writeToMsgStore: false,\n    },\n  ) => {\n    const fileList = Array.isArray(files) ? files : Array.from(files)\n    const failedFiles = validateFileSizes(fileList, allowedFiles)\n    if (failedFiles.length === 0) return true\n    const failedFile = failedFiles[0]\n    const errorMsg = i18n.t(\n      'File is too big. %s has to be %s or smaller.',\n      failedFile.label,\n      humanizeFileSize(failedFile.maxSize),\n    )\n    if (options.writeToMsgStore) {\n      node.store.set(\n        createMessage({\n          key: 'fileSizeError',\n          blocking: true,\n          value: errorMsg,\n          type: 'validation',\n          visible: true,\n        }),\n      )\n    } else {\n      node.setErrors(errorMsg)\n    }\n\n    return false\n  }\n  return { validateFileSize }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { type FormKitNode } from '@formkit/core'\n\nimport { FormValidationVisibility } from '#shared/components/Form/types.ts'\nimport type { AllowedFile } from '#shared/utils/files.ts'\n\nimport { useFileValidation } from '../composable/useFileValidation.ts'\n\nconst { validateFileSize } = useFileValidation()\nexport const filesSizeError = (node: FormKitNode) => {\n  let commitEventListener: string\n\n  node.on('created', () => {\n    node.on('prop:allowedFiles', ({ payload, origin: node }) => {\n      if (payload && node.value) {\n        const isValid = validateFileSize(node, <FileList>node.value, payload, {\n          writeToMsgStore: true,\n        })\n\n        if (!isValid) {\n          node.emit('prop:validationVisibility', FormValidationVisibility.Live)\n        }\n\n        commitEventListener = node.on('commit', ({ payload, origin: node }) => {\n          if (!node.context?.allowedFiles) return\n          const isValid = validateFileSize(\n            node,\n            payload,\n            <AllowedFile[]>node.context.allowedFiles,\n            {\n              writeToMsgStore: true,\n            },\n          )\n          if (isValid) {\n            node.store.remove('fileSizeError')\n            node.emit(\n              'prop:validationVisibility',\n              FormValidationVisibility.Live,\n            )\n          } else {\n            node.emit(\n              'prop:validationVisibility',\n              FormValidationVisibility.Submit,\n            )\n          }\n        })\n      } else if (!payload && commitEventListener) {\n        node.store.remove('fileSizeError')\n        node.off(commitEventListener)\n        node.emit('prop:validationVisibility', FormValidationVisibility.Submit)\n      }\n    })\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createMessage, type FormKitNode } from '@formkit/core'\n\nimport type { FileUploaded } from '#shared/components/Form/fields/FieldFile/types.ts'\nimport { FormValidationVisibility } from '#shared/components/Form/types.ts'\nimport { i18n } from '#shared/i18n.ts'\n\nconst validateForErrors = (node: FormKitNode, files: FileUploaded[]) => {\n  const accept = node.context?.accept as string\n  const notAllowedFiles = files.filter(\n    (file) => file.type && !accept.includes(file.type),\n  )\n\n  if (notAllowedFiles.length === 0) return true\n\n  node.store.set(\n    createMessage({\n      key: 'filesTypesError',\n      blocking: true,\n      value: i18n.t(\n        'The file type %s is not allowed.',\n        notAllowedFiles[0].type,\n      ),\n      type: 'validation',\n      visible: true,\n    }),\n  )\n\n  return false\n}\n\nexport const filesTypeError = (node: FormKitNode) => {\n  let commitEventListener: string\n\n  node.on('created', () => {\n    node.on('prop:accept', ({ payload, origin: node }) => {\n      if (payload && node.value) {\n        const isValid = validateForErrors(node, node.value as FileUploaded[])\n\n        if (!isValid)\n          node.emit('prop:validationVisibility', FormValidationVisibility.Live)\n\n        commitEventListener = node.on('commit', ({ payload, origin: node }) => {\n          const isValid = validateForErrors(node, payload)\n          if (isValid) {\n            node.store.remove('filesTypesError')\n            node.emit(\n              'prop:validationVisibility',\n              FormValidationVisibility.Live,\n            )\n          } else {\n            node.emit(\n              'prop:validationVisibility',\n              FormValidationVisibility.Submit,\n            )\n          }\n        })\n      } else if (!payload && commitEventListener) {\n        node.store.remove('filesTypesError')\n        node.off(commitEventListener)\n        node.emit('prop:validationVisibility', FormValidationVisibility.Submit)\n      }\n    })\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createMessage, type FormKitNode } from '@formkit/core'\n\nimport { FormValidationVisibility } from '#shared/components/Form/types.ts'\nimport { i18n } from '#shared/i18n.ts'\n\nexport const multipleFilesError = (node: FormKitNode) => {\n  node.on('created', () => {\n    let commitEventListener: string\n\n    node.on('prop:multiple', ({ payload, origin: node }) => {\n      if (!payload && Array.isArray(node.value) && node.value.length > 1) {\n        node.store.set(\n          createMessage({\n            key: 'multipleFilesError',\n            blocking: true,\n            value: i18n.t('This field allows only one file.'),\n            type: 'validation',\n            visible: true,\n          }),\n        )\n\n        node.emit('prop:validationVisibility', FormValidationVisibility.Live)\n\n        commitEventListener = node.on('commit', ({ payload: newValue }) => {\n          if (Array.isArray(newValue) && newValue.length === 1) {\n            node.store.remove('multipleFilesError')\n            node.emit(\n              'prop:validationVisibility',\n              FormValidationVisibility.Submit,\n            )\n          }\n        })\n      } else if (payload && commitEventListener) {\n        node.off(commitEventListener)\n        node.store.remove('multipleFilesError')\n        node.emit('prop:validationVisibility', FormValidationVisibility.Submit)\n      }\n    })\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FilePreviewVisualConfig } from '#shared/components/CommonFilePreview/types.ts'\nimport type { TooltipVisualConfig } from '#shared/components/CommonTooltip/types.ts'\nimport type { FieldFileVisualConfig } from '#shared/components/Form/fields/FieldFile/types.ts'\nimport type { ObjectAttributesConfig } from '#shared/components/ObjectAttributes/types.ts'\n\nexport interface SharedVisualConfig {\n  objectAttributes: ObjectAttributesConfig\n  tooltip: TooltipVisualConfig\n  filePreview?: FilePreviewVisualConfig\n  fieldFile?: FieldFileVisualConfig\n}\n\nconst currentVisualConfig: SharedVisualConfig = {\n  objectAttributes: {\n    outer: 'div',\n    wrapper: 'section',\n    classes: {},\n  },\n  tooltip: {\n    type: 'inline',\n    component: () => null,\n  },\n  filePreview: {\n    buttonComponent: () => null,\n    buttonProps: {},\n  },\n  fieldFile: {\n    buttonComponent: () => null,\n  },\n}\n\nexport const useSharedVisualConfig = () => {\n  return currentVisualConfig\n}\n\nexport const setupCommonVisualConfig = (config: SharedVisualConfig) => {\n  Object.assign(currentVisualConfig, config)\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { tryOnScopeDispose } from '@vueuse/shared'\nimport { ref } from 'vue'\n\nexport const useTouchDevice = () => {\n  const isTouchDevice = ref(false)\n\n  if (window) {\n    let mediaQuery: MediaQueryList\n\n    const observeCallback = () => {\n      isTouchDevice.value = window.matchMedia('(pointer: coarse)').matches\n      mediaQuery?.removeEventListener('change', observeCallback)\n      mediaQuery = window.matchMedia('(pointer: coarse)')\n      mediaQuery.addEventListener('change', observeCallback, { once: true })\n    }\n\n    observeCallback()\n\n    tryOnScopeDispose(() => {\n      mediaQuery?.removeEventListener('change', observeCallback)\n    })\n  }\n\n  return {\n    isTouchDevice,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FilePreviewClassMap } from '#shared/components/CommonFilePreview/types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet filePreviewClasses: FilePreviewClassMap = {\n  base: 'common-file-preview',\n  wrapper: 'common-file-preview-wrapper',\n  icon: 'common-file-preview-icon',\n  preview: 'common-file-preview-preview',\n  link: 'common-file-preview-link',\n  size: 'common-file-preview-size',\n}\n\nexport const initializeFilePreviewClasses = (classes: FilePreviewClassMap) => {\n  filePreviewClasses = classes\n}\n\nexport const getFilePreviewClasses = () => filePreviewClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nexport const getIconByContentType = (type?: Maybe<string>) => {\n  if (!type) return 'file'\n  const contentType = type.replace(/^(.+?\\/.+?)(\\b|\\s).+?$/, '$1')\n\n  const icons: Record<string, string> = {\n    // image\n    'image/jpeg': 'photos',\n    'image/jpg': 'photos',\n    'image/png': 'photos',\n    'image/svg': 'photos',\n    'image/gif': 'photos',\n    'image/webp': 'photos',\n    // audio\n    'audio/aac': 'audio',\n    'audio/mp4': 'audio',\n    'audio/mpeg': 'audio',\n    'audio/amr': 'audio',\n    'audio/ogg': 'audio',\n    // video\n    'video/mp4': 'video',\n    'video/3gp': 'video',\n    // documents\n    'application/pdf': 'library',\n    'application/msword': 'template', // .doc, .dot\n    'application/vnd.ms-word': 'template',\n    'application/vnd.oasis.opendocument.text': 'template',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n      'template', // .docx\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template':\n      'template', // .dotx\n    'application/vnd.ms-excel': 'file', // .xls\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'file', // .xlsx\n    'application/vnd.oasis.opendocument.spreadsheet': 'file',\n    'application/vnd.ms-powerpoint': 'file', // .ppt\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation':\n      'file', // .pptx\n    'application/vnd.oasis.opendocument.presentation': 'file',\n    // code\n    'text/html': 'template',\n    'application/json': 'template',\n    'message/rfc822': 'mail-file',\n    // text\n    'text/plain': 'template',\n    'text/rtf': 'template',\n    'text/calendar': 'calendar',\n    // archives\n    'application/gzip': 'attachment',\n    'application/zip': 'attachment',\n  }\n  return icons[contentType] || 'file'\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\n\nimport { useAppName } from '#shared/composables/useAppName.ts'\nimport { useSharedVisualConfig } from '#shared/composables/useSharedVisualConfig.ts'\nimport { useTouchDevice } from '#shared/composables/useTouchDevice.ts'\nimport type { StoredFile } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { getFilePreviewClasses } from '#shared/initializer/initializeFilePreviewClasses.ts'\nimport {\n  canDownloadFile,\n  canPreviewFile,\n  humanizeFileSize,\n  type FilePreview,\n} from '#shared/utils/files.ts'\nimport { getIconByContentType } from '#shared/utils/icons.ts'\n\nexport interface Props {\n  file: Pick<StoredFile, 'type' | 'name' | 'size'>\n\n  downloadUrl?: string\n  previewUrl?: string\n  loading?: boolean\n\n  noPreview?: boolean\n  noRemove?: boolean\n\n  wrapperClass?: string\n  iconClass?: string\n  sizeClass?: string\n}\n\nconst props = defineProps<Props>()\n\nconst emit = defineEmits<{\n  remove: []\n  preview: [$event: Event, type: FilePreview]\n}>()\n\nconst appName = useAppName()\n\nconst imageFailed = ref(false)\n\nconst canPreview = computed(() => {\n  const { file, previewUrl } = props\n\n  if (!previewUrl || imageFailed.value) return false\n\n  const type = canPreviewFile(file.type)\n\n  // Currently mobile allows only preview of images.\n  if (appName === 'mobile' && type !== 'image') return false\n\n  return type\n})\n\nconst canDownload = computed(() => canDownloadFile(props.file.type))\nconst icon = computed(() => getIconByContentType(props.file.type))\n\nconst componentType = computed(() => {\n  if (props.downloadUrl) return 'CommonLink'\n  return 'div'\n})\n\nconst ariaLabel = computed(() => {\n  if (props.downloadUrl && canDownload.value)\n    return i18n.t('Download %s', props.file.name) // directly downloads file\n  if (props.downloadUrl && !canDownload.value)\n    return i18n.t('Open %s', props.file.name) // opens file in another tab\n  return props.file.name // cannot download and preview, probably just uploaded pdf\n})\n\nconst onPreviewClick = (event: Event) => {\n  if (!canPreview.value) return\n\n  emit('preview', event, canPreview.value)\n}\n\nconst { isTouchDevice } = useTouchDevice()\n\nconst { filePreview: filePreviewConfig } = useSharedVisualConfig()\n\nconst classMap = getFilePreviewClasses()\n</script>\n\n<template>\n  <div\n    class=\"group/file-preview flex w-full items-center gap-2 outline-hidden\"\n    :class=\"[classMap.wrapper, wrapperClass]\"\n  >\n    <button\n      v-if=\"!noPreview && canPreview\"\n      v-tooltip=\"$t('Preview %s', props.file.name)\"\n      class=\"flex h-9 w-9 shrink-0 items-center justify-center rounded\"\n      :class=\"[{ border: canPreview !== 'image' }, classMap.preview]\"\n      @click=\"onPreviewClick\"\n      @keydown.delete.prevent=\"$emit('remove')\"\n      @keydown.backspace.prevent=\"$emit('remove')\"\n    >\n      <template v-if=\"canPreview\">\n        <img\n          v-if=\"canPreview === 'image'\"\n          class=\"h-9 w-9 rounded border object-cover\"\n          :src=\"previewUrl\"\n          :alt=\"$t('Image of %s', file.name)\"\n          @error=\"imageFailed = true\"\n        />\n        <CommonIcon v-else size=\"base\" decorative :name=\"icon\" />\n      </template>\n    </button>\n\n    <Component\n      :is=\"componentType\"\n      v-tooltip=\"ariaLabel\"\n      class=\"flex w-full items-center gap-2 overflow-hidden text-left outline-hidden select-none\"\n      :class=\"{\n        'cursor-pointer': componentType !== 'div',\n        [classMap.link]: true,\n      }\"\n      tabindex=\"0\"\n      :link=\"downloadUrl\"\n      :download=\"canDownload ? file.name : undefined\"\n      :target=\"!canDownload ? '_blank' : undefined\"\n      @keydown.delete.prevent=\"$emit('remove')\"\n      @keydown.backspace.prevent=\"$emit('remove')\"\n    >\n      <div\n        v-if=\"!canPreview\"\n        class=\"flex h-9 w-9 items-center justify-center rounded border\"\n        :class=\"[classMap.icon, iconClass]\"\n      >\n        <CommonIcon\n          v-if=\"loading\"\n          size=\"base\"\n          :label=\"$t('File \\'%s\\' is uploading', file.name)\"\n          name=\"loading\"\n          animation=\"spin\"\n        />\n        <CommonIcon v-else size=\"base\" decorative :name=\"icon\" />\n      </div>\n      <div class=\"flex flex-1 flex-col overflow-hidden\" :class=\"classMap.base\">\n        <span class=\"line-clamp-1\">\n          {{ file.name }}\n        </span>\n        <span\n          v-if=\"file.size\"\n          class=\"line-clamp-1\"\n          :class=\"[classMap.size, sizeClass]\"\n        >\n          {{ humanizeFileSize(file.size) }}\n        </span>\n      </div>\n    </Component>\n\n    <component\n      :is=\"filePreviewConfig?.buttonComponent\"\n      v-if=\"!noRemove\"\n      :class=\"{\n        'opacity-0 transition-opacity': !isTouchDevice,\n      }\"\n      class=\"group-hover/file-preview:opacity-100 focus:opacity-100\"\n      type=\"button\"\n      icon=\"remove-attachment\"\n      :aria-label=\"i18n.t('Remove %s', file.name)\"\n      v-bind=\"filePreviewConfig?.buttonProps\"\n      @click.stop.prevent=\"$emit('remove')\"\n      @keypress.space.prevent=\"$emit('remove')\"\n    />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { ref } from 'vue'\n\nimport type { ButtonVariant } from '#shared/types/button.ts'\nimport getUuid from '#shared/utils/getUuid.ts'\n\nimport { useAppName } from './useAppName.ts'\n\nimport type { Except } from 'type-fest'\n\nexport type ConfirmationVariant = 'delete' | 'unsaved' | 'confirm'\n\nexport interface ConfirmationOptions {\n  headerTitle?: string\n  headerTitlePlaceholder?: string[]\n  headerIcon?: string\n  text?: string\n  textPlaceholder?: string[]\n  buttonLabel?: string\n  buttonVariant?: ButtonVariant\n  cancelLabel?: string\n  fullscreen?: boolean\n  // TODO: should maybe also be implemented for mobile, so that we have a better alignment for the code\n  confirmationVariant?: ConfirmationVariant\n  confirmCallback: () => void\n  cancelCallback: () => void\n  closeCallback: () => void\n}\n\nconst confirmationOptions = ref(new Map<string, ConfirmationOptions>())\nconst lastConfirmationUuid = ref<string | undefined>()\nconst triggerConfirmation = ref(0)\n\nexport const useConfirmation = () => {\n  const appName = useAppName()\n\n  const waitForConfirmation = (\n    text: string,\n    options: Except<\n      ConfirmationOptions,\n      'text' | 'confirmCallback' | 'cancelCallback' | 'closeCallback'\n    > = {},\n    name: string | undefined = undefined,\n  ) => {\n    const uniqueName =\n      appName === 'desktop' ? name || getUuid() : 'confirmation'\n\n    if (confirmationOptions.value.has(uniqueName)) {\n      return new Promise<undefined>((resolve) => {\n        resolve(undefined)\n      })\n    }\n\n    return new Promise<boolean | undefined>((resolve) => {\n      confirmationOptions.value.set(uniqueName, {\n        ...options,\n        text,\n        confirmCallback() {\n          resolve(true)\n        },\n        cancelCallback() {\n          resolve(false)\n        },\n        closeCallback() {\n          resolve(undefined)\n        },\n      })\n\n      lastConfirmationUuid.value = uniqueName\n      triggerConfirmation.value += 1\n    })\n  }\n\n  const waitForVariantConfirmation = (\n    variant: ConfirmationVariant = 'confirm',\n    options: Except<\n      ConfirmationOptions,\n      'text' | 'confirmCallback' | 'cancelCallback' | 'closeCallback'\n    > = {},\n    name: string | undefined = undefined,\n  ) => {\n    return waitForConfirmation(\n      '',\n      {\n        ...options,\n        confirmationVariant: variant,\n      },\n      name,\n    )\n  }\n\n  return {\n    lastConfirmationUuid,\n    triggerConfirmation,\n    confirmationOptions,\n    waitForConfirmation,\n    waitForVariantConfirmation,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { ref, unref, watchEffect } from 'vue'\n\nimport { canPreviewFile } from '#shared/utils/files.ts'\n\nimport type { MaybeRef } from '@vueuse/shared'\n\ninterface ImagePreview {\n  src?: string\n  title?: string\n}\n\nexport interface ImageViewerFile {\n  name?: string\n  content?: string\n  preview?: string\n  inline?: string\n  type?: Maybe<string>\n}\n\nexport interface ViewerOptions {\n  images: ImagePreview[]\n  index: number\n  visible: boolean\n}\n\nexport const imageViewerOptions = ref<ViewerOptions>({\n  visible: false,\n  index: 0,\n  images: [],\n})\n\nexport const useImageViewer = (viewFiles: MaybeRef<ImageViewerFile[]>) => {\n  const indexMap = new WeakMap<ImageViewerFile, number>()\n\n  let images: ImagePreview[] = []\n\n  watchEffect(() => {\n    images = unref(viewFiles)\n      .filter((file) => {\n        const canPreview = canPreviewFile(file.type)\n\n        return canPreview && canPreview === 'image'\n      })\n      .map((image, index) => {\n        // we need to keep track of indexes, because they might\n        // be different from original files, if they had non-image uploads\n        indexMap.set(image, index)\n        return {\n          src: image.inline || image.preview || image.content,\n          title: image.name,\n        }\n      })\n  })\n\n  const showImage = (image: ImageViewerFile) => {\n    const foundIndex = indexMap.get(image) ?? 0\n    imageViewerOptions.value = {\n      index: foundIndex,\n      images,\n      visible: true,\n    }\n  }\n\n  const hideImage = () => {\n    imageViewerOptions.value = {\n      images: [],\n      index: 0,\n      visible: false,\n    }\n  }\n\n  const isViewable = (file: ImageViewerFile) => indexMap.has(file)\n\n  return {\n    isViewable,\n    showImage,\n    hideImage,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createMessage } from '@formkit/core'\n\nimport { getNodeByName } from '../utils.ts'\n\nexport const useFileUploadProcessing = (formId: string, fieldName: string) => {\n  const fieldNode = getNodeByName(formId, fieldName)\n\n  const setFileUploadProcessing = () => {\n    fieldNode?.root?.store.set(\n      createMessage({\n        blocking: true,\n        key: 'uploadProcessing',\n        value: true,\n        visible: false,\n      }),\n    )\n  }\n\n  const removeFileUploadProcessing = () => {\n    fieldNode?.root?.store.remove('uploadProcessing')\n  }\n\n  return {\n    setFileUploadProcessing,\n    removeFileUploadProcessing,\n  }\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const FormUploadCacheAddDocument = gql`\n    mutation formUploadCacheAdd($formId: FormId!, $files: [UploadFileInput!]!) {\n  formUploadCacheAdd(formId: $formId, files: $files) {\n    uploadedFiles {\n      id\n      name\n      size\n      type\n    }\n  }\n}\n    `;\nexport function useFormUploadCacheAddMutation(options: VueApolloComposable.UseMutationOptions<Types.FormUploadCacheAddMutation, Types.FormUploadCacheAddMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.FormUploadCacheAddMutation, Types.FormUploadCacheAddMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.FormUploadCacheAddMutation, Types.FormUploadCacheAddMutationVariables>(FormUploadCacheAddDocument, options);\n}\nexport type FormUploadCacheAddMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.FormUploadCacheAddMutation, Types.FormUploadCacheAddMutationVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const FormUploadCacheRemoveDocument = gql`\n    mutation formUploadCacheRemove($formId: FormId!, $fileIds: [ID!]!) {\n  formUploadCacheRemove(formId: $formId, fileIds: $fileIds) {\n    success\n  }\n}\n    `;\nexport function useFormUploadCacheRemoveMutation(options: VueApolloComposable.UseMutationOptions<Types.FormUploadCacheRemoveMutation, Types.FormUploadCacheRemoveMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.FormUploadCacheRemoveMutation, Types.FormUploadCacheRemoveMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.FormUploadCacheRemoveMutation, Types.FormUploadCacheRemoveMutationVariables>(FormUploadCacheRemoveDocument, options);\n}\nexport type FormUploadCacheRemoveMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.FormUploadCacheRemoveMutation, Types.FormUploadCacheRemoveMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n<script setup lang=\"ts\">\nimport { useDropZone } from '@vueuse/core'\nimport { useTemplateRef } from 'vue'\nimport { toRef, computed, ref, type ComputedRef } from 'vue'\n\nimport CommonFilePreview from '#shared/components/CommonFilePreview/CommonFilePreview.vue'\nimport type { FormFieldContext } from '#shared/components/Form/types/field.ts'\nimport { useAppName } from '#shared/composables/useAppName.ts'\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport { useImageViewer } from '#shared/composables/useImageViewer.ts'\nimport { useSharedVisualConfig } from '#shared/composables/useSharedVisualConfig.ts'\nimport { useTraverseOptions } from '#shared/composables/useTraverseOptions.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport { convertFileList } from '#shared/utils/files.ts'\n\nimport { useFileUploadProcessing } from '../../composables/useFileUploadProcessing.ts'\n\nimport { useFileValidation } from './composable/useFileValidation.ts'\nimport { useFormUploadCacheAddMutation } from './graphql/mutations/uploadCache/add.api.ts'\nimport { useFormUploadCacheRemoveMutation } from './graphql/mutations/uploadCache/remove.api.ts'\nimport { getFileClasses } from './initializeFileClasses.ts'\n\nimport type { FieldFileProps, FileUploaded } from './types.ts'\nimport type { SetOptional } from 'type-fest'\n\nexport interface Props {\n  context: FormFieldContext<FieldFileProps>\n}\n\nconst props = defineProps<Props>()\n\nconst contextReactive = toRef(props, 'context')\n\nconst { validateFileSize } = useFileValidation()\n\n// TODO: later we need to check how file content from prefilled upload cache is working\n// Switch to direct url for preview?\nconst uploadFiles = computed<FileUploaded[]>({\n  get() {\n    return contextReactive.value._value || []\n  },\n  set(value) {\n    props.context.node.input(value)\n  },\n})\n\nconst contentFiles = ref<Record<string, string>>({})\nconst loadingFiles = ref<SetOptional<FileUploaded, 'id'>[]>([])\n\n// TODO: We improved now the upload cache endpoint also working for show, so maybe we could use this for preview.\nconst uploadFilesWithContent = computed(() => {\n  return uploadFiles.value.map((file) => {\n    const content = contentFiles.value[file.id]\n    return { ...file, content }\n  })\n})\n\nconst addFileMutation = new MutationHandler(useFormUploadCacheAddMutation({}))\nconst addFileLoading = addFileMutation.loading()\n\nconst removeFileMutation = new MutationHandler(\n  useFormUploadCacheRemoveMutation({}),\n)\nconst removeFileLoading = addFileMutation.loading()\n\nconst canInteract = computed(\n  () =>\n    !props.context.disabled &&\n    !addFileLoading.value &&\n    !removeFileLoading.value,\n)\n\nconst { setFileUploadProcessing, removeFileUploadProcessing } =\n  useFileUploadProcessing(props.context.formId, props.context.node.name)\n\nconst fileInput = useTemplateRef('file-input')\n\nconst reset = () => {\n  loadingFiles.value = []\n  const input = fileInput.value\n  if (!input) return\n  input.value = ''\n  input.files = null\n\n  removeFileUploadProcessing()\n}\n\nconst loadFiles = async (files: FileList | File[]) => {\n  loadingFiles.value = Array.from(files || []).map((file) => ({\n    name: file.name,\n    size: file.size,\n    type: file.type,\n  }))\n\n  setFileUploadProcessing()\n\n  const uploads = await convertFileList(files)\n\n  const data = await addFileMutation\n    .send({\n      formId: props.context.formId,\n      files: uploads,\n    })\n    .catch(() => {\n      reset()\n    })\n\n  const uploadedFiles = data?.formUploadCacheAdd?.uploadedFiles\n\n  if (!uploadedFiles) {\n    reset()\n    return\n  }\n\n  const previewableFile = uploadedFiles.reduce(\n    (filesContent: Record<string, string>, file, index) => {\n      filesContent[file.id] = uploads[index].content\n      return filesContent\n    },\n    {},\n  )\n\n  contentFiles.value = { ...contentFiles.value, ...previewableFile }\n  uploadFiles.value = [...uploadFiles.value, ...uploadedFiles]\n\n  reset()\n}\n\nObject.assign(props.context, {\n  uploadFiles: loadFiles,\n})\n\nconst onFileChanged = async ($event: Event) => {\n  const input = $event.target as HTMLInputElement\n\n  const { files } = input\n  if (\n    props.context.allowedFiles &&\n    files &&\n    !validateFileSize(props.context.node, files, props.context.allowedFiles)\n  ) {\n    return\n  }\n  if (!files) return\n\n  await loadFiles(files)\n}\n\nconst { waitForConfirmation } = useConfirmation()\n\nconst removeFile = async (file: FileUploaded) => {\n  const fileId = file.id\n  const confirmed = await waitForConfirmation(\n    __('Are you sure you want to delete \"%s\"?'),\n    {\n      textPlaceholder: [file.name],\n      buttonLabel: __('Delete'),\n      buttonVariant: 'danger',\n    },\n  )\n\n  if (!confirmed) return\n\n  if (!fileId) {\n    uploadFiles.value = uploadFiles.value.filter((elem) => elem !== file)\n    return\n  }\n\n  const toBeDeletedFile = uploadFiles.value.find((file) => file.id === fileId)\n  if (toBeDeletedFile) {\n    toBeDeletedFile.isProcessing = true\n  }\n\n  removeFileMutation\n    .send({ formId: props.context.formId, fileIds: [fileId] })\n    .then((data) => {\n      if (data?.formUploadCacheRemove?.success) {\n        uploadFiles.value = uploadFiles.value.filter((elem) => {\n          return elem.id !== fileId\n        })\n      }\n    })\n}\n\nconst uploadTitle = computed(() => {\n  if (!props.context.multiple) {\n    return __('Attach file')\n  }\n  if (uploadFiles.value.length === 0) {\n    return __('Attach files')\n  }\n  return __('Attach another file')\n})\n\nconst reachedUploadLimit = computed(() => {\n  return (\n    !props.context.multiple &&\n    (uploadFiles.value.length >= 1 || loadingFiles.value.length >= 1)\n  )\n})\n\nconst bottomGradientOpacity = ref('1')\n\nconst onFilesScroll = (event: UIEvent) => {\n  const target = event.target as HTMLElement\n  const scrollMin = 20\n  const bottomMax = target.scrollHeight - target.clientHeight\n  const bottomMin = bottomMax - scrollMin\n  const { scrollTop } = target\n  if (scrollTop <= bottomMin) {\n    bottomGradientOpacity.value = '1'\n    return\n  }\n  const opacityPart = (scrollTop - bottomMin) / scrollMin\n  bottomGradientOpacity.value = (1 - opacityPart).toFixed(2)\n}\n\nconst { showImage } = useImageViewer(uploadFilesWithContent)\n\nconst filesContainer = useTemplateRef('files-container')\n\nuseTraverseOptions(filesContainer, {\n  direction: 'vertical',\n})\n\nconst appName = useAppName()\nconst classMap = getFileClasses()\nconst { fieldFile: fieldFileConfig } = useSharedVisualConfig()\n\nconst showDivider = computed(() => {\n  return (\n    classMap.divider &&\n    !reachedUploadLimit.value &&\n    (uploadFiles.value.length || loadingFiles.value.length)\n  )\n})\n\nconst showGradient = computed(() => {\n  return (\n    appName === 'mobile' &&\n    (uploadFiles.value.length > 2 || loadingFiles.value.length > 2)\n  )\n})\n\nconst acceptableFileTypes = computed(() => props.context.accept?.split(','))\n\nconst dropZoneElement = useTemplateRef('drop-zone')\n\nconst { isOverDropZone } = useDropZone(dropZoneElement, {\n  dataTypes: acceptableFileTypes as ComputedRef<string[]>, // TODO: Maybe add a PR in vueuse, that the ref can also be undefined.\n  onDrop: (files: File[] | null) => {\n    if (!files) return\n\n    loadFiles(files)\n  },\n})\n</script>\n\n<template>\n  <div class=\"relative\" :class=\"context.classes.input\">\n    <div ref=\"drop-zone\">\n      <div v-if=\"showGradient\" class=\"relative w-full\">\n        <div\n          class=\"file-list show-gradient top-gradient absolute h-5 w-full\"\n        ></div>\n      </div>\n      <div\n        v-if=\"uploadFiles.length || loadingFiles.length\"\n        ref=\"files-container\"\n        role=\"list\"\n        class=\"overflow-auto\"\n        :class=\"{\n          'opacity-60': !canInteract,\n          'pb-4': reachedUploadLimit,\n          [classMap.listContainer]: true,\n        }\"\n        @scroll.passive=\"onFilesScroll($event as UIEvent)\"\n      >\n        <CommonFilePreview\n          v-for=\"(uploadFile, idx) of uploadFilesWithContent\"\n          :key=\"uploadFile.id || `${uploadFile.name}-${idx}`\"\n          :file=\"uploadFile\"\n          role=\"listitem\"\n          :class=\"{ 'pointer-events-none opacity-75': uploadFile.isProcessing }\"\n          :no-remove=\"uploadFile.isProcessing\"\n          :loading=\"uploadFile.isProcessing\"\n          :preview-url=\"uploadFile.preview || uploadFile.content\"\n          :download-url=\"uploadFile.content\"\n          @preview=\"canInteract && showImage(uploadFile)\"\n          @remove=\"canInteract && removeFile(uploadFile)\"\n        />\n        <CommonFilePreview\n          v-for=\"(uploadFile, idx) of loadingFiles\"\n          :key=\"uploadFile.id || `${uploadFile.name}${idx}`\"\n          role=\"listitem\"\n          :file=\"uploadFile\"\n          loading\n          no-remove\n        />\n      </div>\n      <div v-if=\"showGradient\" class=\"relative w-full\">\n        <div\n          class=\"file-list show-gradient bottom-gradient absolute h-5 w-full\"\n          :style=\"{ opacity: bottomGradientOpacity }\"\n        ></div>\n      </div>\n      <div v-if=\"showDivider\" class=\"w-full px-2.5\">\n        <hr class=\"h-px w-full border-0\" :class=\"classMap.divider\" />\n      </div>\n      <div class=\"w-full p-1 text-center\">\n        <component\n          :is=\"fieldFileConfig?.buttonComponent\"\n          v-if=\"!reachedUploadLimit\"\n          :class=\"classMap.button\"\n          type=\"button\"\n          size=\"medium\"\n          variant=\"secondary\"\n          prefix-icon=\"attachment\"\n          :disabled=\"!canInteract\"\n          @click=\"canInteract && fileInput?.click()\"\n        >\n          {{ $t(uploadTitle) }}\n        </component>\n        <input\n          :id=\"context.id\"\n          ref=\"file-input\"\n          data-test-id=\"fileInput\"\n          type=\"file\"\n          :name=\"context.node.name\"\n          :aria-describedby=\"context.describedBy\"\n          :v-bind=\"context.attrs\"\n          class=\"hidden\"\n          tabindex=\"-1\"\n          aria-hidden=\"true\"\n          :accept=\"context.accept\"\n          :capture=\"context.capture\"\n          :multiple=\"context.multiple\"\n          @change=\"canInteract && onFileChanged($event)\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"classMap.dropZoneContainer && isOverDropZone\"\n      class=\"pointer-events-none absolute inset-0 z-10 flex items-center justify-center p-2.5\"\n      :class=\"classMap.dropZoneContainer\"\n    >\n      <div\n        class=\"flex h-full w-full items-center justify-center rounded border-2 border-dashed\"\n        :class=\"classMap.dropZoneBorder\"\n      >\n        <CommonLabel\n          class=\"text-blue-800\"\n          :size=\"uploadFiles.length || loadingFiles.length ? 'large' : 'medium'\"\n          >{{ $t('Drop files here') }}</CommonLabel\n        >\n      </div>\n    </div>\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport createInput from '#shared/form/core/createInput.ts'\n\nimport { filesSizeError } from './features/filesSizeError.ts'\nimport { filesTypeError } from './features/filesTypeError.ts'\nimport { multipleFilesError } from './features/multipleFilesError.ts'\nimport FieldFileInput from './FieldFileInput.vue'\n\nconst fieldDefinition = createInput(\n  FieldFileInput,\n  ['multiple', 'capture', 'accept', 'allowedFiles'],\n  {\n    features: [multipleFilesError, filesSizeError, filesTypeError],\n  },\n)\n\nexport default {\n  fieldType: 'file',\n  definition: fieldDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { group as groupDefinition } from '@formkit/inputs'\n\nexport default {\n  fieldType: 'group',\n  definition: groupDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { hidden as hiddenDefinition } from '@formkit/inputs'\n\nimport initializeFieldDefinition from '#shared/form/core/initializeFieldDefinition.ts'\nimport formUpdaterTrigger from '#shared/form/features/formUpdaterTrigger.ts'\n\ninitializeFieldDefinition(hiddenDefinition, {\n  features: [formUpdaterTrigger()],\n})\n\nexport default {\n  fieldType: 'hidden',\n  definition: hiddenDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst addSubmitEvent = (node: FormKitNode) => {\n  // TODO: think about adding a `submit` boolean prop as well, and submitting the whole form implicitly if set to true.\n  node.addProps(['onSubmit'])\n\n  node.on('created', () => {\n    if (!node.context || typeof node.props.onSubmit !== 'function') return\n\n    node.context.attrs.onKeypress = (event: KeyboardEvent) => {\n      if (event.key !== 'Enter') return\n\n      // Prevent the form from being submitted, this should now be the responsibility of the custom handler.\n      event.preventDefault()\n\n      node.props.onSubmit.call(\n        null,\n        new SubmitEvent('submit', {\n          submitter: event.target as HTMLElement,\n        }),\n      )\n    }\n  })\n}\n\nexport default addSubmitEvent\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\nimport type { FormKitNode } from '@formkit/core'\n\nexport const setPopulatedOnWebkitAutofill = (node: FormKitNode) => {\n  let autofillField = false\n\n  const onAnimationstart = (e?: AnimationEvent) => {\n    if (\n      !e ||\n      (e.animationName !== 'onAutoFillStart' &&\n        e.animationName !== 'onAutoFillEnd') ||\n      (e.animationName === 'onAutoFillEnd' && !autofillField)\n    )\n      return\n\n    const inputElement = e.currentTarget as HTMLInputElement\n\n    const outerElement = inputElement.closest(\n      '.formkit-outer',\n    ) as HTMLDivElement\n\n    if (!outerElement) return\n\n    if (e.animationName === 'onAutoFillStart') {\n      autofillField = true\n      outerElement.dataset.populated = 'true'\n      return\n    }\n\n    autofillField = false\n    delete outerElement.dataset.populated\n  }\n\n  node.on('created', () => {\n    if (!node.context) return\n\n    // This is not a typo, all event handlers have just a first letter capitalized!\n    node.context.attrs.onAnimationstart = onAnimationstart\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport {\n  color as inputColorDefinition,\n  email as inputEmailDefinition,\n  number as inputCNumberDefinition,\n  tel as inputTelDefinition,\n  text as inputTextDefinition,\n  time as inputTimeDefinition,\n  textInput,\n  url as inputUrlDefinition,\n} from '@formkit/inputs'\n\nimport initializeFieldDefinition from '#shared/form/core/initializeFieldDefinition.ts'\nimport addLink from '#shared/form/features/addLink.ts'\nimport addSubmitEvent from '#shared/form/features/addSubmitEvent.ts'\nimport defaultEmptyValueString from '#shared/form/features/defaultEmptyValueString.ts'\nimport formUpdaterTrigger from '#shared/form/features/formUpdaterTrigger.ts'\nimport { setPopulatedOnWebkitAutofill } from '#shared/form/features/setPopulatedOnWebkitAutofill.ts'\nimport type {\n  FormFieldsTypeDefinition,\n  FormFieldType,\n} from '#shared/types/form.ts'\n\nconst inputFieldDefinitionList: FormFieldsTypeDefinition = {\n  text: inputTextDefinition,\n  color: inputColorDefinition,\n  email: inputEmailDefinition,\n  number: inputCNumberDefinition,\n  tel: inputTelDefinition,\n  time: inputTimeDefinition,\n  url: inputUrlDefinition,\n}\n\nconst inputFields: FormFieldType[] = []\n\nObject.keys(inputFieldDefinitionList).forEach((inputType) => {\n  initializeFieldDefinition(\n    inputFieldDefinitionList[inputType],\n    {\n      features: [\n        addLink,\n        addSubmitEvent,\n        formUpdaterTrigger('delayed'),\n        setPopulatedOnWebkitAutofill,\n        defaultEmptyValueString,\n      ],\n    },\n    { schema: textInput },\n  )\n\n  inputFields.push({\n    fieldType: inputType,\n    definition: inputFieldDefinitionList[inputType],\n  })\n})\n\nexport default inputFields\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { list as listDefinition } from '@formkit/inputs'\n\nexport default {\n  fieldType: 'list',\n  definition: listDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { password as passwordDefinition } from '@formkit/inputs'\nimport { useEventListener } from '@vueuse/core'\nimport { cloneDeep } from 'lodash-es'\n\nimport initializeFieldDefinition from '#shared/form/core/initializeFieldDefinition.ts'\nimport formUpdaterTrigger from '#shared/form/features/formUpdaterTrigger.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst localPasswordDefinition = cloneDeep(passwordDefinition)\n\nconst switchPasswordVisibility = (node: FormKitNode) => {\n  const { props } = node\n\n  props.suffixIconClass = 'select-none cursor-pointer'\n  props.suffixIcon = 'show'\n  props.onSuffixIconClick = () => {\n    props.type = props.type === 'password' ? 'text' : 'password'\n  }\n\n  node.on('mounted', ({ origin }) => {\n    if (origin.name !== 'password' && !props.id) return\n\n    const suffixIcon = document.getElementById(\n      props.id as string,\n    )?.nextElementSibling\n\n    if (suffixIcon)\n      useEventListener(suffixIcon, 'keydown', (event: KeyboardEvent) => {\n        if (event.code === 'Space')\n          props.type = props.type === 'password' ? 'text' : 'password'\n      })\n  })\n\n  node.on('prop:type', ({ payload, origin }) => {\n    const { props } = origin\n    props.suffixIcon = payload === 'password' ? 'show' : 'hide'\n  })\n}\n\ninitializeFieldDefinition(localPasswordDefinition, {\n  features: [switchPasswordVisibility, formUpdaterTrigger('delayed')],\n})\n\nexport default {\n  fieldType: 'password',\n  definition: localPasswordDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { radio as radioDefinition } from '@formkit/inputs'\nimport { has } from '@formkit/utils'\n\nimport initializeFieldDefinition from '#shared/form/core/initializeFieldDefinition.ts'\nimport formUpdaterTrigger from '#shared/form/features/formUpdaterTrigger.ts'\nimport extendSchemaDefinition from '#shared/form/utils/extendSchemaDefinition.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst addOptionCheckedDataAttribute = (node: FormKitNode) => {\n  extendSchemaDefinition(node, 'wrapper', {\n    attrs: {\n      'data-is-checked': {\n        if: '$fns.isChecked($option.value)',\n        then: 'true',\n        else: undefined,\n      },\n      'data-test-id': 'radio-label',\n    },\n  })\n}\n\nconst addSubmitEvent = (node: FormKitNode) => {\n  if (typeof node.props.onSubmit !== 'function') return\n\n  extendSchemaDefinition(node, 'wrapper', {\n    attrs: {\n      onKeypress: (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          event.preventDefault()\n\n          node.props.onSubmit.call(\n            null,\n            new SubmitEvent('submit', {\n              submitter: event.target as HTMLElement,\n            }),\n          )\n        }\n      },\n    },\n  })\n}\n\nconst addIconLabel = (node: FormKitNode) => {\n  extendSchemaDefinition(node, 'label', {\n    attrs: {\n      id: null,\n    },\n    children: [\n      {\n        if: '$option.icon',\n        $cmp: 'CommonIcon',\n        props: {\n          class: 'inline-flex ltr:mr-3 rtl:ml-3',\n          name: '$option.icon',\n          size: 'base',\n        },\n      },\n      '$option.label',\n    ],\n  })\n}\n\nconst handleButtonMode = (node: FormKitNode) => {\n  const { props } = node\n\n  node.addProps(['buttons'])\n\n  const setClasses = (buttons: boolean) => {\n    if (buttons) {\n      props.optionsClass = 'flex flex-col grow space-y-2'\n      props.optionClass = 'formkit-disabled:opacity-30'\n      // this is needed to not show \"required\" label on buttons\n      props.labelClass = '$reset'\n      props.wrapperClass =\n        'items-center justify-center py-2 px-4 w-full h-14 text-lg font-normal text-white bg-gray-600 rounded-xl select-none formkit-is-checked:bg-white formkit-is-checked:text-black formkit-is-checked:font-semibold'\n      props.inputClass = '$reset sr-only'\n      props.decoratorClass = 'hidden'\n    } else {\n      props.inputClass =\n        'h-4 w-4 border-[1.5px] border-white rounded-full bg-transparent focus:border-blue focus:bg-blue-highlight checked:focus:color-blue checked:bg-blue checked:border-blue checked:focus:bg-blue checked:hover:bg-blue'\n    }\n  }\n\n  node.on('created', () => {\n    if (!has(props, 'buttons')) {\n      props.buttons = false\n    }\n\n    setClasses(props.buttons)\n\n    node.on('prop:buttons', ({ payload }) => {\n      setClasses(payload)\n    })\n  })\n}\n\ninitializeFieldDefinition(radioDefinition, {\n  features: [\n    addOptionCheckedDataAttribute,\n    addSubmitEvent,\n    handleButtonMode,\n    addIconLabel,\n    formUpdaterTrigger(),\n  ],\n})\n\nexport default {\n  fieldType: 'radio',\n  definition: radioDefinition,\n}\n\nexport type { RadioOption } from './types.ts'\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { useTemplateRef } from 'vue'\n\nexport interface CommonInputSearchProps {\n  modelValue?: string\n  noBorder?: boolean\n  wrapperClass?: string\n  placeholder?: string\n}\n\nexport interface CommonInputSearchEmits {\n  (e: 'update:modelValue', filter: string): void\n}\n\nexport interface CommonInputSearchExpose {\n  focus(): void\n}\n\nconst props = withDefaults(defineProps<CommonInputSearchProps>(), {\n  placeholder: __('Search…'),\n})\nconst emit = defineEmits<CommonInputSearchEmits>()\n\nconst filter = useVModel(props, 'modelValue', emit)\n\nconst filterInput = useTemplateRef('filter-input')\n\nconst focus = () => {\n  filterInput.value?.focus()\n}\n\ndefineExpose({ focus })\n\nconst clearFilter = () => {\n  filter.value = ''\n  focus()\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n  inheritAttrs: false,\n}\n</script>\n\n<template>\n  <div\n    class=\"relative flex w-full items-center self-stretch\"\n    :class=\"wrapperClass\"\n  >\n    <CommonIcon\n      class=\"text-gray absolute shrink-0 ltr:left-2 rtl:right-2\"\n      size=\"base\"\n      name=\"search\"\n      decorative\n    />\n    <input\n      ref=\"filter-input\"\n      v-model=\"filter\"\n      v-bind=\"$attrs\"\n      :placeholder=\"i18n.t(placeholder)\"\n      class=\"placeholder:text-gray h-12 w-full grow rounded-xl bg-gray-500 px-9 text-base focus:ring-0 focus:shadow-none focus:outline-hidden\"\n      :class=\"{\n        'focus:border-white focus:ring-0': !noBorder,\n        'focus:border-transparent': noBorder,\n      }\"\n      :aria-label=\"$t('Search…')\"\n      type=\"text\"\n      role=\"searchbox\"\n    />\n    <div class=\"absolute flex shrink-0 items-center ltr:right-2 rtl:left-2\">\n      <slot name=\"controls\" />\n      <CommonIcon\n        v-if=\"filter && filter.length\"\n        :aria-label=\"i18n.t('Clear Search')\"\n        class=\"text-gray\"\n        size=\"base\"\n        name=\"input-cancel\"\n        @click.stop=\"clearFilter\"\n      />\n    </div>\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport CommonInputSearch, {\n  type CommonInputSearchProps,\n} from '#shared/components/CommonInputSearch/CommonInputSearch.vue'\n\nimport useValue from '../../composables/useValue.ts'\n\nimport type { FormFieldContext } from '../../types/field.ts'\n\nexport interface FieldSearchProps {\n  context: FormFieldContext<CommonInputSearchProps>\n}\n\nconst props = defineProps<FieldSearchProps>()\n\nconst { localValue } = useValue(toRef(props, 'context'))\n</script>\n\n<template>\n  <CommonInputSearch\n    :id=\"props.context.id\"\n    v-model=\"localValue\"\n    :disabled=\"props.context.disabled\"\n    :placeholder=\"props.context.placeholder || props.context.attrs.placeholder\"\n    :wrapper-class=\"props.context.wrapperClass\"\n    no-border\n    :class=\"context.classes.input\"\n    @blur=\"context.handlers.blur\"\n  />\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport createInput from '#shared/form/core/createInput.ts'\n\nimport FieldInputSearch from './FieldSearch.vue'\n\nconst fieldDefinition = createInput(FieldInputSearch, ['noBorder'])\n\nexport default {\n  fieldType: 'search',\n  definition: fieldDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { textarea as textareaDefinition } from '@formkit/inputs'\n\nimport initializeFieldDefinition from '#shared/form/core/initializeFieldDefinition.ts'\nimport defaultEmptyValueString from '#shared/form/features/defaultEmptyValueString.ts'\nimport formUpdaterTrigger from '#shared/form/features/formUpdaterTrigger.ts'\n\ninitializeFieldDefinition(textareaDefinition, {\n  features: [formUpdaterTrigger('delayed'), defaultEmptyValueString],\n})\n\n// TODO resizing as prop?\n\nexport default {\n  fieldType: 'textarea',\n  definition: textareaDefinition,\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, toRef, watch } from 'vue'\n\nimport stopEvent from '#shared/utils/events.ts'\n\nimport useValue from '../../composables/useValue.ts'\n\nimport { getToggleClasses } from './initializeToggleClasses.ts'\n\nimport type { FormFieldContext } from '../../types/field.ts'\n\nconst props = defineProps<{\n  context: FormFieldContext<{\n    // TODO: need to be changed to \"options\", because otherwise core workflow can not handle this\n    variants?: {\n      true?: string\n      false?: string\n    }\n    size?: 'medium' | 'small'\n  }>\n}>()\n\nconst context = toRef(props, 'context')\nconst { localValue } = useValue(context)\n\nconst variants = computed(() => props.context.variants || {})\n\nwatch(\n  () => props.context.variants,\n  (variants) => {\n    if (!variants) {\n      console.warn(\n        'FieldToggleInput: variants prop is required, but not provided',\n      )\n      return\n    }\n\n    if (localValue.value === undefined) {\n      const options = Object.keys(variants)\n      if (options.length === 1) {\n        nextTick(() => {\n          localValue.value = options[0] === 'true'\n        })\n      }\n      return\n    }\n\n    const valueString = localValue.value ? 'true' : 'false'\n\n    // if current value is not removed from options, we don't need to reset it\n    if (valueString in variants) return\n\n    // current value was removed from options, so we need reset it\n    // if other value exists, fallback to it, otherwise set to undefined\n    const newValueString = localValue.value ? 'false' : 'true'\n    const newValue = newValueString in variants ? !localValue.value : undefined\n\n    localValue.value = newValue\n  },\n  { immediate: true },\n)\n\nconst disabled = computed(() => {\n  if (props.context.disabled) return true\n\n  const nextValueString = localValue.value ? 'false' : 'true'\n\n  // if can't select next value, disable the toggle\n  return !(nextValueString in variants.value)\n})\n\nconst updateLocalValue = (e: Event) => {\n  stopEvent(e)\n\n  if (disabled.value) return\n\n  const newValue = localValue.value ? 'false' : 'true'\n\n  if (newValue in variants.value) {\n    localValue.value = newValue === 'true'\n  }\n}\n\nconst ariaChecked = computed(() => (localValue.value ? 'true' : 'false'))\n\nconst buttonSizeClasses = computed(() => {\n  if (context.value.size === 'small') return 'w-8 h-5'\n\n  return 'w-10 h-6'\n})\n\nconst knobSizeClasses = computed(() => {\n  if (context.value.size === 'small') return 'w-[18px] h-[18px]'\n\n  return 'w-[22px] h-[22px]'\n})\n\nconst knobTranslateClasses = computed(() => {\n  if (context.value.size === 'small')\n    return 'ltr:translate-x-[13px] rtl:-translate-x-[13px]'\n\n  return 'ltr:translate-x-[17px] rtl:-translate-x-[17px]'\n})\n\nconst classMap = getToggleClasses()\n</script>\n\n<template>\n  <button\n    :id=\"context.id\"\n    type=\"button\"\n    role=\"switch\"\n    class=\"formkit-disabled:pointer-events-none relative inline-flex flex-shrink-0 cursor-pointer items-center rounded-full\"\n    :class=\"[\n      context.classes.input,\n      classMap.track,\n      buttonSizeClasses,\n      {\n        [classMap.trackOn]: localValue,\n      },\n    ]\"\n    :aria-labelledby=\"`label-${context.id}`\"\n    :aria-disabled=\"disabled\"\n    :aria-checked=\"ariaChecked\"\n    :aria-describedby=\"context.describedBy\"\n    :tabindex=\"context.disabled ? '-1' : '0'\"\n    :v-bind=\"context.attrs\"\n    @click=\"updateLocalValue\"\n    @keydown.space=\"updateLocalValue\"\n  >\n    <div\n      class=\"pointer-events-none inline-block transform rounded-full transition duration-200 ease-in-out\"\n      :class=\"[\n        classMap.knob,\n        knobSizeClasses,\n        {\n          'ltr:translate-x-px rtl:-translate-x-px': !localValue,\n          [knobTranslateClasses]: localValue,\n        },\n      ]\"\n    ></div>\n  </button>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport createInput from '#shared/form/core/createInput.ts'\nimport addLink from '#shared/form/features/addLink.ts'\nimport formUpdaterTrigger from '#shared/form/features/formUpdaterTrigger.ts'\n\nimport FieldToggleInput from './FieldToggleInput.vue'\n\nimport type { FormKitBaseSlots, FormKitInputs } from '@formkit/inputs'\n\ndeclare module '@formkit/inputs' {\n  interface FormKitInputProps<Props extends FormKitInputs<Props>> {\n    toggle: {\n      type: 'toggle'\n      value?: boolean\n      variants?: {\n        true?: string\n        false?: string\n      }\n      size?: 'medium' | 'small'\n    }\n  }\n\n  interface FormKitInputSlots<Props extends FormKitInputs<Props>> {\n    toggle: FormKitBaseSlots<Props>\n  }\n}\n\nconst fieldDefinition = createInput(FieldToggleInput, ['variants', 'size'], {\n  features: [addLink, formUpdaterTrigger()],\n})\n\nexport default {\n  fieldType: 'toggle',\n  definition: fieldDefinition,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport {\n  createLibraryPlugin as formKitCreateLibraryPlugin,\n  form as formFieldDefinition,\n} from '@formkit/inputs'\nimport { isArray } from 'lodash-es'\n\nimport type {\n  FormFieldTypeImportModules,\n  FormFieldsTypeDefinition,\n} from '#shared/types/form.ts'\nimport type {\n  ImportGlobEagerDefault,\n  ImportGlobEagerOutput,\n} from '#shared/types/utils.ts'\n\nimport type { FormKitPlugin } from '@formkit/core'\n\nconst fieldModules: ImportGlobEagerOutput<FormFieldTypeImportModules> =\n  import.meta.glob('../../components/Form/fields/**/index.ts', { eager: true })\n\n// The main field type \"form\" from FormKit is a fixed type.\nconst fields: FormFieldsTypeDefinition = {\n  form: formFieldDefinition,\n}\n\nconst registerFieldFromModules = (\n  fieldModules: ImportGlobEagerOutput<FormFieldTypeImportModules>,\n) => {\n  Object.values(fieldModules).forEach(\n    (module: ImportGlobEagerDefault<FormFieldTypeImportModules>) => {\n      const formFieldTypes = module.default\n\n      // A object with multiple fields will be returned in the case that one field nidzke handles multiple fields.\n      // E.g. the FormKit default input fields (text, color, ...).\n      if (isArray(formFieldTypes)) {\n        formFieldTypes.forEach((formFieldType) => {\n          fields[formFieldType.fieldType] = formFieldType.definition\n        })\n      } else {\n        fields[formFieldTypes.fieldType] = formFieldTypes.definition\n      }\n    },\n  )\n}\n\nconst createFieldPlugin = (\n  appSpecificFieldModues?: ImportGlobEagerOutput<FormFieldTypeImportModules>,\n): FormKitPlugin => {\n  // Register first the common fields and then the app specific fields so\n  // that the app specific fields can override the common ones.\n  registerFieldFromModules(fieldModules)\n\n  if (appSpecificFieldModues) {\n    registerFieldFromModules(appSpecificFieldModues)\n  }\n\n  return formKitCreateLibraryPlugin(fields)\n}\n\nexport default createFieldPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createMessageName } from '@formkit/validation'\n\nimport { i18n } from '#shared/i18n.ts'\nimport { commaSeparatedList, order } from '#shared/utils/formatter.ts'\n\nimport type { FormKitLocale } from '@formkit/i18n'\nimport type { FormKitValidationMessages } from '@formkit/validation'\nimport type { ComputedRef } from 'vue'\n\ninterface FormKitLocaleExtended extends FormKitLocale {\n  validation: FormKitValidationMessages\n}\n\n// TODO: Use translateLabel for all validation messages if we stay with the labels inside of the messages. It's a open\n// question if we want use them inside of the messages.\n\nconst loadLocales = (): FormKitLocaleExtended => {\n  return {\n    ui: {\n      /**\n       * Shown on a button for adding additional items.\n       */\n      add: () => i18n.t('Add'),\n      /**\n       * Shown when a button to remove items is visible.\n       */\n      remove: () => i18n.t('Remove'),\n      /**\n       * Shown when there are multiple items to remove at the same time.\n       */\n      removeAll: () => i18n.t('Remove all'),\n      /**\n       * Shown when all fields are not filled out correctly.\n       */\n      incomplete: () =>\n        i18n.t('Sorry, not all fields are filled out correctly.'),\n      /**\n       * Shown in a button inside a form to submit the form.\n       */\n      submit: () => i18n.t('Submit'),\n      /**\n       * Shown when no files are selected.\n       */\n      noFiles: () => i18n.t('No file chosen.'),\n      /**\n       * Shown on buttons that move fields up in a list.\n       */\n      moveUp: () => i18n.t('Move up'),\n      /**\n       * Shown on buttons that move fields down in a list.\n       */\n      moveDown: () => i18n.t('Move down'),\n      /**\n       * Shown when something is actively loading.\n       */\n      isLoading: () => i18n.t('Loading…'),\n      /**\n       * Shown when there is more to load.\n       */\n      loadMore: () => i18n.t('Load more'),\n      /**\n       * Show on buttons that navigate state forward\n       */\n      next: () => i18n.t('Next'),\n      /**\n       * Show on buttons that navigate state backward\n       */\n      prev: () => i18n.t('Previous'),\n      /**\n       * Shown when adding all values.\n       */\n      addAllValues: () => i18n.t('Add all values'),\n      /**\n       * Shown when adding selected values.\n       */\n      addSelectedValues: () => i18n.t('Add selected values'),\n      /**\n       * Shown when removing all values.\n       */\n      removeAllValues: () => i18n.t('Remove all values'),\n      /**\n       * Shown when removing selected values.\n       */\n      removeSelectedValues: () => i18n.t('Remove selected values'),\n      /**\n       * Shown when there is a date to choose.\n       */\n      chooseDate: () => i18n.t('Choose date'),\n      /**\n       * Shown when there is a date to change.\n       */\n      changeDate: () => i18n.t('Change date'),\n      /**\n       * Shown above error summaries when someone attempts to submit a form with\n       * errors and the developer has implemented `<FormKitSummary />`.\n       */\n      summaryHeader: () => i18n.t('There were errors in your form.'),\n      /*\n       * Shown when there is something to close\n       */\n      close: () => i18n.t('Close'),\n      /**\n       * Shown when there is something to open.\n       */\n      open: () => i18n.t('Open'),\n    },\n\n    validation: {\n      /**\n       * The value is not an accepted value.\n       * @see {@link https://docs.formkit.com/essentials/validation#accepted}\n       */\n      accepted({ name }) {\n        /* <i18n case=\"Shown when the user-provided value is not a valid 'accepted' value.\"> */\n        return i18n.t('Please accept the %s.', name)\n        /* </i18n> */\n      },\n\n      /**\n       * The value is not letter and/or spaces\n       * @see {@link https://docs.formkit.com/essentials/validation#alpha-spaces}\n       */\n      alpha_spaces() {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical and non-space characters.\"> */\n        return i18n.t('This field can only contain letters and spaces.')\n        /* </i18n> */\n      },\n\n      /**\n       * The date is not after\n       * @see {@link https://docs.formkit.com/essentials/validation#date-after}\n       */\n      date_after({ args }) {\n        if (Array.isArray(args) && args.length) {\n          /* <i18n case=\"Shown when the user-provided date is not after the date supplied to the rule.\"> */\n          return i18n.t(\n            'This field must have a value that is after %s.',\n            i18n.date(args[0]),\n          )\n          /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not after today's date, since no date was supplied to the rule.\"> */\n        return i18n.t('This field must have a value that is in the future.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value is not a letter.\n       * @see {@link https://docs.formkit.com/essentials/validation#alpha}\n       */\n      alpha() {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical characters.\"> */\n        return i18n.t('This field can only contain alphabetical characters.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value is not alphanumeric\n       * @see {@link https://docs.formkit.com/essentials/validation#alphanumeric}\n       */\n      alphanumeric() {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphanumeric characters.\"> */\n        return i18n.t('This field can only contain letters and numbers.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value have no letter.\n       * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n       */\n      contains_alpha() {\n        /* <i18n case=\"Shown when the user-provided value contains only non-alphabetical characters.\"> */\n        return i18n.t('This field must contain alphabetical characters.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value have no alphanumeric\n       * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n       */\n      contains_alphanumeric() {\n        /* <i18n case=\"Shown when the user-provided value contains only non-alphanumeric characters.\"> */\n        return i18n.t('This field must contain letters or numbers.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value have no letter and/or spaces\n       * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n       */\n      contains_alpha_spaces() {\n        /* <i18n case=\"Shown when the user-provided value contains only non-alphabetical and non-space characters.\"> */\n        return i18n.t('This field must contain letters or spaces.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value have no symbol\n       * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n       */\n      contains_symbol() {\n        /* <i18n case=\"Shown when the user-provided value contains only alphanumeric and space characters.\"> */\n        return i18n.t('This field must contain a symbol.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value have no uppercase\n       * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n       */\n      contains_uppercase() {\n        /* <i18n case=\"Shown when the user-provided value contains only non-alphabetical-uppercase characters.\"> */\n        return i18n.t('This field must contain an uppercase letter.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value have no lowercase\n       * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n       */\n      contains_lowercase() {\n        /* <i18n case=\"Shown when the user-provided value contains only non-alphabetical-lowercase characters.\"> */\n        return i18n.t('This field must contain a lowercase letter.')\n        /* </i18n> */\n      },\n\n      /**\n       *  The value have no numeric\n       * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n       */\n      contains_numeric() {\n        /* <i18n case=\"Shown when the user-provided value have no numeric.\"> */\n        return i18n.t('This field must contain numbers.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value is not symbol\n       * @see {@link https://formkit.com/essentials/validation#symbol}\n       */\n      symbol() {\n        /* <i18n case=\"Shown when the user-provided value contains alphanumeric and space characters.\"> */\n        return i18n.t('This field must be a symbol.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value is not uppercase\n       * @see {@link https://formkit.com/essentials/validation#uppercase}\n       */\n      uppercase() {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical-uppercase characters.\"> */\n        return i18n.t('This field can only contain uppercase letters.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value is not lowercase\n       * @see {@link https://formkit.com/essentials/validation#lowercase}\n       */\n      lowercase() {\n        /* <i18n case=\"Shown when the user-provided value contains non-alphabetical-lowercase characters.\"> */\n        return i18n.t('This field can only contain lowercase letters.')\n        /* </i18n> */\n      },\n\n      /**\n       * The date is not before\n       * @see {@link https://docs.formkit.com/essentials/validation#date-before}\n       */\n      date_before({ args }) {\n        if (Array.isArray(args) && args.length) {\n          /* <i18n case=\"Shown when the user-provided date is not before the date supplied to the rule.\"> */\n          return i18n.t(\n            'This field must have a value that is before %s.',\n            i18n.date(args[0]),\n          )\n          /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided date is not before today's date, since no date was supplied to the rule.\"> */\n        return i18n.t('This field must have a value that is in the past.')\n        /* </i18n> */\n      },\n\n      /**\n       * The value is not between two numbers\n       * @see {@link https://docs.formkit.com/essentials/validation#between}\n       */\n      between({ args }) {\n        if (Number.isNaN(args[0]) || Number.isNaN(args[1])) {\n          /* <i18n case=\"Shown when any of the arguments supplied to the rule were not a number.\"> */\n          return i18n.t(\n            \"This field was configured incorrectly and can't be submitted.\",\n          )\n          /* </i18n> */\n        }\n\n        const [first, second] = order(args[0], args[1])\n\n        /* <i18n case=\"Shown when the user-provided value is not between two numbers.\"> */\n        return i18n.t(\n          'This field must have a value that is between %s and %s.',\n          first,\n          second,\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * The confirmation field does not match\n       * @see {@link https://docs.formkit.com/essentials/validation#confirm}\n       */\n      confirm() {\n        // TODO: Check if message is in a good shape (e.g. for the usage for password + confirm password).\n        /* <i18n case=\"Shown when the user-provided value does not equal the value of the matched input.\"> */\n        return i18n.t(\"This field doesn't correspond to the expected value.\")\n        /* </i18n> */\n      },\n\n      /**\n       * The value is not a valid date\n       * @see {@link https://docs.formkit.com/essentials/validation#date-format}\n       */\n      date_format({ args }) {\n        if (Array.isArray(args) && args.length) {\n          /* <i18n case=\"Shown when the user-provided date does not satisfy the date format supplied to the rule.\"> */\n          return i18n.t(\n            'This field isn\\'t a valid date, please use the format \"%s\".',\n            args[0],\n          )\n          /* </i18n> */\n        }\n        /* <i18n case=\"Shown when no date argument was supplied to the rule.\"> */\n        return i18n.t(\n          \"This field was configured incorrectly and can't be submitted.\",\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * Is not within expected date range\n       * @see {@link https://docs.formkit.com/essentials/validation#date-between}\n       */\n      date_between({ args }) {\n        /* <i18n case=\"Shown when the user-provided date is not between the start and end dates supplied to the rule. \"> */\n        return i18n.t(\n          'This field must have a value that is between %s and %s.',\n          i18n.date(args[0]),\n          i18n.date(args[1]),\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * Shown when the user-provided value is not a valid email address.\n       * @see {@link https://docs.formkit.com/essentials/validation#email}\n       */\n      email: i18n.t('Please enter a valid email address.'),\n\n      /**\n       * Does not end with the specified value\n       * @see {@link https://docs.formkit.com/essentials/validation#ends-with}\n       */\n      ends_with({ args }) {\n        /* <i18n case=\"Shown when the user-provided value does not end with the substring supplied to the rule.\"> */\n        return i18n.t(\n          'This field doesn\\'t end with \"%s\".',\n          commaSeparatedList(args),\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * Is not an allowed value\n       * @see {@link https://docs.formkit.com/essentials/validation#is}\n       */\n      is() {\n        /* <i18n case=\"Shown when the user-provided value is not one of the values supplied to the rule.\"> */\n        return i18n.t(\"This field doesn't contain an allowed value.\")\n        /* </i18n> */\n      },\n\n      /**\n       * Does not match specified length\n       * @see {@link https://docs.formkit.com/essentials/validation#length}\n       */\n      length({ args: [first = 0, second = Infinity] }) {\n        const min = Number(first) <= Number(second) ? first : second\n        const max = Number(second) >= Number(first) ? second : first\n        if (min === 1 && max === Infinity) {\n          /* <i18n case=\"Shown when the length of the user-provided value is not at least one character.\"> */\n          return i18n.t('This field must contain at least one character.')\n          /* </i18n> */\n        }\n        if (min === 0 && max) {\n          /* <i18n case=\"Shown when first argument supplied to the rule is 0, and the user-provided value is longer than the max (the 2nd argument) supplied to the rule.\"> */\n          return i18n.t(\n            'This field must not contain more than %s characters.',\n            max,\n          )\n          /* </i18n> */\n        }\n        if (min && max === Infinity) {\n          /* <i18n case=\"Shown when the length of the user-provided value is less than the minimum supplied to the rule and there is no maximum supplied to the rule.\"> */\n          return i18n.t('This field must contain at least %s characters.', min)\n          /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the length of the user-provided value is between the two lengths supplied to the rule.\"> */\n        return i18n.t(\n          'This field must contain between %s and %s characters.',\n          min,\n          max,\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * Value is not a match\n       * @see {@link https://docs.formkit.com/essentials/validation#matches}\n       */\n      matches() {\n        /* <i18n case=\"Shown when the user-provided value does not match any of the values or RegExp patterns supplied to the rule. \"> */\n        return i18n.t(\"This field doesn't contain an allowed value.\")\n        /* </i18n> */\n      },\n\n      /**\n       * Exceeds maximum allowed value\n       * @see {@link https://docs.formkit.com/essentials/validation#max}\n       */\n      max({ node: { value }, args }) {\n        if (Array.isArray(value)) {\n          /* <i18n case=\"Shown when the length of the array of user-provided values is longer than the max supplied to the rule.\"> */\n          return i18n.t(\"This field can't have more than %s entries.\", args[0])\n          /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is greater than the maximum number supplied to the rule.\"> */\n        return i18n.t(\n          'This field must have a value that is at most %s.',\n          args[0],\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * The (field-level) value does not match specified mime type\n       * @see {@link https://docs.formkit.com/essentials/validation#mime}\n       */\n      mime({ args }) {\n        if (!args[0]) {\n          /* <i18n case=\"Shown when no file formats were supplied to the rule.\"> */\n          return i18n.t('No file formats allowed.')\n          /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the mime type of user-provided file does not match any mime types supplied to the rule.\"> */\n        return i18n.t('This field must be of the type \"%s\".', args[0])\n        /* </i18n> */\n      },\n\n      /**\n       * Does not fulfill minimum allowed value\n       * @see {@link https://docs.formkit.com/essentials/validation#min}\n       */\n      min({ node: { value }, args }) {\n        if (Array.isArray(value)) {\n          /* <i18n case=\"Shown when the length of the array of user-provided values is shorter than the min supplied to the rule.\"> */\n          return i18n.t(\"This field can't have less than %s entries.\", args[0])\n          /* </i18n> */\n        }\n        /* <i18n case=\"Shown when the user-provided value is less than the minimum number supplied to the rule.\"> */\n        return i18n.t(\n          'This field must have a value that is at least %s.',\n          args[0],\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * Is not an allowed value\n       * @see {@link https://docs.formkit.com/essentials/validation#not}\n       */\n      not({ node: { value } }) {\n        /* <i18n case=\"Shown when the user-provided value matches one of the values supplied to (and thus disallowed by) the rule.\"> */\n        return i18n.t(\n          'This field can\\'t contain the value \"%s\".',\n          value as string,\n        )\n        /* </i18n> */\n      },\n\n      /**\n       *  Is not a number\n       * @see {@link https://docs.formkit.com/essentials/validation#number}\n       */\n      number() {\n        /* <i18n case=\"Shown when the user-provided value is not a number.\"> */\n        return i18n.t('This field must contain a number.')\n        /* </i18n> */\n      },\n\n      /**\n       * Required field.\n       * @see {@link https://docs.formkit.com/essentials/validation#required}\n       */\n      required() {\n        /* <i18n case=\"Shown when a user does not provide a value to a required input.\"> */\n        return i18n.t('This field is required.')\n        /* </i18n> */\n      },\n\n      /**\n       * Require one field.\n       * @see {@link https://formkit.com/essentials/validation#require-one}\n       */\n      require_one: ({ name, node, args: inputNames }) => {\n        const labels = inputNames\n          .map((name) => {\n            const dependentNode = node.at(name)\n            if (dependentNode) {\n              return createMessageName(dependentNode)\n            }\n            return false\n          })\n          .filter((name) => !!name) as unknown as ComputedRef<string>[]\n        labels.unshift(name as unknown as ComputedRef<string>)\n\n        /* <i18n case=\"Shown when the user-provided has not provided a value for at least one of the required fields.\"> */\n        // return `${labels.join(' or ')} is required.`\n        const translatedSeparator = i18n.t('or')\n        return i18n.t(\n          '%s is required.',\n          labels\n            .map((label: ComputedRef<string>) => label.value)\n            .join(` ${translatedSeparator} `),\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * Does not start with specified value\n       * @see {@link https://docs.formkit.com/essentials/validation#starts-with}\n       */\n      starts_with({ args }) {\n        /* <i18n case=\"Shown when the user-provided value does not start with the substring supplied to the rule.\"> */\n        return i18n.t(\n          'This field doesn\\'t start with \"%s\".',\n          commaSeparatedList(args),\n        )\n        /* </i18n> */\n      },\n\n      /**\n       * Is not a url\n       * @see {@link https://docs.formkit.com/essentials/validation#url}\n       */\n      url() {\n        /* <i18n case=\"Shown when the user-provided value is not a valid url.\"> */\n        return i18n.t('Please include a valid url.')\n        /* </i18n> */\n      },\n\n      /**\n       * Shown when the date is invalid.\n       */\n      invalidDate: () => i18n.t('The selected date is invalid.'),\n    },\n  }\n}\n\nexport default loadLocales\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport * as defaultRules from '@formkit/rules'\nimport {\n  createValidationPlugin as formKitCreateValidationPlugin,\n  type FormKitValidationMessages,\n} from '@formkit/validation'\n\nimport type {\n  FormValidationRules,\n  FormValidationRuleType,\n} from '#shared/types/form.ts'\nimport type {\n  ImportGlobEagerDefault,\n  ImportGlobEagerOutput,\n} from '#shared/types/utils.ts'\n\nimport type { FormKitPlugin } from '@formkit/core'\n\nconst ruleModules: ImportGlobEagerOutput<FormValidationRuleType> =\n  import.meta.glob('../validation/rules/*.ts', { eager: true })\n\nconst createValidationPlugin = (): FormKitPlugin => {\n  const rules: FormValidationRules = {}\n\n  Object.values(ruleModules).forEach(\n    (module: ImportGlobEagerDefault<FormValidationRuleType>) => {\n      const validationRule = module.default\n      if (!validationRule?.ruleType) return\n      rules[validationRule.ruleType] = validationRule.rule\n    },\n  )\n\n  return formKitCreateValidationPlugin({\n    ...defaultRules,\n    ...rules,\n  } as unknown as FormValidationRules)\n}\n\nexport default createValidationPlugin\n\nexport const getValidationRuleMessages = (): FormKitValidationMessages => {\n  const ruleLocaleMessages: FormKitValidationMessages = {}\n\n  Object.values(ruleModules).forEach(\n    (module: ImportGlobEagerDefault<FormValidationRuleType>) => {\n      const validationRule = module.default\n      if (!validationRule?.ruleType) return\n      ruleLocaleMessages[validationRule.ruleType] = validationRule.localeMessage\n    },\n  )\n\n  return ruleLocaleMessages\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createI18nPlugin as formKitCreateI18nPlugin } from '@formkit/i18n'\nimport { reactive } from 'vue'\n\nimport loadLocales from '#shared/form/i18n/locales.ts'\n\nimport { getValidationRuleMessages } from './createValidationPlugin.ts'\n\nimport type { FormKitPlugin } from '@formkit/core'\n\nconst createI18nPlugin = (): FormKitPlugin => {\n  const staticLocale = reactive(loadLocales())\n\n  Object.assign(staticLocale.validation, getValidationRuleMessages())\n\n  return formKitCreateI18nPlugin({ staticLocale })\n}\n\nexport default createI18nPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormThemeClasses } from '#shared/types/form.ts'\n\nconst defaultTextInput: Record<string, string> = {\n  input: 'block focus:outline-hidden focus:ring-0',\n}\n\nconst classes: FormThemeClasses = {\n  global: {\n    wrapper: 'formkit-disabled:opacity-30',\n    label: 'formkit-label-hidden:sr-only',\n    help: 'text-xs',\n    messages: 'list-none',\n    message: 'text-xs',\n  },\n  text: defaultTextInput,\n  email: defaultTextInput,\n  url: defaultTextInput,\n  number: defaultTextInput,\n  search: defaultTextInput,\n  tel: defaultTextInput,\n  time: defaultTextInput,\n  date: defaultTextInput,\n  datetime: defaultTextInput,\n  textarea: defaultTextInput,\n  password: defaultTextInput,\n  checkbox: {\n    wrapper: 'inline-flex items-center cursor-pointer',\n    inner: 'flex',\n    input:\n      'appearance-none focus:outline-hidden focus:ring-0 focus:ring-offset-0',\n    decorator:\n      'relative invisible formkit-is-checked:visible rtl:-right-4 ltr:-left-4',\n    decoratorIcon: 'absolute',\n  },\n  radio: {\n    wrapper: 'inline-flex items-center cursor-pointer',\n    inner: 'flex',\n    input:\n      'appearance-none focus:outline-hidden focus:ring-0 focus:ring-offset-0',\n    decorator:\n      'relative invisible formkit-is-checked:visible rtl:-right-4 ltr:-left-4',\n    decoratorIcon: 'absolute',\n  },\n  button: {\n    input: 'flex justify-center items-center',\n  },\n  submit: {\n    input: 'flex justify-center items-center',\n  },\n}\n\nexport default classes\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { generateClasses } from '@formkit/themes'\nimport { extend } from '@formkit/utils'\n\nimport type {\n  FormAppSpecificTheme,\n  FormThemeClasses,\n  FormThemeExtension,\n} from '#shared/types/form.ts'\nimport type {\n  ImportGlobEagerOutput,\n  ImportGlobEagerDefault,\n} from '#shared/types/utils.ts'\n\nimport commonClasses from '../theme/global/index.ts'\n\nconst extensionsModules: ImportGlobEagerOutput<FormThemeExtension> =\n  import.meta.glob('../theme/global/extensions/*.ts', { eager: true })\n\nconst getExtensionsFromModules = (\n  extensionsModules: ImportGlobEagerOutput<FormThemeExtension>,\n) => {\n  const extensions: FormThemeExtension[] = []\n\n  Object.values(extensionsModules).forEach(\n    (module: ImportGlobEagerDefault<FormThemeExtension>) => {\n      const extension = module.default\n\n      extensions.push(extension)\n    },\n  )\n\n  return extensions\n}\nconst createTailwindClasses = (additionalTheme: FormAppSpecificTheme = {}) => {\n  const themeExtensions: FormThemeExtension[] = [\n    ...getExtensionsFromModules(extensionsModules),\n  ]\n\n  if (additionalTheme.coreClasses) {\n    themeExtensions.push(additionalTheme.coreClasses)\n  }\n\n  if (additionalTheme.extensions) {\n    themeExtensions.push(\n      ...getExtensionsFromModules(additionalTheme.extensions),\n    )\n  }\n\n  let classes = commonClasses\n\n  themeExtensions.forEach((extension) => {\n    const newClasses = extension(classes)\n    classes = extend(classes, newClasses) as FormThemeClasses\n  })\n\n  return generateClasses(classes)\n}\n\nexport default createTailwindClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createThemePlugin } from '@formkit/themes'\nimport { plugin as formPlugin, bindings as bindingsPlugin } from '@formkit/vue'\n\nimport '@formkit/dev'\nimport type {\n  FormAppSpecificTheme,\n  FormDecoratorIcons,\n  FormFieldTypeImportModules,\n} from '#shared/types/form.ts'\nimport type {\n  ImportGlobEagerOutput,\n  ImportGlobEagerDefault,\n} from '#shared/types/utils.ts'\n\nimport createCustomIcons from './core/createCustomIcons.ts'\nimport createFieldPlugin from './core/createFieldPlugin.ts'\nimport createI18nPlugin from './core/createI18nPlugin.ts'\nimport createTailwindClasses from './core/createTailwindClasses.ts'\nimport createValidationPlugin from './core/createValidationPlugin.ts'\n\nimport type { FormKitConfig, FormKitPlugin } from '@formkit/core'\nimport type { App } from 'vue'\n\nexport const getFormPlugins = (\n  modules: ImportGlobEagerOutput<FormKitPlugin>,\n): FormKitPlugin[] => {\n  const plugins: Array<FormKitPlugin> = []\n\n  Object.values(modules).forEach(\n    (module: ImportGlobEagerDefault<FormKitPlugin>) => {\n      const plugin = module.default\n      plugins.push(plugin)\n    },\n  )\n\n  return plugins\n}\n\nconst pluginModules: ImportGlobEagerOutput<FormKitPlugin> = import.meta.glob(\n  './plugins/global/*.ts',\n  { eager: true },\n)\nconst plugins = getFormPlugins(pluginModules)\n\nconst checkIcon =\n  '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" class=\"fill-current\"><path d=\"M20.8087 5.58815L11.3542 18.5881C11.1771 18.8316 10.8998 18.9824 10.5992 18.9985C10.2986 19.0147 10.0067 18.8946 9.80449 18.6715L3.25903 11.4493L4.74097 10.1062L10.4603 16.4169L19.1913 4.4118L20.8087 5.58815Z\" /></svg>'\n\nexport const buildFormKitPluginConfig = (\n  config?: FormKitConfig,\n  appSpecificFieldModules: ImportGlobEagerOutput<FormFieldTypeImportModules> = {},\n  appSpecificPlugins: FormKitPlugin[] = [],\n  appSpecificTheme: FormAppSpecificTheme = {},\n  appSpecificDecoratorIcons: FormDecoratorIcons = {},\n) => {\n  const customIcons = createCustomIcons()\n\n  return {\n    plugins: [\n      createFieldPlugin(appSpecificFieldModules),\n      bindingsPlugin,\n      createI18nPlugin(),\n      createValidationPlugin(),\n      createThemePlugin(\n        undefined,\n        {\n          checkboxDecorator:\n            appSpecificDecoratorIcons.checkboxDecorator || checkIcon,\n          radioDecorator: appSpecificDecoratorIcons.radioDecorator || checkIcon,\n          ...customIcons,\n        },\n        undefined,\n        () => undefined,\n      ),\n      ...plugins,\n      ...appSpecificPlugins,\n    ],\n    locale: 'staticLocale',\n    config: {\n      classes: createTailwindClasses(appSpecificTheme),\n      ...config,\n    },\n    props: {\n      dirtyBehavior: 'compare',\n    },\n  }\n}\n\nexport default function initializeForm(\n  app: App,\n  appSpecificConfig?: FormKitConfig,\n  appSpecificFieldModules: ImportGlobEagerOutput<FormFieldTypeImportModules> = {},\n  appSpecificPlugins: FormKitPlugin[] = [],\n  appSpecificTheme: FormAppSpecificTheme = {},\n  appSpecificDecoratorIcons: FormDecoratorIcons = {},\n) {\n  app.use(\n    formPlugin,\n    buildFormKitPluginConfig(\n      appSpecificConfig,\n      appSpecificFieldModules,\n      appSpecificPlugins,\n      appSpecificTheme,\n      appSpecificDecoratorIcons,\n    ),\n  )\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nexport type Classes = Record<string, string>\n\nexport const clean = (str: string) => str.replace(/\\s{2,}/g, ' ').trim()\nexport const extendClasses = (\n  originalClasses: Classes | undefined,\n  newClasses: Classes,\n) => {\n  const mergedClasses = { ...newClasses }\n\n  Object.entries(originalClasses || {}).forEach(([type, originalClass]) => {\n    if (!(type in mergedClasses)) {\n      mergedClasses[type] = originalClass\n    } else {\n      mergedClasses[type] = clean(\n        `${originalClass || ''} ${newClasses[type] || ''}`,\n      )\n    }\n  })\n\n  return mergedClasses\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nconst loadSvg = (symbols: [string, string][]) => {\n  const { body } = document\n  let svgDom = document.getElementById('__svg__icons__dom__') as unknown as\n    | SVGSVGElement\n    | undefined\n  if (!svgDom) {\n    svgDom = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n    svgDom.style.position = 'absolute'\n    svgDom.style.width = '0'\n    svgDom.style.height = '0'\n    svgDom.id = '__svg__icons__dom__'\n    svgDom.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n    svgDom.setAttribute('xmlns:link', 'http://www.w3.org/1999/xlink')\n  }\n  const html = symbols.map((symb) => symb[1]).join('\\n')\n  svgDom.innerHTML = html\n  body.insertBefore(svgDom, body.lastChild)\n}\n\nexport const injectSvgIcons = (symbols: [string, string][]) => {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => loadSvg(symbols))\n  } else {\n    loadSvg(symbols)\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nlet editorColorMenuClasses = {\n  colorSchemeList: {\n    base: '',\n    button: '',\n  },\n}\n\nexport const initializeEditorColorMenuClasses = (\n  classes: typeof editorColorMenuClasses,\n) => {\n  editorColorMenuClasses = classes\n}\n\nexport const getEditorColorMenuClasses = () => editorColorMenuClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { NotificationClassMap } from '#shared/components/CommonNotifications/types.ts'\n\n// Provide your own map with the following keys, the values given here are just examples.\nlet notificationClasses: NotificationClassMap = {\n  base: 'common-notification',\n  baseContainer: 'common-notification-container',\n  error: 'common-notification-error',\n  info: 'common-notification-info',\n  message: 'common-notification-message',\n  success: 'common-notification-success',\n  warn: 'common-notification-warn',\n}\n\nexport const initializeNotificationClasses = (\n  classes: NotificationClassMap,\n) => {\n  notificationClasses = classes\n}\n\nexport const getNotificationClasses = () => notificationClasses\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { type ObjectDirective } from 'vue'\n\nimport { useAppName } from '#shared/composables/useAppName.ts'\nimport { useLocaleStore } from '#shared/stores/locale.ts'\n\ninterface Modifiers {\n  truncate?: boolean\n}\n\nlet isListeningToEvents = false\nlet isTooltipInDom = false\nlet hasHoverOnNode = false\nlet currentEvent: MouseEvent | TouchEvent | null = null\nlet tooltipTimeout: NodeJS.Timeout | null = null\n\nlet tooltipRecordsCount = 0\n\nlet tooltipTargetRecords: WeakMap<HTMLElement, { modifiers: Modifiers }> =\n  new WeakMap()\n\nconst removeTooltips = () => {\n  document\n    .querySelectorAll('[role=\"tooltip\"]')\n    .forEach((node) => node?.remove())\n  isTooltipInDom = false\n}\n\nconst addModifierRecord = (element: HTMLDivElement, modifiers: Modifiers) => {\n  if (tooltipTargetRecords.has(element)) return\n\n  tooltipRecordsCount += 1\n  tooltipTargetRecords.set(element, {\n    modifiers,\n  })\n}\n\nconst removeModifierRecord = (element: HTMLDivElement) => {\n  if (!tooltipTargetRecords.has(element)) return\n  tooltipRecordsCount -= 1\n  tooltipTargetRecords.delete(element)\n}\n\nconst getModifierRecord = ($el: HTMLDivElement) => {\n  return tooltipTargetRecords.get($el) || null\n}\n\nconst createTooltip = (\n  { top, left }: { top: string; left: string },\n  message: string,\n) => {\n  const tooltipNode = document.createElement('div')\n  tooltipNode.classList.add('tooltip')\n\n  tooltipNode.style.top = top\n  tooltipNode.style.left = left\n  tooltipNode.setAttribute('aria-hidden', 'true')\n  tooltipNode.setAttribute('role', 'tooltip')\n\n  // Set the max-width to half of the available width\n  const availableWidth = window.innerWidth / 2\n  tooltipNode.style.maxWidth = `${availableWidth}px`\n\n  const tooltipMessageNode = document.createElement('p')\n  tooltipMessageNode.textContent = message\n\n  tooltipNode.insertAdjacentElement('afterbegin', tooltipMessageNode)\n\n  return tooltipNode\n}\n\nconst getLeftBasedOnLanguage = (clientX: number, tooltipRectangle: DOMRect) => {\n  const isRTL = useLocaleStore().localeData?.dir === 'rtl'\n\n  let left = ''\n\n  if (isRTL) {\n    // For RTL languages, place the tooltip to the left of the mouse\n    const leftValue = clientX - tooltipRectangle.width\n    left = `${leftValue}px`\n    // Check if the tooltip would overflow the window's width\n    if (leftValue < 0) {\n      // If it would, adjust the left property to ensure it fits within the window\n      left = '0px'\n    }\n  } else {\n    // For LTR languages, place the tooltip to the right of the mouse\n    left = `${clientX}px`\n    // Check if the tooltip would overflow the window's width\n    if (clientX + tooltipRectangle.width > window.innerWidth) {\n      // Move tooltip to the left if it overflows to avoid squeezing the tooltip content\n      left = `${window.innerWidth - tooltipRectangle.width}px`\n    }\n  }\n\n  return left\n}\n\nconst addTooltip = (\n  targetNode: HTMLDivElement,\n  message: string,\n  {\n    event,\n  }: {\n    event: MouseEvent | TouchEvent\n  },\n) => {\n  if (!event) return\n\n  const tooltipNode = createTooltip({ top: '0px', left: '0px' }, message)\n  document.body.appendChild(tooltipNode) // Temporarily add to DOM to calculate dimensions\n\n  const tooltipRectangle = tooltipNode.getBoundingClientRect()\n\n  let top: string\n  let left: string\n  if (!event) return\n  if ('touches' in event) {\n    const { clientX, clientY } = event.touches[0]\n\n    top = `${clientY}px`\n    left = getLeftBasedOnLanguage(clientX, tooltipRectangle)\n  } else {\n    const { clientX, clientY } = event\n    const verticalThreshold = 10 // native tooltip has an extra threshold of ~ 10px\n    const thresholdToBottom = 30\n\n    const availableSpaceBelow = window.innerHeight - clientY - thresholdToBottom\n\n    // If the tooltip is to close to the bottom of the viewport, show it above the target\n    if (availableSpaceBelow < tooltipRectangle.height) {\n      top = `${clientY - verticalThreshold - tooltipRectangle.height}px`\n    } else {\n      top = `${clientY + verticalThreshold}px`\n    }\n    left = getLeftBasedOnLanguage(clientX, tooltipRectangle)\n  }\n\n  tooltipNode.style.top = top\n  tooltipNode.style.left = left\n\n  document.body.insertAdjacentElement('beforeend', tooltipNode)\n\n  setTimeout(() => {\n    tooltipNode.classList.add('tooltip-animate')\n  }, 500) // Add animation after 500ms same as for delay\n}\n\nconst isContentTruncated = (element: HTMLElement) => {\n  const { parentElement } = element\n  // top-level element\n  if (!parentElement) return element.offsetWidth < element.scrollWidth\n\n  return parentElement.offsetWidth < parentElement.scrollWidth\n}\n\nconst evaluateModifiers = (element: HTMLElement, options?: Modifiers) => {\n  const modifications = {\n    isTruncated: false,\n    top: false,\n  }\n\n  if (options?.truncate) {\n    modifications.isTruncated = isContentTruncated(element)\n  }\n\n  return modifications\n}\n\nconst findTooltipTarget = (\n  element: HTMLDivElement | null,\n): HTMLDivElement | null => element?.closest('[data-tooltip]') || null\n\nconst handleTooltipAddEvent = (event: MouseEvent | TouchEvent) => {\n  if (isTooltipInDom) removeTooltips() // Remove tooltips if there is already one set in the DOM\n\n  if (!event.target) return\n\n  // Do not show the tooltip if the target element is missing.\n  const tooltipTargetNode = findTooltipTarget(event.target as HTMLDivElement)\n  if (!tooltipTargetNode) return\n\n  // Do not show the tooltip if the message is absent or empty.\n  const message = tooltipTargetNode.getAttribute('aria-label')\n  if (!message) return\n\n  // Do not show the tooltip if it was temporarily suspended.\n  //   This is signaled by any ancestors having a special CSS class assigned.\n  if (tooltipTargetNode.closest('.no-tooltip')) return\n\n  hasHoverOnNode = true // Set it to capture mousemove event\n\n  const tooltipRecord = getModifierRecord(tooltipTargetNode)\n\n  const { isTruncated } = evaluateModifiers(\n    tooltipTargetNode,\n    tooltipRecord?.modifiers,\n  )\n\n  // If the content gets truncated and the modifier is set to only show the tooltip on truncation\n  if (!isTruncated && tooltipRecord?.modifiers.truncate) return\n\n  if (tooltipTimeout) clearTimeout(tooltipTimeout)\n\n  tooltipTimeout = setTimeout(() => {\n    addTooltip(tooltipTargetNode, message as string, {\n      event: currentEvent as MouseEvent,\n    })\n    isTooltipInDom = true\n  }, 300) // Sets a delay before showing tooltip as native\n}\n\nconst handleEvent = (event: MouseEvent | TouchEvent) => {\n  if (hasHoverOnNode) currentEvent = event\n}\n\nconst handleTooltipRemoveEvent = () => {\n  if (tooltipTimeout) clearTimeout(tooltipTimeout)\n  if (isTooltipInDom) removeTooltips()\n}\n\nconst addEventListeners = () => {\n  window.addEventListener('scroll', handleTooltipRemoveEvent, {\n    passive: true,\n    capture: true,\n  }) // important to catch scroll event in capturing phase\n\n  window.addEventListener('touchstart', handleTooltipAddEvent, {\n    passive: true,\n  })\n  window.addEventListener('touchmove', handleEvent, {\n    passive: true,\n  })\n  window.addEventListener('touchcancel', handleTooltipRemoveEvent, {\n    passive: true,\n  })\n\n  window.addEventListener('mouseover', handleTooltipAddEvent, {\n    passive: true,\n  })\n  window.addEventListener('mousemove', handleEvent, {\n    passive: true,\n  })\n  window.addEventListener('mouseout', handleTooltipRemoveEvent, {\n    passive: true,\n  })\n}\n\nconst cleanupEventHandlers = () => {\n  window.removeEventListener('touchstart', handleTooltipAddEvent)\n  window.removeEventListener('touchmove', handleEvent)\n  window.removeEventListener('touchcancel', handleTooltipRemoveEvent)\n\n  window.removeEventListener('mouseover', handleTooltipAddEvent)\n  window.removeEventListener('mousemove', handleEvent)\n  window.removeEventListener('mouseout', handleTooltipRemoveEvent)\n\n  window.removeEventListener('scroll', handleTooltipRemoveEvent)\n}\n\nconst cleanupAndAddEventListeners = () => {\n  cleanupEventHandlers()\n  addEventListeners()\n}\n\nexport default {\n  name: 'tooltip',\n  directive: {\n    mounted: (element: HTMLDivElement, { value: message, modifiers }) => {\n      if (!message) return\n\n      element.setAttribute('aria-label', message)\n\n      // Mobile does not have tooltips, hence we don't apply the rest of the logic\n      if (useAppName() === 'mobile') return\n\n      element.setAttribute('data-tooltip', 'true')\n\n      addModifierRecord(element, modifiers)\n\n      if (!isListeningToEvents) {\n        addEventListeners()\n        isListeningToEvents = true\n        // Resize we cannot add it into the cleanup function\n        window.addEventListener('resize', cleanupAndAddEventListeners)\n      }\n    },\n    updated(element: HTMLDivElement, { value: message }) {\n      if (!message) {\n        if (element.getAttribute('aria-label'))\n          element.removeAttribute('aria-label')\n        return\n      }\n\n      // In some cases, we update the aria-label on an interval f.e table time cells\n      // We don't want to write to the DOM on every update if nothing has changed\n      if (element.getAttribute('aria-label') !== message)\n        element.setAttribute('aria-label', message)\n    },\n    beforeUnmount(element) {\n      // If we dynamically remove the element from the DOM, we need to remove it from the tooltipTargetRecords\n      removeModifierRecord(element)\n\n      // If there are no more elements with the tooltip directive, remove event listeners\n      if (tooltipRecordsCount !== 1) return\n\n      // Cleanup only on the last element\n      if (isTooltipInDom) removeTooltips()\n\n      if (isListeningToEvents) cleanupEventHandlers()\n\n      isListeningToEvents = false\n      tooltipTargetRecords = new WeakMap()\n      tooltipRecordsCount = 0\n\n      window.removeEventListener('resize', cleanupAndAddEventListeners)\n    },\n  },\n} as {\n  name: string\n  directive: ObjectDirective\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\nimport { type App } from 'vue'\n\nimport tooltip from '#shared/plugins/directives/tooltip/index.ts'\n\nexport const initializeTooltipDirective = (app: App) => {\n  const { name, directive } = tooltip\n  app.directive(name, directive)\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormSchemaNode } from '#shared/components/Form/types.ts'\n\ntype FormSchemaOptions = {\n  showDirtyMark: boolean\n}\n\nexport const defineFormSchema = (\n  schema: FormSchemaNode[],\n  options?: FormSchemaOptions,\n): FormSchemaNode[] => {\n  const needGroup = schema.every(\n    (node) => !(typeof node !== 'string' && 'isLayout' in node),\n  )\n\n  if (!needGroup) return schema\n  return [\n    {\n      isLayout: true,\n      component: 'FormGroup',\n      props: options,\n      children: schema,\n    },\n  ]\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { ref } from 'vue'\n\nimport { ErrorStatusCodes } from '#shared/types/error.ts'\n\nimport type { NavigationHookAfter, Router } from 'vue-router'\n\nexport enum ErrorRouteType {\n  PublicError = 'Error',\n  AuthenticatedError = 'ErrorTab',\n}\n\nexport interface ErrorOptions {\n  type?: ErrorRouteType\n  title: string\n  message: string\n  statusCode: ErrorStatusCodes\n  messagePlaceholder?: string[]\n  route?: string\n}\n\nconst defaultOptions: ErrorOptions = {\n  title: __('Not Found'),\n  message: __(\"This page doesn't exist.\"),\n  messagePlaceholder: [],\n  statusCode: ErrorStatusCodes.NotFound,\n}\n\nexport const errorOptions = ref<ErrorOptions>({ ...defaultOptions })\n\nexport const errorAfterGuard: NavigationHookAfter = (to) => {\n  // we don't want to reset the error in case it was changed inside router hook\n  // that way this hook will still fire, but we will keep changed options\n  if (!to.query.redirect) {\n    errorOptions.value = { ...defaultOptions }\n  }\n}\n\nexport const redirectErrorRoute = (options: Partial<ErrorOptions> = {}) => {\n  errorOptions.value = {\n    ...defaultOptions,\n    ...options,\n  }\n\n  return {\n    name: options.type ?? ErrorRouteType.PublicError,\n    query: {\n      redirect: '1',\n    },\n  }\n}\n\nexport const redirectToError = (\n  router: Router,\n  options: Partial<ErrorOptions> = {},\n) => router.replace(redirectErrorRoute(options))\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { isString } from 'lodash-es'\nimport { computed, reactive, watch } from 'vue'\n\nimport { i18n } from '#shared/i18n.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nconst viewMetaHeader = reactive({\n  title: '',\n  translateTitle: true,\n})\n\nconst currentTitle = computed(() => {\n  const application = useApplicationStore()\n  const productName = application.config.product_name as string\n\n  if (!viewMetaHeader.title) return productName\n\n  const transformedTitle = viewMetaHeader.translateTitle\n    ? i18n.t(viewMetaHeader.title)\n    : viewMetaHeader.title\n\n  return `${productName} - ${transformedTitle}`\n})\n\nconst initializeMetaTitle = () => {\n  watch(\n    currentTitle,\n    (newTitle, oldTitle) => {\n      if (isString(newTitle) && newTitle !== oldTitle && document)\n        document.title = newTitle\n    },\n    { immediate: true },\n  )\n}\n\nexport default function useMetaTitle() {\n  const setViewTitle = (title: string, translate = true) => {\n    Object.assign(viewMetaHeader, { title, translateTitle: translate })\n  }\n\n  return {\n    initializeMetaTitle,\n    setViewTitle,\n    currentTitle,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport useMetaTitle from '#shared/composables/useMetaTitle.ts'\n\nimport type { NavigationHookAfter, RouteLocationNormalized } from 'vue-router'\n\nconst headerTitleGuard: NavigationHookAfter = (to: RouteLocationNormalized) => {\n  if (to.meta.title) {\n    const { setViewTitle } = useMetaTitle()\n    setViewTitle(to.meta.title)\n  }\n}\n\nexport default headerTitleGuard\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { watch } from 'vue'\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\nimport log from '#shared/utils/log.ts'\n\nimport type { WatchStopHandle } from 'vue'\nimport type {\n  NavigationGuard,\n  RouteLocationNormalized,\n  NavigationGuardNext,\n} from 'vue-router'\n\nconst checkAuthenticated = (\n  to: RouteLocationNormalized,\n  next: NavigationGuardNext,\n) => {\n  const { authenticated } = useAuthenticationStore()\n\n  if (to.name !== 'Login' && to.meta.requiresAuth && !authenticated) {\n    log.debug(\n      `Route guard for '${to.path}': authentication - forbidden - unauthenticated.`,\n    )\n\n    if (to.fullPath !== '/') {\n      next({ path: '/login', query: { redirect: to.fullPath } })\n    } else {\n      next({ path: '/login' })\n    }\n  } else if (to.meta.redirectToDefaultRoute && authenticated) {\n    // Use the default route here.\n    log.debug(\n      `Route guard for '${to.path}': authentication - forbidden - authenticated.`,\n    )\n    next('/')\n  } else {\n    log.debug(\n      `Route guard for '${to.path}': authentication - allowed - public.`,\n    )\n    next()\n  }\n}\n\nconst authenticationGuard: NavigationGuard = (\n  to: RouteLocationNormalized,\n  from: RouteLocationNormalized,\n  next: NavigationGuardNext,\n) => {\n  let unwatch: WatchStopHandle | undefined\n  const application = useApplicationStore()\n\n  if (application.loading) {\n    unwatch = watch(\n      () => application.loaded,\n      () => {\n        checkAuthenticated(to, next)\n      },\n    )\n  } else {\n    if (unwatch) {\n      unwatch()\n      unwatch = undefined\n    }\n    checkAuthenticated(to, next)\n  }\n}\n\nexport default authenticationGuard\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\nimport { ErrorStatusCodes } from '#shared/types/error.ts'\nimport log from '#shared/utils/log.ts'\n\nimport { errorOptions } from '../../error.ts'\n\nimport type {\n  NavigationGuard,\n  RouteLocationNormalized,\n  NavigationGuardNext,\n} from 'vue-router'\n\nconst permissionGuard: NavigationGuard = (\n  to: RouteLocationNormalized,\n  from: RouteLocationNormalized,\n  next: NavigationGuardNext,\n) => {\n  // When no required permission are defined or no authentication\n  // exists, the permission check can be skipped.\n  if (!to.meta.requiredPermission || !useAuthenticationStore().authenticated) {\n    log.debug(`Route guard for '${to.path}': permission - skip.`)\n    next()\n    return\n  }\n\n  // check the permission for the current user...\n  const hasPermission = useSessionStore().hasPermission(\n    to.meta.requiredPermission,\n  )\n  if (!hasPermission) {\n    log.debug(`Route guard for '${to.path}': permission - forbidden.`)\n\n    errorOptions.value = {\n      title: __('Forbidden'),\n      message: __(\n        \"You don't have the necessary permissions to access this page.\",\n      ),\n      statusCode: ErrorStatusCodes.Forbidden,\n      route: to.fullPath,\n    }\n\n    next({\n      name: 'Error',\n      query: {\n        redirect: '1',\n      },\n      replace: true,\n    })\n    return\n  }\n\n  log.debug(`Route guard for '${to.path}': permission - allowed.`)\n  next()\n}\n\nexport default permissionGuard\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { type App, inject, ref } from 'vue'\n\nimport type { RouteLocationRaw, Router } from 'vue-router'\n\nexport class Walker {\n  private previousRoute = ref<string | null>(null)\n\n  static KEY_INJECT = Symbol('walker')\n\n  constructor(private router: Router) {\n    this.previousRoute.value = Walker.getHistoryBackRoute()\n\n    router.afterEach(() => {\n      this.previousRoute.value = Walker.getHistoryBackRoute()\n    })\n  }\n\n  private static getHistoryBackRoute(): string | null {\n    if (typeof window === 'undefined') return null\n    const { state } = window.history\n\n    if (state && typeof state.back === 'string') {\n      return state.back\n    }\n\n    return null\n  }\n\n  public getBackUrl(backupRoute: RouteLocationRaw) {\n    return this.previousRoute.value || backupRoute\n  }\n\n  public get hasBackUrl() {\n    return this.previousRoute.value !== null\n  }\n\n  public async back(path: RouteLocationRaw, ignore: string[] = []) {\n    const previous = this.previousRoute.value\n    if (previous && !ignore.find((entry) => previous.includes(entry))) {\n      return this.router.back()\n    }\n    return this.router.push(path)\n  }\n}\n\ndeclare module '@vue/runtime-core' {\n  export interface ComponentCustomProperties {\n    $walker: Walker\n  }\n}\n\nexport const useWalker = (): Walker => {\n  return inject(Walker.KEY_INJECT) as Walker\n}\n\nexport const initializeWalker = (app: App, router: Router) => {\n  const walker = new Walker(router)\n  app.provide(Walker.KEY_INJECT, walker)\n  app.config.globalProperties.$walker = walker\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport {\n  createRouter,\n  createWebHistory,\n  type NavigationGuard,\n  type NavigationHookAfter,\n  type Router,\n  type RouteRecordRaw,\n} from 'vue-router'\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport type { RouteRecordMeta } from '#shared/types/router.ts'\n\nimport { errorAfterGuard } from './error.ts'\nimport headerTitleGuard from './guards/after/headerTitle.ts'\nimport authenticationGuard from './guards/before/authentication.ts'\nimport permissionGuard from './guards/before/permission.ts'\nimport { initializeWalker } from './walker.ts'\n\nimport type { App } from 'vue'\n\ndeclare module 'vue-router' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\n  interface RouteMeta extends RouteRecordMeta {}\n}\n\nexport default function initializeRouter(\n  app: App,\n  routes: Array<RouteRecordRaw>,\n  beforeGuards?: NavigationGuard[],\n  afterGuards?: NavigationHookAfter[],\n  historyBase?: string,\n): Router {\n  const router: Router = createRouter({\n    history: createWebHistory(historyBase),\n    routes,\n  })\n\n  const removeInitializer = router.beforeResolve(() => {\n    const { setInitialized } = useApplicationStore()\n    setInitialized()\n    removeInitializer()\n  })\n\n  router.beforeEach(authenticationGuard)\n  router.beforeEach(permissionGuard)\n\n  beforeGuards?.forEach((guard) => router.beforeEach(guard))\n\n  router.afterEach(headerTitleGuard)\n  router.afterEach(errorAfterGuard)\n\n  afterGuards?.forEach((guard) => router.afterEach(guard))\n\n  app.use(router)\n\n  initializeWalker(app, router)\n\n  return router\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\n/* eslint-disable vue/no-v-html */\n\nimport type { Notification } from '#shared/components/CommonNotifications/types.ts'\nimport { useNotifications } from '#shared/components/CommonNotifications/useNotifications.ts'\nimport { getNotificationClasses } from '#shared/initializer/initializeNotificationClasses.ts'\nimport { markup } from '#shared/utils/markup.ts'\n\nconst notificationTypeClassMap = getNotificationClasses()\n\nconst { notifications, removeNotification } = useNotifications()\n\nconst getClassName = (notification: Notification) => {\n  return notificationTypeClassMap[notification.type]\n}\n\nconst clickHandler = (notification: Notification) => {\n  const { callback } = notification\n  removeNotification(notification.id)\n  if (callback) callback()\n}\n</script>\n\n<template>\n  <div id=\"Notifications\" class=\"flex w-full justify-center\">\n    <div\n      class=\"fixed top-0 z-50\"\n      :class=\"notificationTypeClassMap.baseContainer\"\n      role=\"alert\"\n    >\n      <TransitionGroup\n        tag=\"div\"\n        enter-class=\"opacity-0\"\n        leave-active-class=\"transition-opacity duration-1000 opacity-0\"\n      >\n        <div\n          v-for=\"notification in notifications\"\n          :key=\"notification.id\"\n          data-test-id=\"notification\"\n        >\n          <div class=\"flex justify-center\">\n            <div\n              class=\"m-3 flex cursor-pointer items-center\"\n              :class=\"[\n                notificationTypeClassMap.base,\n                getClassName(notification),\n              ]\"\n              role=\"button\"\n              tabindex=\"0\"\n              @keydown.enter=\"clickHandler(notification)\"\n              @click=\"clickHandler(notification)\"\n            >\n              <CommonIcon\n                :name=\"`common-notification-${notification.type}`\"\n                size=\"small\"\n                decorative\n              />\n              <span\n                class=\"text-sm\"\n                :class=\"notificationTypeClassMap.message\"\n                v-html=\"\n                  markup(\n                    $t(\n                      notification.message,\n                      ...(notification.messagePlaceholder || []),\n                    ),\n                  )\n                \"\n              />\n            </div>\n          </div>\n        </div>\n      </TransitionGroup>\n    </div>\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { nextTick, reactive } from 'vue'\n\nimport type { DestroyComponentData, PushComponentData } from './types.ts'\nimport type { Component } from 'vue'\n\nexport enum Events {\n  Push = 'dynamic-component.push',\n  Destroy = 'dynamic-component.destroy',\n}\n\nconst createEvent = <T = PushComponentData | DestroyComponentData>(\n  title: string,\n  detail: T,\n) => {\n  return new CustomEvent<T>(title, { detail })\n}\n\nexport const pushComponent = async (\n  name: string,\n  id: string,\n  cmp: Component,\n  props = {},\n) => {\n  const event = createEvent(Events.Push, {\n    name,\n    id,\n    cmp,\n    props: reactive(props),\n  })\n\n  window.dispatchEvent(event)\n\n  await nextTick()\n}\n\n// if no id is passed down, destroys all named components\nexport const destroyComponent = async (name: string, id?: string) => {\n  const event = createEvent(Events.Destroy, { name, id })\n\n  window.dispatchEvent(event)\n\n  await nextTick()\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { markRaw, shallowRef } from 'vue'\n\nimport { Events } from './manage.ts'\n\nimport type { DestroyComponentData, PushComponentData } from './types.ts'\nimport type { TransitionProps } from 'vue'\n\nconst props = defineProps<{\n  /**\n   * Name of a group of components that will be pushed to with unique ID.\n   */\n  name: string\n  /**\n   * Transition, if any.\n   */\n  transition?: TransitionProps\n}>()\n\nconst components = shallowRef<PushComponentData[]>([])\n\nuseEventListener(\n  window,\n  Events.Push,\n  ({ detail }: CustomEvent<PushComponentData>) => {\n    if (detail.name !== props.name) return\n\n    components.value = [\n      ...components.value,\n      {\n        ...detail,\n        cmp: markRaw(detail.cmp),\n      },\n    ]\n  },\n)\n\nuseEventListener(\n  window,\n  Events.Destroy,\n  ({ detail }: CustomEvent<DestroyComponentData>) => {\n    if (detail.name !== props.name) return\n\n    if (!detail.id) {\n      components.value = []\n\n      return\n    }\n\n    components.value = components.value.filter(\n      (item) => !(item.name === detail.name && item.id === detail.id),\n    )\n  },\n)\n</script>\n\n<template>\n  <TransitionGroup v-if=\"transition\" v-bind=\"transition\">\n    <Component\n      :is=\"cmp\"\n      v-for=\"{ cmp, name: cmpName, id, props: cmpProps } in components\"\n      :key=\"`${cmpName}-${id}`\"\n      v-bind=\"cmpProps\"\n    />\n  </TransitionGroup>\n\n  <template v-else-if=\"!$slots.default\">\n    <Component\n      :is=\"cmp\"\n      v-for=\"{ cmp, name: cmpName, id, props: cmpProps } in components\"\n      :key=\"`${cmpName}-${id}`\"\n      v-bind=\"cmpProps\"\n    />\n  </template>\n\n  <slot v-else :components=\"components\" />\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\n// Add a watcher for authenticated changes (e.g. login/logout in a other browser tab).\nconst useAuthenticationChanges = () => {\n  const session = useSessionStore()\n  const authentication = useAuthenticationStore()\n  const application = useApplicationStore()\n\n  const router = useRouter()\n  const route = useRoute()\n\n  authentication.$subscribe(async (mutation, state) => {\n    if (state.authenticated && !session.id) {\n      session.checkSession().then(async (sessionId) => {\n        if (sessionId) {\n          await authentication.refreshAfterAuthentication()\n        }\n\n        if (route.name === 'Login') {\n          router.replace('/')\n        }\n      })\n    } else if (!state.authenticated && session.id && !state.externalLogout) {\n      await authentication.clearAuthentication()\n      router.replace('/login')\n    }\n  })\n\n  watch(\n    () => application.config.maintenance_mode,\n    async (newValue, oldValue) => {\n      if (\n        !oldValue &&\n        newValue &&\n        authentication.authenticated &&\n        !session.hasPermission(['admin.maintenance', 'maintenance'])\n      ) {\n        await authentication.logout()\n        router.replace('/login')\n      }\n    },\n  )\n}\n\nexport default useAuthenticationChanges\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { inject } from 'vue'\n\nimport type { FormKitConfig } from '@formkit/core'\n\nconst useFormKitConfig = () => {\n  return inject(Symbol.for('FormKitConfig')) as FormKitConfig\n}\n\nexport default useFormKitConfig\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const ApplicationBuildChecksumDocument = gql`\n    query applicationBuildChecksum {\n  applicationBuildChecksum\n}\n    `;\nexport function useApplicationBuildChecksumQuery(options: VueApolloComposable.UseQueryOptions<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables>(ApplicationBuildChecksumDocument, {}, options);\n}\nexport function useApplicationBuildChecksumLazyQuery(options: VueApolloComposable.UseQueryOptions<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables>(ApplicationBuildChecksumDocument, {}, options);\n}\nexport type ApplicationBuildChecksumQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.ApplicationBuildChecksumQuery, Types.ApplicationBuildChecksumQueryVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const AppMaintenanceDocument = gql`\n    subscription appMaintenance {\n  appMaintenance {\n    type\n  }\n}\n    `;\nexport function useAppMaintenanceSubscription(options: VueApolloComposable.UseSubscriptionOptions<Types.AppMaintenanceSubscription, Types.AppMaintenanceSubscriptionVariables> | VueCompositionApi.Ref<VueApolloComposable.UseSubscriptionOptions<Types.AppMaintenanceSubscription, Types.AppMaintenanceSubscriptionVariables>> | ReactiveFunction<VueApolloComposable.UseSubscriptionOptions<Types.AppMaintenanceSubscription, Types.AppMaintenanceSubscriptionVariables>> = {}) {\n  return VueApolloComposable.useSubscription<Types.AppMaintenanceSubscription, Types.AppMaintenanceSubscriptionVariables>(AppMaintenanceDocument, {}, options);\n}\nexport type AppMaintenanceSubscriptionCompositionFunctionResult = VueApolloComposable.UseSubscriptionReturn<Types.AppMaintenanceSubscription, Types.AppMaintenanceSubscriptionVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useRouteQuery } from '@vueuse/router'\nimport { onMounted, reactive, watch } from 'vue'\n\nimport {\n  useNotifications,\n  NotificationTypes,\n} from '#shared/components/CommonNotifications/index.ts'\nimport { useApplicationBuildChecksumQuery } from '#shared/graphql/queries/applicationBuildChecksum.api.ts'\nimport { useAppMaintenanceSubscription } from '#shared/graphql/subscriptions/appMaintenance.api.ts'\nimport type {\n  ApplicationBuildChecksumQuery,\n  ApplicationBuildChecksumQueryVariables,\n  AppMaintenanceSubscription,\n  AppMaintenanceSubscriptionVariables,\n} from '#shared/graphql/types.ts'\nimport { EnumAppMaintenanceType } from '#shared/graphql/types.ts'\nimport {\n  QueryHandler,\n  SubscriptionHandler,\n} from '#shared/server/apollo/handler/index.ts'\nimport testFlags from '#shared/utils/testFlags.ts'\n\nlet checksumQuery: QueryHandler<\n  ApplicationBuildChecksumQuery,\n  ApplicationBuildChecksumQueryVariables\n>\nlet previousChecksum: string\nlet appMaintenanceSubscription: SubscriptionHandler<\n  AppMaintenanceSubscription,\n  AppMaintenanceSubscriptionVariables\n>\n\ninterface UseAppMaintenanceCheckOptions {\n  onNeedRefresh?: () => void\n}\n\nconst useAppMaintenanceCheck = (\n  maintenanceOptions: UseAppMaintenanceCheckOptions = {},\n) => {\n  const notify = (message: string, callback?: () => void) => {\n    useNotifications().notify({\n      id: 'app-maintenance',\n      message,\n      type: NotificationTypes.Warn,\n      persistent: true,\n      callback,\n    })\n  }\n\n  onMounted(() => {\n    if (checksumQuery) return\n\n    // Default poll interval: every minute.\n    const defaultPollInterval = 60 * 1000\n\n    const applicationRebuildCheckInterval = useRouteQuery(\n      'ApplicationRebuildCheckInterval',\n      defaultPollInterval.toString(),\n    )\n\n    const options = reactive({\n      pollInterval: parseInt(applicationRebuildCheckInterval.value, 10),\n    })\n\n    watch(applicationRebuildCheckInterval, () => {\n      options.pollInterval = parseInt(applicationRebuildCheckInterval.value, 10)\n    })\n\n    checksumQuery = new QueryHandler(useApplicationBuildChecksumQuery(options))\n\n    const notificationMessage = __(\n      'A newer version of the app is available. Please reload at your earliest.',\n    )\n\n    checksumQuery.watchOnResult((queryResult): void => {\n      if (!queryResult?.applicationBuildChecksum.length) return\n      if (!previousChecksum) {\n        previousChecksum = queryResult?.applicationBuildChecksum\n        testFlags.set('useApplicationBuildChecksumQuery.firstResult')\n      }\n      if (queryResult?.applicationBuildChecksum !== previousChecksum) {\n        notify(notificationMessage, maintenanceOptions.onNeedRefresh)\n      }\n    })\n\n    appMaintenanceSubscription = new SubscriptionHandler(\n      useAppMaintenanceSubscription(),\n    )\n    appMaintenanceSubscription.onResult((result) => {\n      const type = result.data?.appMaintenance?.type\n      let message = notificationMessage\n\n      if (!type) {\n        testFlags.set('useAppMaintenanceSubscription.subscribed')\n        return\n      }\n      switch (type) {\n        case EnumAppMaintenanceType.ConfigChanged:\n          message = __(\n            'The configuration of Zammad has changed. Please reload at your earliest.',\n          )\n          break\n        case EnumAppMaintenanceType.RestartAuto:\n        case EnumAppMaintenanceType.RestartManual:\n          // TODO: this case cannot be handled right now. Legacy interface performs a connectivity check.\n          break\n        default:\n          break\n      }\n      notify(message, () => window.location.reload())\n    })\n  })\n}\n\nexport default useAppMaintenanceCheck\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const PushMessagesDocument = gql`\n    subscription pushMessages {\n  pushMessages {\n    title\n    text\n  }\n}\n    `;\nexport function usePushMessagesSubscription(options: VueApolloComposable.UseSubscriptionOptions<Types.PushMessagesSubscription, Types.PushMessagesSubscriptionVariables> | VueCompositionApi.Ref<VueApolloComposable.UseSubscriptionOptions<Types.PushMessagesSubscription, Types.PushMessagesSubscriptionVariables>> | ReactiveFunction<VueApolloComposable.UseSubscriptionOptions<Types.PushMessagesSubscription, Types.PushMessagesSubscriptionVariables>> = {}) {\n  return VueApolloComposable.useSubscription<Types.PushMessagesSubscription, Types.PushMessagesSubscriptionVariables>(PushMessagesDocument, {}, options);\n}\nexport type PushMessagesSubscriptionCompositionFunctionResult = VueApolloComposable.UseSubscriptionReturn<Types.PushMessagesSubscription, Types.PushMessagesSubscriptionVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { onMounted } from 'vue'\n\nimport {\n  useNotifications,\n  NotificationTypes,\n} from '#shared/components/CommonNotifications/index.ts'\nimport { usePushMessagesSubscription } from '#shared/graphql/subscriptions/pushMessages.api.ts'\nimport type {\n  PushMessagesSubscription,\n  PushMessagesSubscriptionVariables,\n} from '#shared/graphql/types.ts'\nimport { SubscriptionHandler } from '#shared/server/apollo/handler/index.ts'\nimport testFlags from '#shared/utils/testFlags.ts'\n\nlet subscription: SubscriptionHandler<\n  PushMessagesSubscription,\n  PushMessagesSubscriptionVariables\n>\n\nconst usePushMessages = () => {\n  const notify = (message: string) => {\n    useNotifications().notify({\n      message,\n      type: NotificationTypes.Warn,\n      persistent: true,\n    })\n  }\n\n  onMounted(() => {\n    if (subscription) return\n\n    subscription = new SubscriptionHandler(usePushMessagesSubscription())\n    subscription.onResult((result) => {\n      const message = result.data?.pushMessages\n      if (!message?.title && !message?.text) {\n        testFlags.set('usePushMessagesSubscription.subscribed')\n        return\n      }\n      notify(`${message.title}: ${message.text}`)\n    })\n  })\n}\n\nexport default usePushMessages\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const OverviewAttributesFragmentDoc = gql`\n    fragment overviewAttributes on Overview {\n  id\n  internalId\n  name\n  link\n  prio\n  groupBy\n  orderBy\n  orderDirection\n  organizationShared\n  outOfOffice\n  active\n  ticketCount @include(if: $withTicketCount)\n}\n    `;"],"file":"assets/overviewAttributes.api-C09LSZ8O.js"}