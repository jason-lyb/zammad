{"version":3,"file":"ticketUpdates.api-BhGIG_Ti.js","sources":["../../../../../app/frontend/shared/entities/ticket/graphql/fragments/ticketMention.api.ts","../../../../../app/frontend/shared/entities/ticket/graphql/fragments/referencingTicket.api.ts","../../../../../app/frontend/shared/entities/ticket/graphql/subscriptions/ticketUpdates.api.ts"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const TicketMentionFragmentDoc = gql`\n    fragment ticketMention on Mention {\n  user {\n    id\n    internalId\n    firstname\n    lastname\n    fullname\n    vip\n    outOfOffice\n    outOfOfficeStartAt\n    outOfOfficeEndAt\n    active\n    image\n  }\n  userTicketAccess {\n    agentReadAccess\n  }\n}\n    `;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const ReferencingTicketFragmentDoc = gql`\n    fragment referencingTicket on Ticket {\n  id\n  internalId\n  number\n  title\n  state {\n    id\n    name\n  }\n  stateColorCode\n}\n    `;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { TicketAttributesFragmentDoc } from '../fragments/ticketAttributes.api';\nimport { TicketMentionFragmentDoc } from '../fragments/ticketMention.api';\nimport { ReferencingTicketFragmentDoc } from '../fragments/referencingTicket.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TicketUpdatesDocument = gql`\n    subscription ticketUpdates($ticketId: ID!, $initial: Boolean = false) {\n  ticketUpdates(ticketId: $ticketId, initial: $initial) {\n    ticket {\n      ...ticketAttributes\n      createArticleType {\n        id\n        name\n      }\n      mentions(first: 20) {\n        totalCount\n        edges {\n          node {\n            ...ticketMention\n          }\n          cursor\n        }\n      }\n      checklist {\n        id\n        completed\n        incomplete\n        total\n        complete\n      }\n      referencingChecklistTickets {\n        ...referencingTicket\n      }\n    }\n  }\n}\n    ${TicketAttributesFragmentDoc}\n${TicketMentionFragmentDoc}\n${ReferencingTicketFragmentDoc}`;\nexport function useTicketUpdatesSubscription(variables: Types.TicketUpdatesSubscriptionVariables | VueCompositionApi.Ref<Types.TicketUpdatesSubscriptionVariables> | ReactiveFunction<Types.TicketUpdatesSubscriptionVariables>, options: VueApolloComposable.UseSubscriptionOptions<Types.TicketUpdatesSubscription, Types.TicketUpdatesSubscriptionVariables> | VueCompositionApi.Ref<VueApolloComposable.UseSubscriptionOptions<Types.TicketUpdatesSubscription, Types.TicketUpdatesSubscriptionVariables>> | ReactiveFunction<VueApolloComposable.UseSubscriptionOptions<Types.TicketUpdatesSubscription, Types.TicketUpdatesSubscriptionVariables>> = {}) {\n  return VueApolloComposable.useSubscription<Types.TicketUpdatesSubscription, Types.TicketUpdatesSubscriptionVariables>(TicketUpdatesDocument, variables, options);\n}\nexport type TicketUpdatesSubscriptionCompositionFunctionResult = VueApolloComposable.UseSubscriptionReturn<Types.TicketUpdatesSubscription, Types.TicketUpdatesSubscriptionVariables>;"],"names":["TicketMentionFragmentDoc","gql","ReferencingTicketFragmentDoc","TicketUpdatesDocument","TicketAttributesFragmentDoc","useTicketUpdatesSubscription","variables","options","VueApolloComposable.useSubscription"],"mappings":"yIAGO,MAAMA,EAA2BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MCA3BC,EAA+BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MCO/BE,EAAwBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA+B/BG,CAA2B;AAAA,EAC/BJ,CAAwB;AAAA,EACxBE,CAA4B,GACvB,SAASG,EAA6BC,EAAoLC,EAA0Z,GAAI,CAC7nB,OAAOC,EAA+GL,EAAuBG,EAAWC,CAAO,CACjK"}