{"version":3,"file":"CommonButtonGroup.vue_vue_type_script_setup_true_lang-BTHDtl8G.js","sources":["../../../../../app/frontend/apps/mobile/components/CommonButtonGroup/CommonButtonGroup.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { type Props as IconProps } from '#shared/components/CommonIcon/CommonIcon.vue'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport type { CommonButtonOption } from './types.ts'\n\nexport interface Props {\n  modelValue?: string | number\n  mode?: 'full' | 'compressed'\n  controls?: string\n  as?: 'tabs' | 'buttons'\n  options: CommonButtonOption[]\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  mode: 'compressed',\n  as: 'buttons',\n})\n\nconst emit = defineEmits<{\n  'update:modelValue': [value?: string | number]\n}>()\n\nconst session = useSessionStore()\n\nconst filteredOptions = computed(() => {\n  return props.options.filter(\n    (option) =>\n      !option.hidden &&\n      (!option.permissions || session.hasPermission(option.permissions)),\n  )\n})\n\nconst getIconProps = (option: CommonButtonOption): IconProps => {\n  if (!option.icon) return {} as IconProps\n  if (typeof option.icon === 'string') {\n    return { name: option.icon, size: 'small' }\n  }\n  return option.icon\n}\n\nconst onButtonClick = (option: CommonButtonOption) => {\n  if (option.disabled) return\n  option.onAction?.()\n  emit('update:modelValue', option.value)\n}\n\nconst isTabs = computed(() => props.as === 'tabs')\n</script>\n\n<template>\n  <div\n    class=\"flex max-w-[100vw] shrink-0 gap-2 overflow-x-auto\"\n    :class=\"{ 'w-full': mode === 'full' }\"\n    :role=\"isTabs ? 'tablist' : undefined\"\n  >\n    <Component\n      :is=\"option.link ? 'CommonLink' : 'button'\"\n      v-for=\"option of filteredOptions\"\n      :key=\"option.label\"\n      :type=\"option.link ? undefined : 'button'\"\n      :role=\"isTabs ? 'tab' : undefined\"\n      :disabled=\"option.disabled\"\n      :link=\"option.link\"\n      :data-value=\"option.value\"\n      :class=\"[\n        option.class,\n        {\n          'opacity-50': option.disabled,\n          '!bg-gray-200':\n            option.selected ||\n            (option.value != null && modelValue === option.value),\n          'flex-1 py-2': mode === 'full',\n          'py-1': mode === 'compressed',\n        },\n      ]\"\n      class=\"flex flex-col items-center justify-center gap-1 rounded-xl bg-gray-500 px-3 text-sm text-white\"\n      :aria-controls=\"isTabs ? controls || option.controls : undefined\"\n      :aria-selected=\"isTabs ? modelValue === option.value : undefined\"\n      @click=\"onButtonClick(option)\"\n    >\n      <CommonIcon v-if=\"option.icon\" v-bind=\"getIconProps(option)\" decorative />\n      <span>{{ $t(option.label, ...(option.labelPlaceholder || [])) }}</span>\n    </Component>\n  </div>\n</template>\n"],"names":["props","__props","emit","__emit","session","useSessionStore","filteredOptions","computed","option","getIconProps","onButtonClick","_a","isTabs"],"mappings":"yYAkBA,MAAMA,EAAQC,EAKRC,EAAOC,EAIPC,EAAUC,IAEVC,EAAkBC,EAAS,IACxBP,EAAM,QAAQ,OAClBQ,GACC,CAACA,EAAO,SACP,CAACA,EAAO,aAAeJ,EAAQ,cAAcI,EAAO,WAAW,EAAA,CAErE,EAEKC,EAAgBD,GACfA,EAAO,KACR,OAAOA,EAAO,MAAS,SAClB,CAAE,KAAMA,EAAO,KAAM,KAAM,OAAQ,EAErCA,EAAO,KAJW,GAOrBE,EAAiBF,GAA+B,OAChDA,EAAO,YACXG,EAAAH,EAAO,WAAP,MAAAG,EAAA,KAAAH,GACKN,EAAA,oBAAqBM,EAAO,KAAK,EAAA,EAGlCI,EAASL,EAAS,IAAMP,EAAM,KAAO,MAAM"}