{"version":3,"file":"GuidedSetupManualEmailNotification-8xdbKdHs.js","sources":["../../../../../app/frontend/apps/desktop/entities/channel-email/graphql/mutations/channelEmailSetNotificationConfiguration.api.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/views/GuidedSetupManual/GuidedSetupManualEmailNotification.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const ChannelEmailSetNotificationConfigurationDocument = gql`\n    mutation channelEmailSetNotificationConfiguration($outboundConfiguration: ChannelEmailOutboundConfigurationInput!) {\n  channelEmailSetNotificationConfiguration(\n    outboundConfiguration: $outboundConfiguration\n  ) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useChannelEmailSetNotificationConfigurationMutation(options: VueApolloComposable.UseMutationOptions<Types.ChannelEmailSetNotificationConfigurationMutation, Types.ChannelEmailSetNotificationConfigurationMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.ChannelEmailSetNotificationConfigurationMutation, Types.ChannelEmailSetNotificationConfigurationMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.ChannelEmailSetNotificationConfigurationMutation, Types.ChannelEmailSetNotificationConfigurationMutationVariables>(ChannelEmailSetNotificationConfigurationDocument, options);\n}\nexport type ChannelEmailSetNotificationConfigurationMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.ChannelEmailSetNotificationConfigurationMutation, Types.ChannelEmailSetNotificationConfigurationMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useRouter } from 'vue-router'\n\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport { useDebouncedLoading } from '#shared/composables/useDebouncedLoading.ts'\nimport { EnumFormUpdaterId } from '#shared/graphql/types.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\n\nimport { useEmailOutboundForm } from '#desktop/entities/channel-email/composables/useEmailOutboundForm.ts'\nimport { useChannelEmailSetNotificationConfigurationMutation } from '#desktop/entities/channel-email/graphql/mutations/channelEmailSetNotificationConfiguration.api.ts'\nimport { useChannelEmailValidateConfigurationOutboundMutation } from '#desktop/entities/channel-email/graphql/mutations/channelEmailValidateConfigurationOutbound.api.ts'\nimport type { EmailNotificationData } from '#desktop/entities/channel-email/types/email-notification.ts'\nimport { useSSLVerificationWarningHandler } from '#desktop/form/composables/useSSLVerificationWarningHandler.ts'\n\nimport GuidedSetupActionFooter from '../../components/GuidedSetupActionFooter.vue'\nimport GuidedSetupStatusMessage from '../../components/GuidedSetupStatusMessage.vue'\nimport { useSystemSetup } from '../../composables/useSystemSetup.ts'\nimport { emailBeforeRouteEnterGuard } from '../../router/guards/emailBeforeRouteEnterGuard.ts'\n\ndefineOptions({\n  beforeRouteEnter: emailBeforeRouteEnterGuard,\n})\n\nconst router = useRouter()\n\nconst { setTitle } = useSystemSetup()\nsetTitle(__('Email Notification'))\n\nconst {\n  formEmailOutbound,\n  emailOutboundSchema,\n  emailOutboundFormChangeFields,\n} = useEmailOutboundForm()\n\nconst emailNotificationSchema = [\n  // For now this is hidden, but should be changeable at some point: https://github.com/zammad/zammad/issues/3343\n  {\n    name: 'notification_sender',\n    label: __('Notification Sender'),\n    type: 'hidden',\n  },\n  ...emailOutboundSchema,\n]\n\nconst { loading, debouncedLoading } = useDebouncedLoading()\n\nconst probeEmailNotification = async (data: EmailNotificationData) => {\n  loading.value = true\n\n  const validationConfigurationOutbound = new MutationHandler(\n    useChannelEmailValidateConfigurationOutboundMutation(),\n  )\n  const setNotificationConfiguration = new MutationHandler(\n    useChannelEmailSetNotificationConfigurationMutation(),\n  )\n\n  const emailOutboundData = {\n    adapter: data.adapter,\n    host: data.host,\n    port: Number(data.port),\n    user: data.user,\n    password: data.password,\n    sslVerify: data.sslVerify,\n  }\n\n  return validationConfigurationOutbound\n    .send({\n      outboundConfiguration: emailOutboundData,\n      emailAddress: data.notification_sender,\n    })\n    .then(async () => {\n      const result = await setNotificationConfiguration.send({\n        outboundConfiguration: emailOutboundData,\n      })\n\n      if (result?.channelEmailSetNotificationConfiguration?.success) {\n        router.push('/guided-setup/manual/channels')\n      }\n    })\n    .finally(async () => {\n      loading.value = false\n    })\n}\n</script>\n\n<template>\n  <GuidedSetupStatusMessage\n    v-if=\"debouncedLoading\"\n    :message=\"__('Verifying and saving your configurationâ€¦')\"\n  />\n  <div v-show=\"!debouncedLoading\" class=\"flex flex-col gap-2.5\">\n    <Form\n      id=\"email-notification-setup\"\n      ref=\"formEmailOutbound\"\n      data-test-id=\"email-notification-setup\"\n      form-class=\"mb-2.5\"\n      :flatten-form-groups=\"['outbound']\"\n      :form-updater-id=\"\n        EnumFormUpdaterId.FormUpdaterUpdaterGuidedSetupEmailNotification\n      \"\n      :schema=\"emailNotificationSchema\"\n      :handlers=\"[useSSLVerificationWarningHandler()]\"\n      :change-fields=\"emailOutboundFormChangeFields\"\n      @submit=\"\n        probeEmailNotification($event as FormSubmitData<EmailNotificationData>)\n      \"\n    />\n    <GuidedSetupActionFooter\n      go-back-route=\"/guided-setup/manual/system-information\"\n      skip-route=\"/guided-setup/manual/channels\"\n      :form=\"formEmailOutbound\"\n      :submit-button-text=\"__('Save and Continue')\"\n    />\n  </div>\n</template>\n"],"names":["ChannelEmailSetNotificationConfigurationDocument","gql","ErrorsFragmentDoc","useChannelEmailSetNotificationConfigurationMutation","options","VueApolloComposable.useMutation","router","useRouter","setTitle","useSystemSetup","formEmailOutbound","emailOutboundSchema","emailOutboundFormChangeFields","useEmailOutboundForm","emailNotificationSchema","loading","debouncedLoading","useDebouncedLoading","probeEmailNotification","data","validationConfigurationOutbound","MutationHandler","useChannelEmailValidateConfigurationOutboundMutation","setNotificationConfiguration","emailOutboundData","result","_a"],"mappings":"2kDAQO,MAAMA,EAAmDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW1DC,CAAiB,GACP,SAAAC,EAAoDC,EAA+V,GAAI,CAC9Z,OAAAC,EAAyJL,EAAkDI,CAAO,CAC3N,uHCIA,MAAME,EAASC,IAET,CAAE,SAAAC,GAAaC,IACZD,EAAA,GAAG,oBAAoB,CAAC,EAE3B,KAAA,CACJ,kBAAAE,EACA,oBAAAC,EACA,8BAAAC,GACEC,EAAqB,EAEnBC,EAA0B,CAE9B,CACE,KAAM,sBACN,MAAO,GAAG,qBAAqB,EAC/B,KAAM,QACR,EACA,GAAGH,CAAA,EAGC,CAAE,QAAAI,EAAS,iBAAAC,CAAiB,EAAIC,EAAoB,EAEpDC,EAAyB,MAAOC,GAAgC,CACpEJ,EAAQ,MAAQ,GAEhB,MAAMK,EAAkC,IAAIC,EAC1CC,EAAqD,CAAA,EAEjDC,EAA+B,IAAIF,EACvClB,EAAoD,CAAA,EAGhDqB,EAAoB,CACxB,QAASL,EAAK,QACd,KAAMA,EAAK,KACX,KAAM,OAAOA,EAAK,IAAI,EACtB,KAAMA,EAAK,KACX,SAAUA,EAAK,SACf,UAAWA,EAAK,SAAA,EAGlB,OAAOC,EACJ,KAAK,CACJ,sBAAuBI,EACvB,aAAcL,EAAK,mBAAA,CACpB,EACA,KAAK,SAAY,OACV,MAAAM,EAAS,MAAMF,EAA6B,KAAK,CACrD,sBAAuBC,CAAA,CACxB,GAEGE,EAAAD,GAAA,YAAAA,EAAQ,2CAAR,MAAAC,EAAkD,SACpDpB,EAAO,KAAK,+BAA+B,CAC7C,CACD,EACA,QAAQ,SAAY,CACnBS,EAAQ,MAAQ,EAAA,CACjB,CAAA"}