{"version":3,"file":"AccountOverview-B7mxPDzT.js","sources":["../../../../../app/frontend/shared/graphql/queries/about.api.ts","../../../../../app/frontend/apps/mobile/pages/account/views/AccountOverview.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const ProductAboutDocument = gql`\n    query productAbout {\n  productAbout\n}\n    `;\nexport function useProductAboutQuery(options: VueApolloComposable.UseQueryOptions<Types.ProductAboutQuery, Types.ProductAboutQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.ProductAboutQuery, Types.ProductAboutQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.ProductAboutQuery, Types.ProductAboutQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.ProductAboutQuery, Types.ProductAboutQueryVariables>(ProductAboutDocument, {}, options);\n}\nexport function useProductAboutLazyQuery(options: VueApolloComposable.UseQueryOptions<Types.ProductAboutQuery, Types.ProductAboutQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.ProductAboutQuery, Types.ProductAboutQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.ProductAboutQuery, Types.ProductAboutQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.ProductAboutQuery, Types.ProductAboutQueryVariables>(ProductAboutDocument, {}, options);\n}\nexport type ProductAboutQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.ProductAboutQuery, Types.ProductAboutQueryVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\n/* eslint-disable vue/no-v-html */\n\nimport { storeToRefs } from 'pinia'\nimport { computed, ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport { useRawHTMLIcon } from '#shared/components/CommonIcon/useRawHTMLIcon.ts'\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport FormGroup from '#shared/components/Form/FormGroup.vue'\nimport { useForceDesktop } from '#shared/composables/useForceDesktop.ts'\nimport { useLocaleUpdate } from '#shared/composables/useLocaleUpdate.ts'\nimport { useProductAboutQuery } from '#shared/graphql/queries/about.api.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\nimport { browser, os } from '#shared/utils/browser.ts'\nimport { usePWASupport, isStandalone } from '#shared/utils/pwa.ts'\n\nimport CommonSectionMenu from '#mobile/components/CommonSectionMenu/CommonSectionMenu.vue'\nimport CommonSectionMenuItem from '#mobile/components/CommonSectionMenu/CommonSectionMenuItem.vue'\nimport CommonSectionMenuLink from '#mobile/components/CommonSectionMenu/CommonSectionMenuLink.vue'\nimport CommonSectionPopup from '#mobile/components/CommonSectionPopup/CommonSectionPopup.vue'\nimport { useHeader } from '#mobile/composables/useHeader.ts'\n\nconst router = useRouter()\n\nconst logout = () => {\n  router.push('/logout')\n}\n\nuseHeader({\n  title: __('Account'),\n  backUrl: '/',\n  backAvoidHomeButton: true,\n})\n\nconst session = useSessionStore()\nconst { user } = storeToRefs(session)\n\nconst { modelCurrentLocale, localeOptions, isSavingLocale, translation } =\n  useLocaleUpdate()\n\nconst hasVersionPermission = session.hasPermission('admin')\n\nconst productAboutQuery = new QueryHandler(\n  useProductAboutQuery({\n    enabled: hasVersionPermission,\n    fetchPolicy: 'cache-first',\n  }),\n  { errorNotificationMessage: __('The product version could not be fetched.') },\n)\n\nconst productAbout = productAboutQuery.result()\n\nconst isMobileIOS = browser.name?.includes('Safari') && os.name?.includes('iOS')\nconst { canInstallPWA, installPWA } = usePWASupport()\nconst showInstallButton = computed(\n  () => !isStandalone() && (canInstallPWA.value || isMobileIOS),\n)\n\nconst showInstallIOSPopup = ref(false)\nconst installPWAMessage = computed(() => {\n  const iconShare = useRawHTMLIcon({\n    class: 'inline-flex text-blue',\n    decorative: true,\n    size: 'small',\n    name: 'ios-share',\n  })\n\n  const iconAdd = useRawHTMLIcon({\n    class: 'inline-flex',\n    decorative: true,\n    size: 'small',\n    name: 'add-square',\n  })\n\n  return i18n.t(\n    __(\n      'To install %s as an app, press the %s \"Share\" button and then the %s \"Add to Home Screen\" button.',\n    ),\n    __('Zammad'),\n    iconShare,\n    iconAdd,\n  )\n})\n\nconst installZammadPWA = () => {\n  if (isStandalone()) return\n\n  // on chromium this will show a chrome popup with native \"install\" button\n  if (canInstallPWA.value) {\n    installPWA()\n    return\n  }\n\n  // on iOS we cannot install it with native functionality, so we show\n  // instructions on how to install it\n  // let's pray Apple will add native functionality in the future\n  if (isMobileIOS) {\n    showInstallIOSPopup.value = true\n  }\n}\n\nconst { forceDesktop } = useForceDesktop()\n</script>\n\n<template>\n  <div class=\"px-4\">\n    <div v-if=\"user\" class=\"flex flex-col items-center justify-center py-6\">\n      <div>\n        <CommonUserAvatar :entity=\"user\" size=\"xl\" personal />\n      </div>\n      <div class=\"mt-2 text-xl font-bold\">\n        {{ user.firstname }} {{ user.lastname }}\n      </div>\n    </div>\n\n    <CommonSectionMenu>\n      <CommonSectionMenuLink\n        v-if=\"session.hasPermission('user_preferences.avatar')\"\n        :icon=\"{ name: 'person', size: 'base' }\"\n        icon-bg=\"bg-pink\"\n        link=\"/account/avatar\"\n      >\n        {{ $t('Avatar') }}\n      </CommonSectionMenuLink>\n      <CommonSectionMenuLink\n        v-if=\"showInstallButton\"\n        :icon=\"{ name: 'install', size: 'small' }\"\n        icon-bg=\"bg-blue\"\n        @click=\"installZammadPWA\"\n      >\n        {{ $t('Install App') }}\n      </CommonSectionMenuLink>\n      <CommonSectionMenuLink\n        link=\"/\"\n        link-external\n        :icon=\"{ name: 'desktop', size: 'base' }\"\n        icon-bg=\"bg-orange\"\n        @click=\"forceDesktop\"\n      >\n        {{ $t('Continue to desktop') }}\n      </CommonSectionMenuLink>\n    </CommonSectionMenu>\n\n    <!--\n      The shorthand \"no-options-label-translation\" is not working currently because of a FormKit limitation,\n      therefore we need to explicitly set it to true.\n    -->\n    <FormGroup v-if=\"session.hasPermission('user_preferences.language')\">\n      <FormKit\n        v-model=\"modelCurrentLocale\"\n        type=\"treeselect\"\n        :label=\"__('Language')\"\n        :options=\"localeOptions\"\n        :disabled=\"isSavingLocale\"\n        :no-options-label-translation=\"true\"\n        sorting=\"label\"\n      />\n\n      <template #help>\n        {{ $t('Did you know?') }}\n        <CommonLink class=\"text-blue\" target=\"_blank\" :link=\"translation.link\">\n          {{ $t('You can help translating Zammad.') }}\n        </CommonLink>\n      </template>\n    </FormGroup>\n\n    <CommonSectionMenu v-if=\"hasVersionPermission\">\n      <CommonSectionMenuItem :label=\"__('Version')\">\n        {{\n          $t('This is Zammad version %s', productAbout?.productAbout as string)\n        }}\n      </CommonSectionMenuItem>\n    </CommonSectionMenu>\n\n    <div class=\"mb-4\">\n      <FormKit\n        variant=\"danger\"\n        wrapper-class=\"mt-4 text-base flex grow justify-center items-center\"\n        input-class=\"py-2 px-4 w-full h-14 rounded-xl select-none\"\n        type=\"submit\"\n        name=\"signout\"\n        @click=\"logout\"\n      >\n        {{ $t('Sign out') }}\n      </FormKit>\n    </div>\n\n    <CommonSectionPopup v-model:state=\"showInstallIOSPopup\" :messages=\"[]\">\n      <template #header>\n        <section class=\"inline-flex min-h-[54px] items-center p-3\">\n          <span v-html=\"installPWAMessage\" />\n        </section>\n      </template>\n    </CommonSectionPopup>\n  </div>\n</template>\n"],"names":["ProductAboutDocument","gql","useProductAboutQuery","options","VueApolloComposable.useQuery","router","useRouter","logout","useHeader","session","useSessionStore","user","storeToRefs","modelCurrentLocale","localeOptions","isSavingLocale","translation","useLocaleUpdate","hasVersionPermission","productAbout","QueryHandler","isMobileIOS","_a","browser","_b","os","canInstallPWA","installPWA","usePWASupport","showInstallButton","computed","isStandalone","showInstallIOSPopup","ref","installPWAMessage","iconShare","useRawHTMLIcon","iconAdd","i18n","installZammadPWA","forceDesktop","useForceDesktop"],"mappings":"g3BAOO,MAAMA,GAAuBC;AAAA;AAAA;AAAA;AAAA,MAKpB,SAAAC,GAAqBC,EAAqV,GAAI,CAC5X,OAAOC,GAAwFJ,GAAsB,GAAIG,CAAO,CAClI,yQCaA,MAAME,EAASC,IAETC,EAAS,IAAM,CACnBF,EAAO,KAAK,SAAS,CAAA,EAGbG,GAAA,CACR,MAAO,GAAG,SAAS,EACnB,QAAS,IACT,oBAAqB,EAAA,CACtB,EAED,MAAMC,EAAUC,KACV,CAAE,KAAAC,CAAA,EAASC,EAAYH,CAAO,EAE9B,CAAE,mBAAAI,EAAoB,cAAAC,EAAe,eAAAC,EAAgB,YAAAC,CAAA,EACzDC,IAEIC,EAAuBT,EAAQ,cAAc,OAAO,EAUpDU,EARoB,IAAIC,GAC5BlB,GAAqB,CACnB,QAASgB,EACT,YAAa,aAAA,CACd,EACD,CAAE,yBAA0B,GAAG,2CAA2C,CAAE,CAAA,EAGvC,SAEjCG,IAAcC,EAAAC,GAAQ,OAAR,YAAAD,EAAc,SAAS,cAAaE,EAAAC,GAAG,OAAH,YAAAD,EAAS,SAAS,QACpE,CAAE,cAAAE,EAAe,WAAAC,CAAW,EAAIC,GAAc,EAC9CC,EAAoBC,EACxB,IAAM,CAACC,EAAa,IAAML,EAAc,OAASL,EAAA,EAG7CW,EAAsBC,EAAI,EAAK,EAC/BC,EAAoBJ,EAAS,IAAM,CACvC,MAAMK,EAAYC,EAAe,CAC/B,MAAO,wBACP,WAAY,GACZ,KAAM,QACN,KAAM,WAAA,CACP,EAEKC,EAAUD,EAAe,CAC7B,MAAO,cACP,WAAY,GACZ,KAAM,QACN,KAAM,YAAA,CACP,EAED,OAAOE,GAAK,EACV,GACE,mGACF,EACA,GAAG,QAAQ,EACXH,EACAE,CAAA,CACF,CACD,EAEKE,EAAmB,IAAM,CAC7B,GAAI,CAAAR,EAAgB,EAGpB,IAAIL,EAAc,MAAO,CACZC,IACX,MACF,CAKIN,IACFW,EAAoB,MAAQ,IAC9B,EAGI,CAAE,aAAAQ,GAAiBC"}