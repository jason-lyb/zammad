{"version":3,"file":"FieldAutoCompleteInputDialog-C-a_8s03.js","sources":["../../../../../app/frontend/apps/mobile/components/Form/fields/FieldAutoComplete/FieldAutoCompleteInputDialog.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useLazyQuery } from '@vue/apollo-composable'\nimport { refDebounced, watchOnce } from '@vueuse/core'\nimport gql from 'graphql-tag'\nimport { cloneDeep } from 'lodash-es'\nimport { computed, nextTick, onMounted, ref, toRef } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport useValue from '#shared/components/Form/composables/useValue.ts'\nimport type {\n  AutoCompleteOption,\n  AutoCompleteProps,\n  AutocompleteSelectValue,\n} from '#shared/components/Form/fields/FieldAutocomplete/types.ts'\nimport type { FormFieldContext } from '#shared/components/Form/types/field.ts'\nimport useSelectOptions from '#shared/composables/useSelectOptions.ts'\nimport { useTraverseOptions } from '#shared/composables/useTraverseOptions.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport CommonButton from '#mobile/components/CommonButton/CommonButton.vue'\nimport CommonDialog from '#mobile/components/CommonDialog/CommonDialog.vue'\nimport { closeDialog } from '#mobile/composables/useDialog.ts'\n\nimport FieldAutoCompleteOptionIcon from './FieldAutoCompleteOptionIcon.vue'\n\nimport type { FormKitNode } from '@formkit/core'\nimport type { NameNode, OperationDefinitionNode, SelectionNode } from 'graphql'\nimport type { ConcreteComponent, Ref } from 'vue'\n\nconst props = defineProps<{\n  context: FormFieldContext<AutoCompleteProps>\n  name: string\n  options: AutoCompleteOption[]\n  optionIconComponent?: ConcreteComponent | null\n  noCloseOnSelect?: boolean\n}>()\n\nconst contextReactive = toRef(props, 'context')\n\nconst { isCurrentValue } = useValue<AutocompleteSelectValue>(contextReactive)\n\nconst emit = defineEmits<{\n  'update-options': [AutoCompleteOption[]]\n  action: []\n}>()\n\nconst { sortedOptions, selectOption, appendedOptions } = useSelectOptions<\n  AutoCompleteOption[]\n>(toRef(props, 'options'), contextReactive)\n\nlet areLocalOptionsReplaced = false\n\nconst replacementLocalOptions: Ref<AutoCompleteOption[]> = ref(\n  cloneDeep(props.options),\n)\n\nconst filter = ref('')\n\nconst filterInput = ref(null)\n\nconst focusFirstTarget = () => {\n  const filterInputFormKit = filterInput.value as null | { node: FormKitNode }\n  if (!filterInputFormKit) return\n\n  const filterInputElement = document.getElementById(\n    filterInputFormKit.node.context?.id as string,\n  )\n  if (!filterInputElement) return\n\n  filterInputElement.focus()\n}\n\nconst clearFilter = () => {\n  filter.value = ''\n}\n\nonMounted(() => {\n  if (areLocalOptionsReplaced) {\n    replacementLocalOptions.value = [...props.options]\n  }\n\n  nextTick(() => focusFirstTarget())\n})\n\nconst close = () => {\n  if (props.context.multiple) {\n    emit('update-options', [...replacementLocalOptions.value])\n    replacementLocalOptions.value = []\n    areLocalOptionsReplaced = true\n  }\n\n  closeDialog(props.name)\n  clearFilter()\n}\n\nconst trimmedFilter = computed(() => filter.value.trim())\n\nconst debouncedFilter = refDebounced(\n  trimmedFilter,\n  props.context.debounceInterval ?? 500,\n)\n\nconst AutocompleteSearchDocument = gql`\n  ${props.context.gqlQuery}\n`\n\nconst additionalQueryParams = () => {\n  if (typeof props.context.additionalQueryParams === 'function') {\n    return props.context.additionalQueryParams()\n  }\n\n  return props.context.additionalQueryParams || {}\n}\n\nconst autocompleteQueryHandler = new QueryHandler(\n  useLazyQuery(\n    AutocompleteSearchDocument,\n    () => ({\n      input: {\n        query: debouncedFilter.value || props.context.defaultFilter || '',\n        limit: props.context.limit,\n        ...(additionalQueryParams() || {}),\n      },\n    }),\n    () => ({\n      enabled: !!(debouncedFilter.value || props.context.defaultFilter),\n      cachePolicy: 'no-cache', // Do not use cache, because we want always up-to-date results.\n    }),\n  ),\n)\n\nif (props.context.defaultFilter) {\n  autocompleteQueryHandler.load()\n} else {\n  watchOnce(\n    () => debouncedFilter.value,\n    (newValue) => {\n      if (!newValue.length) return\n      autocompleteQueryHandler.load()\n    },\n  )\n}\n\nconst autocompleteQueryResultKey = (\n  (AutocompleteSearchDocument.definitions[0] as OperationDefinitionNode)\n    .selectionSet.selections[0] as SelectionNode & { name: NameNode }\n).name.value\n\nconst autocompleteQueryResultOptions = computed(\n  () =>\n    autocompleteQueryHandler.result().value?.[\n      autocompleteQueryResultKey\n    ] as unknown as AutoCompleteOption[],\n)\n\nconst autocompleteOptions = computed(() => {\n  const result = cloneDeep(autocompleteQueryResultOptions.value) || []\n\n  const filterInputFormKit = filterInput.value as null | { node: FormKitNode }\n\n  if (\n    props.context.allowUnknownValues &&\n    filterInputFormKit &&\n    filterInputFormKit.node.context?.state.complete &&\n    !result.some((option) => option.value === trimmedFilter.value)\n  ) {\n    result.unshift({\n      value: trimmedFilter.value,\n      label: trimmedFilter.value,\n    })\n  }\n\n  return result\n})\n\nconst { sortedOptions: sortedAutocompleteOptions } = useSelectOptions(\n  autocompleteOptions,\n  toRef(props, 'context'),\n)\n\nconst select = (option: AutoCompleteOption) => {\n  selectOption(option)\n\n  if (props.context.multiple) {\n    // If the current value contains the selected option, make sure it's added to the replacement list\n    //   if it's not already there.\n    if (\n      isCurrentValue(option.value) &&\n      !replacementLocalOptions.value.some(\n        (replacementLocalOption) =>\n          replacementLocalOption.value === option.value,\n      )\n    ) {\n      replacementLocalOptions.value.push(option)\n    }\n\n    // Remove any extra options from the replacement list.\n    replacementLocalOptions.value = replacementLocalOptions.value.filter(\n      (replacementLocalOption) => isCurrentValue(replacementLocalOption.value),\n    )\n\n    if (!sortedOptions.value.some((elem) => elem.value === option.value)) {\n      appendedOptions.value.push(option)\n    }\n\n    appendedOptions.value = appendedOptions.value.filter((elem) =>\n      isCurrentValue(elem.value),\n    )\n\n    // Sort the replacement list according to the original order.\n    replacementLocalOptions.value.sort(\n      (a, b) =>\n        sortedOptions.value.findIndex((option) => option.value === a.value) -\n        sortedOptions.value.findIndex((option) => option.value === b.value),\n    )\n\n    return\n  }\n\n  emit('update-options', [option])\n\n  if (!props.noCloseOnSelect) {\n    close()\n  }\n}\n\nconst OptionIconComponent =\n  props.optionIconComponent ?? FieldAutoCompleteOptionIcon\n\nconst router = useRouter()\n\nconst executeAction = () => {\n  emit('action')\n  if (!props.context.action) return\n  router.push(props.context.action)\n}\n\nconst autocompleteList = ref<HTMLElement>()\n\nuseTraverseOptions(autocompleteList)\n</script>\n\n<template>\n  <CommonDialog\n    :name=\"name\"\n    :label=\"context.label\"\n    class=\"field-autocomplete-dialog\"\n    @close=\"close\"\n  >\n    <template v-if=\"context.action || context.onActionClick\" #before-label>\n      <CommonButton\n        class=\"grow\"\n        transparent-background\n        @click=\"close\"\n        @keypress.space=\"close\"\n      >\n        {{ $t('Cancel') }}\n      </CommonButton>\n    </template>\n    <template #after-label>\n      <button\n        v-if=\"context.action || context.onActionClick\"\n        tabindex=\"0\"\n        :aria-label=\"context.actionLabel\"\n        @click=\"executeAction\"\n        @keypress.space=\"executeAction\"\n      >\n        <CommonIcon\n          :name=\"context.actionIcon ? context.actionIcon : 'external-link'\"\n          class=\"cursor-pointer text-white\"\n          size=\"base\"\n        />\n      </button>\n      <CommonButton\n        v-else\n        class=\"grow\"\n        variant=\"primary\"\n        transparent-background\n        @click=\"close()\"\n        @keypress.space=\"close()\"\n      >\n        {{ $t('Done') }}\n      </CommonButton>\n    </template>\n    <div class=\"w-full p-4\">\n      <FormKit\n        ref=\"filterInput\"\n        v-model=\"filter\"\n        :delay=\"context.node.props.delay\"\n        :placeholder=\"context.filterInputPlaceholder\"\n        :validation=\"context.filterInputValidation\"\n        type=\"search\"\n        validation-visibility=\"live\"\n        role=\"searchbox\"\n      />\n    </div>\n    <div\n      v-if=\"filter ? autocompleteOptions.length : options.length\"\n      ref=\"autocompleteList\"\n      :aria-label=\"$t('Selectâ€¦')\"\n      class=\"flex grow flex-col items-start self-stretch overflow-y-auto\"\n      role=\"listbox\"\n      :aria-multiselectable=\"context.multiple\"\n    >\n      <div\n        v-for=\"(option, index) in filter || context.defaultFilter\n          ? sortedAutocompleteOptions\n          : sortedOptions\"\n        :key=\"String(option.value)\"\n        :class=\"{\n          'pointer-events-none': option.disabled,\n        }\"\n        aria-setsize=\"-1\"\n        :aria-posinset=\"options.findIndex((o) => o.value === option.value) + 1\"\n        tabindex=\"0\"\n        :aria-selected=\"isCurrentValue(option.value)\"\n        class=\"focus:bg-blue-highlight relative flex h-[58px] cursor-pointer items-center self-stretch px-6 py-5 text-base leading-[19px] text-white focus:outline-hidden\"\n        role=\"option\"\n        @click=\"select(option as AutoCompleteOption)\"\n        @keyup.space=\"select(option as AutoCompleteOption)\"\n      >\n        <div\n          v-if=\"index !== 0\"\n          :class=\"{\n            'ltr:left-4 rtl:right-4': !context.multiple && !option.icon,\n            'ltr:left-[60px] rtl:right-[60px]':\n              context.multiple && !option.icon,\n            'ltr:left-[72px] rtl:right-[72px]':\n              !context.multiple && option.icon,\n            'ltr:left-[108px] rtl:right-[108px]':\n              context.multiple && option.icon,\n          }\"\n          class=\"absolute top-0 h-0 border-t border-white/10 ltr:right-4 rtl:left-4\"\n        />\n        <CommonIcon\n          v-if=\"context.multiple\"\n          :class=\"{\n            '!text-white': isCurrentValue(option.value),\n            'opacity-30': option.disabled,\n          }\"\n          :name=\"\n            isCurrentValue(option.value) ? 'check-box-yes' : 'check-box-no'\n          \"\n          class=\"text-white/50 ltr:mr-3 rtl:ml-3\"\n          size=\"base\"\n          decorative\n        />\n        <OptionIconComponent :option=\"option\" />\n        <div\n          v-if=\"(option as AutoCompleteOption).heading\"\n          class=\"flex grow flex-col overflow-hidden\"\n        >\n          <span\n            :class=\"{\n              'opacity-30': option.disabled,\n            }\"\n            class=\"flex-1 truncate text-sm text-gray-100\"\n          >\n            <span>{{ (option as AutoCompleteOption).heading }}</span>\n          </span>\n          <span\n            :class=\"{\n              'opacity-30': option.disabled,\n            }\"\n            class=\"grow truncate text-lg leading-[22px] font-semibold\"\n          >\n            {{ option.label || option.value }}\n          </span>\n        </div>\n        <span\n          v-else\n          :class=\"{\n            'font-semibold !text-white': isCurrentValue(option.value),\n            'opacity-30': option.disabled,\n          }\"\n          class=\"grow truncate text-white/80\"\n        >\n          {{ option.label || option.value }}\n        </span>\n        <CommonIcon\n          v-if=\"!context.multiple && isCurrentValue(option.value)\"\n          :class=\"{\n            'opacity-30': option.disabled,\n          }\"\n          size=\"tiny\"\n          name=\"check\"\n          decorative\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"\n        debouncedFilter &&\n        autocompleteQueryResultOptions &&\n        !autocompleteOptions.length\n      \"\n      class=\"relative flex h-[58px] items-center justify-center self-stretch px-4 py-5 text-base leading-[19px] text-white/50\"\n      role=\"alert\"\n    >\n      {{ $t(context.dialogNotFoundMessage || __('No results found')) }}\n    </div>\n    <div\n      v-else-if=\"!debouncedFilter && !options.length\"\n      class=\"relative flex h-[58px] items-center justify-center self-stretch px-4 py-5 text-base leading-[19px] text-white/50\"\n      role=\"alert\"\n    >\n      {{ $t(context.dialogEmptyMessage || __('Start typing to searchâ€¦')) }}\n    </div>\n  </CommonDialog>\n</template>\n\n<style>\n.field-autocomplete-dialog {\n  .formkit-wrapper {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n</style>\n"],"names":["props","__props","contextReactive","toRef","isCurrentValue","useValue","emit","__emit","sortedOptions","selectOption","appendedOptions","useSelectOptions","areLocalOptionsReplaced","replacementLocalOptions","ref","cloneDeep","filter","filterInput","focusFirstTarget","filterInputFormKit","filterInputElement","_a","clearFilter","onMounted","nextTick","close","closeDialog","trimmedFilter","computed","debouncedFilter","refDebounced","AutocompleteSearchDocument","gql","additionalQueryParams","autocompleteQueryHandler","QueryHandler","useLazyQuery","watchOnce","newValue","autocompleteQueryResultKey","autocompleteQueryResultOptions","autocompleteOptions","result","option","sortedAutocompleteOptions","select","replacementLocalOption","elem","b","OptionIconComponent","FieldAutoCompleteOptionIcon","router","useRouter","executeAction","autocompleteList","useTraverseOptions"],"mappings":"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"}