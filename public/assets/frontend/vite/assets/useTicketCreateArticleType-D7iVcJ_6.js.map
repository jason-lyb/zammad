{"version":3,"file":"useTicketCreateArticleType-D7iVcJ_6.js","sources":["../../../../../app/frontend/shared/entities/ticket/composables/useTicketCreateArticleType.ts"],"sourcesContent":["// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed } from 'vue'\n\nimport type { FormFieldAdditionalProps } from '#shared/components/Form/types.ts'\nimport { useAppName } from '#shared/composables/useAppName.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport { TicketCreateArticleType } from '../types.ts'\n\nexport const ticketCreateArticleType = {\n  [TicketCreateArticleType.PhoneIn]: {\n    icon: 'phone-in',\n    label: __('Received Call'),\n    title: __('Received Call: %s'),\n    sender: 'Customer',\n    type: 'phone',\n  },\n  [TicketCreateArticleType.PhoneOut]: {\n    icon: 'phone-out',\n    label: __('Outbound Call'),\n    title: __('Outbound Call: %s'),\n    sender: 'Agent',\n    type: 'phone',\n  },\n  [TicketCreateArticleType.EmailOut]: {\n    icon: 'mail-out',\n    label: __('Send Email'),\n    title: __('Send Email: %s'),\n    sender: 'Agent',\n    type: 'email',\n  },\n}\n\nexport const useTicketCreateArticleType = (\n  additionalProps: FormFieldAdditionalProps = {},\n) => {\n  const application = useApplicationStore()\n\n  const availableTypes = computed(() => {\n    let configuredAvailableTypes =\n      (application.config.ui_ticket_create_available_types as\n        | TicketCreateArticleType[]\n        | TicketCreateArticleType) || []\n\n    if (!Array.isArray(configuredAvailableTypes)) {\n      configuredAvailableTypes = [configuredAvailableTypes]\n    }\n\n    return configuredAvailableTypes\n  })\n\n  const options = computed(() => {\n    return availableTypes.value.map((availableType) => ({\n      label: ticketCreateArticleType[availableType].label,\n      value: availableType,\n      icon: ticketCreateArticleType[availableType].icon,\n    }))\n  })\n\n  const defaultTicketCreateArticleType = application.config\n    .ui_ticket_create_default_type as TicketCreateArticleType\n\n  const ticketArticleSenderTypeField = {\n    name: 'articleSenderType',\n    type: useAppName() === 'mobile' ? 'radio' : 'toggleButtons',\n    required: true,\n    value: availableTypes.value.includes(defaultTicketCreateArticleType)\n      ? defaultTicketCreateArticleType\n      : availableTypes.value[0],\n    props: {\n      options,\n      ...additionalProps,\n    },\n  }\n\n  return {\n    ticketCreateArticleType,\n    ticketArticleSenderTypeField,\n    defaultTicketCreateArticleType,\n  }\n}\n"],"names":["ticketCreateArticleType","TicketCreateArticleType","useTicketCreateArticleType","additionalProps","application","useApplicationStore","availableTypes","computed","configuredAvailableTypes","options","availableType","defaultTicketCreateArticleType","ticketArticleSenderTypeField","useAppName"],"mappings":"iLAUO,MAAMA,EAA0B,CACrC,CAACC,EAAwB,OAAO,EAAG,CACjC,KAAM,WACN,MAAO,GAAG,eAAe,EACzB,MAAO,GAAG,mBAAmB,EAC7B,OAAQ,WACR,KAAM,OACR,EACA,CAACA,EAAwB,QAAQ,EAAG,CAClC,KAAM,YACN,MAAO,GAAG,eAAe,EACzB,MAAO,GAAG,mBAAmB,EAC7B,OAAQ,QACR,KAAM,OACR,EACA,CAACA,EAAwB,QAAQ,EAAG,CAClC,KAAM,WACN,MAAO,GAAG,YAAY,EACtB,MAAO,GAAG,gBAAgB,EAC1B,OAAQ,QACR,KAAM,OACR,CACF,EAEaC,EAA6B,CACxCC,EAA4C,KACzC,CACH,MAAMC,EAAcC,IAEdC,EAAiBC,EAAS,IAAM,CACpC,IAAIC,EACDJ,EAAY,OAAO,kCAEY,CAAA,EAElC,OAAK,MAAM,QAAQI,CAAwB,IACzCA,EAA2B,CAACA,CAAwB,GAG/CA,CAAA,CACR,EAEKC,EAAUF,EAAS,IAChBD,EAAe,MAAM,IAAKI,IAAmB,CAClD,MAAOV,EAAwBU,CAAa,EAAE,MAC9C,MAAOA,EACP,KAAMV,EAAwBU,CAAa,EAAE,IAC7C,EAAA,CACH,EAEKC,EAAiCP,EAAY,OAChD,8BAEGQ,EAA+B,CACnC,KAAM,oBACN,KAAMC,EAAA,IAAiB,SAAW,QAAU,gBAC5C,SAAU,GACV,MAAOP,EAAe,MAAM,SAASK,CAA8B,EAC/DA,EACAL,EAAe,MAAM,CAAC,EAC1B,MAAO,CACL,QAAAG,EACA,GAAGN,CACL,CAAA,EAGK,MAAA,CACL,wBAAAH,EACA,6BAAAY,EACA,+BAAAD,CAAA,CAEJ"}