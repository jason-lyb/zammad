{"version":3,"mappings":";0xCAuBA,KAAM,CAAE,OAAAA,EAAQ,YAAAC,EAAa,iBAAAC,GAAqBC,EAAqB,EAEjEC,EAAgBH,EAAY,UAE5B,CAAE,cAAAI,GAAkBC,IAEpBC,EAAgBC,EAAU,CAC9B,KAAM,wBACN,UAAW,IACTC,EAAA,WAAO,mCAA2D,iFACrE,EAEKC,EAAc,IACXH,EAAc,KAAK,CACxB,KAAMA,EAAc,KACpB,OAAAP,CAAA,CACD,EAGGW,EAAQC,EAA+B,IACpCC,EACJ,OAAQC,GAAW,OACZ,MAAAC,GAAcC,EAAAF,EAAO,MAAM,OAAb,YAAAE,EAAmB,mBACvC,OAAID,GAAe,CAACV,EAAcU,CAAW,EACpC,GAEF,CAACD,EAAO,WAAaA,EAAO,UAAUd,EAAO,KAAK,EAC1D,EACA,IAAKiB,IACG,CACL,MAAOA,EAAQ,MACf,MAAOA,EAAQ,MAAM,MAExB,CACJ,EAEK,CAAE,aAAAC,EAAc,cAAAC,CAAc,EAAIC,EAAgB,EAElDC,EAAQC,IACRC,EAASC","names":["ticket","ticketQuery","refetchingStatus","useTicketInformation","loadingTicket","hasPermission","useSessionStore","actionsDialog","useDialog","__vitePreload","showActions","types","computed","ticketInformationPlugins","plugin","permissions","_a","plugins","stickyStyles","headerElement","useStickyHeader","route","useRoute","router","useRouter"],"ignoreList":[],"sources":["../../../../../app/frontend/apps/mobile/pages/ticket/views/TicketInformation/TicketInformationView.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nimport { useStickyHeader } from '#shared/composables/useStickyHeader.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport CommonButtonGroup from '#mobile/components/CommonButtonGroup/CommonButtonGroup.vue'\nimport type { CommonButtonOption } from '#mobile/components/CommonButtonGroup/types.ts'\nimport CommonLoader from '#mobile/components/CommonLoader/CommonLoader.vue'\nimport LayoutHeader from '#mobile/components/layout/LayoutHeader.vue'\nimport { useDialog } from '#mobile/composables/useDialog.ts'\n\nimport { useTicketInformation } from '../../composable/useTicketInformation.ts'\n\nimport { ticketInformationPlugins } from './plugins/index.ts'\n\ndefineProps<{\n  internalId: string\n}>()\n\nconst { ticket, ticketQuery, refetchingStatus } = useTicketInformation()\n\nconst loadingTicket = ticketQuery.loading()\n\nconst { hasPermission } = useSessionStore()\n\nconst actionsDialog = useDialog({\n  name: 'ticket-actions-dialog',\n  component: () =>\n    import('../../components/TicketDetailView/TicketActionsDialog.vue'),\n})\n\nconst showActions = () => {\n  return actionsDialog.open({\n    name: actionsDialog.name,\n    ticket,\n  })\n}\n\nconst types = computed<CommonButtonOption[]>(() => {\n  return ticketInformationPlugins\n    .filter((plugin) => {\n      const permissions = plugin.route.meta?.requiredPermission\n      if (permissions && !hasPermission(permissions)) {\n        return false\n      }\n      return !plugin.condition || plugin.condition(ticket.value)\n    })\n    .map((plugins) => {\n      return {\n        label: plugins.label,\n        value: plugins.route.name,\n      }\n    })\n})\n\nconst { stickyStyles, headerElement } = useStickyHeader()\n\nconst route = useRoute()\nconst router = useRouter()\n</script>\n\n<template>\n  <LayoutHeader\n    ref=\"headerElement\"\n    :refetch=\"refetchingStatus\"\n    :back-title=\"`#${ticket?.number}`\"\n    :title=\"$t('Ticket information')\"\n    :back-url=\"`/tickets/${internalId}`\"\n    :style=\"stickyStyles.header\"\n  >\n    <template #after>\n      <button\n        v-if=\"hasPermission('ticket.agent')\"\n        type=\"button\"\n        :aria-label=\"$t('Show ticket actions')\"\n        @click=\"showActions()\"\n      >\n        <CommonIcon name=\"more\" size=\"base\" decorative />\n      </button>\n    </template>\n  </LayoutHeader>\n  <div class=\"flex p-4\" :style=\"stickyStyles.body\">\n    <h1\n      class=\"line-clamp-3 flex flex-1 items-center text-xl leading-7 font-bold break-words\"\n    >\n      <CommonLoader position=\"left\" :loading=\"loadingTicket\">\n        {{ ticket?.title }}\n      </CommonLoader>\n    </h1>\n  </div>\n  <CommonButtonGroup\n    v-if=\"types.length > 1\"\n    class=\"px-4 pb-4\"\n    as=\"tabs\"\n    controls=\"route-ticket-information-tabpanel\"\n    :options=\"types\"\n    :model-value=\"route.name as string\"\n    @update:model-value=\"router.replace({ name: $event as string })\"\n  />\n  <div\n    id=\"route-ticket-information-tabpanel\"\n    role=\"tabpanel\"\n    aria-live=\"polite\"\n    class=\"px-4\"\n  >\n    <RouterView />\n  </div>\n</template>\n"],"file":"assets/TicketInformationView-FD223UZQ.js"}