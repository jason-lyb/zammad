{"version":3,"file":"AdminPasswordAuth-DyPwGkv9.js","sources":["../../../../../app/frontend/apps/desktop/pages/authentication/graphql/mutations/adminPasswordAuthSend.api.ts","../../../../../app/frontend/apps/desktop/pages/authentication/views/AdminPasswordAuth.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const AdminPasswordAuthSendDocument = gql`\n    mutation adminPasswordAuthSend($login: String!) {\n  adminPasswordAuthSend(login: $login) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useAdminPasswordAuthSendMutation(options: VueApolloComposable.UseMutationOptions<Types.AdminPasswordAuthSendMutation, Types.AdminPasswordAuthSendMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.AdminPasswordAuthSendMutation, Types.AdminPasswordAuthSendMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.AdminPasswordAuthSendMutation, Types.AdminPasswordAuthSendMutationVariables>(AdminPasswordAuthSendDocument, options);\n}\nexport type AdminPasswordAuthSendMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.AdminPasswordAuthSendMutation, Types.AdminPasswordAuthSendMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { useThirdPartyAuthentication } from '#shared/composables/authentication/useThirdPartyAuthentication.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport LayoutPublicPage from '#desktop/components/layout/LayoutPublicPage/LayoutPublicPage.vue'\n\nimport { useAdminPasswordAuthSendMutation } from '../graphql/mutations/adminPasswordAuthSend.api.ts'\n\nimport type { AdminPasswordAuthRequestData } from '../types/admin-password-auth'\n\ndefineOptions({\n  beforeRouteEnter(to) {\n    const application = useApplicationStore()\n    const { hasEnabledProviders } = useThirdPartyAuthentication()\n\n    if (application.config.user_show_password_login) {\n      return to.redirectedFrom ? false : '/'\n    }\n\n    if (!hasEnabledProviders.value) {\n      return to.redirectedFrom ? false : '/'\n    }\n\n    return true\n  },\n})\n\nconst router = useRouter()\n\nconst adminPasswordAuthRequestSchema = [\n  {\n    name: 'login',\n    type: 'text',\n    label: __('Username / Email'),\n    required: true,\n  },\n]\n\nconst { form, isDisabled } = useForm()\n\nconst requestSent = ref(false)\nconst adminPasswordAuthError = ref('')\n\nconst pageTitle = computed(() => {\n  if (requestSent.value) {\n    return __(\n      'Admin password login instructions were sent to your email address.',\n    )\n  }\n\n  return __('Request password login for admin?')\n})\n\nconst send = (data: AdminPasswordAuthRequestData) => {\n  const sendAdminPasswordAuth = new MutationHandler(\n    useAdminPasswordAuthSendMutation({\n      variables: { login: data.login },\n    }),\n    {\n      errorShowNotification: false,\n    },\n  )\n\n  sendAdminPasswordAuth\n    .send()\n    .then(() => {\n      requestSent.value = true\n    })\n    .catch(() => {\n      adminPasswordAuthError.value = __(\n        'The admin password auth email could not be sent.',\n      )\n    })\n}\n\nconst goToLogin = () => {\n  router.replace('/login')\n}\n\nconst retry = () => {\n  requestSent.value = false\n}\n</script>\n\n<template>\n  <LayoutPublicPage box-size=\"medium\" :show-logo=\"false\" :title=\"pageTitle\">\n    <CommonAlert v-if=\"adminPasswordAuthError\" variant=\"danger\">{{\n      $t(adminPasswordAuthError)\n    }}</CommonAlert>\n\n    <Form\n      v-if=\"!requestSent\"\n      id=\"admin-password-auth\"\n      ref=\"form\"\n      form-class=\"mb-2.5\"\n      :schema=\"adminPasswordAuthRequestSchema\"\n      @submit=\"send($event as FormSubmitData<AdminPasswordAuthRequestData>)\"\n    />\n\n    <CommonLabel v-if=\"requestSent\">\n      {{\n        $t(\n          \"If you don't receive instructions within a minute or two, check your email's spam and junk filters, or try resending your request.\",\n        )\n      }}\n    </CommonLabel>\n\n    <template #boxActions>\n      <CommonButton\n        variant=\"secondary\"\n        size=\"medium\"\n        :disabled=\"isDisabled\"\n        @click=\"goToLogin()\"\n      >\n        {{ $t('Cancel & Go Back') }}\n      </CommonButton>\n\n      <CommonButton\n        v-if=\"!requestSent\"\n        variant=\"submit\"\n        type=\"submit\"\n        size=\"medium\"\n        form=\"admin-password-auth\"\n        :disabled=\"isDisabled\"\n      >\n        {{ $t('Submit') }}\n      </CommonButton>\n\n      <CommonButton v-else variant=\"submit\" size=\"medium\" @click=\"retry()\">\n        {{ $t('Retry') }}\n      </CommonButton>\n    </template>\n  </LayoutPublicPage>\n</template>\n"],"names":["AdminPasswordAuthSendDocument","gql","ErrorsFragmentDoc","useAdminPasswordAuthSendMutation","options","VueApolloComposable.useMutation","router","useRouter","adminPasswordAuthRequestSchema","form","isDisabled","useForm","requestSent","ref","adminPasswordAuthError","pageTitle","computed","send","data","MutationHandler","goToLogin","retry"],"mappings":"ozCAQO,MAAMA,EAAgCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASvCC,CAAiB,GACP,SAAAC,EAAiCC,EAAmR,GAAI,CAC/T,OAAAC,EAAmHL,EAA+BI,CAAO,CAClK,4LCiBA,MAAME,EAASC,IAETC,EAAiC,CACrC,CACE,KAAM,QACN,KAAM,OACN,MAAO,GAAG,kBAAkB,EAC5B,SAAU,EACZ,CAAA,EAGI,CAAE,KAAAC,EAAM,WAAAC,CAAW,EAAIC,EAAQ,EAE/BC,EAAcC,EAAI,EAAK,EACvBC,EAAyBD,EAAI,EAAE,EAE/BE,EAAYC,EAAS,IACrBJ,EAAY,MACP,GACL,oEAAA,EAIG,GAAG,mCAAmC,CAC9C,EAEKK,EAAQC,GAAuC,CACrB,IAAIC,EAChChB,EAAiC,CAC/B,UAAW,CAAE,MAAOe,EAAK,KAAM,CAAA,CAChC,EACD,CACE,sBAAuB,EACzB,CAAA,EAIC,OACA,KAAK,IAAM,CACVN,EAAY,MAAQ,EAAA,CACrB,EACA,MAAM,IAAM,CACXE,EAAuB,MAAQ,GAC7B,kDAAA,CACF,CACD,CAAA,EAGCM,EAAY,IAAM,CACtBd,EAAO,QAAQ,QAAQ,CAAA,EAGnBe,EAAQ,IAAM,CAClBT,EAAY,MAAQ,EAAA"}