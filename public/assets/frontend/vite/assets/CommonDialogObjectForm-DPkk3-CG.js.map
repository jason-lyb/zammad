{"version":3,"file":"CommonDialogObjectForm-DPkk3-CG.js","sources":["../../../../../app/frontend/apps/mobile/components/CommonDialogObjectForm/CommonDialogObjectForm.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport Form from '#shared/components/Form/Form.vue'\nimport type {\n  FormFieldValue,\n  FormSchemaField,\n  FormSchemaNode,\n  FormSubmitData,\n} from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport { useObjectAttributeFormData } from '#shared/entities/object-attributes/composables/useObjectAttributeFormData.ts'\nimport { useObjectAttributes } from '#shared/entities/object-attributes/composables/useObjectAttributes.ts'\nimport type {\n  EnumFormUpdaterId,\n  EnumObjectManagerObjects,\n  ObjectAttributeValue,\n} from '#shared/graphql/types.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport type { OperationMutationFunction } from '#shared/types/server/apollo/handler.ts'\nimport type { ObjectLike } from '#shared/types/utils.ts'\n\nimport CommonButton from '#mobile/components/CommonButton/CommonButton.vue'\nimport CommonDialog from '#mobile/components/CommonDialog/CommonDialog.vue'\nimport { closeDialog } from '#mobile/composables/useDialog.ts'\n\nexport interface Props {\n  name: string\n  object?: ObjectLike\n  title?: string\n  type: EnumObjectManagerObjects\n  formUpdaterId?: EnumFormUpdaterId\n  formChangeFields?: Record<string, Partial<FormSchemaField>>\n  errorNotificationMessage?: string\n  mutation: OperationMutationFunction\n  schema: FormSchemaNode[]\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<{\n  success: [data: unknown]\n  error: []\n  'changed-field': [\n    fieldName: string,\n    newValue: FormFieldValue,\n    oldValue: FormFieldValue,\n  ]\n}>()\n\nconst updateMutation = new MutationHandler(props.mutation({}), {\n  errorNotificationMessage: props.errorNotificationMessage,\n})\nconst { form, isDirty, canSubmit } = useForm()\n\nconst objectAtrributes: Record<string, string> =\n  props.object?.objectAttributeValues?.reduce(\n    (acc: Record<string, string>, cur: ObjectAttributeValue) => {\n      acc[cur.attribute.name] = cur.value\n      return acc\n    },\n    {},\n  ) || {}\n\nconst initialFlatObject = {\n  ...props.object,\n  ...objectAtrributes,\n}\n\nconst { attributesLookup: objectAttributesLookup } = useObjectAttributes(\n  props.type,\n)\n\nconst { waitForConfirmation } = useConfirmation()\n\nconst cancelDialog = async () => {\n  if (isDirty.value) {\n    const confirmed = await waitForConfirmation(\n      __('Are you sure? You have unsaved changes that will get lost.'),\n      {\n        buttonLabel: __('Discard changes'),\n        buttonVariant: 'danger',\n      },\n    )\n\n    if (!confirmed) return\n  }\n\n  closeDialog(props.name)\n}\n\nconst changedFormField = (\n  fieldName: string,\n  newValue: FormFieldValue,\n  oldValue: FormFieldValue,\n) => {\n  emit('changed-field', fieldName, newValue, oldValue)\n}\n\nconst saveObject = async (formData: FormSubmitData) => {\n  const { internalObjectAttributeValues, additionalObjectAttributeValues } =\n    useObjectAttributeFormData(objectAttributesLookup.value, formData)\n\n  const result = await updateMutation.send({\n    id: props.object?.id,\n    input: {\n      ...internalObjectAttributeValues,\n      objectAttributeValues: additionalObjectAttributeValues,\n    },\n  })\n\n  if (result) {\n    emit('success', result)\n    closeDialog(props.name)\n  } else {\n    emit('error')\n  }\n}\n</script>\n\n<template>\n  <CommonDialog class=\"w-full\" no-autofocus :name=\"name\">\n    <template #before-label>\n      <CommonButton transparent-background @click=\"cancelDialog\">\n        {{ $t('Cancel') }}\n      </CommonButton>\n    </template>\n    <template #after-label>\n      <CommonButton\n        :form=\"name\"\n        :disabled=\"!canSubmit\"\n        variant=\"primary\"\n        type=\"submit\"\n        transparent-background\n      >\n        {{ $t('Save') }}\n      </CommonButton>\n    </template>\n    <Form\n      :id=\"name\"\n      ref=\"form\"\n      class=\"w-full p-4\"\n      should-autofocus\n      :schema=\"schema\"\n      :initial-entity-object=\"initialFlatObject\"\n      :change-fields=\"formChangeFields\"\n      use-object-attributes\n      :form-updater-id=\"formUpdaterId\"\n      @changed=\"changedFormField\"\n      @submit=\"saveObject\"\n    />\n  </CommonDialog>\n</template>\n"],"names":["props","__props","emit","__emit","updateMutation","MutationHandler","form","isDirty","canSubmit","useForm","objectAtrributes","_b","_a","acc","cur","initialFlatObject","objectAttributesLookup","useObjectAttributes","waitForConfirmation","useConfirmation","cancelDialog","closeDialog","changedFormField","fieldName","newValue","oldValue","saveObject","formData","internalObjectAttributeValues","additionalObjectAttributeValues","useObjectAttributeFormData","result"],"mappings":"ulCAuCA,MAAMA,EAAQC,EACRC,EAAOC,EAUPC,EAAiB,IAAIC,EAAgBL,EAAM,SAAS,CAAE,CAAA,EAAG,CAC7D,yBAA0BA,EAAM,wBAAA,CACjC,EACK,CAAE,KAAAM,EAAM,QAAAC,EAAS,UAAAC,GAAcC,EAAQ,EAEvCC,IACJC,GAAAC,EAAAZ,EAAM,SAAN,YAAAY,EAAc,wBAAd,YAAAD,EAAqC,OACnC,CAACE,EAA6BC,KAC5BD,EAAIC,EAAI,UAAU,IAAI,EAAIA,EAAI,MACvBD,GAET,CAAC,KACE,GAEDE,EAAoB,CACxB,GAAGf,EAAM,OACT,GAAGU,CAAA,EAGC,CAAE,iBAAkBM,CAAA,EAA2BC,EACnDjB,EAAM,IAAA,EAGF,CAAE,oBAAAkB,GAAwBC,IAE1BC,EAAe,SAAY,CAC3Bb,EAAQ,OASN,CARc,MAAMW,EACtB,GAAG,4DAA4D,EAC/D,CACE,YAAa,GAAG,iBAAiB,EACjC,cAAe,QACjB,CAAA,GAMJG,EAAYrB,EAAM,IAAI,CAAA,EAGlBsB,EAAmB,CACvBC,EACAC,EACAC,IACG,CACEvB,EAAA,gBAAiBqB,EAAWC,EAAUC,CAAQ,CAAA,EAG/CC,EAAa,MAAOC,GAA6B,OACrD,KAAM,CAAE,8BAAAC,EAA+B,gCAAAC,GACrCC,EAA2Bd,EAAuB,MAAOW,CAAQ,EAE7DI,EAAS,MAAM3B,EAAe,KAAK,CACvC,IAAIQ,EAAAZ,EAAM,SAAN,YAAAY,EAAc,GAClB,MAAO,CACL,GAAGgB,EACH,sBAAuBC,CACzB,CAAA,CACD,EAEGE,GACF7B,EAAK,UAAW6B,CAAM,EACtBV,EAAYrB,EAAM,IAAI,GAEtBE,EAAK,OAAO,CACd"}