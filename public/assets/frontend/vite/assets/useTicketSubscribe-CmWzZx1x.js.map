{"version":3,"file":"useTicketSubscribe-CmWzZx1x.js","sources":["../../../../../app/frontend/shared/entities/ticket/graphql/mutations/subscribe.api.ts","../../../../../app/frontend/shared/entities/ticket/graphql/mutations/unsubscribe.api.ts","../../../../../app/frontend/shared/entities/ticket/composables/useTicketSubscribe.ts"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const MentionSubscribeDocument = gql`\n    mutation mentionSubscribe($ticketId: ID!) {\n  mentionSubscribe(objectId: $ticketId) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useMentionSubscribeMutation(options: VueApolloComposable.UseMutationOptions<Types.MentionSubscribeMutation, Types.MentionSubscribeMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.MentionSubscribeMutation, Types.MentionSubscribeMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.MentionSubscribeMutation, Types.MentionSubscribeMutationVariables>(MentionSubscribeDocument, options);\n}\nexport type MentionSubscribeMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.MentionSubscribeMutation, Types.MentionSubscribeMutationVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const MentionUnsubscribeDocument = gql`\n    mutation mentionUnsubscribe($ticketId: ID!) {\n  mentionUnsubscribe(objectId: $ticketId) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useMentionUnsubscribeMutation(options: VueApolloComposable.UseMutationOptions<Types.MentionUnsubscribeMutation, Types.MentionUnsubscribeMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.MentionUnsubscribeMutation, Types.MentionUnsubscribeMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.MentionUnsubscribeMutation, Types.MentionUnsubscribeMutationVariables>(MentionUnsubscribeDocument, options);\n}\nexport type MentionUnsubscribeMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.MentionUnsubscribeMutation, Types.MentionUnsubscribeMutationVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { keyBy } from 'lodash-es'\nimport { computed } from 'vue'\n\nimport { useTicketView } from '#shared/entities/ticket/composables/useTicketView.ts'\nimport { useMentionSubscribeMutation } from '#shared/entities/ticket/graphql/mutations/subscribe.api.ts'\nimport { useMentionUnsubscribeMutation } from '#shared/entities/ticket/graphql/mutations/unsubscribe.api.ts'\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\nimport type { TicketQuery } from '#shared/graphql/types.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport type { Ref } from 'vue'\n\nexport const useTicketSubscribe = (ticket: Ref<TicketById | undefined>) => {\n  const { isTicketAgent } = useTicketView(ticket)\n  const canManageSubscription = computed(() => isTicketAgent.value)\n\n  const session = useSessionStore()\n\n  const createTicketCacheUpdater = (subscribed: boolean) => {\n    return (previousQuery: Record<string, unknown>) => {\n      const prev = previousQuery as TicketQuery\n      if (!ticket.value || !prev || prev.ticket?.id !== ticket.value.id) {\n        return prev\n      }\n      return {\n        ticket: {\n          ...prev.ticket,\n          subscribed,\n        },\n      }\n    }\n  }\n\n  const subscribeHandler = new MutationHandler(\n    useMentionSubscribeMutation({\n      updateQueries: {\n        ticket: createTicketCacheUpdater(true),\n      },\n    }),\n  )\n  const unsubscribeMutation = new MutationHandler(\n    useMentionUnsubscribeMutation({\n      updateQueries: {\n        ticket: createTicketCacheUpdater(false),\n      },\n    }),\n  )\n\n  const isSubscriptionLoading = computed(() => {\n    return (\n      subscribeHandler.loading().value || unsubscribeMutation.loading().value\n    )\n  })\n\n  const subscribe = async (ticketId: string) => {\n    const result = await subscribeHandler.send({ ticketId })\n    return !!result?.mentionSubscribe?.success\n  }\n  const unsubscribe = async (ticketId: string) => {\n    const result = await unsubscribeMutation.send({ ticketId })\n    return !!result?.mentionUnsubscribe?.success\n  }\n\n  const toggleSubscribe = async () => {\n    if (!ticket.value || isSubscriptionLoading.value) return false\n    const { id, subscribed } = ticket.value\n\n    if (!subscribed) {\n      return subscribe(id)\n    }\n    return unsubscribe(id)\n  }\n\n  const isSubscribed = computed(() => !!ticket.value?.subscribed)\n\n  const subscribers = computed(\n    () =>\n      ticket.value?.mentions?.edges\n        ?.filter(({ node }) => node.user.active)\n        .map(({ node }) => ({\n          user: node.user,\n          access: node.userTicketAccess,\n        })) || [],\n  )\n\n  const subscribersWithoutMe = computed(\n    () =>\n      ticket.value?.mentions?.edges\n        ?.filter(({ node }) => node.user.id !== session.userId)\n        .map(({ node }) => node.user) || [],\n  )\n\n  const subscribersAccessLookup = computed(() =>\n    keyBy(\n      ticket.value?.mentions?.edges\n        ?.filter(({ node }) => node.user.id !== session.userId)\n        .map(({ node }) => ({\n          userId: node.user.id,\n          access: node.userTicketAccess,\n        })) || [],\n      'userId',\n    ),\n  )\n\n  const hasMe = computed(() => {\n    if (!ticket.value?.mentions) return false\n\n    return ticket.value.mentions.edges.some(\n      ({ node }) => node.user.id === session.userId,\n    )\n  })\n\n  const totalSubscribers = computed(() => {\n    if (!ticket.value?.mentions) return 0\n\n    return ticket.value.mentions.totalCount\n  })\n\n  const totalSubscribersWithoutMe = computed(() => {\n    if (!ticket.value?.mentions) return 0\n\n    // -1 for current user, who is shown as toggler\n    return ticket.value.mentions.totalCount - (hasMe.value ? 1 : 0)\n  })\n\n  return {\n    isSubscriptionLoading,\n    isSubscribed,\n    toggleSubscribe,\n    canManageSubscription,\n    subscribers,\n    totalSubscribers,\n    subscribersWithoutMe,\n    subscribersAccessLookup,\n    totalSubscribersWithoutMe,\n    hasMe,\n  }\n}\n"],"names":["MentionSubscribeDocument","gql","ErrorsFragmentDoc","useMentionSubscribeMutation","options","VueApolloComposable.useMutation","MentionUnsubscribeDocument","useMentionUnsubscribeMutation","useTicketSubscribe","ticket","isTicketAgent","useTicketView","canManageSubscription","computed","session","useSessionStore","createTicketCacheUpdater","subscribed","previousQuery","prev","_a","subscribeHandler","MutationHandler","unsubscribeMutation","isSubscriptionLoading","subscribe","ticketId","result","unsubscribe","toggleSubscribe","id","isSubscribed","subscribers","_c","_b","node","subscribersWithoutMe","subscribersAccessLookup","keyBy","hasMe","totalSubscribers","totalSubscribersWithoutMe"],"mappings":"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"}