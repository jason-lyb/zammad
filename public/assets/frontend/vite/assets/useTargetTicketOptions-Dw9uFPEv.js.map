{"version":3,"file":"useTargetTicketOptions-Dw9uFPEv.js","sources":["../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketSimpleTable/TicketSimpleTable.vue","../../../../../app/frontend/shared/graphql/fragments/simpleTicketAttribute.api.ts","../../../../../app/frontend/apps/desktop/pages/ticket/graphql/queries/ticketRelationAndRecentTicketLists.api.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketRelationAndRecentLists/TicketRelationAndRecentLists.vue","../../../../../app/frontend/apps/desktop/pages/ticket/composables/useTargetTicketOptions.ts"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport CommonSimpleTable from '#desktop/components/CommonTable/CommonSimpleTable.vue'\nimport type {\n  TableSimpleHeader,\n  TableItem,\n} from '#desktop/components/CommonTable/types'\nimport CommonTicketStateIndicatorIcon from '#desktop/components/CommonTicketStateIndicator/CommonTicketStateIndicatorIcon.vue'\nimport type { TicketRelationAndRecentListItem } from '#desktop/pages/ticket/components/TicketDetailView/TicketSimpleTable/types.ts'\n\ninterface Props {\n  tickets: TicketRelationAndRecentListItem[]\n  label: string\n  selectedTicketId?: string\n}\n\nconst emit = defineEmits<{\n  'click-ticket': [TicketRelationAndRecentListItem]\n}>()\n\nconst { config } = storeToRefs(useApplicationStore())\n\nconst headers: TableSimpleHeader[] = [\n  { key: 'state', label: '', truncate: true, type: 'link' },\n  {\n    key: 'number',\n    label: config.value.ticket_hook,\n    type: 'link',\n    truncate: true,\n  },\n  { key: 'title', label: __('Title'), truncate: true },\n  { key: 'customer', label: __('Customer'), truncate: true },\n  { key: 'group', label: __('Group'), truncate: true },\n  { key: 'createdAt', label: __('Created at'), truncate: true },\n]\n\nconst props = defineProps<Props>()\n\nconst items = computed<Array<TableItem>>(() =>\n  props.tickets.map((ticket) => ({\n    createdAt: ticket.createdAt,\n    customer: ticket.organization?.name || ticket.customer?.fullname,\n    group: ticket.group?.name,\n    id: ticket.id,\n    internalId: ticket.internalId,\n    key: ticket.id,\n    number: {\n      link: `/tickets/${ticket.internalId}`,\n      label: ticket.number,\n      internal: true,\n    },\n    organization: ticket.organization,\n    title: ticket.title,\n    stateColorCode: ticket.stateColorCode,\n    state: ticket.state,\n  })),\n)\n\nconst handleRowClick = (row: TableItem) => {\n  const ticket = props.tickets.find((ticket) => ticket.id === row.id)\n  emit('click-ticket', ticket!)\n}\n</script>\n\n<template>\n  <section>\n    <!-- TODO: Set needed props to disable infinite scrolling etc. -->\n    <CommonSimpleTable\n      ref=\"simple-table\"\n      class=\"w-full\"\n      :caption=\"label\"\n      show-caption\n      :headers=\"headers\"\n      :items=\"items\"\n      :selected-row-id=\"selectedTicketId\"\n      @click-row=\"handleRowClick\"\n    >\n      <template #column-cell-createdAt=\"{ item, isRowSelected }\">\n        <CommonDateTime\n          class=\"text-gray-100 group-hover:text-black group-focus-visible:text-white group-active:text-white dark:text-neutral-400 group-hover:dark:text-white group-active:dark:text-white\"\n          :class=\"{ 'text-black dark:text-white': isRowSelected }\"\n          :date-time=\"item['createdAt'] as string\"\n          type=\"absolute\"\n          absolute-format=\"date\"\n        />\n      </template>\n\n      <template #column-cell-state=\"{ item, isRowSelected }\">\n        <CommonTicketStateIndicatorIcon\n          class=\"shrink-0 group-hover:text-black group-focus-visible:text-white group-active:text-white group-hover:dark:text-white group-active:dark:text-white\"\n          :class=\"{\n            'ltr:text-black rtl:text-black dark:text-white': isRowSelected,\n          }\"\n          :color-code=\"(item as TicketById).stateColorCode\"\n          :label=\"(item as TicketById).state.name\"\n          :aria-labelledby=\"(item as TicketById).id\"\n          icon-size=\"tiny\"\n        />\n      </template>\n    </CommonSimpleTable>\n  </section>\n</template>\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const SimpleTicketAttributeFragmentDoc = gql`\n    fragment simpleTicketAttribute on Ticket {\n  number\n  internalId\n  id\n  title\n  customer {\n    id\n    fullname\n  }\n  organization {\n    id\n    name\n  }\n  group {\n    id\n    name\n  }\n  createdAt\n  stateColorCode\n  state {\n    id\n    name\n  }\n}\n    `;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { SimpleTicketAttributeFragmentDoc } from '../../../../../../shared/graphql/fragments/simpleTicketAttribute.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TicketRelationAndRecentTicketListsDocument = gql`\n    query ticketRelationAndRecentTicketLists($ticketId: Int!, $customerId: ID!, $limit: Int) {\n  ticketsRecentByCustomer(\n    customerId: $customerId\n    limit: $limit\n    exceptTicketInternalId: $ticketId\n  ) {\n    ...simpleTicketAttribute\n  }\n  ticketsRecentlyViewed(exceptTicketInternalId: $ticketId, limit: $limit) {\n    ...simpleTicketAttribute\n  }\n}\n    ${SimpleTicketAttributeFragmentDoc}`;\nexport function useTicketRelationAndRecentTicketListsQuery(variables: Types.TicketRelationAndRecentTicketListsQueryVariables | VueCompositionApi.Ref<Types.TicketRelationAndRecentTicketListsQueryVariables> | ReactiveFunction<Types.TicketRelationAndRecentTicketListsQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables>(TicketRelationAndRecentTicketListsDocument, variables, options);\n}\nexport function useTicketRelationAndRecentTicketListsLazyQuery(variables?: Types.TicketRelationAndRecentTicketListsQueryVariables | VueCompositionApi.Ref<Types.TicketRelationAndRecentTicketListsQueryVariables> | ReactiveFunction<Types.TicketRelationAndRecentTicketListsQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables>(TicketRelationAndRecentTicketListsDocument, variables, options);\n}\nexport type TicketRelationAndRecentTicketListsQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.TicketRelationAndRecentTicketListsQuery, Types.TicketRelationAndRecentTicketListsQueryVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport CommonLoader from '#desktop/components/CommonLoader/CommonLoader.vue'\nimport TicketSimpleTable from '#desktop/pages/ticket/components/TicketDetailView/TicketSimpleTable/TicketSimpleTable.vue'\nimport type { TicketRelationAndRecentListItem } from '#desktop/pages/ticket/components/TicketDetailView/TicketSimpleTable/types.ts'\nimport { useTicketRelationAndRecentTicketListsQuery } from '#desktop/pages/ticket/graphql/queries/ticketRelationAndRecentTicketLists.api.ts'\n\ninterface Props {\n  customerId: string\n  internalTicketId: number\n  selectedTicketId?: string\n}\n\nconst props = defineProps<Props>()\n\ndefineEmits<{\n  'click-ticket': [TicketRelationAndRecentListItem]\n}>()\n\nconst ticketRelationAndRecentListsQuery = new QueryHandler(\n  useTicketRelationAndRecentTicketListsQuery(\n    {\n      customerId: props.customerId,\n      limit: 10,\n      ticketId: props.internalTicketId,\n    },\n    {\n      fetchPolicy: 'cache-and-network',\n    },\n  ),\n)\n\n// :TODO introduce debounced loading\nconst isLoading = ticketRelationAndRecentListsQuery.loading()\n\nconst tableData = ticketRelationAndRecentListsQuery.result()\n\nconst ticketsByCustomer = computed(\n  () =>\n    tableData.value\n      ?.ticketsRecentByCustomer as unknown as TicketRelationAndRecentListItem[],\n)\n\nconst ticketsRecentlyViewed = computed(\n  () =>\n    tableData.value\n      ?.ticketsRecentlyViewed as unknown as TicketRelationAndRecentListItem[],\n)\n</script>\n\n<template>\n  <CommonLoader :loading=\"isLoading\">\n    <div class=\"space-y-6\">\n      <TicketSimpleTable\n        v-if=\"ticketsByCustomer && ticketsByCustomer.length > 0\"\n        :label=\"$t('Recent Customer Tickets')\"\n        :tickets=\"ticketsByCustomer\"\n        :selected-ticket-id=\"selectedTicketId\"\n        @click-ticket=\"$emit('click-ticket', $event)\"\n      />\n\n      <TicketSimpleTable\n        v-if=\"ticketsRecentlyViewed && ticketsRecentlyViewed.length > 0\"\n        :label=\"$t('Recently Viewed Tickets')\"\n        :selected-ticket-id=\"selectedTicketId\"\n        :tickets=\"ticketsRecentlyViewed\"\n        @click-ticket=\"$emit('click-ticket', $event)\"\n      />\n    </div>\n  </CommonLoader>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { storeToRefs } from 'pinia'\nimport { computed, ref, shallowRef } from 'vue'\n\nimport type {\n  ChangedFieldFunction,\n  FormFieldValue,\n} from '#shared/components/Form/types.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport type { TicketRelationAndRecentListItem } from '#desktop/pages/ticket/components/TicketDetailView/TicketSimpleTable/types.ts'\nimport { getTicketNumberWithHook } from '#desktop/pages/ticket/composables/getTicketNumber.ts'\n\nexport const useTargetTicketOptions = (\n  onChangedField: ChangedFieldFunction,\n  updateFieldValues: (values: Record<string, FormFieldValue>) => void,\n) => {\n  const { config } = storeToRefs(useApplicationStore())\n\n  const targetTicketId = ref<string>()\n\n  const formListTargetTicket = shallowRef<TicketRelationAndRecentListItem>()\n\n  const formListTargetTicketOptions = computed(() => {\n    if (!formListTargetTicket.value) return\n\n    return [\n      {\n        value: formListTargetTicket.value.id,\n        label: `${getTicketNumberWithHook(config.value.ticket_hook, formListTargetTicket.value.number)} - ${formListTargetTicket.value.title}`,\n        heading: formListTargetTicket.value.customer.fullname,\n        ticket: formListTargetTicket.value,\n      },\n    ]\n  })\n\n  onChangedField('targetTicketId', (value) => {\n    targetTicketId.value = (value as string) ?? undefined\n\n    if (formListTargetTicket.value?.id === value) return\n    formListTargetTicket.value = undefined\n  })\n\n  const handleTicketClick = (ticket: TicketRelationAndRecentListItem) => {\n    updateFieldValues({\n      targetTicketId: ticket.id,\n    })\n    formListTargetTicket.value = ticket\n  }\n\n  return {\n    formListTargetTicketOptions,\n    targetTicketId,\n    handleTicketClick,\n  }\n}\n"],"names":["emit","__emit","config","storeToRefs","useApplicationStore","headers","props","__props","items","computed","ticket","_a","_b","_c","handleRowClick","row","SimpleTicketAttributeFragmentDoc","gql","TicketRelationAndRecentTicketListsDocument","useTicketRelationAndRecentTicketListsQuery","variables","options","VueApolloComposable.useQuery","ticketRelationAndRecentListsQuery","QueryHandler","isLoading","tableData","ticketsByCustomer","ticketsRecentlyViewed","useTargetTicketOptions","onChangedField","updateFieldValues","targetTicketId","ref","formListTargetTicket","shallowRef","formListTargetTicketOptions","getTicketNumberWithHook","value"],"mappings":"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"}