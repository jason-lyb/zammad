{"version":3,"file":"GuidedSetupAutomatedRun-dF8axNcB.js","sources":["../../../../../app/frontend/apps/desktop/pages/guided-setup/graphql/mutations/systemSetupRunAutoWizard.api.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/views/GuidedSetupAutomated/GuidedSetupAutomatedRun.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { SessionFragmentDoc } from '../../../../../../shared/graphql/fragments/session.api';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const SystemSetupRunAutoWizardDocument = gql`\n    mutation systemSetupRunAutoWizard($token: String) {\n  systemSetupRunAutoWizard(token: $token) {\n    session {\n      ...session\n    }\n    errors {\n      ...errors\n    }\n  }\n}\n    ${SessionFragmentDoc}\n${ErrorsFragmentDoc}`;\nexport function useSystemSetupRunAutoWizardMutation(options: VueApolloComposable.UseMutationOptions<Types.SystemSetupRunAutoWizardMutation, Types.SystemSetupRunAutoWizardMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.SystemSetupRunAutoWizardMutation, Types.SystemSetupRunAutoWizardMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.SystemSetupRunAutoWizardMutation, Types.SystemSetupRunAutoWizardMutationVariables>(SystemSetupRunAutoWizardDocument, options);\n}\nexport type SystemSetupRunAutoWizardMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.SystemSetupRunAutoWizardMutation, Types.SystemSetupRunAutoWizardMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport useFingerprint from '#shared/composables/useFingerprint.ts'\nimport type UserError from '#shared/errors/UserError.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\n\nimport LayoutPublicPage from '#desktop/components/layout/LayoutPublicPage/LayoutPublicPage.vue'\n\n// TODO: check\n// eslint-disable-next-line import/no-restricted-paths\nimport { ensureAfterAuth } from '../../../authentication/after-auth/composable/useAfterAuthPlugins.ts'\nimport GuidedSetupStatusMessage from '../../components/GuidedSetupStatusMessage.vue'\nimport { useSystemSetupRunAutoWizardMutation } from '../../graphql/mutations/systemSetupRunAutoWizard.api.ts'\n\ninterface Props {\n  token?: string\n}\n\nconst props = defineProps<Props>()\n\nconst { fingerprint } = useFingerprint()\n\nconst router = useRouter()\n\nconst finished = ref(false)\nconst errors = ref<UserError | undefined>()\n\nconst runAutoWizardMutation = new MutationHandler(\n  useSystemSetupRunAutoWizardMutation({\n    variables: { token: props.token },\n    context: {\n      headers: {\n        'X-Browser-Fingerprint': fingerprint.value,\n      },\n    },\n  }),\n)\n\nrunAutoWizardMutation\n  .send()\n  .then(async (result) => {\n    finished.value = true\n    const { setAuthenticatedSessionId } = useAuthenticationStore()\n    if (\n      await setAuthenticatedSessionId(\n        result?.systemSetupRunAutoWizard?.session?.id || null,\n      )\n    ) {\n      const afterAuth = result?.systemSetupRunAutoWizard?.session?.afterAuth\n\n      // Redirect only after some seconds, in order to give the user a chance to read the message.\n      window.setTimeout(() => {\n        if (afterAuth) {\n          ensureAfterAuth(router, afterAuth)\n          return\n        }\n\n        router.replace('/')\n      }, 2000)\n    }\n  })\n  .catch((error: UserError) => {\n    errors.value = error\n  })\n\nconst statusMessage = computed(() => {\n  if (finished.value)\n    return __(\n      'The system was configured successfully. You are being redirected.',\n    )\n\n  return __('Relax, your system is being set upâ€¦')\n})\n</script>\n\n<template>\n  <LayoutPublicPage box-size=\"medium\" :title=\"__('Automated Setup')\">\n    <GuidedSetupStatusMessage v-if=\"!errors\" :message=\"statusMessage\" />\n    <CommonAlert v-else variant=\"danger\">{{\n      errors?.generalErrors[0]\n    }}</CommonAlert>\n  </LayoutPublicPage>\n</template>\n"],"names":["SystemSetupRunAutoWizardDocument","gql","SessionFragmentDoc","ErrorsFragmentDoc","useSystemSetupRunAutoWizardMutation","options","VueApolloComposable.useMutation","props","__props","fingerprint","useFingerprint","router","useRouter","finished","ref","errors","MutationHandler","result","setAuthenticatedSessionId","useAuthenticationStore","_b","_a","afterAuth","_d","_c","ensureAfterAuth","error","statusMessage","computed"],"mappings":"82CASO,MAAMA,EAAmCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW1CC,CAAkB;AAAA,EACtBC,CAAiB,GACH,SAAAC,EAAoCC,EAA+R,GAAI,CAC9U,OAAAC,EAAyHN,EAAkCK,CAAO,CAC3K,wECDA,MAAME,EAAQC,EAER,CAAE,YAAAC,GAAgBC,IAElBC,EAASC,IAETC,EAAWC,EAAI,EAAK,EACpBC,EAASD,IAEe,IAAIE,EAChCZ,EAAoC,CAClC,UAAW,CAAE,MAAOG,EAAM,KAAM,EAChC,QAAS,CACP,QAAS,CACP,wBAAyBE,EAAY,KACvC,CACF,CAAA,CACD,CAAA,EAIA,KAAK,EACL,KAAK,MAAOQ,GAAW,aACtBJ,EAAS,MAAQ,GACX,KAAA,CAAE,0BAAAK,GAA8BC,IACtC,GACE,MAAMD,IACJE,GAAAC,EAAAJ,GAAA,YAAAA,EAAQ,2BAAR,YAAAI,EAAkC,UAAlC,YAAAD,EAA2C,KAAM,IAAA,EAEnD,CACM,MAAAE,GAAYC,GAAAC,EAAAP,GAAA,YAAAA,EAAQ,2BAAR,YAAAO,EAAkC,UAAlC,YAAAD,EAA2C,UAG7D,OAAO,WAAW,IAAM,CACtB,GAAID,EAAW,CACbG,EAAgBd,EAAQW,CAAS,EACjC,MACF,CAEAX,EAAO,QAAQ,GAAG,GACjB,GAAI,CACT,CAAA,CACD,EACA,MAAOe,GAAqB,CAC3BX,EAAO,MAAQW,CAAA,CAChB,EAEG,MAAAC,EAAgBC,EAAS,IACzBf,EAAS,MACJ,GACL,mEAAA,EAGG,GAAG,qCAAqC,CAChD"}