{"version":3,"file":"utils-C-eON4SW.js","sources":["../../../../../app/frontend/shared/components/Form/fields/FieldEditor/utils.ts"],"sourcesContent":["// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { convertFileList } from '#shared/utils/files.ts'\n\nexport const populateEditorNewLines = (htmlContent: string): string => {\n  const body = document.createElement('div')\n  body.innerHTML = htmlContent\n  // prosemirror always adds a visible linebreak inside an empty paragraph,\n  // but it doesn't return it inside a schema, so we need to add it manually\n  body.querySelectorAll('p').forEach((p) => {\n    p.removeAttribute('data-marker')\n    if (\n      p.childNodes.length === 0 ||\n      p.lastChild?.nodeType !== Node.TEXT_NODE ||\n      p.textContent?.endsWith('\\n')\n    ) {\n      p.appendChild(document.createElement('br'))\n    }\n  })\n  return body.innerHTML\n}\n\nexport const convertInlineImages = (\n  inlineImages: FileList | File[],\n  editorElement: HTMLElement,\n) => {\n  return convertFileList(inlineImages, {\n    compress: true,\n    onCompress: () => {\n      const editorWidth = editorElement.clientWidth\n      const maxWidth = editorWidth > 1000 ? editorWidth : 1000\n      return {\n        x: maxWidth,\n        scale: 2,\n        type: 'image/jpeg',\n      }\n    },\n  })\n}\n"],"names":["populateEditorNewLines","htmlContent","body","p","_a","_b","convertInlineImages","inlineImages","editorElement","convertFileList","editorWidth"],"mappings":"0DAIa,MAAAA,EAA0BC,GAAgC,CAC/D,MAAAC,EAAO,SAAS,cAAc,KAAK,EACzC,OAAAA,EAAK,UAAYD,EAGjBC,EAAK,iBAAiB,GAAG,EAAE,QAASC,GAAM,SACxCA,EAAE,gBAAgB,aAAa,GAE7BA,EAAE,WAAW,SAAW,KACxBC,EAAAD,EAAE,YAAF,YAAAC,EAAa,YAAa,KAAK,YAC/BC,EAAAF,EAAE,cAAF,MAAAE,EAAe,SAAS;AAAA,KAExBF,EAAE,YAAY,SAAS,cAAc,IAAI,CAAC,CAC5C,CACD,EACMD,EAAK,SACd,EAEaI,EAAsB,CACjCC,EACAC,IAEOC,EAAgBF,EAAc,CACnC,SAAU,GACV,WAAY,IAAM,CAChB,MAAMG,EAAcF,EAAc,YAE3B,MAAA,CACL,EAFeE,EAAc,IAAOA,EAAc,IAGlD,MAAO,EACP,KAAM,YAAA,CAEV,CAAA,CACD"}