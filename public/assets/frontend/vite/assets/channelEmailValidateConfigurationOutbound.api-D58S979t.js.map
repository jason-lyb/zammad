{"version":3,"file":"channelEmailValidateConfigurationOutbound.api-D58S979t.js","sources":["../../../../../app/frontend/apps/desktop/entities/channel-email/composables/useEmailOutboundForm.ts","../../../../../app/frontend/apps/desktop/entities/channel-email/graphql/mutations/channelEmailValidateConfigurationOutbound.api.ts"],"sourcesContent":["// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { shallowRef, reactive } from 'vue'\n\nimport type { FormRef, FormSchemaField } from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\n\nimport type { EmailOutboundData } from '../types/email-inbound-outbound.ts'\nimport type { ShallowRef } from 'vue'\n\nexport const useEmailOutboundForm = () => {\n  const formEmailOutbound: ShallowRef<FormRef | undefined> = shallowRef()\n\n  const { updateFieldValues, values, formSetErrors, onChangedField } =\n    useForm<EmailOutboundData>(formEmailOutbound)\n\n  const emailOutboundFormChangeFields = reactive<\n    Record<string, Partial<FormSchemaField>>\n  >({\n    sslVerify: {},\n  })\n\n  onChangedField('port', (newValue) => {\n    const disabled = Boolean(\n      newValue && !(newValue === '465' || newValue === '587'),\n    )\n\n    emailOutboundFormChangeFields.sslVerify = {\n      disabled,\n    }\n\n    updateFieldValues({\n      sslVerify: !disabled,\n    })\n  })\n\n  const emailOutboundSchema = [\n    {\n      isLayout: true,\n      element: 'div',\n      attrs: {\n        class: 'grid grid-cols-2 gap-y-2.5 gap-x-3',\n      },\n      children: [\n        {\n          type: 'group',\n          name: 'outbound',\n          isGroupOrList: true,\n          children: [\n            {\n              name: 'adapter',\n              label: __('Send mails via'),\n              type: 'select',\n              outerClass: 'col-span-2',\n              required: true,\n            },\n            {\n              if: '$values.adapter === \"smtp\"',\n              isLayout: true,\n              element: 'div',\n              attrs: {\n                class: 'grid grid-cols-2 gap-y-2.5 gap-x-3 col-span-2',\n              },\n              children: [\n                {\n                  name: 'host',\n                  label: __('Host'),\n                  type: 'text',\n                  outerClass: 'col-span-2',\n                  props: {\n                    maxLength: 120,\n                  },\n                  required: true,\n                },\n                {\n                  name: 'user',\n                  label: __('User'),\n                  type: 'text',\n                  outerClass: 'col-span-2',\n                  props: {\n                    maxLength: 120,\n                  },\n                  required: true,\n                },\n                {\n                  name: 'password',\n                  label: __('Password'),\n                  type: 'password',\n                  outerClass: 'col-span-2',\n                  props: {\n                    maxLength: 120,\n                  },\n                  required: true,\n                },\n                {\n                  name: 'port',\n                  label: __('Port'),\n                  type: 'text',\n                  outerClass: 'col-span-1',\n                  validation: 'number',\n                  props: {\n                    maxLength: 6,\n                  },\n                  required: true,\n                },\n                {\n                  name: 'sslVerify',\n                  label: __('SSL verification'),\n                  type: 'toggle',\n                  outerClass: 'col-span-1',\n                  wrapperClass: 'mt-6',\n                  value: true,\n                  props: {\n                    variants: {\n                      true: 'yes',\n                      false: 'no',\n                    },\n                  },\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ]\n\n  return {\n    formEmailOutbound,\n    emailOutboundSchema,\n    emailOutboundFormChangeFields,\n    updateEmailOutboundFieldValues: updateFieldValues,\n    formEmailOutboundSetErrors: formSetErrors,\n    formEmailOutboundValues: values,\n  }\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const ChannelEmailValidateConfigurationOutboundDocument = gql`\n    mutation channelEmailValidateConfigurationOutbound($outboundConfiguration: ChannelEmailOutboundConfigurationInput!, $emailAddress: String!) {\n  channelEmailValidateConfigurationOutbound(\n    outboundConfiguration: $outboundConfiguration\n    emailAddress: $emailAddress\n  ) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useChannelEmailValidateConfigurationOutboundMutation(options: VueApolloComposable.UseMutationOptions<Types.ChannelEmailValidateConfigurationOutboundMutation, Types.ChannelEmailValidateConfigurationOutboundMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.ChannelEmailValidateConfigurationOutboundMutation, Types.ChannelEmailValidateConfigurationOutboundMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.ChannelEmailValidateConfigurationOutboundMutation, Types.ChannelEmailValidateConfigurationOutboundMutationVariables>(ChannelEmailValidateConfigurationOutboundDocument, options);\n}\nexport type ChannelEmailValidateConfigurationOutboundMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.ChannelEmailValidateConfigurationOutboundMutation, Types.ChannelEmailValidateConfigurationOutboundMutationVariables>;"],"names":["useEmailOutboundForm","formEmailOutbound","shallowRef","updateFieldValues","values","formSetErrors","onChangedField","useForm","emailOutboundFormChangeFields","reactive","newValue","disabled","emailOutboundSchema","ChannelEmailValidateConfigurationOutboundDocument","gql","ErrorsFragmentDoc","useChannelEmailValidateConfigurationOutboundMutation","options","VueApolloComposable.useMutation"],"mappings":"kOAUO,MAAMA,EAAuB,IAAM,CACxC,MAAMC,EAAqDC,IAErD,CAAE,kBAAAC,EAAmB,OAAAC,EAAQ,cAAAC,EAAe,eAAAC,GAChDC,EAA2BN,CAAiB,EAExCO,EAAgCC,EAEpC,CACA,UAAW,CAAC,CAAA,CACb,EAEcH,EAAA,OAASI,GAAa,CACnC,MAAMC,EAAW,GACfD,GAAY,EAAEA,IAAa,OAASA,IAAa,QAGnDF,EAA8B,UAAY,CACxC,SAAAG,CAAA,EAGgBR,EAAA,CAChB,UAAW,CAACQ,CAAA,CACb,CAAA,CACF,EAED,MAAMC,EAAsB,CAC1B,CACE,SAAU,GACV,QAAS,MACT,MAAO,CACL,MAAO,oCACT,EACA,SAAU,CACR,CACE,KAAM,QACN,KAAM,WACN,cAAe,GACf,SAAU,CACR,CACE,KAAM,UACN,MAAO,GAAG,gBAAgB,EAC1B,KAAM,SACN,WAAY,aACZ,SAAU,EACZ,EACA,CACE,GAAI,6BACJ,SAAU,GACV,QAAS,MACT,MAAO,CACL,MAAO,+CACT,EACA,SAAU,CACR,CACE,KAAM,OACN,MAAO,GAAG,MAAM,EAChB,KAAM,OACN,WAAY,aACZ,MAAO,CACL,UAAW,GACb,EACA,SAAU,EACZ,EACA,CACE,KAAM,OACN,MAAO,GAAG,MAAM,EAChB,KAAM,OACN,WAAY,aACZ,MAAO,CACL,UAAW,GACb,EACA,SAAU,EACZ,EACA,CACE,KAAM,WACN,MAAO,GAAG,UAAU,EACpB,KAAM,WACN,WAAY,aACZ,MAAO,CACL,UAAW,GACb,EACA,SAAU,EACZ,EACA,CACE,KAAM,OACN,MAAO,GAAG,MAAM,EAChB,KAAM,OACN,WAAY,aACZ,WAAY,SACZ,MAAO,CACL,UAAW,CACb,EACA,SAAU,EACZ,EACA,CACE,KAAM,YACN,MAAO,GAAG,kBAAkB,EAC5B,KAAM,SACN,WAAY,aACZ,aAAc,OACd,MAAO,GACP,MAAO,CACL,SAAU,CACR,KAAM,MACN,MAAO,IACT,CACF,CACF,CACF,CACF,CACF,CACF,CACF,CACF,CAAA,EAGK,MAAA,CACL,kBAAAX,EACA,oBAAAW,EACA,8BAAAJ,EACA,+BAAgCL,EAChC,2BAA4BE,EAC5B,wBAAyBD,CAAA,CAE7B,EC/HaS,EAAoDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAY3DC,CAAiB,GACP,SAAAC,EAAqDC,EAAmW,GAAI,CACna,OAAAC,EAA2JL,EAAmDI,CAAO,CAC9N"}