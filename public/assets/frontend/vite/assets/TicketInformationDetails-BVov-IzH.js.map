{"version":3,"file":"TicketInformationDetails-BVov-IzH.js","sources":["../../../../../app/frontend/apps/mobile/pages/ticket/components/TicketDetailView/TicketEscalationTimeMenuItem.vue","../../../../../app/frontend/apps/mobile/pages/ticket/components/TicketDetailView/TicketObjectAttributes.vue","../../../../../app/frontend/shared/entities/tags/graphql/mutations/assignment/update.api.ts","../../../../../app/frontend/apps/mobile/pages/ticket/components/TicketDetailView/TicketTags.vue","../../../../../app/frontend/apps/mobile/pages/ticket/views/TicketInformation/TicketInformationDetails.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport {\n  useEscalationState,\n  EscalationState,\n} from '#shared/composables/useEscalationState.ts'\nimport type { Scalars } from '#shared/graphql/types.ts'\n\nimport CommonSectionMenuItem from '#mobile/components/CommonSectionMenu/CommonSectionMenuItem.vue'\n\nconst props = defineProps<{\n  label: string\n  escalationAt?: Maybe<Scalars['ISO8601DateTime']['output']>\n}>()\n\nconst escalationState = useEscalationState(toRef(() => props.escalationAt))\n</script>\n\n<template>\n  <CommonSectionMenuItem\n    v-if=\"escalationAt && escalationState !== EscalationState.None\"\n    :class=\"{\n      'text-red-bright bg-red-highlight':\n        escalationState === EscalationState.Escalated,\n      'text-yellow bg-yellow-highlight':\n        escalationState === EscalationState.Warning,\n    }\"\n    :label=\"label\"\n  >\n    {{ i18n.relativeDateTime(escalationAt) }}\n  </CommonSectionMenuItem>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef, ref } from 'vue'\n\nimport { useTicketAccountedTime } from '#shared/entities/ticket/composables/useTicketAccountedTime.ts'\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\nimport { capitalize } from '#shared/utils/formatter.ts'\n\nimport CommonSectionMenu from '#mobile/components/CommonSectionMenu/CommonSectionMenu.vue'\nimport CommonSectionMenuItem from '#mobile/components/CommonSectionMenu/CommonSectionMenuItem.vue'\nimport CommonShowMoreButton from '#mobile/components/CommonShowMoreButton/CommonShowMoreButton.vue'\n\ninterface Props {\n  ticket: TicketById\n}\n\nconst props = defineProps<Props>()\nconst ticketData = toRef(props, 'ticket')\n\nconst { timeAccountingDisplayUnit, timeAccountingConfig } =\n  useTicketAccountedTime()\n\nconst isShown = toRef(() => Boolean(ticketData.value.timeUnit))\n\nconst showAll = ref(false)\nconst MIN_SHOWN = 3\n\nconst allUnits = computed(() => {\n  if (!timeAccountingConfig.value.time_accounting_types) return []\n\n  if (\n    props.ticket.timeUnitsPerType &&\n    props.ticket.timeUnitsPerType.length === 1 &&\n    props.ticket.timeUnitsPerType[0].name === 'None'\n  ) {\n    return []\n  }\n\n  return props.ticket.timeUnitsPerType || []\n})\n\nconst shownUnits = computed(() => {\n  if (showAll.value) return allUnits.value\n  return allUnits.value.slice(0, MIN_SHOWN)\n})\n</script>\n\n<template>\n  <CommonSectionMenu v-if=\"isShown\">\n    <CommonSectionMenuItem\n      v-if=\"ticketData.timeUnit\"\n      :label=\"__('Total Accounted Time')\"\n    >\n      {{ ticketData.timeUnit }}\n      {{ $t(timeAccountingDisplayUnit) }}\n    </CommonSectionMenuItem>\n\n    <CommonSectionMenuItem\n      v-if=\"allUnits.length\"\n      data-test-id=\"timeUnitsEntries\"\n    >\n      <div class=\"grid grid-cols-[1fr_auto_auto] py-2\" role=\"list\">\n        <template\n          v-for=\"({ name, timeUnit }, index) of shownUnits\"\n          :key=\"index\"\n        >\n          <div class=\"col-[1] truncate text-white/80 ltr:mr-2 rtl:ml-2\">\n            {{ capitalize($t(name)) }}\n          </div>\n          <div>{{ timeUnit }} {{ $t(timeAccountingDisplayUnit) }}</div>\n        </template>\n      </div>\n    </CommonSectionMenuItem>\n\n    <CommonShowMoreButton\n      :entities=\"shownUnits\"\n      :total-count=\"allUnits.length\"\n      @click=\"showAll = true\"\n    />\n  </CommonSectionMenu>\n</template>\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TagAssignmentUpdateDocument = gql`\n    mutation tagAssignmentUpdate($objectId: ID!, $tags: [String!]!) {\n  tagAssignmentUpdate(objectId: $objectId, tags: $tags) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useTagAssignmentUpdateMutation(options: VueApolloComposable.UseMutationOptions<Types.TagAssignmentUpdateMutation, Types.TagAssignmentUpdateMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.TagAssignmentUpdateMutation, Types.TagAssignmentUpdateMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.TagAssignmentUpdateMutation, Types.TagAssignmentUpdateMutationVariables>(TagAssignmentUpdateDocument, options);\n}\nexport type TagAssignmentUpdateMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.TagAssignmentUpdateMutation, Types.TagAssignmentUpdateMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { isEqual } from 'lodash-es'\nimport { ref, toRef, watch } from 'vue'\n\nimport {\n  NotificationTypes,\n  useNotifications,\n} from '#shared/components/CommonNotifications/index.ts'\nimport FormGroup from '#shared/components/Form/FormGroup.vue'\nimport { useTagAssignmentUpdateMutation } from '#shared/entities/tags/graphql/mutations/assignment/update.api.ts'\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\ninterface Props {\n  ticket: TicketById\n}\n\nconst props = defineProps<Props>()\nconst ticketData = toRef(props, 'ticket')\n\nconst ticketTags = ref<string[]>(ticketData.value.tags || [])\n\nwatch(\n  () => ticketData.value.tags,\n  () => {\n    ticketTags.value = ticketData.value.tags || []\n  },\n)\n\nconst tagAssigmentUpdateHandler = new MutationHandler(\n  useTagAssignmentUpdateMutation({}),\n  {\n    errorNotificationMessage: __('Ticket tags could not be updated.'),\n  },\n)\n\nconst { notify } = useNotifications()\n\nconst handleChangedTicketTags = (node: FormKitNode) => {\n  node.on('dialog:afterClose', async () => {\n    const ticketId = ticketData.value.id\n\n    // Wait until the value is updated after the dialog is closed (when it's used very fast).\n    await node.settled\n\n    if (!ticketId || isEqual(ticketTags.value, ticketData.value.tags)) return\n\n    tagAssigmentUpdateHandler\n      .send({\n        objectId: ticketId,\n        tags: ticketTags.value,\n      })\n      .then(() => {\n        notify({\n          id: 'ticket-tags-updated',\n          type: NotificationTypes.Success,\n          message: __('Ticket tags updated successfully.'),\n        })\n      })\n      .catch(() => {\n        // Reset tags again, when error occurs.\n        ticketTags.value = ticketData.value.tags || []\n      })\n  })\n}\n</script>\n\n<template>\n  <FormGroup>\n    <FormKit\n      v-model=\"ticketTags\"\n      type=\"tags\"\n      name=\"tags\"\n      :label=\"__('Tags')\"\n      :plugins=\"[handleChangedTicketTags]\"\n      :can-create=\"Boolean($c.tag_new)\"\n    ></FormKit>\n  </FormGroup>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\n/* eslint-disable vue/attribute-hyphenation */\n\nimport { computed, nextTick, onMounted, onUnmounted, watch } from 'vue'\n\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport ObjectAttributes from '#shared/components/ObjectAttributes/ObjectAttributes.vue'\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport { useObjectAttributes } from '#shared/entities/object-attributes/composables/useObjectAttributes.ts'\nimport { useTicketSubscribe } from '#shared/entities/ticket/composables/useTicketSubscribe.ts'\nimport { useTicketView } from '#shared/entities/ticket/composables/useTicketView.ts'\nimport { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport CommonLoader from '#mobile/components/CommonLoader/CommonLoader.vue'\nimport CommonSectionMenu from '#mobile/components/CommonSectionMenu/CommonSectionMenu.vue'\nimport CommonSectionMenuItem from '#mobile/components/CommonSectionMenu/CommonSectionMenuItem.vue'\nimport CommonShowMoreButton from '#mobile/components/CommonShowMoreButton/CommonShowMoreButton.vue'\nimport CommonUsersList from '#mobile/components/CommonUsersList/CommonUsersList.vue'\n\nimport TicketEscalationTimeMenuItem from '../../components/TicketDetailView/TicketEscalationTimeMenuItem.vue'\nimport TicketObjectAttributes from '../../components/TicketDetailView/TicketObjectAttributes.vue'\nimport TicketTags from '../../components/TicketDetailView/TicketTags.vue'\nimport { useTicketInformation } from '../../composable/useTicketInformation.ts'\n\nconst { attributes: objectAttributes } = useObjectAttributes(\n  EnumObjectManagerObjects.Ticket,\n)\n\nconst {\n  form,\n  initialFormTicketValue,\n  ticket,\n  updateFormLocation,\n  ticketQuery,\n} = useTicketInformation()\n\nconst ticketFormGroupNode = computed(() => {\n  return form.value?.formNode?.at('ticket')\n})\n\nconst { waitForConfirmation } = useConfirmation()\n\nconst discardTicketEditDialog = async () => {\n  if (!ticketFormGroupNode.value) return\n\n  const confirmed = await waitForConfirmation(\n    __('Are you sure? You have unsaved changes that will get lost.'),\n    {\n      buttonLabel: __('Discard changes'),\n      buttonVariant: 'danger',\n    },\n  )\n\n  if (!confirmed) return\n\n  form.value?.resetForm(\n    {\n      values: initialFormTicketValue.value,\n      object: ticket.value,\n    },\n    {\n      resetDirty: true,\n      groupNode: ticketFormGroupNode.value,\n    },\n  )\n}\n\nonMounted(() => {\n  updateFormLocation('[data-ticket-edit-form]')\n})\n\nonUnmounted(() => {\n  updateFormLocation('body')\n})\n\nconst {\n  canManageSubscription,\n  isSubscribed,\n  isSubscriptionLoading,\n  subscribersWithoutMe,\n  subscribersAccessLookup,\n  totalSubscribersWithoutMe,\n  toggleSubscribe,\n} = useTicketSubscribe(ticket)\n\nconst variants = {\n  true: __('yes'),\n  false: __('no'),\n}\n\nlet isOutsideUpdate = false\nwatch(\n  () => isSubscribed.value,\n  () => {\n    isOutsideUpdate = true\n    nextTick(() => {\n      isOutsideUpdate = false\n    })\n  },\n)\n\nconst handleToggleInput = async () => {\n  // do not trigger update, if value was changed from the outside,\n  // and not by clicking on toggle button, otherwise it goes into infinite loop\n  if (isOutsideUpdate) return false\n  return toggleSubscribe()\n}\n\nconst session = useSessionStore()\n\nconst loadingTicket = ticketQuery.loading()\nconst loadMoreMentions = () => {\n  ticketQuery.refetch({\n    mentionsCount: null,\n  })\n}\n\nconst { isTicketAgent, isTicketEditable } = useTicketView(ticket)\n\nconst hasEscalation = computed(() => {\n  if (!ticket.value) return false\n  const { closeEscalationAt, updateEscalationAt, firstResponseEscalationAt } =\n    ticket.value\n  return !!(\n    closeEscalationAt ||\n    updateEscalationAt ||\n    firstResponseEscalationAt\n  )\n})\n</script>\n\n<template>\n  <CommonLoader :loading=\"!ticket\" />\n\n  <div data-ticket-edit-form />\n\n  <FormKit\n    v-if=\"ticketFormGroupNode?.context?.state.dirty\"\n    wrapper-class=\"mt-4 mb-4 flex grow justify-center items-center\"\n    input-class=\"py-2 px-4 w-full h-14 text-base text-red-bright! formkit-variant-primary:bg-red-dark rounded-xl select-none\"\n    type=\"button\"\n    name=\"discardTicketInformation\"\n    @click=\"discardTicketEditDialog\"\n  >\n    {{ $t('Discard your unsaved changes') }}\n  </FormKit>\n\n  <ObjectAttributes\n    v-if=\"!isTicketEditable && ticket\"\n    :object=\"ticket\"\n    :attributes=\"objectAttributes\"\n    :skip-attributes=\"['title', 'customer_id', 'organization_id']\"\n  />\n\n  <TicketObjectAttributes v-if=\"isTicketAgent && ticket\" :ticket=\"ticket\" />\n\n  <CommonSectionMenu\n    v-if=\"ticket && hasEscalation\"\n    :header-label=\"__('Escalation Times')\"\n  >\n    <TicketEscalationTimeMenuItem\n      :escalation-at=\"ticket.firstResponseEscalationAt\"\n      :label=\"__('First Response Time')\"\n    />\n    <TicketEscalationTimeMenuItem\n      :escalation-at=\"ticket.updateEscalationAt\"\n      :label=\"__('Update Time')\"\n    />\n    <TicketEscalationTimeMenuItem\n      :escalation-at=\"ticket.closeEscalationAt\"\n      :label=\"__('Solution Time')\"\n    />\n  </CommonSectionMenu>\n\n  <TicketTags\n    v-if=\"isTicketAgent && isTicketEditable && ticket\"\n    :ticket=\"ticket\"\n  />\n\n  <CommonSectionMenu v-else-if=\"ticket?.tags?.length\">\n    <CommonSectionMenuItem :label=\"__('Tags')\">\n      {{ ticket.tags.join(', ') }}\n    </CommonSectionMenuItem>\n  </CommonSectionMenu>\n\n  <CommonSectionMenu\n    v-if=\"canManageSubscription\"\n    class=\"py-1\"\n    :header-label=\"__('Subscribers')\"\n  >\n    <!-- Currently only modelValue is working: https://github.com/formkit/formkit/issues/629 -->\n    <FormKit\n      type=\"toggle\"\n      :modelValue=\"isSubscribed\"\n      :label=\"__('Get notified')\"\n      :variants=\"variants\"\n      :disabled=\"isSubscriptionLoading\"\n      :outer-class=\"{\n        'px-3!': true,\n        'border-b border-white/10': subscribersWithoutMe.length,\n      }\"\n      wrapper-class=\"px-0!\"\n      @input-raw=\"handleToggleInput\"\n    >\n      <template #label=\"context\">\n        <!-- id is available on the toggle element  -->\n        <!-- eslint-disable vuejs-accessibility/label-has-for -->\n        <label :for=\"context.id\" :class=\"context.classes.label\">\n          <CommonUserAvatar\n            v-if=\"session.user\"\n            class=\"ltr:mr-3 rtl:ml-3\"\n            :entity=\"session.user\"\n          />\n          {{ context.label }}\n        </label>\n      </template>\n    </FormKit>\n    <CommonUsersList\n      :users=\"subscribersWithoutMe\"\n      :access-lookup=\"subscribersAccessLookup\"\n    />\n    <CommonShowMoreButton\n      :entities=\"subscribersWithoutMe\"\n      :total-count=\"totalSubscribersWithoutMe\"\n      :disabled=\"loadingTicket\"\n      @click=\"loadMoreMentions\"\n    />\n  </CommonSectionMenu>\n</template>\n"],"names":["props","__props","escalationState","useEscalationState","toRef","MIN_SHOWN","ticketData","timeAccountingDisplayUnit","timeAccountingConfig","useTicketAccountedTime","isShown","showAll","ref","allUnits","computed","shownUnits","TagAssignmentUpdateDocument","gql","ErrorsFragmentDoc","useTagAssignmentUpdateMutation","options","VueApolloComposable.useMutation","ticketTags","watch","tagAssigmentUpdateHandler","MutationHandler","notify","useNotifications","handleChangedTicketTags","node","ticketId","isEqual","NotificationTypes","objectAttributes","useObjectAttributes","EnumObjectManagerObjects","form","initialFormTicketValue","ticket","updateFormLocation","ticketQuery","useTicketInformation","ticketFormGroupNode","_b","_a","waitForConfirmation","useConfirmation","discardTicketEditDialog","onMounted","onUnmounted","canManageSubscription","isSubscribed","isSubscriptionLoading","subscribersWithoutMe","subscribersAccessLookup","totalSubscribersWithoutMe","toggleSubscribe","useTicketSubscribe","variants","isOutsideUpdate","nextTick","handleToggleInput","session","useSessionStore","loadingTicket","loadMoreMentions","isTicketAgent","isTicketEditable","useTicketView","hasEscalation","closeEscalationAt","updateEscalationAt","firstResponseEscalationAt"],"mappings":"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"}