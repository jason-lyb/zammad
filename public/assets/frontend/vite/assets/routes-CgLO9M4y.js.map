{"version":3,"mappings":"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","names":["EnumAfterAuthType","EnumAppMaintenanceType","EnumAppearanceTheme","EnumAuthenticationProvider","EnumChannelArea","EnumFormUpdaterId","EnumLinkType","EnumNotificationSoundFile","EnumObjectManagerObjects","EnumOrderDirection","EnumPublicLinksScreen","EnumSearchableModels","EnumSecurityStateType","EnumSystemImportSource","EnumSystemSetupInfoStatus","EnumSystemSetupInfoType","EnumTaskbarApp","EnumTaskbarEntity","EnumTaskbarEntityAccess","EnumTextDirection","EnumTicketArticleSenderName","EnumTicketExternalReferencesIssueTrackerItemState","EnumTicketExternalReferencesIssueTrackerType","EnumTicketScreenBehavior","EnumTicketStateColorCode","EnumTwoFactorAuthenticationMethod","EnumUserErrorException","__vite_glob_0_0$4","__vite_glob_0_1$4","publicKey","get","__vitePreload","publicKeyCredential","pluginsModules","__vite_glob_0_0","__vite_glob_0_1","twoFactorPluginsFiles","p1","p2","initializeTwoFactorPlugins","twoFactorConfigurationPlugins","plugin","reactiveNow","useNow","useReactiveNow","formatNumber","num","digits","result","parseDate","dateTimeString","date","timeArray","y","m","d","H","M","value","absoluteDateTime","template","yfull","yshort","lnum","l","getISODatetime","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","durations","relativeDateTime","baseDate","translator","diffSeconds","direction","duration","count","getDateFormat","getDateTimeFormat","Translator","translationMap","source","args","target","arg","I18N","dateString","dates.getDateFormat","dates.absoluteDateTime","dates.getDateTimeFormat","dates.getISODatetime","dates.relativeDateTime","map","i18n","reactive","ApplicationConfigDocument","gql","useApplicationConfigQuery","options","VueApolloComposable.useQuery","ConfigUpdatesDocument","useConfigUpdatesSubscription","VueApolloComposable.useSubscription","TestFlags","flag","skipClearing","testFlags","configUpdatesSubscriptionInitialized","applicationConfigQuery","getApplicationConfigQuery","effectScope","QueryHandler","notifications","useNotifications","loaded","useApplicationLoaded","useApplicationStore","defineStore","loading","computed","initialized","ref","setLoaded","loadingAppElement","_a","_b","loadingFailedElement","config","initializeConfigUpdateSubscription","SubscriptionHandler","updatedSetting","getConfig","configQuery","item","resetAndGetConfig","hasCustomProductBranding","appElement","LocalesDocument","useLocalesLazyQuery","variables","VueApolloComposable.useLazyQuery","localeForBrowserLanguage","locales","userLanguages","userLanguage","directMatch","elem","alias","aliasMatch","TranslationsDocument","useTranslationsLazyQuery","localStorageKey","locale","loadCache","cached","log","setCache","serialized","translationsQuery","getTranslationsQuery","useTranslationsStore","cacheKey","translationData","cachedData","localesQuery","getLocalesQuery","useLocaleStore","localeData","loadLocales","currentQuery","newLocaleData","parser","UAParser","browser","os","generateFingerprint","windowResolution","timezone","getMajorVersion","version","string","a","b","useFingerprint","fingerprint","useLocalStorage","UserPersonalSettingsFragmentDoc","ObjectAttributeValuesFragmentDoc","UserAttributesFragmentDoc","CurrentUserAttributesFragmentDoc","CurrentUserDocument","useCurrentUserLazyQuery","SessionFragmentDoc","SessionDocument","useSessionLazyQuery","CurrentUserUpdatesDocument","useCurrentUserUpdatesSubscription","hasPermission","requiredPermission","permissions","requiredPermissions","localRequirePermission","localRequiredPermissions","accessGranted","requiredPermissionItem","singleAccessGranted","regexRequiredPermission","permission","partsRequiredPermission","checkPartsRequiredPermission","partRequiredPermission","sessionQuery","getSessionQuery","currentUserQuery","getCurrentUserQuery","useSessionStore","id","afterAuth","checkSession","user","userId","currentUserUpdateSubscription","userQuery","cloneDeep","userLocale","updatedUser","key","plugins","pluginListLookup","keyBy","useTwoFactorPlugins","twoFactorMethods","useApplicationConfigTwoFactor","application","storeToRefs","twoFactorEnabledMethods","method","hasEnabledMethods","hasEnabledRecoveryCodes","isMainRoute","route","useAuthenticationStore","clearAllNotifications","authentication","usePersonalSettingStore","previousPersonalSettingPath","path","__vite_glob_0_0$2","__vite_glob_0_1$2","__vite_glob_0_2$2","__vite_glob_0_3$1","useThirdPartyAuthentication","providers","enabledProviders","provider","__vite_glob_0_4$1","hasEnabledProviders","__vite_glob_0_5$2","__vite_glob_0_6$2","__vite_glob_0_7$2","useCheckChangePassword","__vite_glob_0_8$1","canChangePassword","__vite_glob_0_9$1","useCheckTokenAccess","__vite_glob_0_10","n","canUseAccessToken","__vite_glob_0_11","__vite_glob_0_2","__vite_glob_0_3","__vite_glob_0_4","__vite_glob_0_5","__vite_glob_0_6","__vite_glob_0_7","__vite_glob_0_8","__vite_glob_0_9","categories","categorizedItems","category","c1","c2","categoryLabel","personalSettingCategories","personalSettingItems","personalSettingRoutes","to","routes","useAfterAuthPlugins","currentPlugin","location","redirectedHash","search","ticket","ticketInformationPlugins","ticketInformationRoutes"],"ignoreList":[],"sources":["../../../../../app/frontend/shared/graphql/types.ts","../../../../../app/frontend/shared/entities/two-factor/plugins/authenticator-app.ts","../../../../../app/frontend/shared/entities/two-factor/plugins/security-keys.ts","../../../../../app/frontend/shared/entities/two-factor/composables/initializeTwoFactorPlugins.ts","../../../../../app/frontend/shared/composables/useReactiveNow.ts","../../../../../app/frontend/shared/i18n/dates.ts","../../../../../app/frontend/shared/i18n/translator.ts","../../../../../app/frontend/shared/i18n/index.ts","../../../../../app/frontend/shared/graphql/queries/applicationConfig.api.ts","../../../../../app/frontend/shared/graphql/subscriptions/configUpdates.api.ts","../../../../../app/frontend/shared/utils/testFlags.ts","../../../../../app/frontend/shared/stores/application.ts","../../../../../app/frontend/shared/graphql/queries/locales.api.ts","../../../../../app/frontend/shared/i18n/localeForBrowserLanguage.ts","../../../../../app/frontend/shared/graphql/queries/translations.api.ts","../../../../../app/frontend/shared/stores/translations.ts","../../../../../app/frontend/shared/stores/locale.ts","../../../../../app/frontend/shared/utils/browser.ts","../../../../../app/frontend/shared/composables/useFingerprint.ts","../../../../../app/frontend/shared/graphql/fragments/userPersonalSettings.api.ts","../../../../../app/frontend/shared/graphql/fragments/objectAttributeValues.api.ts","../../../../../app/frontend/shared/graphql/fragments/userAttributes.api.ts","../../../../../app/frontend/shared/graphql/fragments/currentUserAttributes.api.ts","../../../../../app/frontend/shared/graphql/queries/currentUser.api.ts","../../../../../app/frontend/shared/graphql/fragments/session.api.ts","../../../../../app/frontend/shared/graphql/queries/session.api.ts","../../../../../app/frontend/shared/graphql/subscriptions/currentUserUpdates.api.ts","../../../../../app/frontend/shared/utils/hasPermission.ts","../../../../../app/frontend/shared/stores/session.ts","../../../../../app/frontend/shared/entities/two-factor/composables/useTwoFactorPlugins.ts","../../../../../app/frontend/shared/composables/authentication/useApplicationConfigTwoFactor.ts","../../../../../app/frontend/apps/desktop/pages/authentication/routes.ts","../../../../../app/frontend/apps/desktop/pages/dashboard/routes.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/routes.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/stores/personalSetting.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/appearance.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/avatar.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/calendar.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/devices.ts","../../../../../app/frontend/shared/composables/authentication/useThirdPartyAuthentication.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/linkedAccounts.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/locale.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/notifications.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/outOfOffice.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/composables/permission/useCheckChangePassword.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/password.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/ticketOverviews.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/composables/permission/useCheckTokenAccess.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/tokenAccess.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/twoFactorAuth.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSetting/plugins/index.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/routes.ts","../../../../../app/frontend/apps/desktop/pages/ticket-overviews/routes.ts","../../../../../app/frontend/apps/desktop/pages/ticket/routes.ts","../../../../../app/frontend/apps/mobile/pages/account/routes.ts","../../../../../app/frontend/apps/mobile/pages/authentication/routes.ts","../../../../../app/frontend/apps/mobile/pages/error/routes.ts","../../../../../app/frontend/apps/mobile/pages/home/routes.ts","../../../../../app/frontend/apps/mobile/pages/online-notification/routes.ts","../../../../../app/frontend/apps/mobile/pages/organization/routes.ts","../../../../../app/frontend/apps/mobile/pages/playground/routes.ts","../../../../../app/frontend/apps/mobile/pages/search/routes.ts","../../../../../app/frontend/apps/mobile/pages/ticket/views/TicketInformation/plugins/customer.ts","../../../../../app/frontend/apps/mobile/pages/ticket/views/TicketInformation/plugins/organization.ts","../../../../../app/frontend/apps/mobile/pages/ticket/views/TicketInformation/plugins/ticket.ts","../../../../../app/frontend/apps/mobile/pages/ticket/views/TicketInformation/plugins/index.ts","../../../../../app/frontend/apps/mobile/pages/ticket/routes.ts","../../../../../app/frontend/apps/mobile/pages/user/routes.ts"],"sourcesContent":["export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };\nexport type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: { input: string; output: string; }\n  String: { input: string; output: string; }\n  Boolean: { input: boolean; output: boolean; }\n  Int: { input: number; output: number; }\n  Float: { input: number; output: number; }\n  BinaryString: { input: string; output: string; }\n  FormId: { input: string; output: string; }\n  ISO8601Date: { input: string; output: string; }\n  ISO8601DateTime: { input: string; output: string; }\n  JSON: { input: any; output: any; }\n  NonEmptyString: { input: string; output: string; }\n  UriHttpString: { input: string; output: string; }\n};\n\n/** Objects used to build activity message */\nexport type ActivityMessageMetaObject = DataPrivacyTask | Group | Organization | Role | Ticket | TicketArticle | User;\n\n/** A field which may contain one or more email or other addresses. */\nexport type AddressesField = {\n  __typename?: 'AddressesField';\n  /** If email addresses were found and parseable, this will hold the parsed result. */\n  parsed?: Maybe<Array<EmailAddressParsed>>;\n  /** Unparsed content of the addresses field. */\n  raw: Scalars['String']['output'];\n};\n\n/** Autogenerated return type of AdminPasswordAuthSend. */\nexport type AdminPasswordAuthSendPayload = {\n  __typename?: 'AdminPasswordAuthSendPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if sending the token was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of AdminPasswordAuthVerify. */\nexport type AdminPasswordAuthVerifyPayload = {\n  __typename?: 'AdminPasswordAuthVerifyPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Login of the user */\n  login?: Maybe<Scalars['String']['output']>;\n};\n\n/** Autogenerated return type of AppMaintenance. */\nexport type AppMaintenancePayload = {\n  __typename?: 'AppMaintenancePayload';\n  /** Maintenance type, may trigger actions in the front end */\n  type?: Maybe<EnumAppMaintenanceType>;\n};\n\n/** Represents the attachment attributes to be used e.g. in ticket create/update. */\nexport type AttachmentInput = {\n  /** The attached files. */\n  files: Array<UploadFileInput>;\n  /** FormID for the attached files. */\n  formId: Scalars['FormId']['input'];\n};\n\n/** Authorization for an account linked to a user */\nexport type Authorization = {\n  __typename?: 'Authorization';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  id: Scalars['ID']['output'];\n  provider: Scalars['String']['output'];\n  uid: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  username?: Maybe<Scalars['String']['output']>;\n};\n\n/** Type that represents an autocomplete entry with a string value. */\nexport type AutocompleteSearchEntry = {\n  __typename?: 'AutocompleteSearchEntry';\n  disabled?: Maybe<Scalars['Boolean']['output']>;\n  heading?: Maybe<Scalars['String']['output']>;\n  headingPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  icon?: Maybe<Scalars['String']['output']>;\n  label: Scalars['String']['output'];\n  labelPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  value: Scalars['String']['output'];\n};\n\n/** Type that represents an autocomplete entry with an external data source value. */\nexport type AutocompleteSearchExternalDataSourceEntry = {\n  __typename?: 'AutocompleteSearchExternalDataSourceEntry';\n  disabled?: Maybe<Scalars['Boolean']['output']>;\n  heading?: Maybe<Scalars['String']['output']>;\n  headingPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  icon?: Maybe<Scalars['String']['output']>;\n  label: Scalars['String']['output'];\n  labelPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  value: Scalars['JSON']['output'];\n};\n\n/** Type that represents a generic autocomplete entry. */\nexport type AutocompleteSearchGenericEntry = {\n  __typename?: 'AutocompleteSearchGenericEntry';\n  disabled?: Maybe<Scalars['Boolean']['output']>;\n  heading?: Maybe<Scalars['String']['output']>;\n  headingPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  icon?: Maybe<Scalars['String']['output']>;\n  label: Scalars['String']['output'];\n  labelPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  object: Item;\n  value: Scalars['Int']['output'];\n};\n\n/** Input fields for generic autocomplete searches. */\nexport type AutocompleteSearchGenericInput = {\n  /** Limit for the amount of entries */\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  /** Optionally restrict search certain models */\n  onlyIn?: InputMaybe<Array<EnumSearchableModels>>;\n  /** Query from the autocomplete field */\n  query: Scalars['String']['input'];\n};\n\n/** The default fields for autocomplete searches. */\nexport type AutocompleteSearchInput = {\n  /** Limit for the amount of entries */\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  /** Query from the autocomplete field */\n  query: Scalars['String']['input'];\n};\n\n/** Input fields for object attribute external data source autocomplete searches. */\nexport type AutocompleteSearchObjectAttributeExternalDataSourceInput = {\n  /** Name of the object attribute */\n  attributeName: Scalars['String']['input'];\n  /** Limit for the amount of entries */\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  /** Object name of the object attribute, e.g. Ticket */\n  object: EnumObjectManagerObjects;\n  /** Query from the autocomplete field */\n  query: Scalars['String']['input'];\n  /** Context data for the search url rendering, e.g. customer data. */\n  templateRenderContext: TemplateRenderContextInput;\n};\n\n/** Type that represents an autocomplete organization entry. */\nexport type AutocompleteSearchOrganizationEntry = {\n  __typename?: 'AutocompleteSearchOrganizationEntry';\n  disabled?: Maybe<Scalars['Boolean']['output']>;\n  heading?: Maybe<Scalars['String']['output']>;\n  headingPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  icon?: Maybe<Scalars['String']['output']>;\n  label: Scalars['String']['output'];\n  labelPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  organization: Organization;\n  value: Scalars['Int']['output'];\n};\n\n/** Input fields for organization autocomplete searches. */\nexport type AutocompleteSearchOrganizationInput = {\n  /** Customer ID to filter the organizations by */\n  customerId?: InputMaybe<Scalars['ID']['input']>;\n  /** Limit for the amount of entries */\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  /** Query from the autocomplete field */\n  query: Scalars['String']['input'];\n};\n\n/** Type that represents an autocomplete recipient entry. */\nexport type AutocompleteSearchRecipientEntry = {\n  __typename?: 'AutocompleteSearchRecipientEntry';\n  disabled?: Maybe<Scalars['Boolean']['output']>;\n  heading?: Maybe<Scalars['String']['output']>;\n  headingPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  icon?: Maybe<Scalars['String']['output']>;\n  label: Scalars['String']['output'];\n  labelPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  user: User;\n  value: Scalars['String']['output'];\n};\n\n/** Input fields for recipient autocomplete searches. */\nexport type AutocompleteSearchRecipientInput = {\n  /** User contact type option, i.e. email or phone */\n  contact?: InputMaybe<EnumUserContact>;\n  /** Optional user ID to be filtered out from results */\n  exceptInternalId?: InputMaybe<Scalars['Int']['input']>;\n  /** Limit for the amount of entries */\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  /** Query from the autocomplete field */\n  query: Scalars['String']['input'];\n};\n\n/** Input fields for tag autocomplete searches. */\nexport type AutocompleteSearchTagInput = {\n  /** Optional tags to be filtered out from results */\n  exceptTags?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** Limit for the amount of entries */\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  /** Query from the autocomplete field */\n  query: Scalars['String']['input'];\n};\n\n/** Type that represents an autocomplete ticket entry. */\nexport type AutocompleteSearchTicketEntry = {\n  __typename?: 'AutocompleteSearchTicketEntry';\n  disabled?: Maybe<Scalars['Boolean']['output']>;\n  heading?: Maybe<Scalars['String']['output']>;\n  headingPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  icon?: Maybe<Scalars['String']['output']>;\n  label: Scalars['String']['output'];\n  labelPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  ticket: Ticket;\n  value: Scalars['String']['output'];\n};\n\n/** Input fields for ticket autocomplete searches. */\nexport type AutocompleteSearchTicketInput = {\n  /** Optional ticket ID to be filtered out from results */\n  exceptTicketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  /** Limit for the amount of entries */\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  /** Query from the autocomplete field */\n  query: Scalars['String']['input'];\n};\n\n/** Type that represents an autocomplete user entry. */\nexport type AutocompleteSearchUserEntry = {\n  __typename?: 'AutocompleteSearchUserEntry';\n  disabled?: Maybe<Scalars['Boolean']['output']>;\n  heading?: Maybe<Scalars['String']['output']>;\n  headingPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  icon?: Maybe<Scalars['String']['output']>;\n  label: Scalars['String']['output'];\n  labelPlaceholder?: Maybe<Array<Scalars['String']['output']>>;\n  user: User;\n  value: Scalars['Int']['output'];\n};\n\n/** Input fields for user autocomplete searches. */\nexport type AutocompleteSearchUserInput = {\n  /** Optional user ID to be filtered out from results */\n  exceptInternalId?: InputMaybe<Scalars['Int']['input']>;\n  /** Limit for the amount of entries */\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  /** Query from the autocomplete field */\n  query: Scalars['String']['input'];\n};\n\n/** Avatar for users */\nexport type Avatar = {\n  __typename?: 'Avatar';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  default: Scalars['Boolean']['output'];\n  deletable: Scalars['Boolean']['output'];\n  id: Scalars['ID']['output'];\n  imageFull?: Maybe<Scalars['String']['output']>;\n  imageHash?: Maybe<Scalars['String']['output']>;\n  imageResize?: Maybe<Scalars['String']['output']>;\n  initial: Scalars['Boolean']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** The fields for uploading a new avatar. */\nexport type AvatarInput = {\n  /** The original image to use for the avatar. */\n  original: UploadFileInput;\n  /** The resized/cropped image to use for the avatar. */\n  resized: UploadFileInput;\n};\n\n/** The connection type for Ticket. */\nexport type CachedTicketConnection = {\n  __typename?: 'CachedTicketConnection';\n  /** Signature that identifies the current collection state. This is always returned, even if the edges data is not because the signature is still the same. */\n  collectionSignature: Scalars['String']['output'];\n  /** A list of edges. */\n  edges?: Maybe<Array<TicketEdge>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Indicates the total number of available records. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** Event from ICS file */\nexport type CalendarIcsFileEvent = {\n  __typename?: 'CalendarIcsFileEvent';\n  attendees?: Maybe<Array<Scalars['String']['output']>>;\n  description?: Maybe<Scalars['String']['output']>;\n  endDate?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  location?: Maybe<Scalars['String']['output']>;\n  organizer?: Maybe<Scalars['String']['output']>;\n  startDate?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  title?: Maybe<Scalars['String']['output']>;\n};\n\n/** Channels */\nexport type Channel = {\n  __typename?: 'Channel';\n  active: Scalars['Boolean']['output'];\n  area: Scalars['String']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  /** resolver for Rails' belongs_to relationship */\n  group?: Maybe<Group>;\n  id: Scalars['ID']['output'];\n  lastLogIn?: Maybe<Scalars['String']['output']>;\n  lastLogOut?: Maybe<Scalars['String']['output']>;\n  options?: Maybe<Scalars['JSON']['output']>;\n  preferences?: Maybe<Scalars['JSON']['output']>;\n  statusIn?: Maybe<Scalars['String']['output']>;\n  statusOut?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Fields for a new email channel. */\nexport type ChannelEmailAddInput = {\n  /** Sender email address for this channel */\n  emailAddress: Scalars['String']['input'];\n  /** Sender email realname for this channel */\n  emailRealname: Scalars['String']['input'];\n  /** Group for this channel */\n  groupId?: InputMaybe<Scalars['ID']['input']>;\n  /** Configuration to validate */\n  inboundConfiguration: ChannelEmailInboundConfigurationInput;\n  /** Configuration to validate */\n  outboundConfiguration: ChannelEmailOutboundConfigurationInput;\n};\n\n/** Autogenerated return type of ChannelEmailAdd. */\nexport type ChannelEmailAddPayload = {\n  __typename?: 'ChannelEmailAddPayload';\n  /** The new channel object */\n  channel?: Maybe<Channel>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n};\n\n/** Autogenerated return type of ChannelEmailGuessConfiguration. */\nexport type ChannelEmailGuessConfigurationPayload = {\n  __typename?: 'ChannelEmailGuessConfigurationPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Holds the guessed configurations. */\n  result: ChannelEmailGuessConfigurationResult;\n};\n\n/** Result for channel configuration guessing. */\nexport type ChannelEmailGuessConfigurationResult = {\n  __typename?: 'ChannelEmailGuessConfigurationResult';\n  /** If present, the probing for inbound was successful */\n  inboundConfiguration?: Maybe<ChannelEmailInboundConfiguration>;\n  /** Inbound mailbox data */\n  mailboxStats?: Maybe<ChannelEmailInboundMailboxStats>;\n  /** If present, the probing for inbound was successful */\n  outboundConfiguration?: Maybe<ChannelEmailOutboundConfiguration>;\n};\n\n/** Configuration for an inbound email channel. */\nexport type ChannelEmailInboundConfiguration = {\n  __typename?: 'ChannelEmailInboundConfiguration';\n  /** Protocol/adapter for this email channel */\n  adapter: EnumChannelEmailInboundAdapter;\n  /** IMAP Mailbox folder to fetch emails from */\n  folder?: Maybe<Scalars['String']['output']>;\n  /** Hostname for the email service to connect to */\n  host?: Maybe<Scalars['String']['output']>;\n  password?: Maybe<Scalars['String']['output']>;\n  port?: Maybe<Scalars['Int']['output']>;\n  ssl?: Maybe<EnumChannelEmailSsl>;\n  /** Whether to perform SSL verification */\n  sslVerify?: Maybe<Scalars['Boolean']['output']>;\n  /** Username for the email service to connect with */\n  user?: Maybe<Scalars['String']['output']>;\n};\n\n/** Configuration for an inbound email channel. */\nexport type ChannelEmailInboundConfigurationInput = {\n  /** Protocol/adapter for this email channel */\n  adapter: EnumChannelEmailInboundAdapter;\n  /** Whether to perform the email import in archive mode */\n  archive?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Import mails older than this date in archive mode */\n  archiveBefore?: InputMaybe<Scalars['ISO8601DateTime']['input']>;\n  /** Archive ticket target state internal ID */\n  archiveStateId?: InputMaybe<Scalars['Int']['input']>;\n  /** IMAP Mailbox folder to fetch emails from */\n  folder?: InputMaybe<Scalars['String']['input']>;\n  /** Hostname for the email service to connect to */\n  host: Scalars['String']['input'];\n  /** Whether messages should be kept on the IMAP server when fetching */\n  keepOnServer?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Password for the email service to connect with */\n  password: Scalars['String']['input'];\n  /** Port for the email service to connect to */\n  port: Scalars['Int']['input'];\n  /** Whether to use TLS/SSL */\n  ssl: EnumChannelEmailSsl;\n  /** Whether to perform SSL verification */\n  sslVerify?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Username for the email service to connect with */\n  user: Scalars['String']['input'];\n};\n\n/** Inbound mailbox statistics. */\nexport type ChannelEmailInboundMailboxStats = {\n  __typename?: 'ChannelEmailInboundMailboxStats';\n  /** Number of content emails found during account probing. */\n  contentMessages?: Maybe<Scalars['Int']['output']>;\n};\n\n/** Configuration for an outbound email channel. */\nexport type ChannelEmailOutboundConfiguration = {\n  __typename?: 'ChannelEmailOutboundConfiguration';\n  /** Protocol/adapter for this email channel */\n  adapter: EnumChannelEmailOutboundAdapter;\n  /** Hostname for the email service to connect to */\n  host?: Maybe<Scalars['String']['output']>;\n  password?: Maybe<Scalars['String']['output']>;\n  port?: Maybe<Scalars['Int']['output']>;\n  /** Whether to perform SSL verification */\n  sslVerify?: Maybe<Scalars['Boolean']['output']>;\n  /** Username for the email service to connect with */\n  user?: Maybe<Scalars['String']['output']>;\n};\n\n/** Configuration for an outbound email channel. */\nexport type ChannelEmailOutboundConfigurationInput = {\n  /** Protocol/adapter for this email channel */\n  adapter: EnumChannelEmailOutboundAdapter;\n  /** Hostname for the email service to connect to */\n  host?: InputMaybe<Scalars['String']['input']>;\n  /** Password for the email service to connect with */\n  password?: InputMaybe<Scalars['String']['input']>;\n  /** Port for the email service to connect to */\n  port?: InputMaybe<Scalars['Int']['input']>;\n  /** Whether to perform SSL verification */\n  sslVerify?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Username for the email service to connect with */\n  user?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Autogenerated return type of ChannelEmailSetNotificationConfiguration. */\nexport type ChannelEmailSetNotificationConfigurationPayload = {\n  __typename?: 'ChannelEmailSetNotificationConfigurationPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the operation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of ChannelEmailValidateConfigurationInbound. */\nexport type ChannelEmailValidateConfigurationInboundPayload = {\n  __typename?: 'ChannelEmailValidateConfigurationInboundPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Inbound mailbox data */\n  mailboxStats?: Maybe<ChannelEmailInboundMailboxStats>;\n  /** Was the validation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of ChannelEmailValidateConfigurationOutbound. */\nexport type ChannelEmailValidateConfigurationOutboundPayload = {\n  __typename?: 'ChannelEmailValidateConfigurationOutboundPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the validation successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of ChannelEmailValidateConfigurationRoundtrip. */\nexport type ChannelEmailValidateConfigurationRoundtripPayload = {\n  __typename?: 'ChannelEmailValidateConfigurationRoundtripPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the validation successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Ticket checklist */\nexport type Checklist = {\n  __typename?: 'Checklist';\n  complete: Scalars['Int']['output'];\n  completed: Scalars['Boolean']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  incomplete: Scalars['Int']['output'];\n  items: Array<ChecklistItem>;\n  name?: Maybe<Scalars['String']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  ticket: Ticket;\n  total: Scalars['Int']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Ticket checklist item */\nexport type ChecklistItem = {\n  __typename?: 'ChecklistItem';\n  checked: Scalars['Boolean']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  checklist: Checklist;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  text: Scalars['String']['output'];\n  ticketReference?: Maybe<TicketReference>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Checklist template */\nexport type ChecklistTemplate = {\n  __typename?: 'ChecklistTemplate';\n  active?: Maybe<Scalars['Boolean']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  name?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Autogenerated return type of ChecklistTemplateUpdates. */\nexport type ChecklistTemplateUpdatesPayload = {\n  __typename?: 'ChecklistTemplateUpdatesPayload';\n  /** Checklist templates */\n  checklistTemplates?: Maybe<Array<ChecklistTemplate>>;\n};\n\n/** Autogenerated return type of ConfigUpdates. */\nexport type ConfigUpdatesPayload = {\n  __typename?: 'ConfigUpdatesPayload';\n  /** Updated setting */\n  setting?: Maybe<KeyComplexValue>;\n};\n\n/** Data privacy task type */\nexport type DataPrivacyTask = {\n  __typename?: 'DataPrivacyTask';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  deletableId?: Maybe<Scalars['Int']['output']>;\n  deletableType?: Maybe<Scalars['String']['output']>;\n  id: Scalars['ID']['output'];\n  state?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** EmailAddress model instances */\nexport type EmailAddress = {\n  __typename?: 'EmailAddress';\n  active: Scalars['Boolean']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  channel?: Maybe<Channel>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  email: Scalars['String']['output'];\n  id: Scalars['ID']['output'];\n  name: Scalars['String']['output'];\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  preferences?: Maybe<Scalars['JSON']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Represents a parsed email address. */\nexport type EmailAddressParsed = {\n  __typename?: 'EmailAddressParsed';\n  /** Email address. */\n  emailAddress?: Maybe<Scalars['String']['output']>;\n  /** Is email added as system EmailAddress? */\n  isSystemAddress: Scalars['Boolean']['output'];\n  /** Display name + comment part of email (if any). */\n  name?: Maybe<Scalars['String']['output']>;\n};\n\n/** Possible AfterAuth message types */\nexport enum EnumAfterAuthType {\n  /** TwoFactorConfiguration */\n  TwoFactorConfiguration = 'TwoFactorConfiguration'\n}\n\n/** Possible AppVersion messages */\nexport enum EnumAppMaintenanceType {\n  /** A new version of the app is available. */\n  AppVersion = 'app_version',\n  /** The app configuration has changed. */\n  ConfigChanged = 'config_changed',\n  /** App is restarting. */\n  RestartAuto = 'restart_auto',\n  /** App needs a restart. */\n  RestartManual = 'restart_manual'\n}\n\n/** Option to choose the appearance theme */\nexport enum EnumAppearanceTheme {\n  /** Prefer color scheme as indicated by the operating system. */\n  Auto = 'auto',\n  /** A color scheme that uses light-colored elements on a dark background. */\n  Dark = 'dark',\n  /** A color scheme that uses dark-colored elements on a light background. */\n  Light = 'light'\n}\n\n/** Available thirdparty authentication providers */\nexport enum EnumAuthenticationProvider {\n  Facebook = 'facebook',\n  Github = 'github',\n  Gitlab = 'gitlab',\n  GoogleOauth2 = 'google_oauth2',\n  Linkedin = 'linkedin',\n  MicrosoftOffice365 = 'microsoft_office365',\n  OpenidConnect = 'openid_connect',\n  Saml = 'saml',\n  Sso = 'sso',\n  Twitter = 'twitter',\n  Weibo = 'weibo'\n}\n\n/** The channel area type */\nexport enum EnumChannelArea {\n  EmailAccount = 'Email__Account',\n  EmailNotification = 'Email__Notification',\n  FacebookAccount = 'Facebook__Account',\n  GoogleAccount = 'Google__Account',\n  Microsoft365Account = 'Microsoft365__Account',\n  MicrosoftGraphAccount = 'MicrosoftGraph__Account',\n  SmsAccount = 'Sms__Account',\n  SmsNotification = 'Sms__Notification',\n  TelegramBot = 'Telegram__Bot',\n  TwitterAccount = 'Twitter__Account',\n  WhatsAppBusiness = 'WhatsApp__Business'\n}\n\n/** Inbound email protocols/adapters */\nexport enum EnumChannelEmailInboundAdapter {\n  Imap = 'imap',\n  Pop3 = 'pop3'\n}\n\n/** Outbound email protocols/adapters */\nexport enum EnumChannelEmailOutboundAdapter {\n  Sendmail = 'sendmail',\n  Smtp = 'smtp'\n}\n\n/** Possible values for email SSL/TLS transport security */\nexport enum EnumChannelEmailSsl {\n  Off = 'off',\n  Ssl = 'ssl',\n  Starttls = 'starttls'\n}\n\n/** All available form updaters */\nexport enum EnumFormUpdaterId {\n  FormUpdaterUpdaterGuidedSetupEmailArchive = 'FormUpdater__Updater__GuidedSetup__EmailArchive',\n  FormUpdaterUpdaterGuidedSetupEmailInbound = 'FormUpdater__Updater__GuidedSetup__EmailInbound',\n  FormUpdaterUpdaterGuidedSetupEmailNotification = 'FormUpdater__Updater__GuidedSetup__EmailNotification',\n  FormUpdaterUpdaterGuidedSetupEmailOutbound = 'FormUpdater__Updater__GuidedSetup__EmailOutbound',\n  FormUpdaterUpdaterOrganizationEdit = 'FormUpdater__Updater__Organization__Edit',\n  FormUpdaterUpdaterTicketCreate = 'FormUpdater__Updater__Ticket__Create',\n  FormUpdaterUpdaterTicketEdit = 'FormUpdater__Updater__Ticket__Edit',\n  FormUpdaterUpdaterTicketTimeAccounting = 'FormUpdater__Updater__Ticket__TimeAccounting',\n  FormUpdaterUpdaterUserCreate = 'FormUpdater__Updater__User__Create',\n  FormUpdaterUpdaterUserCurrentNewAccessToken = 'FormUpdater__Updater__User__Current__NewAccessToken',\n  FormUpdaterUpdaterUserEdit = 'FormUpdater__Updater__User__Edit',\n  FormUpdaterUpdaterUserInvite = 'FormUpdater__Updater__User__Invite',\n  FormUpdaterUpdaterUserNotifications = 'FormUpdater__Updater__User__Notifications'\n}\n\n/** Link type */\nexport enum EnumLinkType {\n  /** Target is child of source */\n  Child = 'child',\n  /** Equally related */\n  Normal = 'normal',\n  /** Target is parent of source */\n  Parent = 'parent'\n}\n\n/** Available notification sound files */\nexport enum EnumNotificationSoundFile {\n  Bell = 'Bell',\n  Kalimba = 'Kalimba',\n  Marimba = 'Marimba',\n  Peep = 'Peep',\n  Plop = 'Plop',\n  Ring = 'Ring',\n  Space = 'Space',\n  Wood = 'Wood',\n  Xylo = 'Xylo'\n}\n\n/** All backend managed objects */\nexport enum EnumObjectManagerObjects {\n  Group = 'Group',\n  Organization = 'Organization',\n  Ticket = 'Ticket',\n  TicketArticle = 'TicketArticle',\n  User = 'User'\n}\n\n/** Option to choose SQL sorting direction */\nexport enum EnumOrderDirection {\n  /** Sort with ascending order */\n  Ascending = 'ASCENDING',\n  /** Sort with descending order */\n  Descending = 'DESCENDING'\n}\n\n/** Different user access levels */\nexport enum EnumPermissionAccess {\n  Change = 'change',\n  Create = 'create',\n  Full = 'full',\n  Overview = 'overview',\n  Read = 'read'\n}\n\n/** All available public links screens */\nexport enum EnumPublicLinksScreen {\n  Login = 'login',\n  PasswordReset = 'password_reset',\n  Signup = 'signup'\n}\n\n/** All searchable models */\nexport enum EnumSearchableModels {\n  Organization = 'Organization',\n  Ticket = 'Ticket',\n  User = 'User'\n}\n\n/** Ticket article security options for email security methods */\nexport enum EnumSecurityOption {\n  /** Encrypt article */\n  Encryption = 'encryption',\n  /** Sign article */\n  Sign = 'sign'\n}\n\n/** Available email security methods */\nexport enum EnumSecurityStateType {\n  /** PGP */\n  Pgp = 'PGP',\n  /** S/MIME */\n  Smime = 'SMIME'\n}\n\n/** Third-party system source */\nexport enum EnumSystemImportSource {\n  Freshdesk = 'freshdesk',\n  Kayako = 'kayako',\n  Otrs = 'otrs',\n  Zendesk = 'zendesk'\n}\n\n/** Possible system setup status */\nexport enum EnumSystemSetupInfoStatus {\n  Automated = 'automated',\n  Done = 'done',\n  InProgress = 'in_progress',\n  New = 'new'\n}\n\n/** Possible system setup types */\nexport enum EnumSystemSetupInfoType {\n  Auto = 'auto',\n  Import = 'import',\n  Manual = 'manual'\n}\n\n/** All taskbar app values */\nexport enum EnumTaskbarApp {\n  Desktop = 'desktop',\n  Mobile = 'mobile'\n}\n\n/** All taskbar entity values */\nexport enum EnumTaskbarEntity {\n  OrganizationProfile = 'OrganizationProfile',\n  Search = 'Search',\n  TicketCreate = 'TicketCreate',\n  TicketZoom = 'TicketZoom',\n  UserProfile = 'UserProfile'\n}\n\n/** All taskbar entity access type values */\nexport enum EnumTaskbarEntityAccess {\n  /** Access to this entity is forbidden */\n  Forbidden = 'Forbidden',\n  /** Access to this entity is granted */\n  Granted = 'Granted',\n  /** The entity could not be found */\n  NotFound = 'NotFound'\n}\n\n/** Option to choose SQL sorting direction */\nexport enum EnumTextDirection {\n  /** Left-to-right */\n  Ltr = 'ltr',\n  /** Right-to-left */\n  Rtl = 'rtl'\n}\n\n/** Ticket article sender names */\nexport enum EnumTicketArticleSenderName {\n  Agent = 'Agent',\n  Customer = 'Customer',\n  System = 'System'\n}\n\n/** Possible values for issue tracker item states */\nexport enum EnumTicketExternalReferencesIssueTrackerItemState {\n  Closed = 'closed',\n  Open = 'open'\n}\n\n/** Possible values for issue tracker type */\nexport enum EnumTicketExternalReferencesIssueTrackerType {\n  /** GitHub */\n  Github = 'github',\n  /** GitLab */\n  Gitlab = 'gitlab'\n}\n\n/** Option to choose the ticket screen behavior */\nexport enum EnumTicketScreenBehavior {\n  /** Next in overview */\n  CloseNextInOverview = 'closeNextInOverview',\n  /** Close tab */\n  CloseTab = 'closeTab',\n  /** Close tab on ticket close */\n  CloseTabOnTicketClose = 'closeTabOnTicketClose',\n  /** Stay on tab */\n  StayOnTab = 'stayOnTab'\n}\n\n/** Ticket state color code */\nexport enum EnumTicketStateColorCode {\n  /** Closed. */\n  Closed = 'closed',\n  /** Requires urgent attention. */\n  Escalating = 'escalating',\n  /** Ready for action. */\n  Open = 'open',\n  /** Marked as pending; no immediate action required. */\n  Pending = 'pending'\n}\n\n/** Possible two factor authentication methods (availability depends on system configuration) */\nexport enum EnumTwoFactorAuthenticationMethod {\n  /** Authenticator App */\n  AuthenticatorApp = 'authenticator_app',\n  /** Security Keys */\n  SecurityKeys = 'security_keys'\n}\n\n/** User contact option */\nexport enum EnumUserContact {\n  /** User email address */\n  Email = 'email',\n  /** User phone number */\n  Phone = 'phone'\n}\n\n/** All user error exception values */\nexport enum EnumUserErrorException {\n  ServiceTicketUpdateValidatorChecklistCompletedError = 'Service__Ticket__Update__Validator__ChecklistCompleted__Error',\n  ServiceTicketUpdateValidatorTimeAccountingError = 'Service__Ticket__Update__Validator__TimeAccounting__Error'\n}\n\n/** Represents the form changed field information. */\nexport type FormUpdaterChangedFieldInput = {\n  /** Changed field name */\n  name: Scalars['String']['input'];\n  /** New value from changed field */\n  newValue?: InputMaybe<Scalars['JSON']['input']>;\n  /** Old value from changed field */\n  oldValue?: InputMaybe<Scalars['JSON']['input']>;\n};\n\n/** Represents the form meta information. */\nexport type FormUpdaterMetaInput = {\n  /** Additional data for form updater */\n  additionalData?: InputMaybe<Scalars['JSON']['input']>;\n  /** Changed field information */\n  changedField?: InputMaybe<FormUpdaterChangedFieldInput>;\n  /** List of dirty fields */\n  dirtyFields?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** Generated frontend form ID */\n  formId: Scalars['FormId']['input'];\n  /** Initial form updater request */\n  initial?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Generated frontend request ID */\n  requestId?: InputMaybe<Scalars['String']['input']>;\n  /** After form reset form updater request */\n  reset?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** Represents the relation field information. */\nexport type FormUpdaterRelationField = {\n  /** Optional filter ids from the frontend */\n  filterIds?: InputMaybe<Array<Scalars['Int']['input']>>;\n  /** Field name of the relation field */\n  name: Scalars['String']['input'];\n  /** Relation name for the current field (e.g. group) */\n  relation: Scalars['String']['input'];\n};\n\n/** Holds the fields and flags information for an form updater resolver. */\nexport type FormUpdaterResult = {\n  __typename?: 'FormUpdaterResult';\n  fields: Scalars['JSON']['output'];\n  flags: Scalars['JSON']['output'];\n};\n\n/** Autogenerated return type of FormUploadCacheAdd. */\nexport type FormUploadCacheAddPayload = {\n  __typename?: 'FormUploadCacheAddPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Information about the uploaded files. */\n  uploadedFiles: Array<StoredFile>;\n};\n\n/** Autogenerated return type of FormUploadCacheRemove. */\nexport type FormUploadCacheRemovePayload = {\n  __typename?: 'FormUploadCacheRemovePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Groups */\nexport type Group = {\n  __typename?: 'Group';\n  active: Scalars['Boolean']['output'];\n  assignmentTimeout?: Maybe<Scalars['Int']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  emailAddress?: Maybe<EmailAddressParsed>;\n  followUpAssignment?: Maybe<Scalars['Boolean']['output']>;\n  followUpPossible?: Maybe<Scalars['String']['output']>;\n  id: Scalars['ID']['output'];\n  name?: Maybe<Scalars['String']['output']>;\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  sharedDrafts?: Maybe<Scalars['Boolean']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** The connection type for Group. */\nexport type GroupConnection = {\n  __typename?: 'GroupConnection';\n  /** A list of edges. */\n  edges: Array<GroupEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Indicates the total number of available records. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** An edge in a connection. */\nexport type GroupEdge = {\n  __typename?: 'GroupEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String']['output'];\n  /** The item at the end of the edge. */\n  node: Group;\n};\n\n/** Autogenerated return type of GuidedSetupSetSystemInformation. */\nexport type GuidedSetupSetSystemInformationPayload = {\n  __typename?: 'GuidedSetupSetSystemInformationPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** System setup information updated successfully? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** History record */\nexport type HistoryGroup = {\n  __typename?: 'HistoryGroup';\n  /** Date and time of the history record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** Records of the history record */\n  records: Array<HistoryRecord>;\n};\n\n/** History record */\nexport type HistoryRecord = {\n  __typename?: 'HistoryRecord';\n  /** Events of the history record */\n  events: Array<HistoryRecordEvent>;\n  /** User or system service who created the history record */\n  issuer: HistoryRecordIssuer;\n};\n\n/** History record event */\nexport type HistoryRecordEvent = {\n  __typename?: 'HistoryRecordEvent';\n  /** Action of the event */\n  action: Scalars['String']['output'];\n  /** Attribute of the event */\n  attribute?: Maybe<Scalars['String']['output']>;\n  /** Changes of the event */\n  changes?: Maybe<Scalars['JSON']['output']>;\n  /** Date and time of the event */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** Object of the event */\n  object: HistoryRecordEventObject;\n};\n\n/** History record event object */\nexport type HistoryRecordEventObject = Checklist | ChecklistItem | Group | Mention | ObjectClass | Organization | Ticket | TicketArticle | TicketSharedDraftZoom | User;\n\n/** History record issuer */\nexport type HistoryRecordIssuer = Job | ObjectClass | PostmasterFilter | Trigger | User;\n\n/** Import job information */\nexport type ImportJob = {\n  __typename?: 'ImportJob';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  finishedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  id: Scalars['ID']['output'];\n  name: Scalars['String']['output'];\n  result?: Maybe<Scalars['JSON']['output']>;\n  startedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Objects found by search */\nexport type Item = Organization | Ticket | User;\n\n/** Jobs */\nexport type Job = {\n  __typename?: 'Job';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  /** Name of the job */\n  name: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Key/value type with complex (JSON) values. */\nexport type KeyComplexValue = {\n  __typename?: 'KeyComplexValue';\n  key: Scalars['String']['output'];\n  value?: Maybe<Scalars['JSON']['output']>;\n};\n\n/** Key/value type with string values. */\nexport type KeyValue = {\n  __typename?: 'KeyValue';\n  key: Scalars['String']['output'];\n  value?: Maybe<Scalars['String']['output']>;\n};\n\n/** Knowledge Base */\nexport type KnowledgeBase = {\n  __typename?: 'KnowledgeBase';\n  active: Scalars['Boolean']['output'];\n  categoryLayout: Scalars['String']['output'];\n  colorHeader: Scalars['String']['output'];\n  colorHeaderLink: Scalars['String']['output'];\n  colorHighlight: Scalars['String']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  customAddress?: Maybe<Scalars['String']['output']>;\n  homepageLayout: Scalars['String']['output'];\n  iconset: Scalars['String']['output'];\n  id: Scalars['ID']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n};\n\n/** Knowledge Base Answer */\nexport type KnowledgeBaseAnswer = {\n  __typename?: 'KnowledgeBaseAnswer';\n  archivedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  archivedBy?: Maybe<User>;\n  /** resolver for Rails' belongs_to relationship */\n  category: KnowledgeBaseCategory;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  internalAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  internalBy?: Maybe<User>;\n  internalNote?: Maybe<Scalars['String']['output']>;\n  position: Scalars['Int']['output'];\n  promoted?: Maybe<Scalars['Boolean']['output']>;\n  publishedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  publishedBy?: Maybe<User>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Autogenerated return type of KnowledgeBaseAnswerSuggestionContentTransform. */\nexport type KnowledgeBaseAnswerSuggestionContentTransformPayload = {\n  __typename?: 'KnowledgeBaseAnswerSuggestionContentTransformPayload';\n  /** Attachments of the answer */\n  attachments?: Maybe<Array<StoredFile>>;\n  /** Answer translation content */\n  body?: Maybe<Scalars['String']['output']>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n};\n\n/** Knowledge Base Answer Translation */\nexport type KnowledgeBaseAnswerTranslation = {\n  __typename?: 'KnowledgeBaseAnswerTranslation';\n  /** resolver for Rails' belongs_to relationship */\n  answer: KnowledgeBaseAnswer;\n  categoryTreeTranslation: Array<KnowledgeBaseCategoryTranslation>;\n  /** resolver for Rails' belongs_to relationship */\n  content: KnowledgeBaseAnswerTranslationContent;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  kbLocale: KnowledgeBaseLocale;\n  title: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Knowledge Base Answer Translation Content */\nexport type KnowledgeBaseAnswerTranslationContent = {\n  __typename?: 'KnowledgeBaseAnswerTranslationContent';\n  body?: Maybe<Scalars['String']['output']>;\n  bodyPrepared?: Maybe<Scalars['String']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  hasAttachments: Scalars['Boolean']['output'];\n  id: Scalars['ID']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n};\n\n/** Knowledge Base Category */\nexport type KnowledgeBaseCategory = {\n  __typename?: 'KnowledgeBaseCategory';\n  categoryIcon: Scalars['String']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  id: Scalars['ID']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  knowledgeBase: KnowledgeBase;\n  /** resolver for Rails' belongs_to relationship */\n  parent?: Maybe<KnowledgeBaseCategory>;\n  position: Scalars['Int']['output'];\n  translations: Array<KnowledgeBaseCategoryTranslation>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n};\n\n/** Knowledge Base Category Translation */\nexport type KnowledgeBaseCategoryTranslation = {\n  __typename?: 'KnowledgeBaseCategoryTranslation';\n  /** resolver for Rails' belongs_to relationship */\n  category: KnowledgeBaseCategory;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  id: Scalars['ID']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  kbLocale: KnowledgeBaseLocale;\n  title: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n};\n\n/** Knowledge Base Locale */\nexport type KnowledgeBaseLocale = {\n  __typename?: 'KnowledgeBaseLocale';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  id: Scalars['ID']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  knowledgeBase: KnowledgeBase;\n  primary: Scalars['Boolean']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  systemLocale: Locale;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n};\n\n/** Links between objects */\nexport type Link = {\n  __typename?: 'Link';\n  item: LinkObject;\n  type: EnumLinkType;\n};\n\n/** Autogenerated return type of LinkAdd. */\nexport type LinkAddPayload = {\n  __typename?: 'LinkAddPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The created link */\n  link?: Maybe<Link>;\n};\n\n/** Link input */\nexport type LinkInput = {\n  /** Source object ID */\n  sourceId: Scalars['ID']['input'];\n  /** Target object ID */\n  targetId: Scalars['ID']['input'];\n  /** Link type */\n  type: EnumLinkType;\n};\n\n/** Linkable objects */\nexport type LinkObject = KnowledgeBaseAnswerTranslation | Ticket;\n\n/** Autogenerated return type of LinkRemove. */\nexport type LinkRemovePayload = {\n  __typename?: 'LinkRemovePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of LinkUpdates. */\nexport type LinkUpdatesPayload = {\n  __typename?: 'LinkUpdatesPayload';\n  /** Link records */\n  links?: Maybe<Array<Link>>;\n};\n\n/** Locales available in the system */\nexport type Locale = {\n  __typename?: 'Locale';\n  active: Scalars['Boolean']['output'];\n  alias?: Maybe<Scalars['String']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  dir: EnumTextDirection;\n  id: Scalars['ID']['output'];\n  locale: Scalars['String']['output'];\n  name: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n};\n\n/** Locate an organization via id or internalId. */\nexport type LocatorOrganizationInput = {\n  /** Organization ID */\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n  /** Organization internalId */\n  organizationInternalId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** Locate a ticket via id, internalId or number. */\nexport type LocatorTicketInput = {\n  /** Ticket ID */\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  /** Ticket internalId */\n  ticketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  /** Ticket number */\n  ticketNumber?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Locate a User via id or internalId. */\nexport type LocatorUserInput = {\n  /** User ID */\n  userId?: InputMaybe<Scalars['ID']['input']>;\n  /** User internalId */\n  userInternalId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** The user login fields. */\nexport type LoginInput = {\n  /** User name */\n  login: Scalars['String']['input'];\n  /** Password */\n  password: Scalars['String']['input'];\n  /** Remember me - Session expire date will be set to one year */\n  rememberMe?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Two factor authentication */\n  twoFactorAuthentication?: InputMaybe<TwoFactorAuthenticationInput>;\n  /** Two factor recovery */\n  twoFactorRecovery?: InputMaybe<TwoFactorRecoveryInput>;\n};\n\n/** Autogenerated return type of Login. */\nexport type LoginPayload = {\n  __typename?: 'LoginPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The current session, if the login was successful. */\n  session?: Maybe<Session>;\n  /** Two factor authentication methods available for the user about to log-in. */\n  twoFactorRequired?: Maybe<UserLoginTwoFactorMethods>;\n};\n\n/** Autogenerated return type of Logout. */\nexport type LogoutPayload = {\n  __typename?: 'LogoutPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** External logout URL (e.g. for SAML)? */\n  externalLogoutUrl?: Maybe<Scalars['String']['output']>;\n  /** Was the logout successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Returns a list of macros */\nexport type Macro = {\n  __typename?: 'Macro';\n  active: Scalars['Boolean']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  name: Scalars['String']['output'];\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  perform: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n  uxFlowNextUp: Scalars['String']['output'];\n};\n\n/** Autogenerated return type of MacrosUpdate. */\nexport type MacrosUpdatePayload = {\n  __typename?: 'MacrosUpdatePayload';\n  /** The group IDs from the updated macro */\n  groupIds?: Maybe<Array<Scalars['ID']['output']>>;\n  /** Macro ID that was updated */\n  macroId?: Maybe<Scalars['ID']['output']>;\n  /** The macro ID that was removed */\n  removeMacroId?: Maybe<Scalars['ID']['output']>;\n};\n\n/** Mention */\nexport type Mention = {\n  __typename?: 'Mention';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  mentionable: Ticket;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n  /** resolver for Rails' belongs_to relationship */\n  user: User;\n  userTicketAccess: PolicyMentionUserTicketAccess;\n};\n\n/** The connection type for Mention. */\nexport type MentionConnection = {\n  __typename?: 'MentionConnection';\n  /** A list of edges. */\n  edges: Array<MentionEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Indicates the total number of available records. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** An edge in a connection. */\nexport type MentionEdge = {\n  __typename?: 'MentionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String']['output'];\n  /** The item at the end of the edge. */\n  node: Mention;\n};\n\n/** Autogenerated return type of MentionSubscribe. */\nexport type MentionSubscribePayload = {\n  __typename?: 'MentionSubscribePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of MentionUnsubscribe. */\nexport type MentionUnsubscribePayload = {\n  __typename?: 'MentionUnsubscribePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** All available mutations */\nexport type Mutations = {\n  __typename?: 'Mutations';\n  /** Sends an email with a token to login via password. */\n  adminPasswordAuthSend?: Maybe<AdminPasswordAuthSendPayload>;\n  /** Verify admin password authentication */\n  adminPasswordAuthVerify?: Maybe<AdminPasswordAuthVerifyPayload>;\n  /** Create a new email channel. This does not perform email validation. */\n  channelEmailAdd?: Maybe<ChannelEmailAddPayload>;\n  /** Try to guess email channel configuration from user credentials */\n  channelEmailGuessConfiguration?: Maybe<ChannelEmailGuessConfigurationPayload>;\n  /** Set confioguration for sending system notification emails */\n  channelEmailSetNotificationConfiguration?: Maybe<ChannelEmailSetNotificationConfigurationPayload>;\n  /** Validate an inbound email channel configuration by trying to fetch email */\n  channelEmailValidateConfigurationInbound?: Maybe<ChannelEmailValidateConfigurationInboundPayload>;\n  /** Validate an outbound email channel configuration by sending a test email */\n  channelEmailValidateConfigurationOutbound?: Maybe<ChannelEmailValidateConfigurationOutboundPayload>;\n  /** Validate an email channel configuration first sending and then fetching that same mail */\n  channelEmailValidateConfigurationRoundtrip?: Maybe<ChannelEmailValidateConfigurationRoundtripPayload>;\n  /** Upload files for a form */\n  formUploadCacheAdd?: Maybe<FormUploadCacheAddPayload>;\n  /** Remove uploaded files for a form */\n  formUploadCacheRemove?: Maybe<FormUploadCacheRemovePayload>;\n  /** Sets basic system information */\n  guidedSetupSetSystemInformation?: Maybe<GuidedSetupSetSystemInformationPayload>;\n  /** Transform the content of a knowledge base answer suggestion to be usable in the frontend */\n  knowledgeBaseAnswerSuggestionContentTransform?: Maybe<KnowledgeBaseAnswerSuggestionContentTransformPayload>;\n  /** Add a link between objects */\n  linkAdd?: Maybe<LinkAddPayload>;\n  /** Remove link between objects */\n  linkRemove?: Maybe<LinkRemovePayload>;\n  /** Performs a user login to create a session */\n  login?: Maybe<LoginPayload>;\n  /** End the current session */\n  logout?: Maybe<LogoutPayload>;\n  /** Subscribe to updates to an object. */\n  mentionSubscribe?: Maybe<MentionSubscribePayload>;\n  /** Unsubscribe from updates to an object. */\n  mentionUnsubscribe?: Maybe<MentionUnsubscribePayload>;\n  /** Marks notifications for active user as seen */\n  onlineNotificationDelete?: Maybe<OnlineNotificationDeletePayload>;\n  /** Marks notifications for active user as seen */\n  onlineNotificationMarkAllAsSeen?: Maybe<OnlineNotificationMarkAllAsSeenPayload>;\n  /** Mark an online notification as seen */\n  onlineNotificationSeen?: Maybe<OnlineNotificationSeenPayload>;\n  /** Update organization data. */\n  organizationUpdate?: Maybe<OrganizationUpdatePayload>;\n  /** Verify and apply third-party system import configuration */\n  systemImportConfiguration?: Maybe<SystemImportConfigurationPayload>;\n  /** Start the system import process */\n  systemImportStart?: Maybe<SystemImportStartPayload>;\n  /** Lock critical section, system setup. */\n  systemSetupLock?: Maybe<SystemSetupLockPayload>;\n  /** Executes the auto wizard for automated system set-up. */\n  systemSetupRunAutoWizard?: Maybe<SystemSetupRunAutoWizardPayload>;\n  /** Unlock critical section, system setup. */\n  systemSetupUnlock?: Maybe<SystemSetupUnlockPayload>;\n  /** Assign a tag to an object. This will create tags as needed. */\n  tagAssignmentAdd?: Maybe<TagAssignmentAddPayload>;\n  /** Removes a tag from an object. */\n  tagAssignmentRemove?: Maybe<TagAssignmentRemovePayload>;\n  /** Update tags of an object. This will create tags as needed. */\n  tagAssignmentUpdate?: Maybe<TagAssignmentUpdatePayload>;\n  /** Change ticket article visibility from public to internal or vice versa */\n  ticketArticleChangeVisibility?: Maybe<TicketArticleChangeVisibilityPayload>;\n  /** Deletes ticket article if eligible */\n  ticketArticleDelete?: Maybe<TicketArticleDeletePayload>;\n  /** Prepare for a new forward or reply email article */\n  ticketArticleEmailForwardReply?: Maybe<TicketArticleEmailForwardReplyPayload>;\n  /** Retry an article's media download. */\n  ticketArticleRetryMediaDownload?: Maybe<TicketArticleRetryMediaDownloadPayload>;\n  /** Retry an article's security process. */\n  ticketArticleRetrySecurityProcess?: Maybe<TicketArticleRetrySecurityProcessPayload>;\n  /** Create an empty checklist or a checklist based on a template for a ticket. */\n  ticketChecklistAdd?: Maybe<TicketChecklistAddPayload>;\n  /** Delete a ticket checklist. */\n  ticketChecklistDelete?: Maybe<TicketChecklistDeletePayload>;\n  /** Delete a ticket checklist item. */\n  ticketChecklistItemDelete?: Maybe<TicketChecklistItemDeletePayload>;\n  /** Update order of the ticket checklist items. */\n  ticketChecklistItemOrderUpdate?: Maybe<TicketChecklistItemOrderUpdatePayload>;\n  /** Update or create a ticket checklist item. */\n  ticketChecklistItemUpsert?: Maybe<TicketChecklistItemUpsertPayload>;\n  /** Update title of the ticket checklist. */\n  ticketChecklistTitleUpdate?: Maybe<TicketChecklistTitleUpdatePayload>;\n  /** Create a new ticket. */\n  ticketCreate?: Maybe<TicketCreatePayload>;\n  /** Update a ticket. */\n  ticketCustomerUpdate?: Maybe<TicketCustomerUpdatePayload>;\n  /** Add idoit objects to a ticket or just resolve them for ticket creation. */\n  ticketExternalReferencesIdoitObjectAdd?: Maybe<TicketExternalReferencesIdoitObjectAddPayload>;\n  /** Remove an idoit object from a ticket. */\n  ticketExternalReferencesIdoitObjectRemove?: Maybe<TicketExternalReferencesIdoitObjectRemovePayload>;\n  /** Add an issue tracker link to a ticket or just resolve it for ticket creation. */\n  ticketExternalReferencesIssueTrackerItemAdd?: Maybe<TicketExternalReferencesIssueTrackerItemAddPayload>;\n  /** Removes an issue tracker link from an ticket. */\n  ticketExternalReferencesIssueTrackerItemRemove?: Maybe<TicketExternalReferencesIssueTrackerItemRemovePayload>;\n  /** Deletes the desired live user entry. */\n  ticketLiveUserDelete?: Maybe<TicketLiveUserDeletePayload>;\n  /** Updates the current live user entry. If no matching live user entry is found, a new live user entry for the current user and ticket will be created. */\n  ticketLiveUserUpsert?: Maybe<TicketLiveUserUpsertPayload>;\n  /** Create a new ticket. */\n  ticketMerge?: Maybe<TicketMergePayload>;\n  /** Deletes ticket shared draft */\n  ticketSharedDraftStartCreate?: Maybe<TicketSharedDraftStartCreatePayload>;\n  /** Deletes ticket shared draft */\n  ticketSharedDraftStartDelete?: Maybe<TicketSharedDraftStartDeletePayload>;\n  /** Deletes ticket shared draft */\n  ticketSharedDraftStartUpdate?: Maybe<TicketSharedDraftStartUpdatePayload>;\n  /** Create ticket shared draft in detail view */\n  ticketSharedDraftZoomCreate?: Maybe<TicketSharedDraftZoomCreatePayload>;\n  /** Deletes ticket shared draft */\n  ticketSharedDraftZoomDelete?: Maybe<TicketSharedDraftZoomDeletePayload>;\n  /** Update ticket shared draft in detail view */\n  ticketSharedDraftZoomUpdate?: Maybe<TicketSharedDraftZoomUpdatePayload>;\n  /** Update a ticket. */\n  ticketUpdate?: Maybe<TicketUpdatePayload>;\n  /** Fetches the initiation phase data for a two-factor authentication method. */\n  twoFactorMethodInitiateAuthentication?: Maybe<TwoFactorMethodInitiateAuthenticationPayload>;\n  /** Add a new user. */\n  userAdd?: Maybe<UserAddPayload>;\n  /** Add the first admin user during system set-up and log that user in. */\n  userAddFirstAdmin?: Maybe<UserAddFirstAdminPayload>;\n  /** Create a new user access token */\n  userCurrentAccessTokenAdd?: Maybe<UserCurrentAccessTokenAddPayload>;\n  /** Deletes user access token */\n  userCurrentAccessTokenDelete?: Maybe<UserCurrentAccessTokenDeletePayload>;\n  /** Update user profile appearance settings */\n  userCurrentAppearance?: Maybe<UserCurrentAppearancePayload>;\n  /** Add a new avatar for the currently logged in user. */\n  userCurrentAvatarAdd?: Maybe<UserCurrentAvatarAddPayload>;\n  /** Delete an existing avatar for the currently logged in user. */\n  userCurrentAvatarDelete?: Maybe<UserCurrentAvatarDeletePayload>;\n  /** Select avatar for the currently logged in user. */\n  userCurrentAvatarSelect?: Maybe<UserCurrentAvatarSelectPayload>;\n  /** Fetch calendar subscriptions settings */\n  userCurrentCalendarSubscriptionUpdate?: Maybe<UserCurrentCalendarSubscriptionUpdatePayload>;\n  /** Change user password. */\n  userCurrentChangePassword?: Maybe<UserCurrentChangePasswordPayload>;\n  /** Delete a user (session) device. */\n  userCurrentDeviceDelete?: Maybe<UserCurrentDeviceDeletePayload>;\n  /** Update the language of the currently logged in user */\n  userCurrentLocale?: Maybe<UserCurrentLocalePayload>;\n  /** Reset user notification settings */\n  userCurrentNotificationPreferencesReset?: Maybe<UserCurrentNotificationPreferencesResetPayload>;\n  /** Update user notification settings */\n  userCurrentNotificationPreferencesUpdate?: Maybe<UserCurrentNotificationPreferencesUpdatePayload>;\n  /** Update user profile out of office settings */\n  userCurrentOutOfOffice?: Maybe<UserCurrentOutOfOfficePayload>;\n  /** Reset the overview sorting for the current user */\n  userCurrentOverviewResetOrder?: Maybe<UserCurrentOverviewResetOrderPayload>;\n  /** Update the last used information of the current user in their user preferences */\n  userCurrentOverviewUpdateLastUsed?: Maybe<UserCurrentOverviewUpdateLastUsedPayload>;\n  /** Update the overview sorting for the current user */\n  userCurrentOverviewUpdateOrder?: Maybe<UserCurrentOverviewUpdateOrderPayload>;\n  /** Check your password */\n  userCurrentPasswordCheck?: Maybe<UserCurrentPasswordCheckPayload>;\n  /** Reset recent view records of the current user */\n  userCurrentRecentViewReset?: Maybe<UserCurrentRecentViewResetPayload>;\n  /** Remove a linked account of the current user's profile */\n  userCurrentRemoveLinkedAccount?: Maybe<UserCurrentRemoveLinkedAccountPayload>;\n  /** Create a taskbar item for the currently logged-in user. */\n  userCurrentTaskbarItemAdd?: Maybe<UserCurrentTaskbarItemAddPayload>;\n  /** Delete a taskbar item of the currently logged-in user */\n  userCurrentTaskbarItemDelete?: Maybe<UserCurrentTaskbarItemDeletePayload>;\n  /** Sort taskbar item list by priority. */\n  userCurrentTaskbarItemListPrio?: Maybe<UserCurrentTaskbarItemListPrioPayload>;\n  /** Update last_contact_at for a taskbar item of the currently logged-in user */\n  userCurrentTaskbarItemTouchLastContact?: Maybe<UserCurrentTaskbarItemTouchLastContactPayload>;\n  /** Update a taskbar item of the currently logged-in user */\n  userCurrentTaskbarItemUpdate?: Maybe<UserCurrentTaskbarItemUpdatePayload>;\n  /** Update user ticket screen behavior settings */\n  userCurrentTicketScreenBehavior?: Maybe<UserCurrentTicketScreenBehaviorPayload>;\n  /** Regenerates new two factor recovery codes */\n  userCurrentTwoFactorRecoveryCodesGenerate?: Maybe<UserCurrentTwoFactorRecoveryCodesGeneratePayload>;\n  /** Removes given two factor authentication method */\n  userCurrentTwoFactorRemoveMethod?: Maybe<UserCurrentTwoFactorRemoveMethodPayload>;\n  /** Removes given two factor authentication method */\n  userCurrentTwoFactorRemoveMethodCredentials?: Maybe<UserCurrentTwoFactorRemoveMethodCredentialsPayload>;\n  /** Sets given two factor authentication method as default */\n  userCurrentTwoFactorSetDefaultMethod?: Maybe<UserCurrentTwoFactorSetDefaultMethodPayload>;\n  /** Verifies two factor authentication method configuration. */\n  userCurrentTwoFactorVerifyMethodConfiguration?: Maybe<UserCurrentTwoFactorVerifyMethodConfigurationPayload>;\n  /** Send password reset link to the user. */\n  userPasswordResetSend?: Maybe<UserPasswordResetSendPayload>;\n  /** Update user password via reset token. */\n  userPasswordResetUpdate?: Maybe<UserPasswordResetUpdatePayload>;\n  /** Verify password reset token. */\n  userPasswordResetVerify?: Maybe<UserPasswordResetVerifyPayload>;\n  /** Sign-up / register user. */\n  userSignup?: Maybe<UserSignupPayload>;\n  /** Resend signup verification email. */\n  userSignupResend?: Maybe<UserSignupResendPayload>;\n  /** Verify a signed up user. */\n  userSignupVerify?: Maybe<UserSignupVerifyPayload>;\n  /** Update an existing user. */\n  userUpdate?: Maybe<UserUpdatePayload>;\n};\n\n\n/** All available mutations */\nexport type MutationsAdminPasswordAuthSendArgs = {\n  login: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsAdminPasswordAuthVerifyArgs = {\n  token: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsChannelEmailAddArgs = {\n  input: ChannelEmailAddInput;\n};\n\n\n/** All available mutations */\nexport type MutationsChannelEmailGuessConfigurationArgs = {\n  emailAddress: Scalars['String']['input'];\n  password: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsChannelEmailSetNotificationConfigurationArgs = {\n  outboundConfiguration: ChannelEmailOutboundConfigurationInput;\n};\n\n\n/** All available mutations */\nexport type MutationsChannelEmailValidateConfigurationInboundArgs = {\n  inboundConfiguration: ChannelEmailInboundConfigurationInput;\n};\n\n\n/** All available mutations */\nexport type MutationsChannelEmailValidateConfigurationOutboundArgs = {\n  emailAddress: Scalars['String']['input'];\n  outboundConfiguration: ChannelEmailOutboundConfigurationInput;\n};\n\n\n/** All available mutations */\nexport type MutationsChannelEmailValidateConfigurationRoundtripArgs = {\n  emailAddress: Scalars['String']['input'];\n  inboundConfiguration: ChannelEmailInboundConfigurationInput;\n  outboundConfiguration: ChannelEmailOutboundConfigurationInput;\n};\n\n\n/** All available mutations */\nexport type MutationsFormUploadCacheAddArgs = {\n  files: Array<UploadFileInput>;\n  formId: Scalars['FormId']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsFormUploadCacheRemoveArgs = {\n  fileIds: Array<Scalars['ID']['input']>;\n  formId: Scalars['FormId']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsGuidedSetupSetSystemInformationArgs = {\n  input: SystemInformation;\n};\n\n\n/** All available mutations */\nexport type MutationsKnowledgeBaseAnswerSuggestionContentTransformArgs = {\n  formId: Scalars['FormId']['input'];\n  translationId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsLinkAddArgs = {\n  input: LinkInput;\n};\n\n\n/** All available mutations */\nexport type MutationsLinkRemoveArgs = {\n  input: LinkInput;\n};\n\n\n/** All available mutations */\nexport type MutationsLoginArgs = {\n  input: LoginInput;\n};\n\n\n/** All available mutations */\nexport type MutationsMentionSubscribeArgs = {\n  objectId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsMentionUnsubscribeArgs = {\n  objectId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsOnlineNotificationDeleteArgs = {\n  onlineNotificationId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsOnlineNotificationMarkAllAsSeenArgs = {\n  onlineNotificationIds: Array<Scalars['ID']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsOnlineNotificationSeenArgs = {\n  objectId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsOrganizationUpdateArgs = {\n  id: Scalars['ID']['input'];\n  input: OrganizationInput;\n};\n\n\n/** All available mutations */\nexport type MutationsSystemImportConfigurationArgs = {\n  configuration: SystemImportConfigurationInput;\n};\n\n\n/** All available mutations */\nexport type MutationsSystemSetupLockArgs = {\n  ttl?: InputMaybe<Scalars['Int']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsSystemSetupRunAutoWizardArgs = {\n  token?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsSystemSetupUnlockArgs = {\n  value: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTagAssignmentAddArgs = {\n  objectId: Scalars['ID']['input'];\n  tag: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTagAssignmentRemoveArgs = {\n  objectId: Scalars['ID']['input'];\n  tag: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTagAssignmentUpdateArgs = {\n  objectId: Scalars['ID']['input'];\n  tags: Array<Scalars['String']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsTicketArticleChangeVisibilityArgs = {\n  articleId: Scalars['ID']['input'];\n  internal: Scalars['Boolean']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketArticleDeleteArgs = {\n  articleId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketArticleEmailForwardReplyArgs = {\n  articleId: Scalars['ID']['input'];\n  formId: Scalars['FormId']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketArticleRetryMediaDownloadArgs = {\n  articleId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketArticleRetrySecurityProcessArgs = {\n  articleId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketChecklistAddArgs = {\n  templateId?: InputMaybe<Scalars['ID']['input']>;\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketChecklistDeleteArgs = {\n  checklistId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketChecklistItemDeleteArgs = {\n  checklistId: Scalars['ID']['input'];\n  checklistItemId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketChecklistItemOrderUpdateArgs = {\n  checklistId: Scalars['ID']['input'];\n  order: Array<Scalars['ID']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsTicketChecklistItemUpsertArgs = {\n  checklistId: Scalars['ID']['input'];\n  checklistItemId?: InputMaybe<Scalars['ID']['input']>;\n  input: TicketChecklistItemInput;\n};\n\n\n/** All available mutations */\nexport type MutationsTicketChecklistTitleUpdateArgs = {\n  checklistId: Scalars['ID']['input'];\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsTicketCreateArgs = {\n  input: TicketCreateInput;\n};\n\n\n/** All available mutations */\nexport type MutationsTicketCustomerUpdateArgs = {\n  input: TicketCustomerUpdateInput;\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketExternalReferencesIdoitObjectAddArgs = {\n  idoitObjectIds: Array<Scalars['Int']['input']>;\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsTicketExternalReferencesIdoitObjectRemoveArgs = {\n  idoitObjectId: Scalars['Int']['input'];\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketExternalReferencesIssueTrackerItemAddArgs = {\n  issueTrackerLink: Scalars['UriHttpString']['input'];\n  issueTrackerType: EnumTicketExternalReferencesIssueTrackerType;\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsTicketExternalReferencesIssueTrackerItemRemoveArgs = {\n  issueTrackerLink: Scalars['UriHttpString']['input'];\n  issueTrackerType: EnumTicketExternalReferencesIssueTrackerType;\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketLiveUserDeleteArgs = {\n  app: EnumTaskbarApp;\n  id: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketLiveUserUpsertArgs = {\n  app: EnumTaskbarApp;\n  editing: Scalars['Boolean']['input'];\n  id: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketMergeArgs = {\n  sourceTicketId: Scalars['ID']['input'];\n  targetTicketId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketSharedDraftStartCreateArgs = {\n  input: TicketSharedDraftStartInput;\n  name: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketSharedDraftStartDeleteArgs = {\n  sharedDraftId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketSharedDraftStartUpdateArgs = {\n  input: TicketSharedDraftStartInput;\n  sharedDraftId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketSharedDraftZoomCreateArgs = {\n  input: TicketSharedDraftZoomInput;\n};\n\n\n/** All available mutations */\nexport type MutationsTicketSharedDraftZoomDeleteArgs = {\n  sharedDraftId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketSharedDraftZoomUpdateArgs = {\n  input: TicketSharedDraftZoomInput;\n  sharedDraftId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTicketUpdateArgs = {\n  input: TicketUpdateInput;\n  meta?: InputMaybe<TicketUpdateMetaInput>;\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsTwoFactorMethodInitiateAuthenticationArgs = {\n  login: Scalars['String']['input'];\n  password: Scalars['String']['input'];\n  twoFactorMethod: EnumTwoFactorAuthenticationMethod;\n};\n\n\n/** All available mutations */\nexport type MutationsUserAddArgs = {\n  input: UserInput;\n  sendInvite?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsUserAddFirstAdminArgs = {\n  input: UserSignupInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentAccessTokenAddArgs = {\n  input: UserAccessTokenInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentAccessTokenDeleteArgs = {\n  tokenId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentAppearanceArgs = {\n  theme: EnumAppearanceTheme;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentAvatarAddArgs = {\n  images: AvatarInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentAvatarDeleteArgs = {\n  id: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentAvatarSelectArgs = {\n  id: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentCalendarSubscriptionUpdateArgs = {\n  input: UserCalendarSubscriptionsConfigInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentChangePasswordArgs = {\n  currentPassword: Scalars['String']['input'];\n  newPassword: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentDeviceDeleteArgs = {\n  deviceId: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentLocaleArgs = {\n  locale: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentNotificationPreferencesUpdateArgs = {\n  groupIds?: InputMaybe<Array<Scalars['ID']['input']>>;\n  matrix: UserNotificationMatrixInput;\n  sound: UserNotificationSoundInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentOutOfOfficeArgs = {\n  input: OutOfOfficeInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentOverviewUpdateLastUsedArgs = {\n  overviewsLastUsed: Array<UserCurrentOverviewLastUsed>;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentOverviewUpdateOrderArgs = {\n  overviewIds: Array<Scalars['ID']['input']>;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentPasswordCheckArgs = {\n  password: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentRemoveLinkedAccountArgs = {\n  provider: EnumAuthenticationProvider;\n  uid: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTaskbarItemAddArgs = {\n  input: UserTaskbarItemInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTaskbarItemDeleteArgs = {\n  id: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTaskbarItemListPrioArgs = {\n  list: Array<UserTaskbarItemListPrioInput>;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTaskbarItemTouchLastContactArgs = {\n  id: Scalars['ID']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTaskbarItemUpdateArgs = {\n  id: Scalars['ID']['input'];\n  input: UserTaskbarItemInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTicketScreenBehaviorArgs = {\n  behavior: EnumTicketScreenBehavior;\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTwoFactorRecoveryCodesGenerateArgs = {\n  token: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTwoFactorRemoveMethodArgs = {\n  methodName: Scalars['String']['input'];\n  token: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTwoFactorRemoveMethodCredentialsArgs = {\n  credentialId: Scalars['String']['input'];\n  methodName: Scalars['String']['input'];\n  token: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTwoFactorSetDefaultMethodArgs = {\n  methodName: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserCurrentTwoFactorVerifyMethodConfigurationArgs = {\n  configuration: Scalars['JSON']['input'];\n  methodName: EnumTwoFactorAuthenticationMethod;\n  payload: Scalars['JSON']['input'];\n  token: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserPasswordResetSendArgs = {\n  username: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserPasswordResetUpdateArgs = {\n  password: Scalars['String']['input'];\n  token: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserPasswordResetVerifyArgs = {\n  token: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserSignupArgs = {\n  input: UserSignupInput;\n};\n\n\n/** All available mutations */\nexport type MutationsUserSignupResendArgs = {\n  email: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserSignupVerifyArgs = {\n  token: Scalars['String']['input'];\n};\n\n\n/** All available mutations */\nexport type MutationsUserUpdateArgs = {\n  id: Scalars['ID']['input'];\n  input: UserInput;\n};\n\n/** Data of one object attribute value of another object */\nexport type ObjectAttributeValue = {\n  __typename?: 'ObjectAttributeValue';\n  /** The object attribute record */\n  attribute: ObjectManagerFrontendAttribute;\n  /** Rendered version of link, if attribute has defined template */\n  renderedLink?: Maybe<Scalars['String']['output']>;\n  /** The value of the current object's object attribute */\n  value?: Maybe<Scalars['JSON']['output']>;\n};\n\n/** Data of one object attribute value of another object */\nexport type ObjectAttributeValueInput = {\n  /** The name of the current object's attribute */\n  name: Scalars['String']['input'];\n  /** The value of the current object's object attribute */\n  value?: InputMaybe<Scalars['JSON']['input']>;\n};\n\n/** Custom object fields (only editable & active) */\nexport type ObjectAttributeValuesInterface = {\n  objectAttributeValues?: Maybe<Array<ObjectAttributeValue>>;\n};\n\n/** Object class */\nexport type ObjectClass = {\n  __typename?: 'ObjectClass';\n  /** Info about the object class */\n  info?: Maybe<Scalars['String']['output']>;\n  /** Name of the object class */\n  klass?: Maybe<Scalars['String']['output']>;\n};\n\n/** An object manager attribute record especially for the frontend */\nexport type ObjectManagerFrontendAttribute = {\n  __typename?: 'ObjectManagerFrontendAttribute';\n  dataOption?: Maybe<Scalars['JSON']['output']>;\n  dataType: Scalars['String']['output'];\n  display: Scalars['String']['output'];\n  isInternal: Scalars['Boolean']['output'];\n  name: Scalars['String']['output'];\n  screens?: Maybe<Scalars['JSON']['output']>;\n};\n\n/** Autogenerated return type of ObjectManagerFrontendAttributes. */\nexport type ObjectManagerFrontendAttributesPayload = {\n  __typename?: 'ObjectManagerFrontendAttributesPayload';\n  /** Attributes to be shown in the frontend */\n  attributes: Array<ObjectManagerFrontendAttribute>;\n  /** Screens with attributes to be shown in the frontend */\n  screens: Array<ObjectManagerScreenAttributes>;\n};\n\n/** Screens with underlying attributes. */\nexport type ObjectManagerScreenAttributes = {\n  __typename?: 'ObjectManagerScreenAttributes';\n  attributes: Array<Scalars['String']['output']>;\n  name: Scalars['String']['output'];\n};\n\n/** Online notifications for a user */\nexport type OnlineNotification = {\n  __typename?: 'OnlineNotification';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  /** resolver for Rails' belongs_to relationship */\n  metaObject?: Maybe<ActivityMessageMetaObject>;\n  /** resolver for Rails' has_one relationship */\n  objectName: Scalars['String']['output'];\n  seen: Scalars['Boolean']['output'];\n  /** resolver for Rails' has_one relationship */\n  typeName: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** The connection type for OnlineNotification. */\nexport type OnlineNotificationConnection = {\n  __typename?: 'OnlineNotificationConnection';\n  /** A list of edges. */\n  edges: Array<OnlineNotificationEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Indicates the total number of available records. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** Autogenerated return type of OnlineNotificationDelete. */\nexport type OnlineNotificationDeletePayload = {\n  __typename?: 'OnlineNotificationDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the notification deletion successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** An edge in a connection. */\nexport type OnlineNotificationEdge = {\n  __typename?: 'OnlineNotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String']['output'];\n  /** The item at the end of the edge. */\n  node: OnlineNotification;\n};\n\n/** Autogenerated return type of OnlineNotificationMarkAllAsSeen. */\nexport type OnlineNotificationMarkAllAsSeenPayload = {\n  __typename?: 'OnlineNotificationMarkAllAsSeenPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The seen notifications. */\n  onlineNotifications?: Maybe<Array<OnlineNotification>>;\n};\n\n/** Autogenerated return type of OnlineNotificationSeen. */\nexport type OnlineNotificationSeenPayload = {\n  __typename?: 'OnlineNotificationSeenPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Did we successfully set the online notification to seen? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of OnlineNotificationsCount. */\nexport type OnlineNotificationsCountPayload = {\n  __typename?: 'OnlineNotificationsCountPayload';\n  /** Count of unseen notifications for the user */\n  unseenCount: Scalars['Int']['output'];\n};\n\n/** Organizations that users can belong to */\nexport type Organization = ObjectAttributeValuesInterface & {\n  __typename?: 'Organization';\n  active?: Maybe<Scalars['Boolean']['output']>;\n  /** All assigned users */\n  allMembers?: Maybe<UserConnection>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  domain?: Maybe<Scalars['String']['output']>;\n  domainAssignment?: Maybe<Scalars['Boolean']['output']>;\n  id: Scalars['ID']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  /** Users assigned via primary organization */\n  members?: Maybe<UserConnection>;\n  name?: Maybe<Scalars['String']['output']>;\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  objectAttributeValues?: Maybe<Array<ObjectAttributeValue>>;\n  policy: PolicyDefault;\n  /** Users assigned via secondary organization */\n  secondaryMembers?: Maybe<UserConnection>;\n  shared?: Maybe<Scalars['Boolean']['output']>;\n  ticketsCount?: Maybe<TicketCount>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n  vip?: Maybe<Scalars['Boolean']['output']>;\n};\n\n\n/** Organizations that users can belong to */\nexport type OrganizationAllMembersArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n};\n\n\n/** Organizations that users can belong to */\nexport type OrganizationMembersArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n};\n\n\n/** Organizations that users can belong to */\nexport type OrganizationSecondaryMembersArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** The connection type for Organization. */\nexport type OrganizationConnection = {\n  __typename?: 'OrganizationConnection';\n  /** A list of edges. */\n  edges: Array<OrganizationEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Indicates the total number of available records. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** An edge in a connection. */\nexport type OrganizationEdge = {\n  __typename?: 'OrganizationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String']['output'];\n  /** The item at the end of the edge. */\n  node: Organization;\n};\n\n/** The organization insert/update fields. */\nexport type OrganizationInput = {\n  /** The organization active flag */\n  active?: InputMaybe<Scalars['Boolean']['input']>;\n  /** The organization domain */\n  domain?: InputMaybe<Scalars['String']['input']>;\n  /** The organization domain assignment flag */\n  domainAssignment?: InputMaybe<Scalars['Boolean']['input']>;\n  /** The organization name */\n  name?: InputMaybe<Scalars['String']['input']>;\n  /** The organization note */\n  note?: InputMaybe<Scalars['String']['input']>;\n  /** Additional custom attributes (names + values) */\n  objectAttributeValues?: InputMaybe<Array<ObjectAttributeValueInput>>;\n  /** The organization shared flag */\n  shared?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** Autogenerated return type of OrganizationUpdate. */\nexport type OrganizationUpdatePayload = {\n  __typename?: 'OrganizationUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The updated organization. */\n  organization?: Maybe<Organization>;\n};\n\n/** Autogenerated return type of OrganizationUpdates. */\nexport type OrganizationUpdatesPayload = {\n  __typename?: 'OrganizationUpdatesPayload';\n  /** Updated organization */\n  organization?: Maybe<Organization>;\n};\n\n/** Out of office information */\nexport type OutOfOfficeInput = {\n  /** Out of office enabled? */\n  enabled: Scalars['Boolean']['input'];\n  /** Out of office date range */\n  endAt?: InputMaybe<Scalars['ISO8601Date']['input']>;\n  /** User ID of replacement */\n  replacementId?: InputMaybe<Scalars['ID']['input']>;\n  /** Out of office date range */\n  startAt?: InputMaybe<Scalars['ISO8601Date']['input']>;\n  /** Out of office message */\n  text?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Ticket overviews */\nexport type Overview = {\n  __typename?: 'Overview';\n  active: Scalars['Boolean']['output'];\n  /** Cached count of tickets the authenticated user may see in this overview */\n  cachedTicketCount: Scalars['Int']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  groupBy?: Maybe<Scalars['String']['output']>;\n  groupDirection?: Maybe<EnumOrderDirection>;\n  id: Scalars['ID']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  link: Scalars['String']['output'];\n  name: Scalars['String']['output'];\n  orderBy: Scalars['String']['output'];\n  /** Columns that may be used as order_by of overview queries, with assigned label values */\n  orderColumns: Array<KeyValue>;\n  orderDirection: EnumOrderDirection;\n  organizationShared?: Maybe<Scalars['Boolean']['output']>;\n  outOfOffice?: Maybe<Scalars['Boolean']['output']>;\n  prio: Scalars['Int']['output'];\n  /** Count of tickets the authenticated user may see in this overview */\n  ticketCount: Scalars['Int']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n  /** Columns to be shown on screen, with assigned label values */\n  viewColumns: Array<KeyValue>;\n  /** Columns to be shown on screen, mapped to actual internal field IDs */\n  viewColumnsRaw: Array<Scalars['String']['output']>;\n};\n\n\n/** Ticket overviews */\nexport type OverviewCachedTicketCountArgs = {\n  cacheTtl: Scalars['Int']['input'];\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']['output']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean']['output'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean']['output'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']['output']>;\n};\n\n/** Access Pundit policy queries for the current object and user. */\nexport type PolicyDefault = {\n  __typename?: 'PolicyDefault';\n  /** Is the user allowed to delete this object? */\n  destroy: Scalars['Boolean']['output'];\n  /** Is the user allowed to update this object? */\n  update: Scalars['Boolean']['output'];\n};\n\n/** Check Pundit policy queries for the mentioned object and user. */\nexport type PolicyMentionUserTicketAccess = {\n  __typename?: 'PolicyMentionUserTicketAccess';\n  /** Does the user have agent-level read access to this ticket? */\n  agentReadAccess: Scalars['Boolean']['output'];\n  /** Does the user have agent-level update access to this ticket? */\n  agentUpdateAccess: Scalars['Boolean']['output'];\n  /** Is the user allowed to create user subscriptions for this ticket? */\n  createMentions: Scalars['Boolean']['output'];\n  /** Is the user allowed to delete this object? */\n  destroy: Scalars['Boolean']['output'];\n  /** Is the user allowed to create a follow-up for this ticket? */\n  followUp: Scalars['Boolean']['output'];\n  /** Is the user allowed to update this object? */\n  update: Scalars['Boolean']['output'];\n};\n\n/** Access ticket specific Pundit policy queries for the current object and user. */\nexport type PolicyTicket = {\n  __typename?: 'PolicyTicket';\n  /** Does the user have agent-level read access to this ticket? */\n  agentReadAccess: Scalars['Boolean']['output'];\n  /** Does the user have agent-level update access to this ticket? */\n  agentUpdateAccess: Scalars['Boolean']['output'];\n  /** Is the user allowed to create user subscriptions for this ticket? */\n  createMentions: Scalars['Boolean']['output'];\n  /** Is the user allowed to delete this object? */\n  destroy: Scalars['Boolean']['output'];\n  /** Is the user allowed to create a follow-up for this ticket? */\n  followUp: Scalars['Boolean']['output'];\n  /** Is the user allowed to update this object? */\n  update: Scalars['Boolean']['output'];\n};\n\n/** PostmasterFilters */\nexport type PostmasterFilter = {\n  __typename?: 'PostmasterFilter';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  /** Name of the postmaster filter */\n  name: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Public links available in the system */\nexport type PublicLink = {\n  __typename?: 'PublicLink';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  description?: Maybe<Scalars['String']['output']>;\n  id: Scalars['ID']['output'];\n  link: Scalars['String']['output'];\n  newTab: Scalars['Boolean']['output'];\n  title: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Autogenerated return type of PublicLinkUpdates. */\nexport type PublicLinkUpdatesPayload = {\n  __typename?: 'PublicLinkUpdatesPayload';\n  /** Current available public links */\n  publicLinks?: Maybe<Array<PublicLink>>;\n};\n\n/** Autogenerated return type of PushMessages. */\nexport type PushMessagesPayload = {\n  __typename?: 'PushMessagesPayload';\n  /** Message text */\n  text?: Maybe<Scalars['String']['output']>;\n  /** Message title */\n  title?: Maybe<Scalars['String']['output']>;\n};\n\n/** All available queries */\nexport type Queries = {\n  __typename?: 'Queries';\n  /** Checksum of the currently built front-end application. If this changes, the front-end(s) should reload. */\n  applicationBuildChecksum: Scalars['String']['output'];\n  /** Configuration required for front end operation (more results returned for authenticated users) */\n  applicationConfig: Array<KeyComplexValue>;\n  /** Search for agents */\n  autocompleteSearchAgent: Array<AutocompleteSearchUserEntry>;\n  /** Generic autocomplete search */\n  autocompleteSearchGeneric: Array<AutocompleteSearchGenericEntry>;\n  /** Search for idoit object types */\n  autocompleteSearchIdoitObjectTypes: Array<AutocompleteSearchEntry>;\n  /** Search for values in object attributes for external data sources */\n  autocompleteSearchObjectAttributeExternalDataSource: Array<AutocompleteSearchExternalDataSourceEntry>;\n  /** Search for organizations */\n  autocompleteSearchOrganization: Array<AutocompleteSearchOrganizationEntry>;\n  /** Search for recipients */\n  autocompleteSearchRecipient: Array<AutocompleteSearchRecipientEntry>;\n  /** Search for tags */\n  autocompleteSearchTag: Array<AutocompleteSearchEntry>;\n  /** Search for tickets */\n  autocompleteSearchTicket: Array<AutocompleteSearchTicketEntry>;\n  /** Search for users */\n  autocompleteSearchUser: Array<AutocompleteSearchUserEntry>;\n  /** Fetch events from ICS file */\n  calendarIcsFileEvents: Array<CalendarIcsFileEvent>;\n  /** Fetch checklist templates */\n  checklistTemplates: Array<ChecklistTemplate>;\n  /** Information about the authenticated user */\n  currentUser: User;\n  /** EmailAddresses available in the system */\n  emailAddresses: Array<EmailAddress>;\n  /** Return updated form information for a frontend form (e.g. core workflow information or resolved relations). */\n  formUpdater: FormUpdaterResult;\n  /** Suggestions for insertable knowledge base answers in a new ticket article */\n  knowledgeBaseAnswerSuggestions?: Maybe<Array<KnowledgeBaseAnswerTranslation>>;\n  /** List linked objects */\n  linkList?: Maybe<Array<Link>>;\n  /** Locales available in the system */\n  locales: Array<Locale>;\n  /** Returns a list of macros */\n  macros: Array<Macro>;\n  /** Suggestions for mentionable users in a new ticket article */\n  mentionSuggestions?: Maybe<Array<User>>;\n  /** Fetch meta information about object manager attributes for usage in frontend. */\n  objectManagerFrontendAttributes?: Maybe<ObjectManagerFrontendAttributesPayload>;\n  /** Online notifications for a given user */\n  onlineNotifications: OnlineNotificationConnection;\n  /** Fetch an organization by ID */\n  organization: Organization;\n  /** Fetch the version of Zammad */\n  productAbout: Scalars['String']['output'];\n  /** Fetch public links */\n  publicLinks?: Maybe<Array<PublicLink>>;\n  /** Generic object search */\n  search: SearchResult;\n  /** The sessionId of the currently authenticated user. */\n  session: Session;\n  /** Fetch system import state */\n  systemImportState?: Maybe<ImportJob>;\n  /** Get current system setup state */\n  systemSetupInfo: SystemSetupInfo;\n  /** Fetch ticket templates */\n  templates: Array<Template>;\n  /** Search for text modules and return them with variable interpolation */\n  textModuleSuggestions: Array<TextModule>;\n  /** Fetch a ticket by ID */\n  ticket: Ticket;\n  /** Fetch ticket articles by ticket ID */\n  ticketArticles: TicketArticleConnection;\n  /** Fetch ticket attachments by ticket ID */\n  ticketAttachments: Array<StoredFile>;\n  /** Fetch ticket checklist */\n  ticketChecklist?: Maybe<Checklist>;\n  /** Detailed idoit objects for the given idoit object ids or the given ticket */\n  ticketExternalReferencesIdoitObjectList: Array<TicketExternalReferencesIdoitObject>;\n  /** Search for idoit objects belonging to a selected type */\n  ticketExternalReferencesIdoitObjectSearch: Array<TicketExternalReferencesIdoitObject>;\n  /** Detailed issue tracker items for the given issue tracker links or the given ticket */\n  ticketExternalReferencesIssueTrackerItemList: Array<TicketExternalReferencesIssueTrackerItem>;\n  /** Fetch history of a ticket */\n  ticketHistory: Array<HistoryGroup>;\n  /** Ticket overviews available in the system */\n  ticketOverviews: Array<Overview>;\n  /** Ticket shared drafts available to start new ticket in a given group */\n  ticketSharedDraftStartList: Array<TicketSharedDraftStart>;\n  /** Ticket shared drafts available to start new ticket in a given group */\n  ticketSharedDraftStartSingle: TicketSharedDraftStart;\n  /** Get a single ticket shared draft in detail view */\n  ticketSharedDraftZoomShow: TicketSharedDraftZoom;\n  /** Fetch a ticket signature by group ID */\n  ticketSignature?: Maybe<Signature>;\n  /** Fetch tickets of a given ticket overview */\n  ticketsByOverview: TicketConnection;\n  /** Fetch tickets of a given ticket overview */\n  ticketsCachedByOverview: CachedTicketConnection;\n  /** Fetch recent customer tickets */\n  ticketsRecentByCustomer: Array<Ticket>;\n  /** Fetch tickets recently viewed by the current user */\n  ticketsRecentlyViewed: Array<Ticket>;\n  /** Translations for a given locale */\n  translations?: Maybe<TranslationsPayload>;\n  /** Fetch a user information by ID */\n  user: User;\n  /** Fetch current user access tokens */\n  userCurrentAccessTokenList?: Maybe<Array<Token>>;\n  /** Fetch actively used avatar of the currently logged-in user. */\n  userCurrentAvatarActive?: Maybe<Avatar>;\n  /** Fetch available avatar list of the currently logged-in user. */\n  userCurrentAvatarList?: Maybe<Array<Avatar>>;\n  /** Fetch calendar subscriptions settings */\n  userCurrentCalendarSubscriptionList: UserPersonalSettingsCalendarSubscriptionsConfig;\n  /** Fetch available device list of the currently logged-in user */\n  userCurrentDeviceList?: Maybe<Array<UserDevice>>;\n  /** Fetch tickets recently viewed by the current user */\n  userCurrentRecentViewList: Array<RecentView>;\n  /** Fetch available taskbar item list of the currently logged-in user */\n  userCurrentTaskbarItemList?: Maybe<Array<UserTaskbarItem>>;\n  /** Ticket overviews according to the personal sorting of the current user */\n  userCurrentTicketOverviews: Array<Overview>;\n  /** Fetch list of configured two factor authentication methods and . */\n  userCurrentTwoFactorConfiguration: UserConfigurationTwoFactor;\n  /** Fetch list of configured two factor authentication methods. */\n  userCurrentTwoFactorGetMethodConfiguration?: Maybe<Scalars['JSON']['output']>;\n  /** Fetch needed initial configuration data to initiate a authentication method configuration. */\n  userCurrentTwoFactorInitiateMethodConfiguration: Scalars['JSON']['output'];\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchAgentArgs = {\n  input: AutocompleteSearchUserInput;\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchGenericArgs = {\n  input: AutocompleteSearchGenericInput;\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchIdoitObjectTypesArgs = {\n  input: AutocompleteSearchInput;\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchObjectAttributeExternalDataSourceArgs = {\n  input: AutocompleteSearchObjectAttributeExternalDataSourceInput;\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchOrganizationArgs = {\n  input: AutocompleteSearchOrganizationInput;\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchRecipientArgs = {\n  input: AutocompleteSearchRecipientInput;\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchTagArgs = {\n  input: AutocompleteSearchTagInput;\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchTicketArgs = {\n  input: AutocompleteSearchTicketInput;\n};\n\n\n/** All available queries */\nexport type QueriesAutocompleteSearchUserArgs = {\n  input: AutocompleteSearchUserInput;\n};\n\n\n/** All available queries */\nexport type QueriesCalendarIcsFileEventsArgs = {\n  fileId: Scalars['ID']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesChecklistTemplatesArgs = {\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesEmailAddressesArgs = {\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesFormUpdaterArgs = {\n  data: Scalars['JSON']['input'];\n  formUpdaterId: EnumFormUpdaterId;\n  id?: InputMaybe<Scalars['ID']['input']>;\n  meta: FormUpdaterMetaInput;\n  relationFields: Array<FormUpdaterRelationField>;\n};\n\n\n/** All available queries */\nexport type QueriesKnowledgeBaseAnswerSuggestionsArgs = {\n  query: Scalars['String']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesLinkListArgs = {\n  objectId: Scalars['ID']['input'];\n  targetType: Scalars['String']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesLocalesArgs = {\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesMacrosArgs = {\n  groupId: Scalars['ID']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesMentionSuggestionsArgs = {\n  groupId: Scalars['ID']['input'];\n  query: Scalars['String']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesObjectManagerFrontendAttributesArgs = {\n  object: EnumObjectManagerObjects;\n};\n\n\n/** All available queries */\nexport type QueriesOnlineNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesOrganizationArgs = {\n  organization: LocatorOrganizationInput;\n};\n\n\n/** All available queries */\nexport type QueriesPublicLinksArgs = {\n  screen: EnumPublicLinksScreen;\n};\n\n\n/** All available queries */\nexport type QueriesSearchArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  onlyIn: EnumSearchableModels;\n  search: Scalars['String']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesTemplatesArgs = {\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesTextModuleSuggestionsArgs = {\n  groupId?: InputMaybe<Scalars['ID']['input']>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  query: Scalars['String']['input'];\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesTicketArgs = {\n  ticket: LocatorTicketInput;\n};\n\n\n/** All available queries */\nexport type QueriesTicketArticlesArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  ticket: LocatorTicketInput;\n};\n\n\n/** All available queries */\nexport type QueriesTicketAttachmentsArgs = {\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesTicketChecklistArgs = {\n  ticket: LocatorTicketInput;\n};\n\n\n/** All available queries */\nexport type QueriesTicketExternalReferencesIdoitObjectListArgs = {\n  input: TicketExternalReferencesIdoitObjectListInput;\n};\n\n\n/** All available queries */\nexport type QueriesTicketExternalReferencesIdoitObjectSearchArgs = {\n  idoitTypeId?: InputMaybe<Scalars['String']['input']>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  query?: InputMaybe<Scalars['String']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesTicketExternalReferencesIssueTrackerItemListArgs = {\n  input: TicketExternalReferencesIssueTrackerListInput;\n  issueTrackerType: EnumTicketExternalReferencesIssueTrackerType;\n};\n\n\n/** All available queries */\nexport type QueriesTicketHistoryArgs = {\n  ticket: LocatorTicketInput;\n};\n\n\n/** All available queries */\nexport type QueriesTicketOverviewsArgs = {\n  filterOverviewIds?: InputMaybe<Array<Scalars['ID']['input']>>;\n  ignoreUserConditions: Scalars['Boolean']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesTicketSharedDraftStartListArgs = {\n  groupId: Scalars['ID']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesTicketSharedDraftStartSingleArgs = {\n  sharedDraftId: Scalars['ID']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesTicketSharedDraftZoomShowArgs = {\n  sharedDraftId: Scalars['ID']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesTicketSignatureArgs = {\n  groupId: Scalars['ID']['input'];\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesTicketsByOverviewArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Scalars['String']['input']>;\n  orderDirection?: InputMaybe<EnumOrderDirection>;\n  overviewId: Scalars['ID']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesTicketsCachedByOverviewArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  cacheTtl: Scalars['Int']['input'];\n  first?: InputMaybe<Scalars['Int']['input']>;\n  knownCollectionSignature?: InputMaybe<Scalars['String']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Scalars['String']['input']>;\n  orderDirection?: InputMaybe<EnumOrderDirection>;\n  overviewId: Scalars['ID']['input'];\n  renewCache?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesTicketsRecentByCustomerArgs = {\n  customerId: Scalars['ID']['input'];\n  exceptTicketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesTicketsRecentlyViewedArgs = {\n  exceptTicketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesTranslationsArgs = {\n  cacheKey?: InputMaybe<Scalars['String']['input']>;\n  locale: Scalars['String']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesUserArgs = {\n  user: LocatorUserInput;\n};\n\n\n/** All available queries */\nexport type QueriesUserCurrentRecentViewListArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n};\n\n\n/** All available queries */\nexport type QueriesUserCurrentTaskbarItemListArgs = {\n  app?: InputMaybe<EnumTaskbarApp>;\n};\n\n\n/** All available queries */\nexport type QueriesUserCurrentTicketOverviewsArgs = {\n  ignoreUserConditions: Scalars['Boolean']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesUserCurrentTwoFactorGetMethodConfigurationArgs = {\n  methodName: Scalars['String']['input'];\n  token: Scalars['String']['input'];\n};\n\n\n/** All available queries */\nexport type QueriesUserCurrentTwoFactorInitiateMethodConfigurationArgs = {\n  methodName: EnumTwoFactorAuthenticationMethod;\n  token: Scalars['String']['input'];\n};\n\n/** Objects recently viewed */\nexport type RecentView = Organization | Ticket | User;\n\n/** Roles */\nexport type Role = {\n  __typename?: 'Role';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  name?: Maybe<Scalars['String']['output']>;\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Search result for one model */\nexport type SearchResult = {\n  __typename?: 'SearchResult';\n  /** Found items */\n  items: Array<Item>;\n  /** Total count of found entries across all pages */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** Session of the currently logged-in user */\nexport type Session = {\n  __typename?: 'Session';\n  afterAuth?: Maybe<SessionAfterAuth>;\n  id: Scalars['String']['output'];\n};\n\n/** After-authorization information for front ends */\nexport type SessionAfterAuth = {\n  __typename?: 'SessionAfterAuth';\n  data?: Maybe<Scalars['JSON']['output']>;\n  type: EnumAfterAuthType;\n};\n\n/** Signature */\nexport type Signature = {\n  __typename?: 'Signature';\n  active: Scalars['Boolean']['output'];\n  body?: Maybe<Scalars['String']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  name: Scalars['String']['output'];\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  renderedBody?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n\n/** Signature */\nexport type SignatureRenderedBodyArgs = {\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n/** Represents a stored file. */\nexport type StoredFile = {\n  __typename?: 'StoredFile';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  id: Scalars['ID']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  /** File name. */\n  name: Scalars['String']['output'];\n  preferences?: Maybe<Scalars['JSON']['output']>;\n  /** File size in bytes */\n  size?: Maybe<Scalars['Int']['output']>;\n  /** File's content-type. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n};\n\n/** All available subscriptions */\nexport type Subscriptions = {\n  __typename?: 'Subscriptions';\n  /** Application update/change events */\n  appMaintenance: AppMaintenancePayload;\n  /** Subscription for checklist template changes. */\n  checklistTemplateUpdates: ChecklistTemplateUpdatesPayload;\n  /** Updates to configuration settings */\n  configUpdates: ConfigUpdatesPayload;\n  /** Updates to link records */\n  linkUpdates: LinkUpdatesPayload;\n  /** Updated macros */\n  macrosUpdate: MacrosUpdatePayload;\n  /** Updates unseen notifications count */\n  onlineNotificationsCount: OnlineNotificationsCountPayload;\n  /** Updates to organization records */\n  organizationUpdates: OrganizationUpdatesPayload;\n  /** Updates to public links */\n  publicLinkUpdates: PublicLinkUpdatesPayload;\n  /** Broadcast messages to all users */\n  pushMessages: PushMessagesPayload;\n  /** Updates to ticket templates */\n  templateUpdates: TemplateUpdatesPayload;\n  /** Changes to the list of ticket articles */\n  ticketArticleUpdates: TicketArticleUpdatesPayload;\n  /** Subscription for ticket checklist changes. */\n  ticketChecklistUpdates: TicketChecklistUpdatesPayload;\n  /** Updates to ticket live users (for agents). */\n  ticketLiveUserUpdates: TicketLiveUserUpdatesPayload;\n  /** Updates to overviews */\n  ticketOverviewUpdates: TicketOverviewUpdatesPayload;\n  /** Updates to ticket records */\n  ticketSharedDraftStartUpdateByGroup: TicketSharedDraftStartUpdateByGroupPayload;\n  /** Updates to ticket records */\n  ticketUpdates: TicketUpdatesPayload;\n  /** Updates to user access tokens */\n  userCurrentAccessTokenUpdates: UserCurrentAccessTokenUpdatesPayload;\n  /** Updates to account avatar records */\n  userCurrentAvatarUpdates: UserCurrentAvatarUpdatesPayload;\n  /** Updates to account devices records */\n  userCurrentDevicesUpdates: UserCurrentDevicesUpdatesPayload;\n  /** Updates to account overview sorting records */\n  userCurrentOverviewOrderingUpdates: UserCurrentOverviewOrderingUpdatesPayload;\n  /** Updates to the recently viewed items of the current user */\n  userCurrentRecentViewUpdates: UserCurrentRecentViewUpdatesPayload;\n  /** Subscription for taskbar item list priority changes */\n  userCurrentTaskbarItemListUpdates: UserCurrentTaskbarItemListUpdatesPayload;\n  /** Changes to the state of a taskbar item of the currently logged-in user */\n  userCurrentTaskbarItemStateUpdates: UserCurrentTaskbarItemStateUpdatesPayload;\n  /** Changes to the list of taskbar items of the currently logged-in user */\n  userCurrentTaskbarItemUpdates: UserCurrentTaskbarItemUpdatesPayload;\n  /** Updates to overviews according to the sorting of the current user */\n  userCurrentTicketOverviewUpdates: UserCurrentTicketOverviewUpdatesPayload;\n  /** Updates to current user two factor records */\n  userCurrentTwoFactorUpdates: UserCurrentTwoFactorUpdatesPayload;\n  /** Updates to user records */\n  userUpdates: UserUpdatesPayload;\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsChecklistTemplateUpdatesArgs = {\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsLinkUpdatesArgs = {\n  objectId: Scalars['ID']['input'];\n  targetType: Scalars['String']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsOrganizationUpdatesArgs = {\n  organizationId: Scalars['ID']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsPublicLinkUpdatesArgs = {\n  screen: EnumPublicLinksScreen;\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsTemplateUpdatesArgs = {\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsTicketArticleUpdatesArgs = {\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsTicketChecklistUpdatesArgs = {\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsTicketLiveUserUpdatesArgs = {\n  app: EnumTaskbarApp;\n  key: Scalars['String']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsTicketOverviewUpdatesArgs = {\n  ignoreUserConditions: Scalars['Boolean']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsTicketSharedDraftStartUpdateByGroupArgs = {\n  groupId: Scalars['ID']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsTicketUpdatesArgs = {\n  initial?: Scalars['Boolean']['input'];\n  ticketId: Scalars['ID']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsUserCurrentOverviewOrderingUpdatesArgs = {\n  ignoreUserConditions: Scalars['Boolean']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsUserCurrentTaskbarItemListUpdatesArgs = {\n  app: EnumTaskbarApp;\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsUserCurrentTaskbarItemStateUpdatesArgs = {\n  taskbarItemId: Scalars['ID']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsUserCurrentTaskbarItemUpdatesArgs = {\n  app: EnumTaskbarApp;\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsUserCurrentTicketOverviewUpdatesArgs = {\n  ignoreUserConditions: Scalars['Boolean']['input'];\n};\n\n\n/** All available subscriptions */\nexport type SubscriptionsUserUpdatesArgs = {\n  userId: Scalars['ID']['input'];\n};\n\n/** Third-party system configuration information */\nexport type SystemImportConfigurationInput = {\n  /** Third-party system password/token */\n  secret?: InputMaybe<Scalars['String']['input']>;\n  /** Third-party system source */\n  source: EnumSystemImportSource;\n  /** Verify TLS certificate */\n  tlsVerify?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Third-party system URL */\n  url: Scalars['UriHttpString']['input'];\n  /** Third-party system username */\n  username?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Autogenerated return type of SystemImportConfiguration. */\nexport type SystemImportConfigurationPayload = {\n  __typename?: 'SystemImportConfigurationPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Is the configuration valid? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of SystemImportStart. */\nexport type SystemImportStartPayload = {\n  __typename?: 'SystemImportStartPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the start successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Basic system information */\nexport type SystemInformation = {\n  /** Default system locale */\n  localeDefault?: InputMaybe<Scalars['String']['input']>;\n  /** Images to be uploaded. */\n  logo?: InputMaybe<Scalars['BinaryString']['input']>;\n  /** System name to display in the app */\n  organization: Scalars['String']['input'];\n  /** Default system time zone */\n  timezoneDefault?: InputMaybe<Scalars['String']['input']>;\n  /** System URL */\n  url?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** System setup state. */\nexport type SystemSetupInfo = {\n  __typename?: 'SystemSetupInfo';\n  /** System setup status. */\n  status: EnumSystemSetupInfoStatus;\n  /** System setup type. */\n  type?: Maybe<EnumSystemSetupInfoType>;\n};\n\n/** Autogenerated return type of SystemSetupLock. */\nexport type SystemSetupLockPayload = {\n  __typename?: 'SystemSetupLockPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Critical section resoure name. */\n  resource?: Maybe<Scalars['String']['output']>;\n  /** Critical section resoure value. */\n  value?: Maybe<Scalars['String']['output']>;\n};\n\n/** Autogenerated return type of SystemSetupRunAutoWizard. */\nexport type SystemSetupRunAutoWizardPayload = {\n  __typename?: 'SystemSetupRunAutoWizardPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The current session, if the auto wizard was successfully executed. */\n  session?: Maybe<Session>;\n};\n\n/** Autogenerated return type of SystemSetupUnlock. */\nexport type SystemSetupUnlockPayload = {\n  __typename?: 'SystemSetupUnlockPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Success. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of TagAssignmentAdd. */\nexport type TagAssignmentAddPayload = {\n  __typename?: 'TagAssignmentAddPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of TagAssignmentRemove. */\nexport type TagAssignmentRemovePayload = {\n  __typename?: 'TagAssignmentRemovePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of TagAssignmentUpdate. */\nexport type TagAssignmentUpdatePayload = {\n  __typename?: 'TagAssignmentUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Assigned tags */\nexport type TagsInterface = {\n  tags?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** Objects representing taskbar item entity */\nexport type TaskbarItemEntity = Organization | Ticket | User | UserTaskbarItemEntityTicketCreate;\n\n/** Ticket template */\nexport type Template = {\n  __typename?: 'Template';\n  active?: Maybe<Scalars['Boolean']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  name: Scalars['String']['output'];\n  options?: Maybe<Scalars['JSON']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Context data for template rendering, e.g. customer data. */\nexport type TemplateRenderContextInput = {\n  /** Ticket customer (if no ticket exists yet) */\n  customerId?: InputMaybe<Scalars['ID']['input']>;\n  /** Group */\n  groupId?: InputMaybe<Scalars['ID']['input']>;\n  /** Organization */\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n  /** Ticket */\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  /** User (if not present the currently logged in user will be passed) */\n  userId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n/** Autogenerated return type of TemplateUpdates. */\nexport type TemplateUpdatesPayload = {\n  __typename?: 'TemplateUpdatesPayload';\n  /** Current ticket templates */\n  templates?: Maybe<Array<Template>>;\n};\n\n/** Text modules */\nexport type TextModule = {\n  __typename?: 'TextModule';\n  active: Scalars['Boolean']['output'];\n  content?: Maybe<Scalars['String']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  groups?: Maybe<GroupConnection>;\n  id: Scalars['ID']['output'];\n  keywords?: Maybe<Scalars['String']['output']>;\n  name: Scalars['String']['output'];\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  renderedContent?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n\n/** Text modules */\nexport type TextModuleGroupsArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n};\n\n\n/** Text modules */\nexport type TextModuleRenderedContentArgs = {\n  templateRenderContext: TemplateRenderContextInput;\n};\n\n/** Tickets */\nexport type Ticket = ObjectAttributeValuesInterface & TagsInterface & {\n  __typename?: 'Ticket';\n  /** Count of ticket articles that were not sent by 'System'. */\n  articleCount?: Maybe<Scalars['Int']['output']>;\n  /** Returns the checklist of this ticket, if present */\n  checklist?: Maybe<Checklist>;\n  closeAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  closeDiffInMin?: Maybe<Scalars['Int']['output']>;\n  closeEscalationAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  closeInMin?: Maybe<Scalars['Int']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  createArticleType?: Maybe<TicketArticleType>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  /** resolver for Rails' belongs_to relationship */\n  customer: User;\n  escalationAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  /** Returns links to external services */\n  externalReferences?: Maybe<TicketExternalReferences>;\n  firstResponseAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  firstResponseDiffInMin?: Maybe<Scalars['Int']['output']>;\n  firstResponseEscalationAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  firstResponseInMin?: Maybe<Scalars['Int']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  group: Group;\n  id: Scalars['ID']['output'];\n  /** The initial channel of the ticket. */\n  initialChannel?: Maybe<EnumChannelArea>;\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  lastCloseAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  lastContactAgentAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  lastContactAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  lastContactCustomerAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  lastOwnerUpdateAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  mentions?: Maybe<MentionConnection>;\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  number: Scalars['String']['output'];\n  objectAttributeValues?: Maybe<Array<ObjectAttributeValue>>;\n  /** resolver for Rails' belongs_to relationship */\n  organization?: Maybe<Organization>;\n  /** resolver for Rails' belongs_to relationship */\n  owner: User;\n  pendingTime?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  policy: PolicyTicket;\n  preferences?: Maybe<Scalars['JSON']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  priority: TicketPriority;\n  /** Returns (only accessible) other tickets which reference the current ticket */\n  referencingChecklistTickets?: Maybe<Array<Ticket>>;\n  /** The Shared draft ID if the ticket has a shared draft. */\n  sharedDraftZoomId?: Maybe<Scalars['ID']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  state: TicketState;\n  /** Ticket color indicator state. */\n  stateColorCode: EnumTicketStateColorCode;\n  subscribed?: Maybe<Scalars['Boolean']['output']>;\n  tags?: Maybe<Array<Scalars['String']['output']>>;\n  timeUnit?: Maybe<Scalars['Float']['output']>;\n  timeUnitsPerType?: Maybe<Array<TicketTimeAccountingTypeSum>>;\n  title: Scalars['String']['output'];\n  updateDiffInMin?: Maybe<Scalars['Int']['output']>;\n  updateEscalationAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  updateInMin?: Maybe<Scalars['Int']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n\n/** Tickets */\nexport type TicketMentionsArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** Ticket articles */\nexport type TicketArticle = {\n  __typename?: 'TicketArticle';\n  /** All attached files as stored in the database. */\n  attachments: Array<StoredFile>;\n  /** Attachments for display, with inline images filtered out. */\n  attachmentsWithoutInline: Array<StoredFile>;\n  /** The originator (originBy, if any) or the creator of an article. */\n  author: User;\n  /** Raw body as saved in the database. */\n  body: Scalars['String']['output'];\n  /** Body with cid: URLs replaced for inline images in HTML articles. */\n  bodyWithUrls: Scalars['String']['output'];\n  cc?: Maybe<AddressesField>;\n  contentType: Scalars['String']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  detectedLanguage?: Maybe<Scalars['String']['output']>;\n  from?: Maybe<AddressesField>;\n  id: Scalars['ID']['output'];\n  inReplyTo?: Maybe<Scalars['String']['output']>;\n  internal: Scalars['Boolean']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  mediaErrorState?: Maybe<TicketArticleMediaErrorState>;\n  messageId?: Maybe<Scalars['String']['output']>;\n  messageIdMd5?: Maybe<Scalars['String']['output']>;\n  preferences?: Maybe<Scalars['JSON']['output']>;\n  replyTo?: Maybe<AddressesField>;\n  securityState?: Maybe<TicketArticleSecurityState>;\n  /** resolver for Rails' belongs_to relationship */\n  sender?: Maybe<TicketArticleSender>;\n  subject?: Maybe<Scalars['String']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  ticket: Ticket;\n  to?: Maybe<AddressesField>;\n  /** resolver for Rails' belongs_to relationship */\n  type?: Maybe<TicketArticleType>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Autogenerated return type of TicketArticleChangeVisibility. */\nexport type TicketArticleChangeVisibilityPayload = {\n  __typename?: 'TicketArticleChangeVisibilityPayload';\n  /** The updated ticket article */\n  article?: Maybe<TicketArticle>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n};\n\n/** The connection type for TicketArticle. */\nexport type TicketArticleConnection = {\n  __typename?: 'TicketArticleConnection';\n  /** A list of edges. */\n  edges: Array<TicketArticleEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Indicates the total number of available records. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** Autogenerated return type of TicketArticleDelete. */\nexport type TicketArticleDeletePayload = {\n  __typename?: 'TicketArticleDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the ticket article deletion successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** An edge in a connection. */\nexport type TicketArticleEdge = {\n  __typename?: 'TicketArticleEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String']['output'];\n  /** The item at the end of the edge. */\n  node: TicketArticle;\n};\n\n/** Autogenerated return type of TicketArticleEmailForwardReply. */\nexport type TicketArticleEmailForwardReplyPayload = {\n  __typename?: 'TicketArticleEmailForwardReplyPayload';\n  /** Cloned attachments for the new article. */\n  attachments: Array<StoredFile>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** 'Cc' information of the original email to be inserted in the quoted email block */\n  quotableCc?: Maybe<Scalars['String']['output']>;\n  /** 'From' information of the original email to be inserted in the quoted email block */\n  quotableFrom?: Maybe<Scalars['String']['output']>;\n  /** 'To' information of the original email to be inserted in the quoted email block */\n  quotableTo?: Maybe<Scalars['String']['output']>;\n};\n\n/** Represents the article attributes to be used in ticket create/update. */\nexport type TicketArticleInput = {\n  /** The article accounted time activity type. */\n  accountedTimeTypeId?: InputMaybe<Scalars['ID']['input']>;\n  /** The article attachments. */\n  attachments?: InputMaybe<AttachmentInput>;\n  /** The article body. */\n  body?: InputMaybe<Scalars['String']['input']>;\n  /** The article CC address. */\n  cc?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** The article content type. */\n  contentType?: InputMaybe<Scalars['String']['input']>;\n  /** The article sender address. */\n  from?: InputMaybe<Scalars['String']['input']>;\n  /** Message id of the article this article replies to. */\n  inReplyTo?: InputMaybe<Scalars['String']['input']>;\n  /** Whether the article is internal. */\n  internal?: InputMaybe<Scalars['Boolean']['input']>;\n  /** The article preferences. */\n  preferences?: InputMaybe<Scalars['JSON']['input']>;\n  /** The article security options. */\n  security?: InputMaybe<TicketSecurityInput>;\n  /** The article sender. */\n  sender?: InputMaybe<Scalars['String']['input']>;\n  /** The article subject. */\n  subject?: InputMaybe<Scalars['String']['input']>;\n  /** The article subtype. */\n  subtype?: InputMaybe<Scalars['String']['input']>;\n  /** The article accounted time. */\n  timeUnit?: InputMaybe<Scalars['Float']['input']>;\n  /** The article recipient address. */\n  to?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** The article type. */\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Ticket article media error information, e.g. for WhatsApp Business */\nexport type TicketArticleMediaErrorState = {\n  __typename?: 'TicketArticleMediaErrorState';\n  error?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of TicketArticleRetryMediaDownload. */\nexport type TicketArticleRetryMediaDownloadPayload = {\n  __typename?: 'TicketArticleRetryMediaDownloadPayload';\n  /** Updated article (article is not updated in case of an error result). */\n  article?: Maybe<TicketArticle>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the operation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of TicketArticleRetrySecurityProcess. */\nexport type TicketArticleRetrySecurityProcessPayload = {\n  __typename?: 'TicketArticleRetrySecurityProcessPayload';\n  /** Updated article (article is not updated in case of an error result). */\n  article?: Maybe<TicketArticle>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Result of the operation. */\n  retryResult?: Maybe<TicketArticleSecurityState>;\n};\n\n/** Ticket article security information, e.g. for S/MIME */\nexport type TicketArticleSecurityState = {\n  __typename?: 'TicketArticleSecurityState';\n  encryptionMessage?: Maybe<Scalars['String']['output']>;\n  encryptionSuccess?: Maybe<Scalars['Boolean']['output']>;\n  signingMessage?: Maybe<Scalars['String']['output']>;\n  signingSuccess?: Maybe<Scalars['Boolean']['output']>;\n  /** The used email security method */\n  type?: Maybe<EnumSecurityStateType>;\n};\n\n/** Ticket article senders */\nexport type TicketArticleSender = {\n  __typename?: 'TicketArticleSender';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  name?: Maybe<EnumTicketArticleSenderName>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Ticket article types */\nexport type TicketArticleType = {\n  __typename?: 'TicketArticleType';\n  communication?: Maybe<Scalars['Boolean']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  name?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Autogenerated return type of TicketArticleUpdates. */\nexport type TicketArticleUpdatesPayload = {\n  __typename?: 'TicketArticleUpdatesPayload';\n  /** A new article needs to be added to the list */\n  addArticle?: Maybe<TicketArticle>;\n  /** An article must be removed from the list */\n  removeArticleId?: Maybe<Scalars['ID']['output']>;\n  /** An existing article was changed */\n  updateArticle?: Maybe<TicketArticle>;\n};\n\n/** Autogenerated return type of TicketChecklistAdd. */\nexport type TicketChecklistAddPayload = {\n  __typename?: 'TicketChecklistAddPayload';\n  /** Created checklist */\n  checklist?: Maybe<Checklist>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n};\n\n/** Autogenerated return type of TicketChecklistDelete. */\nexport type TicketChecklistDeletePayload = {\n  __typename?: 'TicketChecklistDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation succcessful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of TicketChecklistItemDelete. */\nexport type TicketChecklistItemDeletePayload = {\n  __typename?: 'TicketChecklistItemDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation succcessful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Input fields for ticket checklist item. */\nexport type TicketChecklistItemInput = {\n  /** Checklist item state */\n  checked?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Checklist item label */\n  text?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Autogenerated return type of TicketChecklistItemOrderUpdate. */\nexport type TicketChecklistItemOrderUpdatePayload = {\n  __typename?: 'TicketChecklistItemOrderUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation succcessful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of TicketChecklistItemUpsert. */\nexport type TicketChecklistItemUpsertPayload = {\n  __typename?: 'TicketChecklistItemUpsertPayload';\n  /** Updated or created checklist item. */\n  checklistItem?: Maybe<ChecklistItem>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n};\n\n/** Autogenerated return type of TicketChecklistTitleUpdate. */\nexport type TicketChecklistTitleUpdatePayload = {\n  __typename?: 'TicketChecklistTitleUpdatePayload';\n  /** Created checklist */\n  checklist?: Maybe<Checklist>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n};\n\n/** Autogenerated return type of TicketChecklistUpdates. */\nexport type TicketChecklistUpdatesPayload = {\n  __typename?: 'TicketChecklistUpdatesPayload';\n  /** Ticket checklist was removed from ticket */\n  removedTicketChecklist?: Maybe<Scalars['Boolean']['output']>;\n  /** Ticket checklist */\n  ticketChecklist?: Maybe<Checklist>;\n};\n\n/** The connection type for Ticket. */\nexport type TicketConnection = {\n  __typename?: 'TicketConnection';\n  /** A list of edges. */\n  edges: Array<TicketEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Indicates the total number of available records. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** Open and closed ticket information */\nexport type TicketCount = {\n  __typename?: 'TicketCount';\n  closed: Scalars['Int']['output'];\n  open: Scalars['Int']['output'];\n};\n\n/** Represents the ticket attributes to be used in ticket create. */\nexport type TicketCreateInput = {\n  /** The article data. */\n  article?: InputMaybe<TicketArticleInput>;\n  /** The customer of the ticket. */\n  customer?: InputMaybe<TicketCustomerInput>;\n  /** External references to create for the newly created ticket */\n  externalReferences?: InputMaybe<TicketExternalReferencesInput>;\n  /** The group of the ticket. */\n  groupId: Scalars['ID']['input'];\n  /** Links to create for the newly created ticket */\n  links?: InputMaybe<Array<TicketLinkInput>>;\n  /** Additional custom attributes (names + values) */\n  objectAttributeValues?: InputMaybe<Array<ObjectAttributeValueInput>>;\n  /** The organization of the ticket. */\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n  /** The owner of the ticket. */\n  ownerId?: InputMaybe<Scalars['ID']['input']>;\n  /** The pending time of the ticket. */\n  pendingTime?: InputMaybe<Scalars['ISO8601DateTime']['input']>;\n  /** The priority of the ticket. */\n  priorityId?: InputMaybe<Scalars['ID']['input']>;\n  /** The shared draft used to create this ticket. */\n  sharedDraftId?: InputMaybe<Scalars['ID']['input']>;\n  /** The state of the ticket. */\n  stateId?: InputMaybe<Scalars['ID']['input']>;\n  /** The tags that should be assigned to the new ticket. */\n  tags?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** The title of the ticket. */\n  title: Scalars['NonEmptyString']['input'];\n};\n\n/** Autogenerated return type of TicketCreate. */\nexport type TicketCreatePayload = {\n  __typename?: 'TicketCreatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The created ticket. If this is present but empty, the mutation was successful but the user has no rights to view the new ticket. */\n  ticket?: Maybe<Ticket>;\n};\n\n/** Base ticket input customer type */\nexport type TicketCustomerInput = {\n  /** A customer email address. */\n  email?: InputMaybe<Scalars['String']['input']>;\n  /** The customer of the ticket. */\n  id?: InputMaybe<Scalars['ID']['input']>;\n};\n\n/** Payload to update a ticket customer */\nexport type TicketCustomerUpdateInput = {\n  /** The customer of the ticket. */\n  customerId: Scalars['ID']['input'];\n  /** The organization of the ticket (only needed if the customer belongs to several organizations). */\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n/** Autogenerated return type of TicketCustomerUpdate. */\nexport type TicketCustomerUpdatePayload = {\n  __typename?: 'TicketCustomerUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The updated ticket. */\n  ticket?: Maybe<Ticket>;\n};\n\n/** An edge in a connection. */\nexport type TicketEdge = {\n  __typename?: 'TicketEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String']['output'];\n  /** The item at the end of the edge. */\n  node: Ticket;\n};\n\n/** Links attached to a ticket and pointing to external services */\nexport type TicketExternalReferences = {\n  __typename?: 'TicketExternalReferences';\n  /** Returns exising links for the github integration */\n  github?: Maybe<Array<Scalars['UriHttpString']['output']>>;\n  /** Returns exising links for the gitlab integration */\n  gitlab?: Maybe<Array<Scalars['UriHttpString']['output']>>;\n  /** Returns exising object ids for the idoit integration */\n  idoit?: Maybe<Array<Scalars['Int']['output']>>;\n};\n\n/** Idoit object item for an external reference for a ticket */\nexport type TicketExternalReferencesIdoitObject = {\n  __typename?: 'TicketExternalReferencesIdoitObject';\n  /** Idoit object id */\n  idoitObjectId: Scalars['Int']['output'];\n  /** Link to the object in the idoit GUI */\n  link?: Maybe<Scalars['UriHttpString']['output']>;\n  status: Scalars['String']['output'];\n  title: Scalars['String']['output'];\n  type: Scalars['String']['output'];\n};\n\n/** Autogenerated return type of TicketExternalReferencesIdoitObjectAdd. */\nexport type TicketExternalReferencesIdoitObjectAddPayload = {\n  __typename?: 'TicketExternalReferencesIdoitObjectAddPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The added / resolved idoit objects */\n  idoitObjects?: Maybe<Array<TicketExternalReferencesIdoitObject>>;\n};\n\n/** Represents information to fetch detailed idoit objects for the given idoit object ids or the given ticket */\nexport type TicketExternalReferencesIdoitObjectListInput = {\n  /** The idoit object ids for the detailed list */\n  idoitObjectIds?: InputMaybe<Array<Scalars['Int']['input']>>;\n  /** The related ticket for the idoit objects */\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n/** Autogenerated return type of TicketExternalReferencesIdoitObjectRemove. */\nexport type TicketExternalReferencesIdoitObjectRemovePayload = {\n  __typename?: 'TicketExternalReferencesIdoitObjectRemovePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Represents the ticket external links to be added */\nexport type TicketExternalReferencesInput = {\n  /** The article data. */\n  article?: InputMaybe<TicketArticleInput>;\n  /** The customer of the ticket. */\n  customer?: InputMaybe<TicketCustomerInput>;\n  /** Links for the github integration */\n  github?: InputMaybe<Array<Scalars['UriHttpString']['input']>>;\n  /** Links for the gitlab integration */\n  gitlab?: InputMaybe<Array<Scalars['UriHttpString']['input']>>;\n  /** Object ids for the Idoit integration */\n  idoit?: InputMaybe<Array<Scalars['Int']['input']>>;\n  /** Additional custom attributes (names + values) */\n  objectAttributeValues?: InputMaybe<Array<ObjectAttributeValueInput>>;\n  /** The organization of the ticket. */\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n  /** The owner of the ticket. */\n  ownerId?: InputMaybe<Scalars['ID']['input']>;\n  /** The pending time of the ticket. */\n  pendingTime?: InputMaybe<Scalars['ISO8601DateTime']['input']>;\n  /** The priority of the ticket. */\n  priorityId?: InputMaybe<Scalars['ID']['input']>;\n  /** The state of the ticket. */\n  stateId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n/** Issue tracker item for an external reference for a ticket */\nexport type TicketExternalReferencesIssueTrackerItem = {\n  __typename?: 'TicketExternalReferencesIssueTrackerItem';\n  /** The assignees of the issue */\n  assignees?: Maybe<Array<Scalars['String']['output']>>;\n  /** The issue ID from the external issue tracker */\n  issueId: Scalars['Int']['output'];\n  /** The labels of the issue */\n  labels?: Maybe<Array<TicketExternalReferencesIssueTrackerItemLabel>>;\n  /** The milestone of the issue */\n  milestone?: Maybe<Scalars['String']['output']>;\n  /** The state of the issue */\n  state: EnumTicketExternalReferencesIssueTrackerItemState;\n  /** The title of the issue */\n  title: Scalars['String']['output'];\n  /** The URL of the issue */\n  url: Scalars['UriHttpString']['output'];\n};\n\n/** Autogenerated return type of TicketExternalReferencesIssueTrackerItemAdd. */\nexport type TicketExternalReferencesIssueTrackerItemAddPayload = {\n  __typename?: 'TicketExternalReferencesIssueTrackerItemAddPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The added issue tracker item */\n  issueTrackerItem?: Maybe<TicketExternalReferencesIssueTrackerItem>;\n};\n\n/** The labels of the Issue tracker item */\nexport type TicketExternalReferencesIssueTrackerItemLabel = {\n  __typename?: 'TicketExternalReferencesIssueTrackerItemLabel';\n  /** The color of the label */\n  color: Scalars['String']['output'];\n  /** The text color of the label */\n  textColor: Scalars['String']['output'];\n  /** The title of the label */\n  title: Scalars['String']['output'];\n};\n\n/** Autogenerated return type of TicketExternalReferencesIssueTrackerItemRemove. */\nexport type TicketExternalReferencesIssueTrackerItemRemovePayload = {\n  __typename?: 'TicketExternalReferencesIssueTrackerItemRemovePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the mutation successful? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Represents information to fetch detailed issue tracker items for the given issue tracker links or the given ticket */\nexport type TicketExternalReferencesIssueTrackerListInput = {\n  /** The issue tracker links for the detailed list */\n  issueTrackerLinks?: InputMaybe<Array<Scalars['UriHttpString']['input']>>;\n  /** The related ticket for the issue tracker items */\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n/** Represents a ticket link to another object. */\nexport type TicketLinkInput = {\n  /** The target object to link to */\n  linkObjectId: Scalars['ID']['input'];\n  /** The link type to set, e.g. normal/parent/child */\n  linkType: Scalars['String']['input'];\n};\n\n/** Ticket live user information */\nexport type TicketLiveUser = {\n  __typename?: 'TicketLiveUser';\n  /** Different apps information from the user */\n  apps: Array<TicketLiveUserApp>;\n  user: User;\n};\n\n/** Ticket live user app information */\nexport type TicketLiveUserApp = {\n  __typename?: 'TicketLiveUserApp';\n  editing: Scalars['Boolean']['output'];\n  /** Last interaction time from the user in the frontend */\n  lastInteraction: Scalars['ISO8601DateTime']['output'];\n  name: EnumTaskbarApp;\n};\n\n/** Autogenerated return type of TicketLiveUserDelete. */\nexport type TicketLiveUserDeletePayload = {\n  __typename?: 'TicketLiveUserDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the live user entry deletion successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of TicketLiveUserUpdates. */\nexport type TicketLiveUserUpdatesPayload = {\n  __typename?: 'TicketLiveUserUpdatesPayload';\n  /** Current live users from the ticket. */\n  liveUsers?: Maybe<Array<TicketLiveUser>>;\n};\n\n/** Autogenerated return type of TicketLiveUserUpsert. */\nexport type TicketLiveUserUpsertPayload = {\n  __typename?: 'TicketLiveUserUpsertPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Did we succeed to insert/update the live user entry? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of TicketMerge. */\nexport type TicketMergePayload = {\n  __typename?: 'TicketMergePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The source ticket after merging. */\n  sourceTicket?: Maybe<Ticket>;\n  /** The target ticket after merging. */\n  targetTicket?: Maybe<Ticket>;\n};\n\n/** Autogenerated return type of TicketOverviewUpdates. */\nexport type TicketOverviewUpdatesPayload = {\n  __typename?: 'TicketOverviewUpdatesPayload';\n  /** Current ticket overviews for the user. */\n  ticketOverviews?: Maybe<Array<Overview>>;\n};\n\n/** Ticket priorities */\nexport type TicketPriority = {\n  __typename?: 'TicketPriority';\n  active: Scalars['Boolean']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  defaultCreate: Scalars['Boolean']['output'];\n  id: Scalars['ID']['output'];\n  name: Scalars['String']['output'];\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  uiColor?: Maybe<Scalars['String']['output']>;\n  uiIcon?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Refer to a ticket without raising authorization errors in case of missing permissions */\nexport type TicketReference = {\n  __typename?: 'TicketReference';\n  /** The ticket, if there is read permission */\n  ticket?: Maybe<Ticket>;\n};\n\n/** Represents the security attributes to be used in ticket article create/update. */\nexport type TicketSecurityInput = {\n  /** Security method. */\n  method: EnumSecurityStateType;\n  /** Enabled security options. */\n  options: Array<EnumSecurityOption>;\n};\n\n/** Ticket shared draft to start new tickets */\nexport type TicketSharedDraftStart = {\n  __typename?: 'TicketSharedDraftStart';\n  content?: Maybe<Scalars['JSON']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  /** resolver for Rails' belongs_to relationship */\n  group?: Maybe<Group>;\n  id: Scalars['ID']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  name?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Autogenerated return type of TicketSharedDraftStartCreate. */\nexport type TicketSharedDraftStartCreatePayload = {\n  __typename?: 'TicketSharedDraftStartCreatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The updated draft. */\n  sharedDraft: TicketSharedDraftStart;\n};\n\n/** Autogenerated return type of TicketSharedDraftStartDelete. */\nexport type TicketSharedDraftStartDeletePayload = {\n  __typename?: 'TicketSharedDraftStartDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the ticket article deletion successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** The ticket start draft fields */\nexport type TicketSharedDraftStartInput = {\n  /** Content of the draft */\n  content: Scalars['JSON']['input'];\n  /** Form ID to copy attachments from */\n  formId: Scalars['String']['input'];\n  /** Group to put shared draft into */\n  groupId: Scalars['ID']['input'];\n};\n\n/** Autogenerated return type of TicketSharedDraftStartUpdateByGroup. */\nexport type TicketSharedDraftStartUpdateByGroupPayload = {\n  __typename?: 'TicketSharedDraftStartUpdateByGroupPayload';\n  /** Up-to-date drafts in the given */\n  sharedDraftStarts?: Maybe<Array<TicketSharedDraftStart>>;\n};\n\n/** Autogenerated return type of TicketSharedDraftStartUpdate. */\nexport type TicketSharedDraftStartUpdatePayload = {\n  __typename?: 'TicketSharedDraftStartUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The updated draft. */\n  sharedDraft: TicketSharedDraftStart;\n};\n\n/** Ticket shared draft in detail view */\nexport type TicketSharedDraftZoom = {\n  __typename?: 'TicketSharedDraftZoom';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  newArticle?: Maybe<Scalars['JSON']['output']>;\n  ticketAttributes?: Maybe<Scalars['JSON']['output']>;\n  ticketId?: Maybe<Scalars['ID']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Autogenerated return type of TicketSharedDraftZoomCreate. */\nexport type TicketSharedDraftZoomCreatePayload = {\n  __typename?: 'TicketSharedDraftZoomCreatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The created draft. */\n  sharedDraft: TicketSharedDraftZoom;\n};\n\n/** Autogenerated return type of TicketSharedDraftZoomDelete. */\nexport type TicketSharedDraftZoomDeletePayload = {\n  __typename?: 'TicketSharedDraftZoomDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the ticket article deletion successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** The ticket zoom draft fields */\nexport type TicketSharedDraftZoomInput = {\n  /** Form ID to copy attachments from */\n  formId: Scalars['String']['input'];\n  /** Article content of the draft */\n  newArticle: Scalars['JSON']['input'];\n  /** Ticket attributes of the draft */\n  ticketAttributes: Scalars['JSON']['input'];\n  /** Ticket to put the draft into */\n  ticketId: Scalars['ID']['input'];\n};\n\n/** Autogenerated return type of TicketSharedDraftZoomUpdate. */\nexport type TicketSharedDraftZoomUpdatePayload = {\n  __typename?: 'TicketSharedDraftZoomUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The updated draft. */\n  sharedDraft: TicketSharedDraftZoom;\n};\n\n/** Ticket states */\nexport type TicketState = {\n  __typename?: 'TicketState';\n  active: Scalars['Boolean']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  defaultCreate: Scalars['Boolean']['output'];\n  defaultFollowUp: Scalars['Boolean']['output'];\n  id: Scalars['ID']['output'];\n  ignoreEscalation: Scalars['Boolean']['output'];\n  name: Scalars['String']['output'];\n  nextStateId?: Maybe<Scalars['Int']['output']>;\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  /** resolver for Rails' belongs_to relationship */\n  stateType: TicketStateType;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Ticket state types */\nexport type TicketStateType = {\n  __typename?: 'TicketStateType';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  name: Scalars['String']['output'];\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Ticket time accounting - sum per type */\nexport type TicketTimeAccountingTypeSum = {\n  __typename?: 'TicketTimeAccountingTypeSum';\n  name: Scalars['String']['output'];\n  timeUnit: Scalars['Float']['output'];\n};\n\n/** Represents the ticket attributes to be used in ticket update. */\nexport type TicketUpdateInput = {\n  /** The article data. */\n  article?: InputMaybe<TicketArticleInput>;\n  /** The customer of the ticket. */\n  customer?: InputMaybe<TicketCustomerInput>;\n  /** The group of the ticket. */\n  groupId?: InputMaybe<Scalars['ID']['input']>;\n  /** Additional custom attributes (names + values) */\n  objectAttributeValues?: InputMaybe<Array<ObjectAttributeValueInput>>;\n  /** The organization of the ticket. */\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n  /** The owner of the ticket. */\n  ownerId?: InputMaybe<Scalars['ID']['input']>;\n  /** The pending time of the ticket. */\n  pendingTime?: InputMaybe<Scalars['ISO8601DateTime']['input']>;\n  /** The priority of the ticket. */\n  priorityId?: InputMaybe<Scalars['ID']['input']>;\n  /** The state of the ticket. */\n  stateId?: InputMaybe<Scalars['ID']['input']>;\n  /** The title of the ticket. */\n  title?: InputMaybe<Scalars['NonEmptyString']['input']>;\n};\n\n/** Represents ticket update meta information to be used in ticket update. */\nexport type TicketUpdateMetaInput = {\n  /** The article data. */\n  article?: InputMaybe<TicketArticleInput>;\n  /** The customer of the ticket. */\n  customer?: InputMaybe<TicketCustomerInput>;\n  /** The macro to apply onto ticket */\n  macroId?: InputMaybe<Scalars['ID']['input']>;\n  /** Additional custom attributes (names + values) */\n  objectAttributeValues?: InputMaybe<Array<ObjectAttributeValueInput>>;\n  /** The organization of the ticket. */\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n  /** The owner of the ticket. */\n  ownerId?: InputMaybe<Scalars['ID']['input']>;\n  /** The pending time of the ticket. */\n  pendingTime?: InputMaybe<Scalars['ISO8601DateTime']['input']>;\n  /** The priority of the ticket. */\n  priorityId?: InputMaybe<Scalars['ID']['input']>;\n  /** The ticket update validators to skip */\n  skipValidators?: InputMaybe<Array<EnumUserErrorException>>;\n  /** The state of the ticket. */\n  stateId?: InputMaybe<Scalars['ID']['input']>;\n};\n\n/** Autogenerated return type of TicketUpdate. */\nexport type TicketUpdatePayload = {\n  __typename?: 'TicketUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The updated ticket. If this is present but empty, the mutation was successful but the user has no rights to view the updated ticket. */\n  ticket?: Maybe<Ticket>;\n};\n\n/** Autogenerated return type of TicketUpdates. */\nexport type TicketUpdatesPayload = {\n  __typename?: 'TicketUpdatesPayload';\n  /** Updated ticket */\n  ticket?: Maybe<Ticket>;\n};\n\n/** User access token */\nexport type Token = {\n  __typename?: 'Token';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  expiresAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  id: Scalars['ID']['output'];\n  lastUsedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;\n  name?: Maybe<Scalars['String']['output']>;\n  preferences?: Maybe<Scalars['JSON']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n  /** resolver for Rails' belongs_to relationship */\n  user?: Maybe<User>;\n};\n\n/** Autogenerated return type of Translations. */\nexport type TranslationsPayload = {\n  __typename?: 'TranslationsPayload';\n  /** Cache key that the front end should use to cache the new translation data. */\n  cacheKey?: Maybe<Scalars['String']['output']>;\n  /** If this is true, then the front end's translation cache is still valid and should be used, cacheKey and translation will not be returned. */\n  isCacheStillValid: Scalars['Boolean']['output'];\n  /** The actual translation data as Hash where keys are source and values target strings (excluding untranslated strings). */\n  translations?: Maybe<Scalars['JSON']['output']>;\n};\n\n/** Triggers */\nexport type Trigger = {\n  __typename?: 'Trigger';\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  id: Scalars['ID']['output'];\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  /** Name of the trigger */\n  name: Scalars['String']['output'];\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n};\n\n/** Payload for the two factor authentication */\nexport type TwoFactorAuthenticationInput = {\n  /** Two factor authentication method */\n  twoFactorMethod: EnumTwoFactorAuthenticationMethod;\n  /** Two factor authentication token */\n  twoFactorPayload: Scalars['JSON']['input'];\n};\n\n/** Two factor authentication methods available for the user about to log-in. */\nexport type TwoFactorEnabledAuthenticationMethod = {\n  __typename?: 'TwoFactorEnabledAuthenticationMethod';\n  authenticationMethod: EnumTwoFactorAuthenticationMethod;\n  configured: Scalars['Boolean']['output'];\n  default: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of TwoFactorMethodInitiateAuthentication. */\nexport type TwoFactorMethodInitiateAuthenticationPayload = {\n  __typename?: 'TwoFactorMethodInitiateAuthenticationPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  initiationData?: Maybe<Scalars['JSON']['output']>;\n};\n\n/** Payload for the two factor recovery authentication */\nexport type TwoFactorRecoveryInput = {\n  /** Two factor recovery code */\n  recoveryCode: Scalars['String']['input'];\n};\n\n/** A file to be uploaded. */\nexport type UploadFileInput = {\n  /** File content */\n  content?: InputMaybe<Scalars['BinaryString']['input']>;\n  /** Content-Disposition: inline flag */\n  inline?: InputMaybe<Scalars['Boolean']['input']>;\n  /** File name. */\n  name: Scalars['String']['input'];\n  /** File's content-type. */\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Users (admins, agents and customers) */\nexport type User = ObjectAttributeValuesInterface & {\n  __typename?: 'User';\n  active?: Maybe<Scalars['Boolean']['output']>;\n  authorizations?: Maybe<Array<Authorization>>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  email?: Maybe<Scalars['String']['output']>;\n  fax?: Maybe<Scalars['String']['output']>;\n  firstname?: Maybe<Scalars['String']['output']>;\n  fullname?: Maybe<Scalars['String']['output']>;\n  hasSecondaryOrganizations?: Maybe<Scalars['Boolean']['output']>;\n  id: Scalars['ID']['output'];\n  image?: Maybe<Scalars['String']['output']>;\n  imageSource?: Maybe<Scalars['String']['output']>;\n  /** Internal database ID */\n  internalId: Scalars['Int']['output'];\n  lastname?: Maybe<Scalars['String']['output']>;\n  login?: Maybe<Scalars['String']['output']>;\n  mobile?: Maybe<Scalars['String']['output']>;\n  /** Internal note */\n  note?: Maybe<Scalars['String']['output']>;\n  objectAttributeValues?: Maybe<Array<ObjectAttributeValue>>;\n  /** resolver for Rails' belongs_to relationship */\n  organization?: Maybe<Organization>;\n  outOfOffice?: Maybe<Scalars['Boolean']['output']>;\n  outOfOfficeEndAt?: Maybe<Scalars['ISO8601Date']['output']>;\n  /** Replacement agent if this user is out of office */\n  outOfOfficeReplacement?: Maybe<User>;\n  outOfOfficeStartAt?: Maybe<Scalars['ISO8601Date']['output']>;\n  permissions?: Maybe<UserPermission>;\n  /** Typed access to user preferences */\n  personalSettings?: Maybe<UserPersonalSettings>;\n  phone?: Maybe<Scalars['String']['output']>;\n  policy: PolicyDefault;\n  /** Direct access to preferences store */\n  preferences?: Maybe<Scalars['JSON']['output']>;\n  secondaryOrganizations?: Maybe<OrganizationConnection>;\n  ticketsCount?: Maybe<TicketCount>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n  verified?: Maybe<Scalars['Boolean']['output']>;\n  vip?: Maybe<Scalars['Boolean']['output']>;\n  web?: Maybe<Scalars['String']['output']>;\n};\n\n\n/** Users (admins, agents and customers) */\nexport type UserSecondaryOrganizationsArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  before?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** User access token creation fields */\nexport type UserAccessTokenInput = {\n  /** The token expiration date */\n  expiresAt?: InputMaybe<Scalars['ISO8601Date']['input']>;\n  /** The token name */\n  name: Scalars['String']['input'];\n  /** Permission names */\n  permission: Array<Scalars['String']['input']>;\n};\n\n/** Autogenerated return type of UserAddFirstAdmin. */\nexport type UserAddFirstAdminPayload = {\n  __typename?: 'UserAddFirstAdminPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The current session, if the user was successfully created. */\n  session?: Maybe<Session>;\n};\n\n/** Autogenerated return type of UserAdd. */\nexport type UserAddPayload = {\n  __typename?: 'UserAddPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The created user. */\n  user?: Maybe<User>;\n};\n\n/** Calendar subscriptions all calendars options saving */\nexport type UserCalendarSubscriptionSingleOptionsInput = {\n  /** Defines if not assigned tickets are included */\n  notAssigned: Scalars['Boolean']['input'];\n  /** Defines if own tickets are included */\n  own: Scalars['Boolean']['input'];\n};\n\n/** Calendar subscriptions options saving */\nexport type UserCalendarSubscriptionsConfigInput = {\n  /** Defines if alarm is added */\n  alarm: Scalars['Boolean']['input'];\n  /** Options for Escalation tab */\n  escalation: UserCalendarSubscriptionSingleOptionsInput;\n  /** Options for New & opened tab */\n  newOpen: UserCalendarSubscriptionSingleOptionsInput;\n  /** Options for Pending tab */\n  pending: UserCalendarSubscriptionSingleOptionsInput;\n};\n\n/** Two factor configuration information (e.g. configured and default methods) for the user. */\nexport type UserConfigurationTwoFactor = {\n  __typename?: 'UserConfigurationTwoFactor';\n  /** List of enabled two factor authentication methods (and information about the current user). */\n  enabledAuthenticationMethods: Array<TwoFactorEnabledAuthenticationMethod>;\n  /** Whether recovery codes exist for the current user. */\n  recoveryCodesExist: Scalars['Boolean']['output'];\n};\n\n/** The connection type for User. */\nexport type UserConnection = {\n  __typename?: 'UserConnection';\n  /** A list of edges. */\n  edges: Array<UserEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** Indicates the total number of available records. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** Autogenerated return type of UserCurrentAccessTokenAdd. */\nexport type UserCurrentAccessTokenAddPayload = {\n  __typename?: 'UserCurrentAccessTokenAddPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The token data */\n  token?: Maybe<Token>;\n  /** The token itself, shown once */\n  tokenValue: Scalars['String']['output'];\n};\n\n/** Autogenerated return type of UserCurrentAccessTokenDelete. */\nexport type UserCurrentAccessTokenDeletePayload = {\n  __typename?: 'UserCurrentAccessTokenDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the access token deletion successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentAccessTokenUpdates. */\nexport type UserCurrentAccessTokenUpdatesPayload = {\n  __typename?: 'UserCurrentAccessTokenUpdatesPayload';\n  /** List of acess tokens for the user */\n  tokens?: Maybe<Array<Token>>;\n};\n\n/** Autogenerated return type of UserCurrentAppearance. */\nexport type UserCurrentAppearancePayload = {\n  __typename?: 'UserCurrentAppearancePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Profile appearance settings updated successfully? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentAvatarAdd. */\nexport type UserCurrentAvatarAddPayload = {\n  __typename?: 'UserCurrentAvatarAddPayload';\n  /** The newly created avatar. */\n  avatar?: Maybe<Avatar>;\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n};\n\n/** Autogenerated return type of UserCurrentAvatarDelete. */\nexport type UserCurrentAvatarDeletePayload = {\n  __typename?: 'UserCurrentAvatarDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the avatar deletion successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentAvatarSelect. */\nexport type UserCurrentAvatarSelectPayload = {\n  __typename?: 'UserCurrentAvatarSelectPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the avatar selection successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentAvatarUpdates. */\nexport type UserCurrentAvatarUpdatesPayload = {\n  __typename?: 'UserCurrentAvatarUpdatesPayload';\n  /** List of avatars for the user */\n  avatars?: Maybe<Array<Avatar>>;\n};\n\n/** Autogenerated return type of UserCurrentCalendarSubscriptionUpdate. */\nexport type UserCurrentCalendarSubscriptionUpdatePayload = {\n  __typename?: 'UserCurrentCalendarSubscriptionUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Profile appearance settings updated successfully? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentChangePassword. */\nexport type UserCurrentChangePasswordPayload = {\n  __typename?: 'UserCurrentChangePasswordPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if changing the password was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentDeviceDelete. */\nexport type UserCurrentDeviceDeletePayload = {\n  __typename?: 'UserCurrentDeviceDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if deleting the user (session) device was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentDevicesUpdates. */\nexport type UserCurrentDevicesUpdatesPayload = {\n  __typename?: 'UserCurrentDevicesUpdatesPayload';\n  /** List of devices for the user */\n  devices?: Maybe<Array<UserDevice>>;\n};\n\n/** Autogenerated return type of UserCurrentLocale. */\nexport type UserCurrentLocalePayload = {\n  __typename?: 'UserCurrentLocalePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the update successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentNotificationPreferencesReset. */\nexport type UserCurrentNotificationPreferencesResetPayload = {\n  __typename?: 'UserCurrentNotificationPreferencesResetPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Updated user object */\n  user: User;\n};\n\n/** Autogenerated return type of UserCurrentNotificationPreferencesUpdate. */\nexport type UserCurrentNotificationPreferencesUpdatePayload = {\n  __typename?: 'UserCurrentNotificationPreferencesUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Updated user object */\n  user: User;\n};\n\n/** Autogenerated return type of UserCurrentOutOfOffice. */\nexport type UserCurrentOutOfOfficePayload = {\n  __typename?: 'UserCurrentOutOfOfficePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Profile out of office settings updated successfully? */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Hold last used information for an overview */\nexport type UserCurrentOverviewLastUsed = {\n  /** When the overview was last used */\n  lastUsedAt: Scalars['ISO8601DateTime']['input'];\n  /** The overview */\n  overviewId: Scalars['ID']['input'];\n};\n\n/** Autogenerated return type of UserCurrentOverviewOrderingUpdates. */\nexport type UserCurrentOverviewOrderingUpdatesPayload = {\n  __typename?: 'UserCurrentOverviewOrderingUpdatesPayload';\n  /** List of sorted overviews for the user */\n  overviews?: Maybe<Array<Overview>>;\n};\n\n/** Autogenerated return type of UserCurrentOverviewResetOrder. */\nexport type UserCurrentOverviewResetOrderPayload = {\n  __typename?: 'UserCurrentOverviewResetOrderPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** List of overview sortings for the user */\n  overviews?: Maybe<Array<Overview>>;\n  /** Was the reset successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentOverviewUpdateLastUsed. */\nexport type UserCurrentOverviewUpdateLastUsedPayload = {\n  __typename?: 'UserCurrentOverviewUpdateLastUsedPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the save successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentOverviewUpdateOrder. */\nexport type UserCurrentOverviewUpdateOrderPayload = {\n  __typename?: 'UserCurrentOverviewUpdateOrderPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the reset successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentPasswordCheck. */\nexport type UserCurrentPasswordCheckPayload = {\n  __typename?: 'UserCurrentPasswordCheckPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if given password matches current user password */\n  success?: Maybe<Scalars['Boolean']['output']>;\n  /** One-time token which should be included in a subsequent request (where applicable) */\n  token?: Maybe<Scalars['String']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentRecentViewReset. */\nexport type UserCurrentRecentViewResetPayload = {\n  __typename?: 'UserCurrentRecentViewResetPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the reset successful? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentRecentViewUpdates. */\nexport type UserCurrentRecentViewUpdatesPayload = {\n  __typename?: 'UserCurrentRecentViewUpdatesPayload';\n  /** The recent view list of the user has changed. */\n  recentViewsUpdated?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentRemoveLinkedAccount. */\nexport type UserCurrentRemoveLinkedAccountPayload = {\n  __typename?: 'UserCurrentRemoveLinkedAccountPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Was the linked account removed? */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentTaskbarItemAdd. */\nexport type UserCurrentTaskbarItemAddPayload = {\n  __typename?: 'UserCurrentTaskbarItemAddPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The created taskbar item. */\n  taskbarItem?: Maybe<UserTaskbarItem>;\n};\n\n/** Autogenerated return type of UserCurrentTaskbarItemDelete. */\nexport type UserCurrentTaskbarItemDeletePayload = {\n  __typename?: 'UserCurrentTaskbarItemDeletePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if deleting the user (session) device was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentTaskbarItemListPrio. */\nexport type UserCurrentTaskbarItemListPrioPayload = {\n  __typename?: 'UserCurrentTaskbarItemListPrioPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if sorting the taskbar item list was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentTaskbarItemListUpdates. */\nexport type UserCurrentTaskbarItemListUpdatesPayload = {\n  __typename?: 'UserCurrentTaskbarItemListUpdatesPayload';\n  /** List of taskbar items */\n  taskbarItemList?: Maybe<Array<UserTaskbarItem>>;\n};\n\n/** Autogenerated return type of UserCurrentTaskbarItemStateUpdates. */\nexport type UserCurrentTaskbarItemStateUpdatesPayload = {\n  __typename?: 'UserCurrentTaskbarItemStateUpdatesPayload';\n  /** Signals that the taskbar item state has changed */\n  stateChanged?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentTaskbarItemTouchLastContact. */\nexport type UserCurrentTaskbarItemTouchLastContactPayload = {\n  __typename?: 'UserCurrentTaskbarItemTouchLastContactPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The updated taskbar item. */\n  taskbarItem?: Maybe<UserTaskbarItem>;\n};\n\n/** Autogenerated return type of UserCurrentTaskbarItemUpdate. */\nexport type UserCurrentTaskbarItemUpdatePayload = {\n  __typename?: 'UserCurrentTaskbarItemUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The updated taskbar item. */\n  taskbarItem?: Maybe<UserTaskbarItem>;\n};\n\n/** Autogenerated return type of UserCurrentTaskbarItemUpdates. */\nexport type UserCurrentTaskbarItemUpdatesPayload = {\n  __typename?: 'UserCurrentTaskbarItemUpdatesPayload';\n  /** A new taskbar item needs to be added to the list */\n  addItem?: Maybe<UserTaskbarItem>;\n  /** An item must be removed from the list */\n  removeItem?: Maybe<Scalars['ID']['output']>;\n  /** An existing taskbar item was changed */\n  updateItem?: Maybe<UserTaskbarItem>;\n};\n\n/** Autogenerated return type of UserCurrentTicketOverviewUpdates. */\nexport type UserCurrentTicketOverviewUpdatesPayload = {\n  __typename?: 'UserCurrentTicketOverviewUpdatesPayload';\n  /** Current ticket overviews for the user. */\n  ticketOverviews?: Maybe<Array<Overview>>;\n};\n\n/** Autogenerated return type of UserCurrentTicketScreenBehavior. */\nexport type UserCurrentTicketScreenBehaviorPayload = {\n  __typename?: 'UserCurrentTicketScreenBehaviorPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** Whether the user ticket screen behavior setting was updated successfully */\n  success: Scalars['Boolean']['output'];\n};\n\n/** Autogenerated return type of UserCurrentTwoFactorRecoveryCodesGenerate. */\nexport type UserCurrentTwoFactorRecoveryCodesGeneratePayload = {\n  __typename?: 'UserCurrentTwoFactorRecoveryCodesGeneratePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** One-time two-factor authentication codes */\n  recoveryCodes?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** Autogenerated return type of UserCurrentTwoFactorRemoveMethodCredentials. */\nexport type UserCurrentTwoFactorRemoveMethodCredentialsPayload = {\n  __typename?: 'UserCurrentTwoFactorRemoveMethodCredentialsPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if removing authentication method was successful */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentTwoFactorRemoveMethod. */\nexport type UserCurrentTwoFactorRemoveMethodPayload = {\n  __typename?: 'UserCurrentTwoFactorRemoveMethodPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if removing authentication method was successful */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentTwoFactorSetDefaultMethod. */\nexport type UserCurrentTwoFactorSetDefaultMethodPayload = {\n  __typename?: 'UserCurrentTwoFactorSetDefaultMethodPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if setting authentication method as default was successful */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserCurrentTwoFactorUpdates. */\nexport type UserCurrentTwoFactorUpdatesPayload = {\n  __typename?: 'UserCurrentTwoFactorUpdatesPayload';\n  /** Configuration information for the current user. */\n  configuration?: Maybe<UserConfigurationTwoFactor>;\n};\n\n/** Autogenerated return type of UserCurrentTwoFactorVerifyMethodConfiguration. */\nexport type UserCurrentTwoFactorVerifyMethodConfigurationPayload = {\n  __typename?: 'UserCurrentTwoFactorVerifyMethodConfigurationPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** One-time two-factor authentication codes */\n  recoveryCodes?: Maybe<Array<Scalars['String']['output']>>;\n};\n\n/** Users (session) device */\nexport type UserDevice = {\n  __typename?: 'UserDevice';\n  browser?: Maybe<Scalars['String']['output']>;\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  deviceDetails?: Maybe<Scalars['JSON']['output']>;\n  fingerprint?: Maybe<Scalars['String']['output']>;\n  id: Scalars['ID']['output'];\n  ip?: Maybe<Scalars['String']['output']>;\n  location?: Maybe<Scalars['String']['output']>;\n  locationDetails?: Maybe<Scalars['JSON']['output']>;\n  name: Scalars['String']['output'];\n  os?: Maybe<Scalars['String']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n  userAgent?: Maybe<Scalars['String']['output']>;\n  userId: Scalars['ID']['output'];\n};\n\n/** An edge in a connection. */\nexport type UserEdge = {\n  __typename?: 'UserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String']['output'];\n  /** The item at the end of the edge. */\n  node: User;\n};\n\n/** Represents an error in the input of a mutation. */\nexport type UserError = {\n  __typename?: 'UserError';\n  exception?: Maybe<EnumUserErrorException>;\n  field?: Maybe<Scalars['String']['output']>;\n  message: Scalars['String']['output'];\n};\n\n/** Represents a User <-> Group permission entry. */\nexport type UserGroupPermissionEntry = {\n  /** Assigned access levels for the user in the group */\n  accessType: Array<EnumPermissionAccess>;\n  /** Internal ID of the group */\n  groupInternalId: Scalars['Int']['input'];\n};\n\n/** The user add/update fields. */\nexport type UserInput = {\n  /** The user active flag */\n  active?: InputMaybe<Scalars['Boolean']['input']>;\n  /** The user email */\n  email?: InputMaybe<Scalars['String']['input']>;\n  /** The user fax */\n  fax?: InputMaybe<Scalars['String']['input']>;\n  /** The user first name */\n  firstname?: InputMaybe<Scalars['String']['input']>;\n  /** User group access levels */\n  groupIds?: InputMaybe<Array<UserGroupPermissionEntry>>;\n  /** The user last name */\n  lastname?: InputMaybe<Scalars['String']['input']>;\n  /** The user mobile */\n  mobile?: InputMaybe<Scalars['String']['input']>;\n  /** The user note */\n  note?: InputMaybe<Scalars['String']['input']>;\n  /** Additional custom attributes (names + values) */\n  objectAttributeValues?: InputMaybe<Array<ObjectAttributeValueInput>>;\n  /** The organization the user belongs to */\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n  /** The secondary organizations the user belongs to */\n  organizationIds?: InputMaybe<Array<Scalars['ID']['input']>>;\n  /** The user password */\n  password?: InputMaybe<Scalars['String']['input']>;\n  /** The user phone */\n  phone?: InputMaybe<Scalars['String']['input']>;\n  /** The roles (e.g. admin, agent, (e.g. Agent or Customer) this user has */\n  roleIds?: InputMaybe<Array<Scalars['ID']['input']>>;\n  /** The user vip flag */\n  vip?: InputMaybe<Scalars['Boolean']['input']>;\n  /** The user web */\n  web?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Two factor authentication methods available for the user about to log-in. */\nexport type UserLoginTwoFactorMethods = {\n  __typename?: 'UserLoginTwoFactorMethods';\n  availableTwoFactorAuthenticationMethods: Array<EnumTwoFactorAuthenticationMethod>;\n  defaultTwoFactorAuthenticationMethod?: Maybe<EnumTwoFactorAuthenticationMethod>;\n  recoveryCodesAvailable: Scalars['Boolean']['output'];\n};\n\n/** Settings for ticket notification channels. */\nexport type UserNotificationMatrixChannelInput = {\n  /** Whether to send notifications via email */\n  email: Scalars['Boolean']['input'];\n  /** Whether to show notifications via GUI */\n  online?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\n/** Filter for ticket notification channels. */\nexport type UserNotificationMatrixCriteriaInput = {\n  /** No filter - send notificationy for any tickets */\n  no: Scalars['Boolean']['input'];\n  /** Send notifications for my tickets */\n  ownedByMe: Scalars['Boolean']['input'];\n  /** Send notifications for unassigned tickets */\n  ownedByNobody: Scalars['Boolean']['input'];\n  /** Send notifications for my subscribed tickets */\n  subscribed: Scalars['Boolean']['input'];\n};\n\n/** Settings for ticket notifications. */\nexport type UserNotificationMatrixInput = {\n  /** Notification settings for new tickets */\n  create: UserNotificationMatrixRowInput;\n  /** Notification settings for ticket escalations */\n  escalation: UserNotificationMatrixRowInput;\n  /** Notification settings for reached ticket reminders */\n  reminderReached: UserNotificationMatrixRowInput;\n  /** Notification settings for updated tickets */\n  update: UserNotificationMatrixRowInput;\n};\n\n/** Settings for ticket notifications. */\nexport type UserNotificationMatrixRowInput = {\n  /** Channels for notification delivery */\n  channel: UserNotificationMatrixChannelInput;\n  /** Filter for ticket notifications */\n  criteria: UserNotificationMatrixCriteriaInput;\n};\n\n/** Settings for notification sounds. */\nexport type UserNotificationSoundInput = {\n  /** Whether to play notification sounds */\n  enabled: Scalars['Boolean']['input'];\n  /** Which audio file to play for notification sounds */\n  file: EnumNotificationSoundFile;\n};\n\n/** Autogenerated return type of UserPasswordResetSend. */\nexport type UserPasswordResetSendPayload = {\n  __typename?: 'UserPasswordResetSendPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if sending of the password reset link was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserPasswordResetUpdate. */\nexport type UserPasswordResetUpdatePayload = {\n  __typename?: 'UserPasswordResetUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if the password update was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserPasswordResetVerify. */\nexport type UserPasswordResetVerifyPayload = {\n  __typename?: 'UserPasswordResetVerifyPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if the password reset token is valid. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Permissions for the current user */\nexport type UserPermission = {\n  __typename?: 'UserPermission';\n  ids: Array<Scalars['Int']['output']>;\n  names: Array<Scalars['String']['output']>;\n};\n\n/** Personal settings of the current user */\nexport type UserPersonalSettings = {\n  __typename?: 'UserPersonalSettings';\n  notificationConfig?: Maybe<UserPersonalSettingsNotificationConfig>;\n  notificationSound?: Maybe<UserPersonalSettingsNotificationSound>;\n};\n\n/** Options applying for all calendar subscriptions */\nexport type UserPersonalSettingsCalendarSubscriptionGlobalOptions = {\n  __typename?: 'UserPersonalSettingsCalendarSubscriptionGlobalOptions';\n  alarm?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Settings for the single calendar subscription */\nexport type UserPersonalSettingsCalendarSubscriptionSingle = {\n  __typename?: 'UserPersonalSettingsCalendarSubscriptionSingle';\n  options?: Maybe<UserPersonalSettingsCalendarSubscriptionSingleOptions>;\n  url?: Maybe<Scalars['UriHttpString']['output']>;\n};\n\n/** Options for the single calendar subscription */\nexport type UserPersonalSettingsCalendarSubscriptionSingleOptions = {\n  __typename?: 'UserPersonalSettingsCalendarSubscriptionSingleOptions';\n  notAssigned?: Maybe<Scalars['Boolean']['output']>;\n  own?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Settings for calendar subscription */\nexport type UserPersonalSettingsCalendarSubscriptionsConfig = {\n  __typename?: 'UserPersonalSettingsCalendarSubscriptionsConfig';\n  combinedUrl?: Maybe<Scalars['UriHttpString']['output']>;\n  escalation?: Maybe<UserPersonalSettingsCalendarSubscriptionSingle>;\n  globalOptions?: Maybe<UserPersonalSettingsCalendarSubscriptionGlobalOptions>;\n  newOpen?: Maybe<UserPersonalSettingsCalendarSubscriptionSingle>;\n  pending?: Maybe<UserPersonalSettingsCalendarSubscriptionSingle>;\n};\n\n/** Settings for ticket notifications. */\nexport type UserPersonalSettingsNotificationConfig = {\n  __typename?: 'UserPersonalSettingsNotificationConfig';\n  groupIds?: Maybe<Array<Scalars['Int']['output']>>;\n  matrix?: Maybe<UserPersonalSettingsNotificationMatrix>;\n};\n\n/** Settings for ticket notifications. */\nexport type UserPersonalSettingsNotificationMatrix = {\n  __typename?: 'UserPersonalSettingsNotificationMatrix';\n  /** Notification settings for new tickets */\n  create?: Maybe<UserPersonalSettingsNotificationMatrixRow>;\n  /** Notification settings for ticket escalations */\n  escalation?: Maybe<UserPersonalSettingsNotificationMatrixRow>;\n  /** Notification settings for reached ticket reminders */\n  reminderReached?: Maybe<UserPersonalSettingsNotificationMatrixRow>;\n  /** Notification settings for updated tickets */\n  update?: Maybe<UserPersonalSettingsNotificationMatrixRow>;\n};\n\n/** Settings for ticket notification channels. */\nexport type UserPersonalSettingsNotificationMatrixChannel = {\n  __typename?: 'UserPersonalSettingsNotificationMatrixChannel';\n  /** Whether to send notifications via email */\n  email?: Maybe<Scalars['Boolean']['output']>;\n  /** Whether to show notifications via GUI */\n  online?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Filter for ticket notification channels. */\nexport type UserPersonalSettingsNotificationMatrixCriteria = {\n  __typename?: 'UserPersonalSettingsNotificationMatrixCriteria';\n  /** No filter - send notificationy for any tickets */\n  no?: Maybe<Scalars['Boolean']['output']>;\n  /** Send notifications for my tickets */\n  ownedByMe?: Maybe<Scalars['Boolean']['output']>;\n  /** Send notifications for unassigned tickets */\n  ownedByNobody?: Maybe<Scalars['Boolean']['output']>;\n  /** Send notifications for my subscribed tickets */\n  subscribed?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Settings for ticket notifications. */\nexport type UserPersonalSettingsNotificationMatrixRow = {\n  __typename?: 'UserPersonalSettingsNotificationMatrixRow';\n  /** Channels for notification delivery */\n  channel?: Maybe<UserPersonalSettingsNotificationMatrixChannel>;\n  /** Filter for ticket notifications */\n  criteria?: Maybe<UserPersonalSettingsNotificationMatrixCriteria>;\n};\n\n/** Settings for notification sounds. */\nexport type UserPersonalSettingsNotificationSound = {\n  __typename?: 'UserPersonalSettingsNotificationSound';\n  /** Whether to play notification sounds */\n  enabled?: Maybe<Scalars['Boolean']['output']>;\n  /** Which audio file to play for notification sounds */\n  file?: Maybe<EnumNotificationSoundFile>;\n};\n\n/** The user sign-up fields. */\nexport type UserSignupInput = {\n  /** The user email */\n  email: Scalars['String']['input'];\n  /** The user first name */\n  firstname?: InputMaybe<Scalars['String']['input']>;\n  /** The user last name */\n  lastname?: InputMaybe<Scalars['String']['input']>;\n  /** The user login */\n  login?: InputMaybe<Scalars['String']['input']>;\n  /** Additional custom attributes (names + values) */\n  objectAttributeValues?: InputMaybe<Array<ObjectAttributeValueInput>>;\n  /** The user password */\n  password: Scalars['String']['input'];\n};\n\n/** Autogenerated return type of UserSignup. */\nexport type UserSignupPayload = {\n  __typename?: 'UserSignupPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if creating the user and sending the token was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserSignupResend. */\nexport type UserSignupResendPayload = {\n  __typename?: 'UserSignupResendPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** This indicates if sending of the token via email was successful. */\n  success?: Maybe<Scalars['Boolean']['output']>;\n};\n\n/** Autogenerated return type of UserSignupVerify. */\nexport type UserSignupVerifyPayload = {\n  __typename?: 'UserSignupVerifyPayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The current session, if the verification was successful. */\n  session?: Maybe<Session>;\n};\n\n/** Users taskbar item */\nexport type UserTaskbarItem = {\n  __typename?: 'UserTaskbarItem';\n  active: Scalars['Boolean']['output'];\n  app: EnumTaskbarApp;\n  callback: EnumTaskbarEntity;\n  changed: Scalars['Boolean']['output'];\n  /** Create date/time of the record */\n  createdAt: Scalars['ISO8601DateTime']['output'];\n  /** User that created this record */\n  createdBy?: Maybe<User>;\n  dirty: Scalars['Boolean']['output'];\n  entity?: Maybe<TaskbarItemEntity>;\n  entityAccess?: Maybe<EnumTaskbarEntityAccess>;\n  formId?: Maybe<Scalars['String']['output']>;\n  formNewArticlePresent: Scalars['Boolean']['output'];\n  id: Scalars['ID']['output'];\n  key: Scalars['String']['output'];\n  notify: Scalars['Boolean']['output'];\n  params?: Maybe<Scalars['JSON']['output']>;\n  prio: Scalars['Int']['output'];\n  state?: Maybe<Scalars['JSON']['output']>;\n  /** Last update date/time of the record */\n  updatedAt: Scalars['ISO8601DateTime']['output'];\n  /** Last user that updated this record */\n  updatedBy?: Maybe<User>;\n  userId: Scalars['ID']['output'];\n};\n\n/** Entity representing taskbar item ticket create */\nexport type UserTaskbarItemEntityTicketCreate = {\n  __typename?: 'UserTaskbarItemEntityTicketCreate';\n  createArticleTypeKey?: Maybe<Scalars['String']['output']>;\n  title: Scalars['String']['output'];\n  uid: Scalars['String']['output'];\n};\n\n/** The taskbar item fields. */\nexport type UserTaskbarItemInput = {\n  /** The taskbar item application */\n  app: EnumTaskbarApp;\n  /** The taskbar item related object callback */\n  callback: EnumTaskbarEntity;\n  /** The taskbar item form updater dirty flag */\n  dirty?: InputMaybe<Scalars['Boolean']['input']>;\n  /** The itaskbar item related object key identifier */\n  key: Scalars['String']['input'];\n  /** The taskbar item notification about changes */\n  notify: Scalars['Boolean']['input'];\n  /** Additional custom attributes (names + values) */\n  objectAttributeValues?: InputMaybe<Array<ObjectAttributeValueInput>>;\n  /** The taskbar item related object parameters */\n  params?: InputMaybe<Scalars['JSON']['input']>;\n  /** The taskbar item sorting priority */\n  prio: Scalars['Int']['input'];\n};\n\n/** The taskbar item list priority fields. */\nexport type UserTaskbarItemListPrioInput = {\n  /** The taskbar item ID */\n  id: Scalars['ID']['input'];\n  /** The taskbar item priority */\n  prio: Scalars['Int']['input'];\n};\n\n/** Autogenerated return type of UserUpdate. */\nexport type UserUpdatePayload = {\n  __typename?: 'UserUpdatePayload';\n  /** Errors encountered during execution of the mutation. */\n  errors?: Maybe<Array<UserError>>;\n  /** The created user. */\n  user?: Maybe<User>;\n};\n\n/** Autogenerated return type of UserUpdates. */\nexport type UserUpdatesPayload = {\n  __typename?: 'UserUpdatesPayload';\n  /** Updated user */\n  user?: Maybe<User>;\n};\n\nexport type QuickSearchQueryVariables = Exact<{\n  search: Scalars['String']['input'];\n  limit?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type QuickSearchQuery = { __typename?: 'Queries', quickSearchOrganizations: { __typename?: 'SearchResult', totalCount: number, items: Array<{ __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null } | { __typename?: 'Ticket' } | { __typename?: 'User' }> }, quickSearchTickets: { __typename?: 'SearchResult', totalCount: number, items: Array<{ __typename?: 'Organization' } | { __typename?: 'Ticket', id: string, internalId: number, title: string, number: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } } | { __typename?: 'User' }> }, quickSearchUsers: { __typename?: 'SearchResult', totalCount: number, items: Array<{ __typename?: 'Organization' } | { __typename?: 'Ticket' } | { __typename?: 'User', id: string, internalId: number, fullname?: string | null, active?: boolean | null }> } };\n\nexport type CalendarIcsFileEventsQueryVariables = Exact<{\n  fileId: Scalars['ID']['input'];\n}>;\n\n\nexport type CalendarIcsFileEventsQuery = { __typename?: 'Queries', calendarIcsFileEvents: Array<{ __typename?: 'CalendarIcsFileEvent', title?: string | null, location?: string | null, startDate?: string | null, endDate?: string | null, organizer?: string | null, attendees?: Array<string> | null, description?: string | null }> };\n\nexport type ChannelEmailAddMutationVariables = Exact<{\n  input: ChannelEmailAddInput;\n}>;\n\n\nexport type ChannelEmailAddMutation = { __typename?: 'Mutations', channelEmailAdd?: { __typename?: 'ChannelEmailAddPayload', channel?: { __typename?: 'Channel', options?: any | null, group?: { __typename?: 'Group', id: string } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type ChannelEmailGuessConfigurationMutationVariables = Exact<{\n  emailAddress: Scalars['String']['input'];\n  password: Scalars['String']['input'];\n}>;\n\n\nexport type ChannelEmailGuessConfigurationMutation = { __typename?: 'Mutations', channelEmailGuessConfiguration?: { __typename?: 'ChannelEmailGuessConfigurationPayload', result: { __typename?: 'ChannelEmailGuessConfigurationResult', inboundConfiguration?: { __typename?: 'ChannelEmailInboundConfiguration', adapter: EnumChannelEmailInboundAdapter, host?: string | null, port?: number | null, ssl?: EnumChannelEmailSsl | null, user?: string | null, password?: string | null, sslVerify?: boolean | null, folder?: string | null } | null, outboundConfiguration?: { __typename?: 'ChannelEmailOutboundConfiguration', adapter: EnumChannelEmailOutboundAdapter, host?: string | null, port?: number | null, user?: string | null, password?: string | null, sslVerify?: boolean | null } | null, mailboxStats?: { __typename?: 'ChannelEmailInboundMailboxStats', contentMessages?: number | null } | null }, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type ChannelEmailSetNotificationConfigurationMutationVariables = Exact<{\n  outboundConfiguration: ChannelEmailOutboundConfigurationInput;\n}>;\n\n\nexport type ChannelEmailSetNotificationConfigurationMutation = { __typename?: 'Mutations', channelEmailSetNotificationConfiguration?: { __typename?: 'ChannelEmailSetNotificationConfigurationPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type ChannelEmailValidateConfigurationInboundMutationVariables = Exact<{\n  inboundConfiguration: ChannelEmailInboundConfigurationInput;\n}>;\n\n\nexport type ChannelEmailValidateConfigurationInboundMutation = { __typename?: 'Mutations', channelEmailValidateConfigurationInbound?: { __typename?: 'ChannelEmailValidateConfigurationInboundPayload', success?: boolean | null, mailboxStats?: { __typename?: 'ChannelEmailInboundMailboxStats', contentMessages?: number | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type ChannelEmailValidateConfigurationOutboundMutationVariables = Exact<{\n  outboundConfiguration: ChannelEmailOutboundConfigurationInput;\n  emailAddress: Scalars['String']['input'];\n}>;\n\n\nexport type ChannelEmailValidateConfigurationOutboundMutation = { __typename?: 'Mutations', channelEmailValidateConfigurationOutbound?: { __typename?: 'ChannelEmailValidateConfigurationOutboundPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type ChannelEmailValidateConfigurationRoundtripMutationVariables = Exact<{\n  inboundConfiguration: ChannelEmailInboundConfigurationInput;\n  outboundConfiguration: ChannelEmailOutboundConfigurationInput;\n  emailAddress: Scalars['String']['input'];\n}>;\n\n\nexport type ChannelEmailValidateConfigurationRoundtripMutation = { __typename?: 'Mutations', channelEmailValidateConfigurationRoundtrip?: { __typename?: 'ChannelEmailValidateConfigurationRoundtripPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type EmailAddressesQueryVariables = Exact<{\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type EmailAddressesQuery = { __typename?: 'Queries', emailAddresses: Array<{ __typename?: 'EmailAddress', name: string, email: string, active: boolean }> };\n\nexport type UserCurrentOverviewUpdateLastUsedMutationVariables = Exact<{\n  overviewsLastUsed: Array<UserCurrentOverviewLastUsed> | UserCurrentOverviewLastUsed;\n}>;\n\n\nexport type UserCurrentOverviewUpdateLastUsedMutation = { __typename?: 'Mutations', userCurrentOverviewUpdateLastUsed?: { __typename?: 'UserCurrentOverviewUpdateLastUsedPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type OverviewsWithCachedCountQueryVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n  filterOverviewIds?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>;\n  cacheTtl: Scalars['Int']['input'];\n}>;\n\n\nexport type OverviewsWithCachedCountQuery = { __typename?: 'Queries', ticketOverviews: Array<{ __typename?: 'Overview', id: string, cachedTicketCount: number }> };\n\nexport type TicketsCachedByOverviewQueryVariables = Exact<{\n  overviewId: Scalars['ID']['input'];\n  orderBy?: InputMaybe<Scalars['String']['input']>;\n  orderDirection?: InputMaybe<EnumOrderDirection>;\n  cursor?: InputMaybe<Scalars['String']['input']>;\n  pageSize?: InputMaybe<Scalars['Int']['input']>;\n  cacheTtl: Scalars['Int']['input'];\n  renewCache?: InputMaybe<Scalars['Boolean']['input']>;\n  knownCollectionSignature?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type TicketsCachedByOverviewQuery = { __typename?: 'Queries', ticketsCachedByOverview: { __typename?: 'CachedTicketConnection', totalCount: number, collectionSignature: string, edges?: Array<{ __typename?: 'TicketEdge', cursor: string, node: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, updatedAt: string, pendingTime?: string | null, articleCount?: number | null, stateColorCode: EnumTicketStateColorCode, escalationAt?: string | null, firstResponseEscalationAt?: string | null, updateEscalationAt?: string | null, closeEscalationAt?: string | null, firstResponseAt?: string | null, closeAt?: string | null, timeUnit?: number | null, lastCloseAt?: string | null, lastContactAt?: string | null, lastContactAgentAt?: string | null, lastContactCustomerAt?: string | null, createdBy?: { __typename?: 'User', id: string, fullname?: string | null } | null, updatedBy?: { __typename?: 'User', id: string, fullname?: string | null } | null, owner: { __typename?: 'User', id: string, fullname?: string | null }, customer: { __typename?: 'User', id: string, fullname?: string | null }, organization?: { __typename?: 'Organization', id: string, name?: string | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null }, priority: { __typename?: 'TicketPriority', id: string, name: string, uiColor?: string | null }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, policy: { __typename?: 'PolicyTicket', update: boolean, agentReadAccess: boolean } } }> | null, pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, hasNextPage: boolean } } };\n\nexport type UserCurrentTicketOverviewsQueryVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n  withTicketCount: Scalars['Boolean']['input'];\n}>;\n\n\nexport type UserCurrentTicketOverviewsQuery = { __typename?: 'Queries', userCurrentTicketOverviews: Array<{ __typename?: 'Overview', viewColumnsRaw: Array<string>, id: string, internalId: number, name: string, link: string, prio: number, groupBy?: string | null, orderBy: string, orderDirection: EnumOrderDirection, organizationShared?: boolean | null, outOfOffice?: boolean | null, active: boolean, ticketCount?: number }> };\n\nexport type UserCurrentTicketOverviewsCountQueryVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n  cacheTtl: Scalars['Int']['input'];\n}>;\n\n\nexport type UserCurrentTicketOverviewsCountQuery = { __typename?: 'Queries', userCurrentTicketOverviews: Array<{ __typename?: 'Overview', id: string, cachedTicketCount: number }> };\n\nexport type UserCurrentOverviewOrderingFullAttributesUpdatesSubscriptionVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n  withTicketCount?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type UserCurrentOverviewOrderingFullAttributesUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentOverviewOrderingUpdates: { __typename?: 'UserCurrentOverviewOrderingUpdatesPayload', overviews?: Array<{ __typename?: 'Overview', viewColumnsRaw: Array<string>, id: string, internalId: number, name: string, link: string, prio: number, groupBy?: string | null, orderBy: string, orderDirection: EnumOrderDirection, organizationShared?: boolean | null, outOfOffice?: boolean | null, active: boolean, ticketCount?: number }> | null } };\n\nexport type UserCurrentOverviewOrderingUpdatesSubscriptionVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n}>;\n\n\nexport type UserCurrentOverviewOrderingUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentOverviewOrderingUpdates: { __typename?: 'UserCurrentOverviewOrderingUpdatesPayload', overviews?: Array<{ __typename?: 'Overview', id: string, name: string, organizationShared?: boolean | null, outOfOffice?: boolean | null }> | null } };\n\nexport type UserCurrentTicketOverviewFullAttributesUpdatesSubscriptionVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n  withTicketCount?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type UserCurrentTicketOverviewFullAttributesUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentTicketOverviewUpdates: { __typename?: 'UserCurrentTicketOverviewUpdatesPayload', ticketOverviews?: Array<{ __typename?: 'Overview', viewColumnsRaw: Array<string>, id: string, internalId: number, name: string, link: string, prio: number, groupBy?: string | null, orderBy: string, orderDirection: EnumOrderDirection, organizationShared?: boolean | null, outOfOffice?: boolean | null, active: boolean, ticketCount?: number }> | null } };\n\nexport type UserCurrentTicketOverviewUpdatesSubscriptionVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n}>;\n\n\nexport type UserCurrentTicketOverviewUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentTicketOverviewUpdates: { __typename?: 'UserCurrentTicketOverviewUpdatesPayload', ticketOverviews?: Array<{ __typename?: 'Overview', id: string, name: string }> | null } };\n\nexport type UserCurrentTaskbarItemAttributesFragment = { __typename?: 'UserTaskbarItem', id: string, key: string, callback: EnumTaskbarEntity, formId?: string | null, formNewArticlePresent: boolean, entityAccess?: EnumTaskbarEntityAccess | null, prio: number, changed: boolean, dirty: boolean, notify: boolean, updatedAt: string, entity?: { __typename?: 'Organization', id: string, internalId: number } | { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, updatedAt: string, state: { __typename?: 'TicketState', id: string, name: string } } | { __typename?: 'User', id: string, internalId: number } | { __typename?: 'UserTaskbarItemEntityTicketCreate', uid: string, title: string, createArticleTypeKey?: string | null } | null };\n\nexport type UserCurrentPasswordCheckMutationVariables = Exact<{\n  password: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentPasswordCheckMutation = { __typename?: 'Mutations', userCurrentPasswordCheck?: { __typename?: 'UserCurrentPasswordCheckPayload', success?: boolean | null, token?: string | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentRecentViewResetMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentRecentViewResetMutation = { __typename?: 'Mutations', userCurrentRecentViewReset?: { __typename?: 'UserCurrentRecentViewResetPayload', success: boolean } | null };\n\nexport type UserCurrentTaskbarItemAddMutationVariables = Exact<{\n  input: UserTaskbarItemInput;\n}>;\n\n\nexport type UserCurrentTaskbarItemAddMutation = { __typename?: 'Mutations', userCurrentTaskbarItemAdd?: { __typename?: 'UserCurrentTaskbarItemAddPayload', taskbarItem?: { __typename?: 'UserTaskbarItem', id: string, key: string, callback: EnumTaskbarEntity, formId?: string | null, formNewArticlePresent: boolean, entityAccess?: EnumTaskbarEntityAccess | null, prio: number, changed: boolean, dirty: boolean, notify: boolean, updatedAt: string, entity?: { __typename?: 'Organization', id: string, internalId: number } | { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, updatedAt: string, state: { __typename?: 'TicketState', id: string, name: string } } | { __typename?: 'User', id: string, internalId: number } | { __typename?: 'UserTaskbarItemEntityTicketCreate', uid: string, title: string, createArticleTypeKey?: string | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTaskbarItemDeleteMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n}>;\n\n\nexport type UserCurrentTaskbarItemDeleteMutation = { __typename?: 'Mutations', userCurrentTaskbarItemDelete?: { __typename?: 'UserCurrentTaskbarItemDeletePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTaskbarItemListPrioMutationVariables = Exact<{\n  list: Array<UserTaskbarItemListPrioInput> | UserTaskbarItemListPrioInput;\n}>;\n\n\nexport type UserCurrentTaskbarItemListPrioMutation = { __typename?: 'Mutations', userCurrentTaskbarItemListPrio?: { __typename?: 'UserCurrentTaskbarItemListPrioPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTaskbarItemTouchLastContactMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n}>;\n\n\nexport type UserCurrentTaskbarItemTouchLastContactMutation = { __typename?: 'Mutations', userCurrentTaskbarItemTouchLastContact?: { __typename?: 'UserCurrentTaskbarItemTouchLastContactPayload', taskbarItem?: { __typename?: 'UserTaskbarItem', id: string, key: string, callback: EnumTaskbarEntity, formId?: string | null, formNewArticlePresent: boolean, entityAccess?: EnumTaskbarEntityAccess | null, prio: number, changed: boolean, dirty: boolean, notify: boolean, updatedAt: string, entity?: { __typename?: 'Organization', id: string, internalId: number } | { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, updatedAt: string, state: { __typename?: 'TicketState', id: string, name: string } } | { __typename?: 'User', id: string, internalId: number } | { __typename?: 'UserTaskbarItemEntityTicketCreate', uid: string, title: string, createArticleTypeKey?: string | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTaskbarItemUpdateMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n  input: UserTaskbarItemInput;\n}>;\n\n\nexport type UserCurrentTaskbarItemUpdateMutation = { __typename?: 'Mutations', userCurrentTaskbarItemUpdate?: { __typename?: 'UserCurrentTaskbarItemUpdatePayload', taskbarItem?: { __typename?: 'UserTaskbarItem', id: string, key: string, callback: EnumTaskbarEntity, formId?: string | null, formNewArticlePresent: boolean, entityAccess?: EnumTaskbarEntityAccess | null, prio: number, changed: boolean, dirty: boolean, notify: boolean, updatedAt: string, entity?: { __typename?: 'Organization', id: string, internalId: number } | { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, updatedAt: string, state: { __typename?: 'TicketState', id: string, name: string } } | { __typename?: 'User', id: string, internalId: number } | { __typename?: 'UserTaskbarItemEntityTicketCreate', uid: string, title: string, createArticleTypeKey?: string | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTicketScreenBehaviorMutationVariables = Exact<{\n  behavior: EnumTicketScreenBehavior;\n}>;\n\n\nexport type UserCurrentTicketScreenBehaviorMutation = { __typename?: 'Mutations', userCurrentTicketScreenBehavior?: { __typename?: 'UserCurrentTicketScreenBehaviorPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentRecentViewListQueryVariables = Exact<{\n  limit?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type UserCurrentRecentViewListQuery = { __typename?: 'Queries', userCurrentRecentViewList: Array<{ __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null } | { __typename?: 'Ticket', id: string, internalId: number, title: string, number: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string }, priority: { __typename?: 'TicketPriority', id: string, name: string, defaultCreate: boolean, uiColor?: string | null } } | { __typename?: 'User', id: string, internalId: number, fullname?: string | null, active?: boolean | null }> };\n\nexport type UserCurrentTaskbarItemListQueryVariables = Exact<{\n  app: EnumTaskbarApp;\n}>;\n\n\nexport type UserCurrentTaskbarItemListQuery = { __typename?: 'Queries', userCurrentTaskbarItemList?: Array<{ __typename?: 'UserTaskbarItem', id: string, key: string, callback: EnumTaskbarEntity, formId?: string | null, formNewArticlePresent: boolean, entityAccess?: EnumTaskbarEntityAccess | null, prio: number, changed: boolean, dirty: boolean, notify: boolean, updatedAt: string, entity?: { __typename?: 'Organization', id: string, internalId: number } | { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, updatedAt: string, state: { __typename?: 'TicketState', id: string, name: string } } | { __typename?: 'User', id: string, internalId: number } | { __typename?: 'UserTaskbarItemEntityTicketCreate', uid: string, title: string, createArticleTypeKey?: string | null } | null }> | null };\n\nexport type UserCurrentRecentViewUpdatesSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentRecentViewUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentRecentViewUpdates: { __typename?: 'UserCurrentRecentViewUpdatesPayload', recentViewsUpdated?: boolean | null } };\n\nexport type UserCurrentTaskbarItemListUpdatesSubscriptionVariables = Exact<{\n  app: EnumTaskbarApp;\n}>;\n\n\nexport type UserCurrentTaskbarItemListUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentTaskbarItemListUpdates: { __typename?: 'UserCurrentTaskbarItemListUpdatesPayload', taskbarItemList?: Array<{ __typename?: 'UserTaskbarItem', id: string, prio: number }> | null } };\n\nexport type UserCurrentTaskbarItemStateUpdatesSubscriptionVariables = Exact<{\n  taskbarItemId: Scalars['ID']['input'];\n}>;\n\n\nexport type UserCurrentTaskbarItemStateUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentTaskbarItemStateUpdates: { __typename?: 'UserCurrentTaskbarItemStateUpdatesPayload', stateChanged?: boolean | null } };\n\nexport type UserCurrentTaskbarItemUpdatesSubscriptionVariables = Exact<{\n  app: EnumTaskbarApp;\n}>;\n\n\nexport type UserCurrentTaskbarItemUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentTaskbarItemUpdates: { __typename?: 'UserCurrentTaskbarItemUpdatesPayload', removeItem?: string | null, addItem?: { __typename?: 'UserTaskbarItem', id: string, key: string, callback: EnumTaskbarEntity, formId?: string | null, formNewArticlePresent: boolean, entityAccess?: EnumTaskbarEntityAccess | null, prio: number, changed: boolean, dirty: boolean, notify: boolean, updatedAt: string, entity?: { __typename?: 'Organization', id: string, internalId: number } | { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, updatedAt: string, state: { __typename?: 'TicketState', id: string, name: string } } | { __typename?: 'User', id: string, internalId: number } | { __typename?: 'UserTaskbarItemEntityTicketCreate', uid: string, title: string, createArticleTypeKey?: string | null } | null } | null, updateItem?: { __typename?: 'UserTaskbarItem', id: string, key: string, callback: EnumTaskbarEntity, formId?: string | null, formNewArticlePresent: boolean, entityAccess?: EnumTaskbarEntityAccess | null, prio: number, changed: boolean, dirty: boolean, notify: boolean, updatedAt: string, entity?: { __typename?: 'Organization', id: string, internalId: number } | { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, updatedAt: string, state: { __typename?: 'TicketState', id: string, name: string } } | { __typename?: 'User', id: string, internalId: number } | { __typename?: 'UserTaskbarItemEntityTicketCreate', uid: string, title: string, createArticleTypeKey?: string | null } | null } | null } };\n\nexport type UserCurrentTwoFactorUpdatesSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentTwoFactorUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentTwoFactorUpdates: { __typename?: 'UserCurrentTwoFactorUpdatesPayload', configuration?: { __typename?: 'UserConfigurationTwoFactor', recoveryCodesExist: boolean, enabledAuthenticationMethods: Array<{ __typename?: 'TwoFactorEnabledAuthenticationMethod', configured: boolean, authenticationMethod: EnumTwoFactorAuthenticationMethod }> } | null } };\n\nexport type AdminPasswordAuthSendMutationVariables = Exact<{\n  login: Scalars['String']['input'];\n}>;\n\n\nexport type AdminPasswordAuthSendMutation = { __typename?: 'Mutations', adminPasswordAuthSend?: { __typename?: 'AdminPasswordAuthSendPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type AdminPasswordAuthVerifyMutationVariables = Exact<{\n  token: Scalars['String']['input'];\n}>;\n\n\nexport type AdminPasswordAuthVerifyMutation = { __typename?: 'Mutations', adminPasswordAuthVerify?: { __typename?: 'AdminPasswordAuthVerifyPayload', login?: string | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserPasswordResetSendMutationVariables = Exact<{\n  username: Scalars['String']['input'];\n}>;\n\n\nexport type UserPasswordResetSendMutation = { __typename?: 'Mutations', userPasswordResetSend?: { __typename?: 'UserPasswordResetSendPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserPasswordResetUpdateMutationVariables = Exact<{\n  token: Scalars['String']['input'];\n  password: Scalars['String']['input'];\n}>;\n\n\nexport type UserPasswordResetUpdateMutation = { __typename?: 'Mutations', userPasswordResetUpdate?: { __typename?: 'UserPasswordResetUpdatePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserPasswordResetVerifyMutationVariables = Exact<{\n  token: Scalars['String']['input'];\n}>;\n\n\nexport type UserPasswordResetVerifyMutation = { __typename?: 'Mutations', userPasswordResetVerify?: { __typename?: 'UserPasswordResetVerifyPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserSignupMutationVariables = Exact<{\n  input: UserSignupInput;\n}>;\n\n\nexport type UserSignupMutation = { __typename?: 'Mutations', userSignup?: { __typename?: 'UserSignupPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserSignupResendMutationVariables = Exact<{\n  email: Scalars['String']['input'];\n}>;\n\n\nexport type UserSignupResendMutation = { __typename?: 'Mutations', userSignupResend?: { __typename?: 'UserSignupResendPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserSignupVerifyMutationVariables = Exact<{\n  token: Scalars['String']['input'];\n}>;\n\n\nexport type UserSignupVerifyMutation = { __typename?: 'Mutations', userSignupVerify?: { __typename?: 'UserSignupVerifyPayload', session?: { __typename?: 'Session', id: string, afterAuth?: { __typename?: 'SessionAfterAuth', type: EnumAfterAuthType, data?: any | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type GuidedSetupSetSystemInformationMutationVariables = Exact<{\n  input: SystemInformation;\n}>;\n\n\nexport type GuidedSetupSetSystemInformationMutation = { __typename?: 'Mutations', guidedSetupSetSystemInformation?: { __typename?: 'GuidedSetupSetSystemInformationPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type SystemImportConfigurationMutationVariables = Exact<{\n  configuration: SystemImportConfigurationInput;\n}>;\n\n\nexport type SystemImportConfigurationMutation = { __typename?: 'Mutations', systemImportConfiguration?: { __typename?: 'SystemImportConfigurationPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type SystemImportStartMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type SystemImportStartMutation = { __typename?: 'Mutations', systemImportStart?: { __typename?: 'SystemImportStartPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type SystemSetupLockMutationVariables = Exact<{\n  ttl?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type SystemSetupLockMutation = { __typename?: 'Mutations', systemSetupLock?: { __typename?: 'SystemSetupLockPayload', resource?: string | null, value?: string | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type SystemSetupRunAutoWizardMutationVariables = Exact<{\n  token?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type SystemSetupRunAutoWizardMutation = { __typename?: 'Mutations', systemSetupRunAutoWizard?: { __typename?: 'SystemSetupRunAutoWizardPayload', session?: { __typename?: 'Session', id: string, afterAuth?: { __typename?: 'SessionAfterAuth', type: EnumAfterAuthType, data?: any | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type SystemSetupUnlockMutationVariables = Exact<{\n  value: Scalars['String']['input'];\n}>;\n\n\nexport type SystemSetupUnlockMutation = { __typename?: 'Mutations', systemSetupUnlock?: { __typename?: 'SystemSetupUnlockPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserAddFirstAdminMutationVariables = Exact<{\n  input: UserSignupInput;\n}>;\n\n\nexport type UserAddFirstAdminMutation = { __typename?: 'Mutations', userAddFirstAdmin?: { __typename?: 'UserAddFirstAdminPayload', session?: { __typename?: 'Session', id: string, afterAuth?: { __typename?: 'SessionAfterAuth', type: EnumAfterAuthType, data?: any | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type SystemImportStateQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type SystemImportStateQuery = { __typename?: 'Queries', systemImportState?: { __typename?: 'ImportJob', name: string, result?: any | null, startedAt?: string | null, finishedAt?: string | null } | null };\n\nexport type SystemSetupInfoQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type SystemSetupInfoQuery = { __typename?: 'Queries', systemSetupInfo: { __typename?: 'SystemSetupInfo', status: EnumSystemSetupInfoStatus, type?: EnumSystemSetupInfoType | null } };\n\nexport type UserCalendarSubscriptionAttributesFragment = { __typename?: 'UserPersonalSettingsCalendarSubscriptionsConfig', combinedUrl?: string | null, globalOptions?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionGlobalOptions', alarm?: boolean | null } | null, newOpen?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingle', url?: string | null, options?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingleOptions', own?: boolean | null, notAssigned?: boolean | null } | null } | null, pending?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingle', url?: string | null, options?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingleOptions', own?: boolean | null, notAssigned?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingle', url?: string | null, options?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingleOptions', own?: boolean | null, notAssigned?: boolean | null } | null } | null };\n\nexport type UserDeviceAttributesFragment = { __typename?: 'UserDevice', id: string, userId: string, name: string, os?: string | null, browser?: string | null, location?: string | null, deviceDetails?: any | null, locationDetails?: any | null, fingerprint?: string | null, userAgent?: string | null, ip?: string | null, createdAt: string, updatedAt: string };\n\nexport type UserCurrentAppearanceMutationVariables = Exact<{\n  theme: EnumAppearanceTheme;\n}>;\n\n\nexport type UserCurrentAppearanceMutation = { __typename?: 'Mutations', userCurrentAppearance?: { __typename?: 'UserCurrentAppearancePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentAvatarSelectMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n}>;\n\n\nexport type UserCurrentAvatarSelectMutation = { __typename?: 'Mutations', userCurrentAvatarSelect?: { __typename?: 'UserCurrentAvatarSelectPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentCalendarSubscriptionUpdateMutationVariables = Exact<{\n  input: UserCalendarSubscriptionsConfigInput;\n}>;\n\n\nexport type UserCurrentCalendarSubscriptionUpdateMutation = { __typename?: 'Mutations', userCurrentCalendarSubscriptionUpdate?: { __typename?: 'UserCurrentCalendarSubscriptionUpdatePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentChangePasswordMutationVariables = Exact<{\n  currentPassword: Scalars['String']['input'];\n  newPassword: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentChangePasswordMutation = { __typename?: 'Mutations', userCurrentChangePassword?: { __typename?: 'UserCurrentChangePasswordPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentDeviceDeleteMutationVariables = Exact<{\n  deviceId: Scalars['ID']['input'];\n}>;\n\n\nexport type UserCurrentDeviceDeleteMutation = { __typename?: 'Mutations', userCurrentDeviceDelete?: { __typename?: 'UserCurrentDeviceDeletePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentRemoveLinkedAccountMutationVariables = Exact<{\n  provider: EnumAuthenticationProvider;\n  uid: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentRemoveLinkedAccountMutation = { __typename?: 'Mutations', userCurrentRemoveLinkedAccount?: { __typename?: 'UserCurrentRemoveLinkedAccountPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentNotificationPreferencesResetMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentNotificationPreferencesResetMutation = { __typename?: 'Mutations', userCurrentNotificationPreferencesReset?: { __typename?: 'UserCurrentNotificationPreferencesResetPayload', user: { __typename?: 'User', personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null }, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentNotificationPreferencesUpdateMutationVariables = Exact<{\n  groupIds?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>;\n  matrix: UserNotificationMatrixInput;\n  sound: UserNotificationSoundInput;\n}>;\n\n\nexport type UserCurrentNotificationPreferencesUpdateMutation = { __typename?: 'Mutations', userCurrentNotificationPreferencesUpdate?: { __typename?: 'UserCurrentNotificationPreferencesUpdatePayload', user: { __typename?: 'User', personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null }, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentOutOfOfficeMutationVariables = Exact<{\n  input: OutOfOfficeInput;\n}>;\n\n\nexport type UserCurrentOutOfOfficeMutation = { __typename?: 'Mutations', userCurrentOutOfOffice?: { __typename?: 'UserCurrentOutOfOfficePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentOverviewResetOrderMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentOverviewResetOrderMutation = { __typename?: 'Mutations', userCurrentOverviewResetOrder?: { __typename?: 'UserCurrentOverviewResetOrderPayload', success: boolean, overviews?: Array<{ __typename?: 'Overview', id: string, name: string }> | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentOverviewUpdateOrderMutationVariables = Exact<{\n  overviewIds: Array<Scalars['ID']['input']> | Scalars['ID']['input'];\n}>;\n\n\nexport type UserCurrentOverviewUpdateOrderMutation = { __typename?: 'Mutations', userCurrentOverviewUpdateOrder?: { __typename?: 'UserCurrentOverviewUpdateOrderPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentAvatarListQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentAvatarListQuery = { __typename?: 'Queries', userCurrentAvatarList?: Array<{ __typename?: 'Avatar', id: string, default: boolean, deletable: boolean, initial: boolean, imageHash?: string | null, createdAt: string, updatedAt: string }> | null };\n\nexport type UserCurrentCalendarSubscriptionListQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentCalendarSubscriptionListQuery = { __typename?: 'Queries', userCurrentCalendarSubscriptionList: { __typename?: 'UserPersonalSettingsCalendarSubscriptionsConfig', combinedUrl?: string | null, globalOptions?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionGlobalOptions', alarm?: boolean | null } | null, newOpen?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingle', url?: string | null, options?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingleOptions', own?: boolean | null, notAssigned?: boolean | null } | null } | null, pending?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingle', url?: string | null, options?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingleOptions', own?: boolean | null, notAssigned?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingle', url?: string | null, options?: { __typename?: 'UserPersonalSettingsCalendarSubscriptionSingleOptions', own?: boolean | null, notAssigned?: boolean | null } | null } | null } };\n\nexport type UserCurrentDeviceListQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentDeviceListQuery = { __typename?: 'Queries', userCurrentDeviceList?: Array<{ __typename?: 'UserDevice', id: string, userId: string, name: string, os?: string | null, browser?: string | null, location?: string | null, deviceDetails?: any | null, locationDetails?: any | null, fingerprint?: string | null, userAgent?: string | null, ip?: string | null, createdAt: string, updatedAt: string }> | null };\n\nexport type UserCurrentOverviewListQueryVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n}>;\n\n\nexport type UserCurrentOverviewListQuery = { __typename?: 'Queries', userCurrentTicketOverviews: Array<{ __typename?: 'Overview', id: string, name: string, organizationShared?: boolean | null, outOfOffice?: boolean | null }> };\n\nexport type UserCurrentAccessTokenUpdatesSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentAccessTokenUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentAccessTokenUpdates: { __typename?: 'UserCurrentAccessTokenUpdatesPayload', tokens?: Array<{ __typename?: 'Token', id: string, name?: string | null, preferences?: any | null, expiresAt?: string | null, lastUsedAt?: string | null, createdAt: string, user?: { __typename?: 'User', id: string } | null }> | null } };\n\nexport type UserCurrentAvatarUpdatesSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentAvatarUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentAvatarUpdates: { __typename?: 'UserCurrentAvatarUpdatesPayload', avatars?: Array<{ __typename?: 'Avatar', id: string, default: boolean, deletable: boolean, initial: boolean, imageHash?: string | null, createdAt: string, updatedAt: string }> | null } };\n\nexport type UserCurrentDevicesUpdatesSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentDevicesUpdatesSubscription = { __typename?: 'Subscriptions', userCurrentDevicesUpdates: { __typename?: 'UserCurrentDevicesUpdatesPayload', devices?: Array<{ __typename?: 'UserDevice', id: string, userId: string, name: string, os?: string | null, browser?: string | null, location?: string | null, deviceDetails?: any | null, locationDetails?: any | null, fingerprint?: string | null, userAgent?: string | null, ip?: string | null, createdAt: string, updatedAt: string }> | null } };\n\nexport type IdoitObjectAttributesFragment = { __typename?: 'TicketExternalReferencesIdoitObject', idoitObjectId: number, link?: string | null, title: string, type: string, status: string };\n\nexport type LinkAddMutationVariables = Exact<{\n  input: LinkInput;\n}>;\n\n\nexport type LinkAddMutation = { __typename?: 'Mutations', linkAdd?: { __typename?: 'LinkAddPayload', link?: { __typename?: 'Link', type: EnumLinkType, item: { __typename?: 'KnowledgeBaseAnswerTranslation', id: string } | { __typename?: 'Ticket', id: string, internalId: number, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } } } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null }> | null } | null };\n\nexport type LinkRemoveMutationVariables = Exact<{\n  input: LinkInput;\n}>;\n\n\nexport type LinkRemoveMutation = { __typename?: 'Mutations', linkRemove?: { __typename?: 'LinkRemovePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null }> | null } | null };\n\nexport type TicketChecklistAddMutationVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n  templateId?: InputMaybe<Scalars['ID']['input']>;\n}>;\n\n\nexport type TicketChecklistAddMutation = { __typename?: 'Mutations', ticketChecklistAdd?: { __typename?: 'TicketChecklistAddPayload', checklist?: { __typename?: 'Checklist', id: string, name?: string | null, items: Array<{ __typename?: 'ChecklistItem', id: string, text: string, checked: boolean }> } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketChecklistDeleteMutationVariables = Exact<{\n  checklistId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketChecklistDeleteMutation = { __typename?: 'Mutations', ticketChecklistDelete?: { __typename?: 'TicketChecklistDeletePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketChecklistItemDeleteMutationVariables = Exact<{\n  checklistId: Scalars['ID']['input'];\n  checklistItemId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketChecklistItemDeleteMutation = { __typename?: 'Mutations', ticketChecklistItemDelete?: { __typename?: 'TicketChecklistItemDeletePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketChecklistItemOrderUpdateMutationVariables = Exact<{\n  checklistId: Scalars['ID']['input'];\n  order: Array<Scalars['ID']['input']> | Scalars['ID']['input'];\n}>;\n\n\nexport type TicketChecklistItemOrderUpdateMutation = { __typename?: 'Mutations', ticketChecklistItemOrderUpdate?: { __typename?: 'TicketChecklistItemOrderUpdatePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketChecklistItemUpsertMutationVariables = Exact<{\n  checklistId: Scalars['ID']['input'];\n  checklistItemId?: InputMaybe<Scalars['ID']['input']>;\n  input: TicketChecklistItemInput;\n}>;\n\n\nexport type TicketChecklistItemUpsertMutation = { __typename?: 'Mutations', ticketChecklistItemUpsert?: { __typename?: 'TicketChecklistItemUpsertPayload', checklistItem?: { __typename?: 'ChecklistItem', id: string, text: string, checked: boolean, ticketReference?: { __typename?: 'TicketReference', ticket?: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } } | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketChecklistTitleUpdateMutationVariables = Exact<{\n  checklistId: Scalars['ID']['input'];\n  title?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type TicketChecklistTitleUpdateMutation = { __typename?: 'Mutations', ticketChecklistTitleUpdate?: { __typename?: 'TicketChecklistTitleUpdatePayload', checklist?: { __typename?: 'Checklist', id: string, name?: string | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketExternalReferencesIdoitObjectAddMutationVariables = Exact<{\n  idoitObjectIds: Array<Scalars['Int']['input']> | Scalars['Int']['input'];\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n}>;\n\n\nexport type TicketExternalReferencesIdoitObjectAddMutation = { __typename?: 'Mutations', ticketExternalReferencesIdoitObjectAdd?: { __typename?: 'TicketExternalReferencesIdoitObjectAddPayload', idoitObjects?: Array<{ __typename?: 'TicketExternalReferencesIdoitObject', idoitObjectId: number, link?: string | null, title: string, type: string, status: string }> | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketExternalReferencesIdoitObjectRemoveMutationVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n  idoitObjectId: Scalars['Int']['input'];\n}>;\n\n\nexport type TicketExternalReferencesIdoitObjectRemoveMutation = { __typename?: 'Mutations', ticketExternalReferencesIdoitObjectRemove?: { __typename?: 'TicketExternalReferencesIdoitObjectRemovePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketExternalReferencesIssueTrackerItemAddMutationVariables = Exact<{\n  issueTrackerLink: Scalars['UriHttpString']['input'];\n  issueTrackerType: EnumTicketExternalReferencesIssueTrackerType;\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n}>;\n\n\nexport type TicketExternalReferencesIssueTrackerItemAddMutation = { __typename?: 'Mutations', ticketExternalReferencesIssueTrackerItemAdd?: { __typename?: 'TicketExternalReferencesIssueTrackerItemAddPayload', issueTrackerItem?: { __typename?: 'TicketExternalReferencesIssueTrackerItem', assignees?: Array<string> | null, issueId: number, milestone?: string | null, state: EnumTicketExternalReferencesIssueTrackerItemState, title: string, url: string, labels?: Array<{ __typename?: 'TicketExternalReferencesIssueTrackerItemLabel', color: string, textColor: string, title: string }> | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketExternalReferencesIssueTrackerItemRemoveMutationVariables = Exact<{\n  issueTrackerLink: Scalars['UriHttpString']['input'];\n  issueTrackerType: EnumTicketExternalReferencesIssueTrackerType;\n  ticketId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketExternalReferencesIssueTrackerItemRemoveMutation = { __typename?: 'Mutations', ticketExternalReferencesIssueTrackerItemRemove?: { __typename?: 'TicketExternalReferencesIssueTrackerItemRemovePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type AutocompleteSearchIdoitObjectTypesQueryVariables = Exact<{\n  input: AutocompleteSearchInput;\n}>;\n\n\nexport type AutocompleteSearchIdoitObjectTypesQuery = { __typename?: 'Queries', autocompleteSearchIdoitObjectTypes: Array<{ __typename?: 'AutocompleteSearchEntry', value: string, label: string }> };\n\nexport type ChecklistTemplatesQueryVariables = Exact<{\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type ChecklistTemplatesQuery = { __typename?: 'Queries', checklistTemplates: Array<{ __typename?: 'ChecklistTemplate', id: string, name?: string | null, active?: boolean | null }> };\n\nexport type LinkListQueryVariables = Exact<{\n  objectId: Scalars['ID']['input'];\n  targetType: Scalars['String']['input'];\n}>;\n\n\nexport type LinkListQuery = { __typename?: 'Queries', linkList?: Array<{ __typename?: 'Link', type: EnumLinkType, item: { __typename?: 'KnowledgeBaseAnswerTranslation', id: string } | { __typename?: 'Ticket', id: string, internalId: number, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } } }> | null };\n\nexport type TemplatesQueryVariables = Exact<{\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type TemplatesQuery = { __typename?: 'Queries', templates: Array<{ __typename?: 'Template', id: string, name: string }> };\n\nexport type TicketAttachmentsQueryVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketAttachmentsQuery = { __typename?: 'Queries', ticketAttachments: Array<{ __typename?: 'StoredFile', id: string, internalId: number, name: string, size?: number | null, type?: string | null, preferences?: any | null }> };\n\nexport type TicketChecklistQueryVariables = Exact<{\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  ticketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  ticketNumber?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type TicketChecklistQuery = { __typename?: 'Queries', ticketChecklist?: { __typename?: 'Checklist', id: string, name?: string | null, completed: boolean, incomplete: number, items: Array<{ __typename?: 'ChecklistItem', id: string, text: string, checked: boolean, ticketReference?: { __typename?: 'TicketReference', ticket?: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } } | null } | null }> } | null };\n\nexport type TicketExternalReferencesIdoitObjectListQueryVariables = Exact<{\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  idoitObjectIds?: InputMaybe<Array<Scalars['Int']['input']> | Scalars['Int']['input']>;\n}>;\n\n\nexport type TicketExternalReferencesIdoitObjectListQuery = { __typename?: 'Queries', ticketExternalReferencesIdoitObjectList: Array<{ __typename?: 'TicketExternalReferencesIdoitObject', idoitObjectId: number, link?: string | null, title: string, type: string, status: string }> };\n\nexport type TicketExternalReferencesIdoitObjectSearchQueryVariables = Exact<{\n  idoitTypeId?: InputMaybe<Scalars['String']['input']>;\n  limit: Scalars['Int']['input'];\n  query?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type TicketExternalReferencesIdoitObjectSearchQuery = { __typename?: 'Queries', ticketExternalReferencesIdoitObjectSearch: Array<{ __typename?: 'TicketExternalReferencesIdoitObject', idoitObjectId: number, link?: string | null, title: string, type: string, status: string }> };\n\nexport type TicketExternalReferencesIssueTrackerItemListQueryVariables = Exact<{\n  issueTrackerType: EnumTicketExternalReferencesIssueTrackerType;\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  issueTrackerLinks?: InputMaybe<Array<Scalars['UriHttpString']['input']> | Scalars['UriHttpString']['input']>;\n}>;\n\n\nexport type TicketExternalReferencesIssueTrackerItemListQuery = { __typename?: 'Queries', ticketExternalReferencesIssueTrackerItemList: Array<{ __typename?: 'TicketExternalReferencesIssueTrackerItem', assignees?: Array<string> | null, issueId: number, milestone?: string | null, state: EnumTicketExternalReferencesIssueTrackerItemState, title: string, url: string, labels?: Array<{ __typename?: 'TicketExternalReferencesIssueTrackerItemLabel', color: string, textColor: string, title: string }> | null }> };\n\nexport type TicketHistoryQueryVariables = Exact<{\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  ticketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  ticketNumber?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type TicketHistoryQuery = { __typename?: 'Queries', ticketHistory: Array<{ __typename?: 'HistoryGroup', createdAt: string, records: Array<{ __typename?: 'HistoryRecord', issuer: { __typename?: 'Job', id: string, name: string } | { __typename?: 'ObjectClass', klass?: string | null, info?: string | null } | { __typename?: 'PostmasterFilter', id: string, name: string } | { __typename?: 'Trigger', id: string, name: string } | { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, phone?: string | null, email?: string | null, image?: string | null }, events: Array<{ __typename?: 'HistoryRecordEvent', createdAt: string, action: string, attribute?: string | null, changes?: any | null, object: { __typename?: 'Checklist', id: string, name?: string | null } | { __typename?: 'ChecklistItem', id: string, text: string, checked: boolean } | { __typename?: 'Group', id: string, name?: string | null } | { __typename?: 'Mention', id: string, user: { __typename?: 'User', id: string, fullname?: string | null } } | { __typename?: 'ObjectClass', klass?: string | null, info?: string | null } | { __typename?: 'Organization', id: string, name?: string | null } | { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string } | { __typename?: 'TicketArticle', id: string, body: string } | { __typename?: 'TicketSharedDraftZoom', id: string } | { __typename?: 'User', id: string, fullname?: string | null } }> }> }> };\n\nexport type TicketRelationAndRecentTicketListsQueryVariables = Exact<{\n  ticketId: Scalars['Int']['input'];\n  customerId: Scalars['ID']['input'];\n  limit?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type TicketRelationAndRecentTicketListsQuery = { __typename?: 'Queries', ticketsRecentByCustomer: Array<{ __typename?: 'Ticket', number: string, internalId: number, id: string, title: string, createdAt: string, stateColorCode: EnumTicketStateColorCode, customer: { __typename?: 'User', id: string, fullname?: string | null }, organization?: { __typename?: 'Organization', id: string, name?: string | null } | null, group: { __typename?: 'Group', id: string, name?: string | null }, state: { __typename?: 'TicketState', id: string, name: string } }>, ticketsRecentlyViewed: Array<{ __typename?: 'Ticket', number: string, internalId: number, id: string, title: string, createdAt: string, stateColorCode: EnumTicketStateColorCode, customer: { __typename?: 'User', id: string, fullname?: string | null }, organization?: { __typename?: 'Organization', id: string, name?: string | null } | null, group: { __typename?: 'Group', id: string, name?: string | null }, state: { __typename?: 'TicketState', id: string, name: string } }> };\n\nexport type ChecklistTemplateUpdatesSubscriptionVariables = Exact<{\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type ChecklistTemplateUpdatesSubscription = { __typename?: 'Subscriptions', checklistTemplateUpdates: { __typename?: 'ChecklistTemplateUpdatesPayload', checklistTemplates?: Array<{ __typename?: 'ChecklistTemplate', id: string, name?: string | null, active?: boolean | null }> | null } };\n\nexport type LinkUpdatesSubscriptionVariables = Exact<{\n  objectId: Scalars['ID']['input'];\n  targetType: Scalars['String']['input'];\n}>;\n\n\nexport type LinkUpdatesSubscription = { __typename?: 'Subscriptions', linkUpdates: { __typename?: 'LinkUpdatesPayload', links?: Array<{ __typename?: 'Link', type: EnumLinkType, item: { __typename?: 'KnowledgeBaseAnswerTranslation', id: string } | { __typename?: 'Ticket', id: string, internalId: number, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } } }> | null } };\n\nexport type TemplateUpdatesSubscriptionVariables = Exact<{\n  onlyActive: Scalars['Boolean']['input'];\n}>;\n\n\nexport type TemplateUpdatesSubscription = { __typename?: 'Subscriptions', templateUpdates: { __typename?: 'TemplateUpdatesPayload', templates?: Array<{ __typename?: 'Template', id: string, name: string }> | null } };\n\nexport type TicketChecklistUpdatesSubscriptionVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketChecklistUpdatesSubscription = { __typename?: 'Subscriptions', ticketChecklistUpdates: { __typename?: 'TicketChecklistUpdatesPayload', removedTicketChecklist?: boolean | null, ticketChecklist?: { __typename?: 'Checklist', id: string, name?: string | null, completed: boolean, incomplete: number, items: Array<{ __typename?: 'ChecklistItem', id: string, text: string, checked: boolean, ticketReference?: { __typename?: 'TicketReference', ticket?: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } } | null } | null }> } | null } };\n\nexport type OrganizationUpdateMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n  input: OrganizationInput;\n}>;\n\n\nexport type OrganizationUpdateMutation = { __typename?: 'Mutations', organizationUpdate?: { __typename?: 'OrganizationUpdatePayload', organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, shared?: boolean | null, domain?: string | null, domainAssignment?: boolean | null, active?: boolean | null, note?: string | null, vip?: boolean | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketOverviewOrderQueryVariables = Exact<{\n  withTicketCount?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type TicketOverviewOrderQuery = { __typename?: 'Queries', ticketOverviews: Array<{ __typename?: 'Overview', id: string, internalId: number, name: string, link: string, prio: number, groupBy?: string | null, orderBy: string, orderDirection: EnumOrderDirection, organizationShared?: boolean | null, outOfOffice?: boolean | null, active: boolean, ticketCount?: number, viewColumns: Array<{ __typename?: 'KeyValue', key: string, value?: string | null }>, orderColumns: Array<{ __typename?: 'KeyValue', key: string, value?: string | null }> }> };\n\nexport type TicketOverviewTicketCountQueryVariables = Exact<{\n  ignoreUserConditions: Scalars['Boolean']['input'];\n}>;\n\n\nexport type TicketOverviewTicketCountQuery = { __typename?: 'Queries', ticketOverviews: Array<{ __typename?: 'Overview', id: string, ticketCount: number }> };\n\nexport type TicketOverviewsQueryVariables = Exact<{\n  withTicketCount: Scalars['Boolean']['input'];\n}>;\n\n\nexport type TicketOverviewsQuery = { __typename?: 'Queries', ticketOverviews: Array<{ __typename?: 'Overview', id: string, internalId: number, name: string, link: string, prio: number, groupBy?: string | null, orderBy: string, orderDirection: EnumOrderDirection, organizationShared?: boolean | null, outOfOffice?: boolean | null, active: boolean, ticketCount?: number, viewColumns: Array<{ __typename?: 'KeyValue', key: string, value?: string | null }>, orderColumns: Array<{ __typename?: 'KeyValue', key: string, value?: string | null }> }> };\n\nexport type TicketWithMentionLimitQueryVariables = Exact<{\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  ticketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  ticketNumber?: InputMaybe<Scalars['String']['input']>;\n  mentionsCount?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type TicketWithMentionLimitQuery = { __typename?: 'Queries', ticket: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, escalationAt?: string | null, updatedAt: string, pendingTime?: string | null, tags?: Array<string> | null, timeUnit?: number | null, subscribed?: boolean | null, preferences?: any | null, stateColorCode: EnumTicketStateColorCode, sharedDraftZoomId?: string | null, firstResponseEscalationAt?: string | null, closeEscalationAt?: string | null, updateEscalationAt?: string | null, initialChannel?: EnumChannelArea | null, createArticleType?: { __typename?: 'TicketArticleType', id: string, name?: string | null } | null, mentions?: { __typename?: 'MentionConnection', totalCount: number, edges: Array<{ __typename?: 'MentionEdge', cursor: string, node: { __typename?: 'Mention', user: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, image?: string | null }, userTicketAccess: { __typename?: 'PolicyMentionUserTicketAccess', agentReadAccess: boolean } } }> } | null, updatedBy?: { __typename?: 'User', id: string } | null, owner: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null }, customer: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, phone?: string | null, mobile?: string | null, image?: string | null, vip?: boolean | null, active?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, email?: string | null, hasSecondaryOrganizations?: boolean | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, policy: { __typename?: 'PolicyDefault', update: boolean } }, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, vip?: boolean | null, active?: boolean | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null, emailAddress?: { __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null } | null }, priority: { __typename?: 'TicketPriority', id: string, name: string, defaultCreate: boolean, uiColor?: string | null }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, policy: { __typename?: 'PolicyTicket', update: boolean, agentReadAccess: boolean }, timeUnitsPerType?: Array<{ __typename?: 'TicketTimeAccountingTypeSum', name: string, timeUnit: number }> | null, externalReferences?: { __typename?: 'TicketExternalReferences', github?: Array<string> | null, gitlab?: Array<string> | null } | null } };\n\nexport type TicketOverviewUpdatesSubscriptionVariables = Exact<{\n  ignoreUserConditions?: InputMaybe<Scalars['Boolean']['input']>;\n  withTicketCount: Scalars['Boolean']['input'];\n}>;\n\n\nexport type TicketOverviewUpdatesSubscription = { __typename?: 'Subscriptions', ticketOverviewUpdates: { __typename?: 'TicketOverviewUpdatesPayload', ticketOverviews?: Array<{ __typename?: 'Overview', id: string, internalId: number, name: string, link: string, prio: number, groupBy?: string | null, orderBy: string, orderDirection: EnumOrderDirection, organizationShared?: boolean | null, outOfOffice?: boolean | null, active: boolean, ticketCount?: number, viewColumns: Array<{ __typename?: 'KeyValue', key: string, value?: string | null }>, orderColumns: Array<{ __typename?: 'KeyValue', key: string, value?: string | null }> }> | null } };\n\nexport type UserCurrentAvatarActiveQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentAvatarActiveQuery = { __typename?: 'Queries', userCurrentAvatarActive?: { __typename?: 'Avatar', id: string, default: boolean, deletable: boolean, initial: boolean, imageFull?: string | null, imageResize?: string | null, createdAt: string, updatedAt: string } | null };\n\nexport type SearchQueryVariables = Exact<{\n  search: Scalars['String']['input'];\n  onlyIn: EnumSearchableModels;\n  limit?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type SearchQuery = { __typename?: 'Queries', search: { __typename?: 'SearchResult', totalCount: number, items: Array<{ __typename?: 'Organization', id: string, internalId: number, active?: boolean | null, name?: string | null, vip?: boolean | null, updatedAt: string, members?: { __typename?: 'UserConnection', totalCount: number, edges: Array<{ __typename?: 'UserEdge', node: { __typename?: 'User', id: string, fullname?: string | null } }> } | null, updatedBy?: { __typename?: 'User', id: string, fullname?: string | null } | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null } | { __typename?: 'Ticket', id: string, internalId: number, title: string, number: string, updatedAt: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string }, priority: { __typename?: 'TicketPriority', name: string, defaultCreate: boolean, uiColor?: string | null }, customer: { __typename?: 'User', id: string, internalId: number, fullname?: string | null }, updatedBy?: { __typename?: 'User', id: string, fullname?: string | null } | null } | { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, image?: string | null, active?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, vip?: boolean | null, updatedAt: string, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null } | null, updatedBy?: { __typename?: 'User', id: string, fullname?: string | null } | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null }> } };\n\nexport type TicketLiveUserDeleteMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n  app: EnumTaskbarApp;\n}>;\n\n\nexport type TicketLiveUserDeleteMutation = { __typename?: 'Mutations', ticketLiveUserDelete?: { __typename?: 'TicketLiveUserDeletePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketLiveUserUpsertMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n  app: EnumTaskbarApp;\n  editing: Scalars['Boolean']['input'];\n}>;\n\n\nexport type TicketLiveUserUpsertMutation = { __typename?: 'Mutations', ticketLiveUserUpsert?: { __typename?: 'TicketLiveUserUpsertPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketsByOverviewSlimQueryVariables = Exact<{\n  overviewId: Scalars['ID']['input'];\n  orderBy?: InputMaybe<Scalars['String']['input']>;\n  orderDirection?: InputMaybe<EnumOrderDirection>;\n  cursor?: InputMaybe<Scalars['String']['input']>;\n  showPriority: Scalars['Boolean']['input'];\n  showUpdatedBy: Scalars['Boolean']['input'];\n  pageSize?: InputMaybe<Scalars['Int']['input']>;\n  withObjectAttributes?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type TicketsByOverviewSlimQuery = { __typename?: 'Queries', ticketsByOverview: { __typename?: 'TicketConnection', totalCount: number, edges: Array<{ __typename?: 'TicketEdge', cursor: string, node: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, updatedAt: string, stateColorCode: EnumTicketStateColorCode, updatedBy?: { __typename?: 'User', id: string, fullname?: string | null } | null, customer: { __typename?: 'User', id: string, firstname?: string | null, lastname?: string | null, fullname?: string | null }, organization?: { __typename?: 'Organization', id: string, name?: string | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null }, priority?: { __typename?: 'TicketPriority', id: string, name: string, uiColor?: string | null, defaultCreate: boolean }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } }>, pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, hasNextPage: boolean } } };\n\nexport type UserUpdateMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n  input: UserInput;\n}>;\n\n\nexport type UserUpdateMutation = { __typename?: 'Mutations', userUpdate?: { __typename?: 'UserUpdatePayload', user?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, preferences?: any | null, hasSecondaryOrganizations?: boolean | null, outOfOfficeReplacement?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, login?: string | null, phone?: string | null, email?: string | null } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type AutocompleteSearchAgentQueryVariables = Exact<{\n  input: AutocompleteSearchUserInput;\n}>;\n\n\nexport type AutocompleteSearchAgentQuery = { __typename?: 'Queries', autocompleteSearchAgent: Array<{ __typename?: 'AutocompleteSearchUserEntry', value: number, label: string, labelPlaceholder?: Array<string> | null, heading?: string | null, headingPlaceholder?: Array<string> | null, disabled?: boolean | null, icon?: string | null, user: { __typename?: 'User', vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, image?: string | null, preferences?: any | null, hasSecondaryOrganizations?: boolean | null, outOfOfficeReplacement?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, login?: string | null, phone?: string | null, email?: string | null } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null } }> };\n\nexport type AutocompleteSearchGenericQueryVariables = Exact<{\n  input: AutocompleteSearchGenericInput;\n  membersCount?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type AutocompleteSearchGenericQuery = { __typename?: 'Queries', autocompleteSearchGeneric: Array<{ __typename?: 'AutocompleteSearchGenericEntry', value: number, label: string, labelPlaceholder?: Array<string> | null, heading?: string | null, headingPlaceholder?: Array<string> | null, disabled?: boolean | null, object: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, vip?: boolean | null, allMembers?: { __typename?: 'UserConnection', edges: Array<{ __typename?: 'UserEdge', node: { __typename?: 'User', id: string, internalId: number, login?: string | null, image?: string | null, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, vip?: boolean | null, hasSecondaryOrganizations?: boolean | null } }> } | null } | { __typename?: 'Ticket' } | { __typename?: 'User', id: string, internalId: number, login?: string | null, image?: string | null, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, vip?: boolean | null, hasSecondaryOrganizations?: boolean | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, vip?: boolean | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null } | null } }> };\n\nexport type AutocompleteSearchUserQueryVariables = Exact<{\n  input: AutocompleteSearchUserInput;\n}>;\n\n\nexport type AutocompleteSearchUserQuery = { __typename?: 'Queries', autocompleteSearchUser: Array<{ __typename?: 'AutocompleteSearchUserEntry', value: number, label: string, labelPlaceholder?: Array<string> | null, heading?: string | null, headingPlaceholder?: Array<string> | null, disabled?: boolean | null, icon?: string | null, user: { __typename?: 'User', vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, image?: string | null, preferences?: any | null, hasSecondaryOrganizations?: boolean | null, outOfOfficeReplacement?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, login?: string | null, phone?: string | null, email?: string | null } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null } }> };\n\nexport type KnowledgeBaseAnswerSuggestionContentTransformMutationVariables = Exact<{\n  translationId: Scalars['ID']['input'];\n  formId: Scalars['FormId']['input'];\n}>;\n\n\nexport type KnowledgeBaseAnswerSuggestionContentTransformMutation = { __typename?: 'Mutations', knowledgeBaseAnswerSuggestionContentTransform?: { __typename?: 'KnowledgeBaseAnswerSuggestionContentTransformPayload', body?: string | null, attachments?: Array<{ __typename?: 'StoredFile', id: string, name: string, size?: number | null, type?: string | null, preferences?: any | null }> | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type KnowledgeBaseAnswerSuggestionsQueryVariables = Exact<{\n  query: Scalars['String']['input'];\n}>;\n\n\nexport type KnowledgeBaseAnswerSuggestionsQuery = { __typename?: 'Queries', knowledgeBaseAnswerSuggestions?: Array<{ __typename?: 'KnowledgeBaseAnswerTranslation', id: string, title: string, categoryTreeTranslation: Array<{ __typename?: 'KnowledgeBaseCategoryTranslation', id: string, title: string }> }> | null };\n\nexport type MentionSuggestionsQueryVariables = Exact<{\n  query: Scalars['String']['input'];\n  groupId: Scalars['ID']['input'];\n}>;\n\n\nexport type MentionSuggestionsQuery = { __typename?: 'Queries', mentionSuggestions?: Array<{ __typename?: 'User', id: string, internalId: number, fullname?: string | null, email?: string | null }> | null };\n\nexport type TextModuleSuggestionsQueryVariables = Exact<{\n  query: Scalars['String']['input'];\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  customerId?: InputMaybe<Scalars['ID']['input']>;\n  groupId?: InputMaybe<Scalars['ID']['input']>;\n}>;\n\n\nexport type TextModuleSuggestionsQuery = { __typename?: 'Queries', textModuleSuggestions: Array<{ __typename?: 'TextModule', id: string, name: string, keywords?: string | null, renderedContent?: string | null }> };\n\nexport type AutocompleteSearchObjectAttributeExternalDataSourceQueryVariables = Exact<{\n  input: AutocompleteSearchObjectAttributeExternalDataSourceInput;\n}>;\n\n\nexport type AutocompleteSearchObjectAttributeExternalDataSourceQuery = { __typename?: 'Queries', autocompleteSearchObjectAttributeExternalDataSource: Array<{ __typename?: 'AutocompleteSearchExternalDataSourceEntry', value: any, label: string, labelPlaceholder?: Array<string> | null, heading?: string | null, headingPlaceholder?: Array<string> | null }> };\n\nexport type FormUploadCacheAddMutationVariables = Exact<{\n  formId: Scalars['FormId']['input'];\n  files: Array<UploadFileInput> | UploadFileInput;\n}>;\n\n\nexport type FormUploadCacheAddMutation = { __typename?: 'Mutations', formUploadCacheAdd?: { __typename?: 'FormUploadCacheAddPayload', uploadedFiles: Array<{ __typename?: 'StoredFile', id: string, name: string, size?: number | null, type?: string | null }> } | null };\n\nexport type FormUploadCacheRemoveMutationVariables = Exact<{\n  formId: Scalars['FormId']['input'];\n  fileIds: Array<Scalars['ID']['input']> | Scalars['ID']['input'];\n}>;\n\n\nexport type FormUploadCacheRemoveMutation = { __typename?: 'Mutations', formUploadCacheRemove?: { __typename?: 'FormUploadCacheRemovePayload', success: boolean } | null };\n\nexport type AutocompleteSearchOrganizationQueryVariables = Exact<{\n  input: AutocompleteSearchOrganizationInput;\n}>;\n\n\nexport type AutocompleteSearchOrganizationQuery = { __typename?: 'Queries', autocompleteSearchOrganization: Array<{ __typename?: 'AutocompleteSearchOrganizationEntry', value: number, label: string, labelPlaceholder?: Array<string> | null, heading?: string | null, headingPlaceholder?: Array<string> | null, disabled?: boolean | null, icon?: string | null, organization: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, shared?: boolean | null, domain?: string | null, domainAssignment?: boolean | null, active?: boolean | null, note?: string | null, vip?: boolean | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } }> };\n\nexport type AutocompleteSearchRecipientQueryVariables = Exact<{\n  input: AutocompleteSearchRecipientInput;\n}>;\n\n\nexport type AutocompleteSearchRecipientQuery = { __typename?: 'Queries', autocompleteSearchRecipient: Array<{ __typename?: 'AutocompleteSearchRecipientEntry', value: string, label: string, labelPlaceholder?: Array<string> | null, heading?: string | null, headingPlaceholder?: Array<string> | null, disabled?: boolean | null, icon?: string | null }> };\n\nexport type FormUpdaterQueryVariables = Exact<{\n  formUpdaterId: EnumFormUpdaterId;\n  meta: FormUpdaterMetaInput;\n  data: Scalars['JSON']['input'];\n  relationFields: Array<FormUpdaterRelationField> | FormUpdaterRelationField;\n  id?: InputMaybe<Scalars['ID']['input']>;\n}>;\n\n\nexport type FormUpdaterQuery = { __typename?: 'Queries', formUpdater: { __typename?: 'FormUpdaterResult', fields: any, flags: any } };\n\nexport type ObjectManagerFrontendAttributesQueryVariables = Exact<{\n  object: EnumObjectManagerObjects;\n}>;\n\n\nexport type ObjectManagerFrontendAttributesQuery = { __typename?: 'Queries', objectManagerFrontendAttributes?: { __typename?: 'ObjectManagerFrontendAttributesPayload', attributes: Array<{ __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string, dataType: string, dataOption?: any | null, isInternal: boolean, screens?: any | null }>, screens: Array<{ __typename?: 'ObjectManagerScreenAttributes', name: string, attributes: Array<string> }> } | null };\n\nexport type OnlineNotificationDeleteMutationVariables = Exact<{\n  onlineNotificationId: Scalars['ID']['input'];\n}>;\n\n\nexport type OnlineNotificationDeleteMutation = { __typename?: 'Mutations', onlineNotificationDelete?: { __typename?: 'OnlineNotificationDeletePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type OnlineNotificationMarkAllAsSeenMutationVariables = Exact<{\n  onlineNotificationIds: Array<Scalars['ID']['input']> | Scalars['ID']['input'];\n}>;\n\n\nexport type OnlineNotificationMarkAllAsSeenMutation = { __typename?: 'Mutations', onlineNotificationMarkAllAsSeen?: { __typename?: 'OnlineNotificationMarkAllAsSeenPayload', onlineNotifications?: Array<{ __typename?: 'OnlineNotification', id: string, seen: boolean }> | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type OnlineNotificationSeenMutationVariables = Exact<{\n  objectId: Scalars['ID']['input'];\n}>;\n\n\nexport type OnlineNotificationSeenMutation = { __typename?: 'Mutations', onlineNotificationSeen?: { __typename?: 'OnlineNotificationSeenPayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type OnlineNotificationsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type OnlineNotificationsQuery = { __typename?: 'Queries', onlineNotifications: { __typename?: 'OnlineNotificationConnection', edges: Array<{ __typename?: 'OnlineNotificationEdge', cursor: string, node: { __typename?: 'OnlineNotification', id: string, seen: boolean, createdAt: string, typeName: string, objectName: string, createdBy?: { __typename?: 'User', id: string, fullname?: string | null, lastname?: string | null, firstname?: string | null, email?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, image?: string | null } | null, metaObject?: { __typename?: 'DataPrivacyTask' } | { __typename?: 'Group' } | { __typename?: 'Organization' } | { __typename?: 'Role' } | { __typename?: 'Ticket', id: string, internalId: number, title: string } | { __typename?: 'TicketArticle', id: string, internalId: number, bodyWithUrls: string, preferences?: any | null, ticket: { __typename?: 'Ticket', id: string, internalId: number, title: string }, to?: { __typename?: 'AddressesField', raw: string } | null } | { __typename?: 'User' } | null } }>, pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, hasNextPage: boolean } } };\n\nexport type OnlineNotificationsCountSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type OnlineNotificationsCountSubscription = { __typename?: 'Subscriptions', onlineNotificationsCount: { __typename?: 'OnlineNotificationsCountPayload', unseenCount: number } };\n\nexport type OrganizationAttributesFragment = { __typename?: 'Organization', id: string, internalId: number, name?: string | null, shared?: boolean | null, domain?: string | null, domainAssignment?: boolean | null, active?: boolean | null, note?: string | null, vip?: boolean | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null };\n\nexport type OrganizationMembersFragment = { __typename?: 'Organization', allMembers?: { __typename?: 'UserConnection', totalCount: number, edges: Array<{ __typename?: 'UserEdge', node: { __typename?: 'User', id: string, internalId: number, image?: string | null, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, vip?: boolean | null } }> } | null };\n\nexport type OrganizationQueryVariables = Exact<{\n  organizationId?: InputMaybe<Scalars['ID']['input']>;\n  organizationInternalId?: InputMaybe<Scalars['Int']['input']>;\n  membersCount?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type OrganizationQuery = { __typename?: 'Queries', organization: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, shared?: boolean | null, domain?: string | null, domainAssignment?: boolean | null, active?: boolean | null, note?: string | null, vip?: boolean | null, policy: { __typename?: 'PolicyDefault', update: boolean }, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, allMembers?: { __typename?: 'UserConnection', totalCount: number, edges: Array<{ __typename?: 'UserEdge', node: { __typename?: 'User', id: string, internalId: number, image?: string | null, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, vip?: boolean | null } }> } | null } };\n\nexport type OrganizationUpdatesSubscriptionVariables = Exact<{\n  organizationId: Scalars['ID']['input'];\n  membersCount?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type OrganizationUpdatesSubscription = { __typename?: 'Subscriptions', organizationUpdates: { __typename?: 'OrganizationUpdatesPayload', organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, shared?: boolean | null, domain?: string | null, domainAssignment?: boolean | null, active?: boolean | null, note?: string | null, vip?: boolean | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, allMembers?: { __typename?: 'UserConnection', totalCount: number, edges: Array<{ __typename?: 'UserEdge', node: { __typename?: 'User', id: string, internalId: number, image?: string | null, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, vip?: boolean | null } }> } | null } | null } };\n\nexport type PublicLinksQueryVariables = Exact<{\n  screen: EnumPublicLinksScreen;\n}>;\n\n\nexport type PublicLinksQuery = { __typename?: 'Queries', publicLinks?: Array<{ __typename?: 'PublicLink', id: string, link: string, title: string, description?: string | null, newTab: boolean }> | null };\n\nexport type PublicLinkUpdatesSubscriptionVariables = Exact<{\n  screen: EnumPublicLinksScreen;\n}>;\n\n\nexport type PublicLinkUpdatesSubscription = { __typename?: 'Subscriptions', publicLinkUpdates: { __typename?: 'PublicLinkUpdatesPayload', publicLinks?: Array<{ __typename?: 'PublicLink', id: string, link: string, title: string, description?: string | null, newTab: boolean }> | null } };\n\nexport type TagAssignmentAddMutationVariables = Exact<{\n  objectId: Scalars['ID']['input'];\n  tag: Scalars['String']['input'];\n}>;\n\n\nexport type TagAssignmentAddMutation = { __typename?: 'Mutations', tagAssignmentAdd?: { __typename?: 'TagAssignmentAddPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TagAssignmentRemoveMutationVariables = Exact<{\n  objectId: Scalars['ID']['input'];\n  tag: Scalars['String']['input'];\n}>;\n\n\nexport type TagAssignmentRemoveMutation = { __typename?: 'Mutations', tagAssignmentRemove?: { __typename?: 'TagAssignmentRemovePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TagAssignmentUpdateMutationVariables = Exact<{\n  objectId: Scalars['ID']['input'];\n  tags: Array<Scalars['String']['input']> | Scalars['String']['input'];\n}>;\n\n\nexport type TagAssignmentUpdateMutation = { __typename?: 'Mutations', tagAssignmentUpdate?: { __typename?: 'TagAssignmentUpdatePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type AutocompleteSearchTagQueryVariables = Exact<{\n  input: AutocompleteSearchTagInput;\n}>;\n\n\nexport type AutocompleteSearchTagQuery = { __typename?: 'Queries', autocompleteSearchTag: Array<{ __typename?: 'AutocompleteSearchEntry', value: string, label: string }> };\n\nexport type SecurityStateFragment = { __typename?: 'TicketArticleSecurityState', type?: EnumSecurityStateType | null, signingSuccess?: boolean | null, signingMessage?: string | null, encryptionSuccess?: boolean | null, encryptionMessage?: string | null };\n\nexport type TicketArticleChangeVisibilityMutationVariables = Exact<{\n  articleId: Scalars['ID']['input'];\n  internal: Scalars['Boolean']['input'];\n}>;\n\n\nexport type TicketArticleChangeVisibilityMutation = { __typename?: 'Mutations', ticketArticleChangeVisibility?: { __typename?: 'TicketArticleChangeVisibilityPayload', article?: { __typename?: 'TicketArticle', id: string, internal: boolean } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketArticleDeleteMutationVariables = Exact<{\n  articleId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketArticleDeleteMutation = { __typename?: 'Mutations', ticketArticleDelete?: { __typename?: 'TicketArticleDeletePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketArticleEmailForwardReplyMutationVariables = Exact<{\n  articleId: Scalars['ID']['input'];\n  formId: Scalars['FormId']['input'];\n}>;\n\n\nexport type TicketArticleEmailForwardReplyMutation = { __typename?: 'Mutations', ticketArticleEmailForwardReply?: { __typename?: 'TicketArticleEmailForwardReplyPayload', quotableFrom?: string | null, quotableTo?: string | null, quotableCc?: string | null, attachments: Array<{ __typename?: 'StoredFile', id: string, internalId: number, name: string, size?: number | null, type?: string | null }>, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketArticleRetryMediaDownloadMutationVariables = Exact<{\n  articleId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketArticleRetryMediaDownloadMutation = { __typename?: 'Mutations', ticketArticleRetryMediaDownload?: { __typename?: 'TicketArticleRetryMediaDownloadPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketArticleRetrySecurityProcessMutationVariables = Exact<{\n  articleId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketArticleRetrySecurityProcessMutation = { __typename?: 'Mutations', ticketArticleRetrySecurityProcess?: { __typename?: 'TicketArticleRetrySecurityProcessPayload', retryResult?: { __typename?: 'TicketArticleSecurityState', type?: EnumSecurityStateType | null, signingSuccess?: boolean | null, signingMessage?: string | null, encryptionSuccess?: boolean | null, encryptionMessage?: string | null } | null, article?: { __typename?: 'TicketArticle', id: string, securityState?: { __typename?: 'TicketArticleSecurityState', type?: EnumSecurityStateType | null, signingSuccess?: boolean | null, signingMessage?: string | null, encryptionSuccess?: boolean | null, encryptionMessage?: string | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketSharedDraftStartAttributesFragment = { __typename?: 'TicketSharedDraftStart', id: string, name?: string | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null };\n\nexport type TicketSharedDraftStartCreateMutationVariables = Exact<{\n  name: Scalars['String']['input'];\n  input: TicketSharedDraftStartInput;\n}>;\n\n\nexport type TicketSharedDraftStartCreateMutation = { __typename?: 'Mutations', ticketSharedDraftStartCreate?: { __typename?: 'TicketSharedDraftStartCreatePayload', sharedDraft: { __typename?: 'TicketSharedDraftStart', id: string, name?: string | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null }, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketSharedDraftStartDeleteMutationVariables = Exact<{\n  sharedDraftId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketSharedDraftStartDeleteMutation = { __typename?: 'Mutations', ticketSharedDraftStartDelete?: { __typename?: 'TicketSharedDraftStartDeletePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketSharedDraftStartUpdateMutationVariables = Exact<{\n  sharedDraftId: Scalars['ID']['input'];\n  input: TicketSharedDraftStartInput;\n}>;\n\n\nexport type TicketSharedDraftStartUpdateMutation = { __typename?: 'Mutations', ticketSharedDraftStartUpdate?: { __typename?: 'TicketSharedDraftStartUpdatePayload', sharedDraft: { __typename?: 'TicketSharedDraftStart', id: string, name?: string | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null }, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketSharedDraftStartListQueryVariables = Exact<{\n  groupId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketSharedDraftStartListQuery = { __typename?: 'Queries', ticketSharedDraftStartList: Array<{ __typename?: 'TicketSharedDraftStart', id: string, name?: string | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null }> };\n\nexport type TicketSharedDraftStartSingleQueryVariables = Exact<{\n  sharedDraftId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketSharedDraftStartSingleQuery = { __typename?: 'Queries', ticketSharedDraftStartSingle: { __typename?: 'TicketSharedDraftStart', content?: any | null, id: string, name?: string | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null } };\n\nexport type TicketSharedDraftStartUpdateByGroupSubscriptionVariables = Exact<{\n  groupId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketSharedDraftStartUpdateByGroupSubscription = { __typename?: 'Subscriptions', ticketSharedDraftStartUpdateByGroup: { __typename?: 'TicketSharedDraftStartUpdateByGroupPayload', sharedDraftStarts?: Array<{ __typename?: 'TicketSharedDraftStart', id: string, name?: string | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null }> | null } };\n\nexport type TicketSharedDraftZoomAttributesFragment = { __typename?: 'TicketSharedDraftZoom', id: string, ticketId?: string | null, newArticle?: any | null, ticketAttributes?: any | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null };\n\nexport type TicketSharedDraftZoomCreateMutationVariables = Exact<{\n  input: TicketSharedDraftZoomInput;\n}>;\n\n\nexport type TicketSharedDraftZoomCreateMutation = { __typename?: 'Mutations', ticketSharedDraftZoomCreate?: { __typename?: 'TicketSharedDraftZoomCreatePayload', sharedDraft: { __typename?: 'TicketSharedDraftZoom', id: string, ticketId?: string | null, newArticle?: any | null, ticketAttributes?: any | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null }, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketSharedDraftZoomDeleteMutationVariables = Exact<{\n  sharedDraftId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketSharedDraftZoomDeleteMutation = { __typename?: 'Mutations', ticketSharedDraftZoomDelete?: { __typename?: 'TicketSharedDraftZoomDeletePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketSharedDraftZoomUpdateMutationVariables = Exact<{\n  sharedDraftId: Scalars['ID']['input'];\n  input: TicketSharedDraftZoomInput;\n}>;\n\n\nexport type TicketSharedDraftZoomUpdateMutation = { __typename?: 'Mutations', ticketSharedDraftZoomUpdate?: { __typename?: 'TicketSharedDraftZoomUpdatePayload', sharedDraft: { __typename?: 'TicketSharedDraftZoom', id: string, ticketId?: string | null, newArticle?: any | null, ticketAttributes?: any | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null }, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketSharedDraftZoomShowQueryVariables = Exact<{\n  sharedDraftId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketSharedDraftZoomShowQuery = { __typename?: 'Queries', ticketSharedDraftZoomShow: { __typename?: 'TicketSharedDraftZoom', id: string, ticketId?: string | null, newArticle?: any | null, ticketAttributes?: any | null, updatedAt: string, updatedBy?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, phone?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null } | null } };\n\nexport type OverviewAttributesFragment = { __typename?: 'Overview', id: string, internalId: number, name: string, link: string, prio: number, groupBy?: string | null, orderBy: string, orderDirection: EnumOrderDirection, organizationShared?: boolean | null, outOfOffice?: boolean | null, active: boolean, ticketCount?: number };\n\nexport type ReferencingTicketFragment = { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } };\n\nexport type TicketArticleAttributesFragment = { __typename?: 'TicketArticle', id: string, internalId: number, messageId?: string | null, subject?: string | null, messageIdMd5?: string | null, inReplyTo?: string | null, contentType: string, preferences?: any | null, bodyWithUrls: string, internal: boolean, createdAt: string, detectedLanguage?: string | null, from?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, to?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, cc?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, replyTo?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, attachmentsWithoutInline: Array<{ __typename?: 'StoredFile', id: string, internalId: number, name: string, size?: number | null, type?: string | null, preferences?: any | null }>, author: { __typename?: 'User', id: string, fullname?: string | null, firstname?: string | null, lastname?: string | null, email?: string | null, active?: boolean | null, image?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, authorizations?: Array<{ __typename?: 'Authorization', provider: string, uid: string, username?: string | null }> | null }, type?: { __typename?: 'TicketArticleType', name?: string | null, communication?: boolean | null } | null, sender?: { __typename?: 'TicketArticleSender', name?: EnumTicketArticleSenderName | null } | null, securityState?: { __typename?: 'TicketArticleSecurityState', encryptionMessage?: string | null, encryptionSuccess?: boolean | null, signingMessage?: string | null, signingSuccess?: boolean | null, type?: EnumSecurityStateType | null } | null, mediaErrorState?: { __typename?: 'TicketArticleMediaErrorState', error?: boolean | null } | null };\n\nexport type TicketAttributesFragment = { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, escalationAt?: string | null, updatedAt: string, pendingTime?: string | null, tags?: Array<string> | null, timeUnit?: number | null, subscribed?: boolean | null, preferences?: any | null, stateColorCode: EnumTicketStateColorCode, sharedDraftZoomId?: string | null, firstResponseEscalationAt?: string | null, closeEscalationAt?: string | null, updateEscalationAt?: string | null, initialChannel?: EnumChannelArea | null, updatedBy?: { __typename?: 'User', id: string } | null, owner: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null }, customer: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, phone?: string | null, mobile?: string | null, image?: string | null, vip?: boolean | null, active?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, email?: string | null, hasSecondaryOrganizations?: boolean | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, policy: { __typename?: 'PolicyDefault', update: boolean } }, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, vip?: boolean | null, active?: boolean | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null, emailAddress?: { __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null } | null }, priority: { __typename?: 'TicketPriority', id: string, name: string, defaultCreate: boolean, uiColor?: string | null }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, policy: { __typename?: 'PolicyTicket', update: boolean, agentReadAccess: boolean }, timeUnitsPerType?: Array<{ __typename?: 'TicketTimeAccountingTypeSum', name: string, timeUnit: number }> | null, externalReferences?: { __typename?: 'TicketExternalReferences', github?: Array<string> | null, gitlab?: Array<string> | null } | null };\n\nexport type TicketLiveUserAttributesFragment = { __typename?: 'TicketLiveUser', user: { __typename?: 'User', id: string, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, image?: string | null }, apps: Array<{ __typename?: 'TicketLiveUserApp', name: EnumTaskbarApp, editing: boolean, lastInteraction: string }> };\n\nexport type TicketMentionFragment = { __typename?: 'Mention', user: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, image?: string | null }, userTicketAccess: { __typename?: 'PolicyMentionUserTicketAccess', agentReadAccess: boolean } };\n\nexport type TicketTaskbarTabAttributesFragment = { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, updatedAt: string, state: { __typename?: 'TicketState', id: string, name: string } };\n\nexport type TicketCreateMutationVariables = Exact<{\n  input: TicketCreateInput;\n}>;\n\n\nexport type TicketCreateMutation = { __typename?: 'Mutations', ticketCreate?: { __typename?: 'TicketCreatePayload', ticket?: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, escalationAt?: string | null, updatedAt: string, pendingTime?: string | null, tags?: Array<string> | null, timeUnit?: number | null, subscribed?: boolean | null, preferences?: any | null, stateColorCode: EnumTicketStateColorCode, sharedDraftZoomId?: string | null, firstResponseEscalationAt?: string | null, closeEscalationAt?: string | null, updateEscalationAt?: string | null, initialChannel?: EnumChannelArea | null, updatedBy?: { __typename?: 'User', id: string } | null, owner: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null }, customer: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, phone?: string | null, mobile?: string | null, image?: string | null, vip?: boolean | null, active?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, email?: string | null, hasSecondaryOrganizations?: boolean | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, policy: { __typename?: 'PolicyDefault', update: boolean } }, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, vip?: boolean | null, active?: boolean | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null, emailAddress?: { __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null } | null }, priority: { __typename?: 'TicketPriority', id: string, name: string, defaultCreate: boolean, uiColor?: string | null }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, policy: { __typename?: 'PolicyTicket', update: boolean, agentReadAccess: boolean }, timeUnitsPerType?: Array<{ __typename?: 'TicketTimeAccountingTypeSum', name: string, timeUnit: number }> | null, externalReferences?: { __typename?: 'TicketExternalReferences', github?: Array<string> | null, gitlab?: Array<string> | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketCustomerUpdateMutationVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n  input: TicketCustomerUpdateInput;\n}>;\n\n\nexport type TicketCustomerUpdateMutation = { __typename?: 'Mutations', ticketCustomerUpdate?: { __typename?: 'TicketCustomerUpdatePayload', ticket?: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, escalationAt?: string | null, updatedAt: string, pendingTime?: string | null, tags?: Array<string> | null, timeUnit?: number | null, subscribed?: boolean | null, preferences?: any | null, stateColorCode: EnumTicketStateColorCode, sharedDraftZoomId?: string | null, firstResponseEscalationAt?: string | null, closeEscalationAt?: string | null, updateEscalationAt?: string | null, initialChannel?: EnumChannelArea | null, updatedBy?: { __typename?: 'User', id: string } | null, owner: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null }, customer: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, phone?: string | null, mobile?: string | null, image?: string | null, vip?: boolean | null, active?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, email?: string | null, hasSecondaryOrganizations?: boolean | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, policy: { __typename?: 'PolicyDefault', update: boolean } }, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, vip?: boolean | null, active?: boolean | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null, emailAddress?: { __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null } | null }, priority: { __typename?: 'TicketPriority', id: string, name: string, defaultCreate: boolean, uiColor?: string | null }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, policy: { __typename?: 'PolicyTicket', update: boolean, agentReadAccess: boolean }, timeUnitsPerType?: Array<{ __typename?: 'TicketTimeAccountingTypeSum', name: string, timeUnit: number }> | null, externalReferences?: { __typename?: 'TicketExternalReferences', github?: Array<string> | null, gitlab?: Array<string> | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketMergeMutationVariables = Exact<{\n  sourceTicketId: Scalars['ID']['input'];\n  targetTicketId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketMergeMutation = { __typename?: 'Mutations', ticketMerge?: { __typename?: 'TicketMergePayload', errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type MentionSubscribeMutationVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n}>;\n\n\nexport type MentionSubscribeMutation = { __typename?: 'Mutations', mentionSubscribe?: { __typename?: 'MentionSubscribePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type MentionUnsubscribeMutationVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n}>;\n\n\nexport type MentionUnsubscribeMutation = { __typename?: 'Mutations', mentionUnsubscribe?: { __typename?: 'MentionUnsubscribePayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type TicketUpdateMutationVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n  input: TicketUpdateInput;\n  meta: TicketUpdateMetaInput;\n}>;\n\n\nexport type TicketUpdateMutation = { __typename?: 'Mutations', ticketUpdate?: { __typename?: 'TicketUpdatePayload', ticket?: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, escalationAt?: string | null, updatedAt: string, pendingTime?: string | null, tags?: Array<string> | null, timeUnit?: number | null, subscribed?: boolean | null, preferences?: any | null, stateColorCode: EnumTicketStateColorCode, sharedDraftZoomId?: string | null, firstResponseEscalationAt?: string | null, closeEscalationAt?: string | null, updateEscalationAt?: string | null, initialChannel?: EnumChannelArea | null, updatedBy?: { __typename?: 'User', id: string } | null, owner: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null }, customer: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, phone?: string | null, mobile?: string | null, image?: string | null, vip?: boolean | null, active?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, email?: string | null, hasSecondaryOrganizations?: boolean | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, policy: { __typename?: 'PolicyDefault', update: boolean } }, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, vip?: boolean | null, active?: boolean | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null, emailAddress?: { __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null } | null }, priority: { __typename?: 'TicketPriority', id: string, name: string, defaultCreate: boolean, uiColor?: string | null }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, policy: { __typename?: 'PolicyTicket', update: boolean, agentReadAccess: boolean }, timeUnitsPerType?: Array<{ __typename?: 'TicketTimeAccountingTypeSum', name: string, timeUnit: number }> | null, externalReferences?: { __typename?: 'TicketExternalReferences', github?: Array<string> | null, gitlab?: Array<string> | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type AutocompleteSearchTicketQueryVariables = Exact<{\n  input: AutocompleteSearchTicketInput;\n}>;\n\n\nexport type AutocompleteSearchTicketQuery = { __typename?: 'Queries', autocompleteSearchTicket: Array<{ __typename?: 'AutocompleteSearchTicketEntry', value: string, label: string, labelPlaceholder?: Array<string> | null, heading?: string | null, headingPlaceholder?: Array<string> | null, disabled?: boolean | null, icon?: string | null, ticket: { __typename?: 'Ticket', id: string, number: string, internalId: number, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } } }> };\n\nexport type TicketQueryVariables = Exact<{\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  ticketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  ticketNumber?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type TicketQuery = { __typename?: 'Queries', ticket: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, escalationAt?: string | null, updatedAt: string, pendingTime?: string | null, tags?: Array<string> | null, timeUnit?: number | null, subscribed?: boolean | null, preferences?: any | null, stateColorCode: EnumTicketStateColorCode, sharedDraftZoomId?: string | null, firstResponseEscalationAt?: string | null, closeEscalationAt?: string | null, updateEscalationAt?: string | null, initialChannel?: EnumChannelArea | null, createArticleType?: { __typename?: 'TicketArticleType', id: string, name?: string | null } | null, mentions?: { __typename?: 'MentionConnection', totalCount: number, edges: Array<{ __typename?: 'MentionEdge', cursor: string, node: { __typename?: 'Mention', user: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, image?: string | null }, userTicketAccess: { __typename?: 'PolicyMentionUserTicketAccess', agentReadAccess: boolean } } }> } | null, checklist?: { __typename?: 'Checklist', id: string, completed: boolean, incomplete: number, total: number, complete: number } | null, referencingChecklistTickets?: Array<{ __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } }> | null, updatedBy?: { __typename?: 'User', id: string } | null, owner: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null }, customer: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, phone?: string | null, mobile?: string | null, image?: string | null, vip?: boolean | null, active?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, email?: string | null, hasSecondaryOrganizations?: boolean | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, policy: { __typename?: 'PolicyDefault', update: boolean } }, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, vip?: boolean | null, active?: boolean | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null, emailAddress?: { __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null } | null }, priority: { __typename?: 'TicketPriority', id: string, name: string, defaultCreate: boolean, uiColor?: string | null }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, policy: { __typename?: 'PolicyTicket', update: boolean, agentReadAccess: boolean }, timeUnitsPerType?: Array<{ __typename?: 'TicketTimeAccountingTypeSum', name: string, timeUnit: number }> | null, externalReferences?: { __typename?: 'TicketExternalReferences', github?: Array<string> | null, gitlab?: Array<string> | null } | null } };\n\nexport type TicketArticlesQueryVariables = Exact<{\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n  ticketInternalId?: InputMaybe<Scalars['Int']['input']>;\n  ticketNumber?: InputMaybe<Scalars['String']['input']>;\n  beforeCursor?: InputMaybe<Scalars['String']['input']>;\n  afterCursor?: InputMaybe<Scalars['String']['input']>;\n  pageSize?: InputMaybe<Scalars['Int']['input']>;\n  loadFirstArticles?: InputMaybe<Scalars['Boolean']['input']>;\n  firstArticlesCount?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type TicketArticlesQuery = { __typename?: 'Queries', firstArticles?: { __typename?: 'TicketArticleConnection', edges: Array<{ __typename?: 'TicketArticleEdge', node: { __typename?: 'TicketArticle', id: string, internalId: number, messageId?: string | null, subject?: string | null, messageIdMd5?: string | null, inReplyTo?: string | null, contentType: string, preferences?: any | null, bodyWithUrls: string, internal: boolean, createdAt: string, detectedLanguage?: string | null, from?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, to?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, cc?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, replyTo?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, attachmentsWithoutInline: Array<{ __typename?: 'StoredFile', id: string, internalId: number, name: string, size?: number | null, type?: string | null, preferences?: any | null }>, author: { __typename?: 'User', id: string, fullname?: string | null, firstname?: string | null, lastname?: string | null, email?: string | null, active?: boolean | null, image?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, authorizations?: Array<{ __typename?: 'Authorization', provider: string, uid: string, username?: string | null }> | null }, type?: { __typename?: 'TicketArticleType', name?: string | null, communication?: boolean | null } | null, sender?: { __typename?: 'TicketArticleSender', name?: EnumTicketArticleSenderName | null } | null, securityState?: { __typename?: 'TicketArticleSecurityState', encryptionMessage?: string | null, encryptionSuccess?: boolean | null, signingMessage?: string | null, signingSuccess?: boolean | null, type?: EnumSecurityStateType | null } | null, mediaErrorState?: { __typename?: 'TicketArticleMediaErrorState', error?: boolean | null } | null } }> }, articles: { __typename?: 'TicketArticleConnection', totalCount: number, edges: Array<{ __typename?: 'TicketArticleEdge', cursor: string, node: { __typename?: 'TicketArticle', id: string, internalId: number, messageId?: string | null, subject?: string | null, messageIdMd5?: string | null, inReplyTo?: string | null, contentType: string, preferences?: any | null, bodyWithUrls: string, internal: boolean, createdAt: string, detectedLanguage?: string | null, from?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, to?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, cc?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, replyTo?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, attachmentsWithoutInline: Array<{ __typename?: 'StoredFile', id: string, internalId: number, name: string, size?: number | null, type?: string | null, preferences?: any | null }>, author: { __typename?: 'User', id: string, fullname?: string | null, firstname?: string | null, lastname?: string | null, email?: string | null, active?: boolean | null, image?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, authorizations?: Array<{ __typename?: 'Authorization', provider: string, uid: string, username?: string | null }> | null }, type?: { __typename?: 'TicketArticleType', name?: string | null, communication?: boolean | null } | null, sender?: { __typename?: 'TicketArticleSender', name?: EnumTicketArticleSenderName | null } | null, securityState?: { __typename?: 'TicketArticleSecurityState', encryptionMessage?: string | null, encryptionSuccess?: boolean | null, signingMessage?: string | null, signingSuccess?: boolean | null, type?: EnumSecurityStateType | null } | null, mediaErrorState?: { __typename?: 'TicketArticleMediaErrorState', error?: boolean | null } | null } }>, pageInfo: { __typename?: 'PageInfo', endCursor?: string | null, startCursor?: string | null, hasPreviousPage: boolean } } };\n\nexport type TicketArticleUpdatesSubscriptionVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n}>;\n\n\nexport type TicketArticleUpdatesSubscription = { __typename?: 'Subscriptions', ticketArticleUpdates: { __typename?: 'TicketArticleUpdatesPayload', removeArticleId?: string | null, addArticle?: { __typename?: 'TicketArticle', id: string, createdAt: string } | null, updateArticle?: { __typename?: 'TicketArticle', id: string, internalId: number, messageId?: string | null, subject?: string | null, messageIdMd5?: string | null, inReplyTo?: string | null, contentType: string, preferences?: any | null, bodyWithUrls: string, internal: boolean, createdAt: string, detectedLanguage?: string | null, from?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, to?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, cc?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, replyTo?: { __typename?: 'AddressesField', raw: string, parsed?: Array<{ __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null, isSystemAddress: boolean }> | null } | null, attachmentsWithoutInline: Array<{ __typename?: 'StoredFile', id: string, internalId: number, name: string, size?: number | null, type?: string | null, preferences?: any | null }>, author: { __typename?: 'User', id: string, fullname?: string | null, firstname?: string | null, lastname?: string | null, email?: string | null, active?: boolean | null, image?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, authorizations?: Array<{ __typename?: 'Authorization', provider: string, uid: string, username?: string | null }> | null }, type?: { __typename?: 'TicketArticleType', name?: string | null, communication?: boolean | null } | null, sender?: { __typename?: 'TicketArticleSender', name?: EnumTicketArticleSenderName | null } | null, securityState?: { __typename?: 'TicketArticleSecurityState', encryptionMessage?: string | null, encryptionSuccess?: boolean | null, signingMessage?: string | null, signingSuccess?: boolean | null, type?: EnumSecurityStateType | null } | null, mediaErrorState?: { __typename?: 'TicketArticleMediaErrorState', error?: boolean | null } | null } | null } };\n\nexport type TicketLiveUserUpdatesSubscriptionVariables = Exact<{\n  key: Scalars['String']['input'];\n  app: EnumTaskbarApp;\n}>;\n\n\nexport type TicketLiveUserUpdatesSubscription = { __typename?: 'Subscriptions', ticketLiveUserUpdates: { __typename?: 'TicketLiveUserUpdatesPayload', liveUsers?: Array<{ __typename?: 'TicketLiveUser', user: { __typename?: 'User', id: string, firstname?: string | null, lastname?: string | null, fullname?: string | null, email?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, image?: string | null }, apps: Array<{ __typename?: 'TicketLiveUserApp', name: EnumTaskbarApp, editing: boolean, lastInteraction: string }> }> | null } };\n\nexport type TicketUpdatesSubscriptionVariables = Exact<{\n  ticketId: Scalars['ID']['input'];\n  initial?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type TicketUpdatesSubscription = { __typename?: 'Subscriptions', ticketUpdates: { __typename?: 'TicketUpdatesPayload', ticket?: { __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, createdAt: string, escalationAt?: string | null, updatedAt: string, pendingTime?: string | null, tags?: Array<string> | null, timeUnit?: number | null, subscribed?: boolean | null, preferences?: any | null, stateColorCode: EnumTicketStateColorCode, sharedDraftZoomId?: string | null, firstResponseEscalationAt?: string | null, closeEscalationAt?: string | null, updateEscalationAt?: string | null, initialChannel?: EnumChannelArea | null, createArticleType?: { __typename?: 'TicketArticleType', id: string, name?: string | null } | null, mentions?: { __typename?: 'MentionConnection', totalCount: number, edges: Array<{ __typename?: 'MentionEdge', cursor: string, node: { __typename?: 'Mention', user: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, vip?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, active?: boolean | null, image?: string | null }, userTicketAccess: { __typename?: 'PolicyMentionUserTicketAccess', agentReadAccess: boolean } } }> } | null, checklist?: { __typename?: 'Checklist', id: string, completed: boolean, incomplete: number, total: number, complete: number } | null, referencingChecklistTickets?: Array<{ __typename?: 'Ticket', id: string, internalId: number, number: string, title: string, stateColorCode: EnumTicketStateColorCode, state: { __typename?: 'TicketState', id: string, name: string } }> | null, updatedBy?: { __typename?: 'User', id: string } | null, owner: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null }, customer: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, phone?: string | null, mobile?: string | null, image?: string | null, vip?: boolean | null, active?: boolean | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, email?: string | null, hasSecondaryOrganizations?: boolean | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, policy: { __typename?: 'PolicyDefault', update: boolean } }, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, vip?: boolean | null, active?: boolean | null } | null, state: { __typename?: 'TicketState', id: string, name: string, stateType: { __typename?: 'TicketStateType', id: string, name: string } }, group: { __typename?: 'Group', id: string, name?: string | null, emailAddress?: { __typename?: 'EmailAddressParsed', name?: string | null, emailAddress?: string | null } | null }, priority: { __typename?: 'TicketPriority', id: string, name: string, defaultCreate: boolean, uiColor?: string | null }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, policy: { __typename?: 'PolicyTicket', update: boolean, agentReadAccess: boolean }, timeUnitsPerType?: Array<{ __typename?: 'TicketTimeAccountingTypeSum', name: string, timeUnit: number }> | null, externalReferences?: { __typename?: 'TicketExternalReferences', github?: Array<string> | null, gitlab?: Array<string> | null } | null } | null } };\n\nexport type TokenAttributesFragment = { __typename?: 'Token', id: string, name?: string | null, preferences?: any | null, expiresAt?: string | null, lastUsedAt?: string | null, createdAt: string, user?: { __typename?: 'User', id: string } | null };\n\nexport type UserCurrentTwoFactorGetMethodConfigurationQueryVariables = Exact<{\n  methodName: Scalars['String']['input'];\n  token: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentTwoFactorGetMethodConfigurationQuery = { __typename?: 'Queries', userCurrentTwoFactorGetMethodConfiguration?: any | null };\n\nexport type UserCurrentTwoFactorRecoveryCodesGenerateMutationVariables = Exact<{\n  token: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentTwoFactorRecoveryCodesGenerateMutation = { __typename?: 'Mutations', userCurrentTwoFactorRecoveryCodesGenerate?: { __typename?: 'UserCurrentTwoFactorRecoveryCodesGeneratePayload', recoveryCodes?: Array<string> | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTwoFactorRemoveMethodMutationVariables = Exact<{\n  methodName: Scalars['String']['input'];\n  token: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentTwoFactorRemoveMethodMutation = { __typename?: 'Mutations', userCurrentTwoFactorRemoveMethod?: { __typename?: 'UserCurrentTwoFactorRemoveMethodPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTwoFactorRemoveMethodCredentialsMutationVariables = Exact<{\n  methodName: Scalars['String']['input'];\n  token: Scalars['String']['input'];\n  credentialId: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentTwoFactorRemoveMethodCredentialsMutation = { __typename?: 'Mutations', userCurrentTwoFactorRemoveMethodCredentials?: { __typename?: 'UserCurrentTwoFactorRemoveMethodCredentialsPayload', success?: boolean | null } | null };\n\nexport type UserCurrentTwoFactorSetDefaultMethodMutationVariables = Exact<{\n  methodName: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentTwoFactorSetDefaultMethodMutation = { __typename?: 'Mutations', userCurrentTwoFactorSetDefaultMethod?: { __typename?: 'UserCurrentTwoFactorSetDefaultMethodPayload', success?: boolean | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTwoFactorVerifyMethodConfigurationMutationVariables = Exact<{\n  methodName: EnumTwoFactorAuthenticationMethod;\n  token: Scalars['String']['input'];\n  payload: Scalars['JSON']['input'];\n  configuration: Scalars['JSON']['input'];\n}>;\n\n\nexport type UserCurrentTwoFactorVerifyMethodConfigurationMutation = { __typename?: 'Mutations', userCurrentTwoFactorVerifyMethodConfiguration?: { __typename?: 'UserCurrentTwoFactorVerifyMethodConfigurationPayload', recoveryCodes?: Array<string> | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null }> | null } | null };\n\nexport type UserCurrentAccessTokenAddMutationVariables = Exact<{\n  input: UserAccessTokenInput;\n}>;\n\n\nexport type UserCurrentAccessTokenAddMutation = { __typename?: 'Mutations', userCurrentAccessTokenAdd?: { __typename?: 'UserCurrentAccessTokenAddPayload', tokenValue: string, token?: { __typename?: 'Token', id: string, name?: string | null, preferences?: any | null, expiresAt?: string | null, lastUsedAt?: string | null, createdAt: string, user?: { __typename?: 'User', id: string } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentAccessTokenDeleteMutationVariables = Exact<{\n  tokenId: Scalars['ID']['input'];\n}>;\n\n\nexport type UserCurrentAccessTokenDeleteMutation = { __typename?: 'Mutations', userCurrentAccessTokenDelete?: { __typename?: 'UserCurrentAccessTokenDeletePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentAvatarAddMutationVariables = Exact<{\n  images: AvatarInput;\n}>;\n\n\nexport type UserCurrentAvatarAddMutation = { __typename?: 'Mutations', userCurrentAvatarAdd?: { __typename?: 'UserCurrentAvatarAddPayload', avatar?: { __typename?: 'Avatar', id: string, default: boolean, deletable: boolean, initial: boolean, imageFull?: string | null, imageResize?: string | null, imageHash?: string | null, createdAt: string, updatedAt: string } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentAvatarDeleteMutationVariables = Exact<{\n  id: Scalars['ID']['input'];\n}>;\n\n\nexport type UserCurrentAvatarDeleteMutation = { __typename?: 'Mutations', userCurrentAvatarDelete?: { __typename?: 'UserCurrentAvatarDeletePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentLocaleMutationVariables = Exact<{\n  locale: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentLocaleMutation = { __typename?: 'Mutations', userCurrentLocale?: { __typename?: 'UserCurrentLocalePayload', success: boolean, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserCurrentTwoFactorConfigurationQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentTwoFactorConfigurationQuery = { __typename?: 'Queries', userCurrentTwoFactorConfiguration: { __typename?: 'UserConfigurationTwoFactor', recoveryCodesExist: boolean, enabledAuthenticationMethods: Array<{ __typename?: 'TwoFactorEnabledAuthenticationMethod', configured: boolean, default: boolean, authenticationMethod: EnumTwoFactorAuthenticationMethod }> } };\n\nexport type UserCurrentTwoFactorInitiateMethodConfigurationQueryVariables = Exact<{\n  methodName: EnumTwoFactorAuthenticationMethod;\n  token: Scalars['String']['input'];\n}>;\n\n\nexport type UserCurrentTwoFactorInitiateMethodConfigurationQuery = { __typename?: 'Queries', userCurrentTwoFactorInitiateMethodConfiguration: any };\n\nexport type UserCurrentAccessTokenListQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UserCurrentAccessTokenListQuery = { __typename?: 'Queries', userCurrentAccessTokenList?: Array<{ __typename?: 'Token', id: string, name?: string | null, preferences?: any | null, expiresAt?: string | null, lastUsedAt?: string | null, createdAt: string, user?: { __typename?: 'User', id: string } | null }> | null };\n\nexport type UserAddMutationVariables = Exact<{\n  input: UserInput;\n  sendInvite?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type UserAddMutation = { __typename?: 'Mutations', userAdd?: { __typename?: 'UserAddPayload', user?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, preferences?: any | null, hasSecondaryOrganizations?: boolean | null, outOfOfficeReplacement?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, login?: string | null, phone?: string | null, email?: string | null } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type UserQueryVariables = Exact<{\n  userId?: InputMaybe<Scalars['ID']['input']>;\n  userInternalId?: InputMaybe<Scalars['Int']['input']>;\n  secondaryOrganizationsCount?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type UserQuery = { __typename?: 'Queries', user: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, image?: string | null, email?: string | null, web?: string | null, vip?: boolean | null, phone?: string | null, mobile?: string | null, fax?: string | null, note?: string | null, active?: boolean | null, hasSecondaryOrganizations?: boolean | null, policy: { __typename?: 'PolicyDefault', update: boolean }, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, vip?: boolean | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null } | null, secondaryOrganizations?: { __typename?: 'OrganizationConnection', totalCount: number, edges: Array<{ __typename?: 'OrganizationEdge', node: { __typename?: 'Organization', id: string, internalId: number, active?: boolean | null, name?: string | null } }> } | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null } };\n\nexport type CurrentUserAttributesFragment = { __typename?: 'User', email?: string | null, id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, preferences?: any | null, hasSecondaryOrganizations?: boolean | null, authorizations?: Array<{ __typename?: 'Authorization', id: string, provider: string, uid: string, username?: string | null }> | null, permissions?: { __typename?: 'UserPermission', names: Array<string> } | null, outOfOfficeReplacement?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, login?: string | null, phone?: string | null, email?: string | null } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null };\n\nexport type ErrorsFragment = { __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null };\n\nexport type ObjectAttributeValuesFragment = { __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } };\n\nexport type PublicLinkAttributesFragment = { __typename?: 'PublicLink', id: string, link: string, title: string, description?: string | null, newTab: boolean };\n\nexport type SessionFragment = { __typename?: 'Session', id: string, afterAuth?: { __typename?: 'SessionAfterAuth', type: EnumAfterAuthType, data?: any | null } | null };\n\nexport type SimpleTicketAttributeFragment = { __typename?: 'Ticket', number: string, internalId: number, id: string, title: string, createdAt: string, stateColorCode: EnumTicketStateColorCode, customer: { __typename?: 'User', id: string, fullname?: string | null }, organization?: { __typename?: 'Organization', id: string, name?: string | null } | null, group: { __typename?: 'Group', id: string, name?: string | null }, state: { __typename?: 'TicketState', id: string, name: string } };\n\nexport type UserAttributesFragment = { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, preferences?: any | null, hasSecondaryOrganizations?: boolean | null, outOfOfficeReplacement?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, login?: string | null, phone?: string | null, email?: string | null } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null };\n\nexport type UserDetailAttributesFragment = { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, image?: string | null, email?: string | null, web?: string | null, vip?: boolean | null, phone?: string | null, mobile?: string | null, fax?: string | null, note?: string | null, active?: boolean | null, hasSecondaryOrganizations?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, vip?: boolean | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null } | null, secondaryOrganizations?: { __typename?: 'OrganizationConnection', totalCount: number, edges: Array<{ __typename?: 'OrganizationEdge', node: { __typename?: 'Organization', id: string, internalId: number, active?: boolean | null, name?: string | null } }> } | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null };\n\nexport type UserPersonalSettingsFragment = { __typename?: 'User', personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null };\n\nexport type LoginMutationVariables = Exact<{\n  input: LoginInput;\n}>;\n\n\nexport type LoginMutation = { __typename?: 'Mutations', login?: { __typename?: 'LoginPayload', session?: { __typename?: 'Session', id: string, afterAuth?: { __typename?: 'SessionAfterAuth', type: EnumAfterAuthType, data?: any | null } | null } | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null, twoFactorRequired?: { __typename?: 'UserLoginTwoFactorMethods', availableTwoFactorAuthenticationMethods: Array<EnumTwoFactorAuthenticationMethod>, defaultTwoFactorAuthenticationMethod?: EnumTwoFactorAuthenticationMethod | null, recoveryCodesAvailable: boolean } | null } | null };\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = { __typename?: 'Mutations', logout?: { __typename?: 'LogoutPayload', success: boolean, externalLogoutUrl?: string | null } | null };\n\nexport type TwoFactorMethodInitiateAuthenticationMutationVariables = Exact<{\n  login: Scalars['String']['input'];\n  password: Scalars['String']['input'];\n  twoFactorMethod: EnumTwoFactorAuthenticationMethod;\n}>;\n\n\nexport type TwoFactorMethodInitiateAuthenticationMutation = { __typename?: 'Mutations', twoFactorMethodInitiateAuthentication?: { __typename?: 'TwoFactorMethodInitiateAuthenticationPayload', initiationData?: any | null, errors?: Array<{ __typename?: 'UserError', message: string, field?: string | null, exception?: EnumUserErrorException | null }> | null } | null };\n\nexport type ProductAboutQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ProductAboutQuery = { __typename?: 'Queries', productAbout: string };\n\nexport type ApplicationBuildChecksumQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ApplicationBuildChecksumQuery = { __typename?: 'Queries', applicationBuildChecksum: string };\n\nexport type ApplicationConfigQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ApplicationConfigQuery = { __typename?: 'Queries', applicationConfig: Array<{ __typename?: 'KeyComplexValue', key: string, value?: any | null }> };\n\nexport type CurrentUserQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CurrentUserQuery = { __typename?: 'Queries', currentUser: { __typename?: 'User', email?: string | null, id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, preferences?: any | null, hasSecondaryOrganizations?: boolean | null, authorizations?: Array<{ __typename?: 'Authorization', id: string, provider: string, uid: string, username?: string | null }> | null, permissions?: { __typename?: 'UserPermission', names: Array<string> } | null, outOfOfficeReplacement?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, login?: string | null, phone?: string | null, email?: string | null } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null } };\n\nexport type LocalesQueryVariables = Exact<{\n  onlyActive?: InputMaybe<Scalars['Boolean']['input']>;\n}>;\n\n\nexport type LocalesQuery = { __typename?: 'Queries', locales: Array<{ __typename?: 'Locale', locale: string, alias?: string | null, name: string, dir: EnumTextDirection, active: boolean }> };\n\nexport type MacrosQueryVariables = Exact<{\n  groupId: Scalars['ID']['input'];\n}>;\n\n\nexport type MacrosQuery = { __typename?: 'Queries', macros: Array<{ __typename?: 'Macro', id: string, active: boolean, name: string, uxFlowNextUp: string }> };\n\nexport type SessionQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type SessionQuery = { __typename?: 'Queries', session: { __typename?: 'Session', id: string, afterAuth?: { __typename?: 'SessionAfterAuth', type: EnumAfterAuthType, data?: any | null } | null } };\n\nexport type TicketSignatureQueryVariables = Exact<{\n  groupId: Scalars['ID']['input'];\n  ticketId?: InputMaybe<Scalars['ID']['input']>;\n}>;\n\n\nexport type TicketSignatureQuery = { __typename?: 'Queries', ticketSignature?: { __typename?: 'Signature', id: string, renderedBody?: string | null } | null };\n\nexport type TranslationsQueryVariables = Exact<{\n  locale: Scalars['String']['input'];\n  cacheKey?: InputMaybe<Scalars['String']['input']>;\n}>;\n\n\nexport type TranslationsQuery = { __typename?: 'Queries', translations?: { __typename?: 'TranslationsPayload', isCacheStillValid: boolean, cacheKey?: string | null, translations?: any | null } | null };\n\nexport type AppMaintenanceSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type AppMaintenanceSubscription = { __typename?: 'Subscriptions', appMaintenance: { __typename?: 'AppMaintenancePayload', type?: EnumAppMaintenanceType | null } };\n\nexport type ConfigUpdatesSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ConfigUpdatesSubscription = { __typename?: 'Subscriptions', configUpdates: { __typename?: 'ConfigUpdatesPayload', setting?: { __typename?: 'KeyComplexValue', key: string, value?: any | null } | null } };\n\nexport type CurrentUserUpdatesSubscriptionVariables = Exact<{\n  userId: Scalars['ID']['input'];\n}>;\n\n\nexport type CurrentUserUpdatesSubscription = { __typename?: 'Subscriptions', userUpdates: { __typename?: 'UserUpdatesPayload', user?: { __typename?: 'User', email?: string | null, id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, image?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, preferences?: any | null, hasSecondaryOrganizations?: boolean | null, authorizations?: Array<{ __typename?: 'Authorization', id: string, provider: string, uid: string, username?: string | null }> | null, permissions?: { __typename?: 'UserPermission', names: Array<string> } | null, outOfOfficeReplacement?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, login?: string | null, phone?: string | null, email?: string | null } | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null } | null, personalSettings?: { __typename?: 'UserPersonalSettings', notificationConfig?: { __typename?: 'UserPersonalSettingsNotificationConfig', groupIds?: Array<number> | null, matrix?: { __typename?: 'UserPersonalSettingsNotificationMatrix', create?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, escalation?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, reminderReached?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null, update?: { __typename?: 'UserPersonalSettingsNotificationMatrixRow', channel?: { __typename?: 'UserPersonalSettingsNotificationMatrixChannel', email?: boolean | null, online?: boolean | null } | null, criteria?: { __typename?: 'UserPersonalSettingsNotificationMatrixCriteria', no?: boolean | null, ownedByMe?: boolean | null, ownedByNobody?: boolean | null, subscribed?: boolean | null } | null } | null } | null } | null, notificationSound?: { __typename?: 'UserPersonalSettingsNotificationSound', enabled?: boolean | null, file?: EnumNotificationSoundFile | null } | null } | null } | null } };\n\nexport type MacrosUpdateSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MacrosUpdateSubscription = { __typename?: 'Subscriptions', macrosUpdate: { __typename?: 'MacrosUpdatePayload', macroId?: string | null, groupIds?: Array<string> | null, removeMacroId?: string | null } };\n\nexport type PushMessagesSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type PushMessagesSubscription = { __typename?: 'Subscriptions', pushMessages: { __typename?: 'PushMessagesPayload', title?: string | null, text?: string | null } };\n\nexport type UserUpdatesSubscriptionVariables = Exact<{\n  userId: Scalars['ID']['input'];\n  secondaryOrganizationsCount?: InputMaybe<Scalars['Int']['input']>;\n}>;\n\n\nexport type UserUpdatesSubscription = { __typename?: 'Subscriptions', userUpdates: { __typename?: 'UserUpdatesPayload', user?: { __typename?: 'User', id: string, internalId: number, firstname?: string | null, lastname?: string | null, fullname?: string | null, outOfOffice?: boolean | null, outOfOfficeStartAt?: string | null, outOfOfficeEndAt?: string | null, image?: string | null, email?: string | null, web?: string | null, vip?: boolean | null, phone?: string | null, mobile?: string | null, fax?: string | null, note?: string | null, active?: boolean | null, hasSecondaryOrganizations?: boolean | null, objectAttributeValues?: Array<{ __typename?: 'ObjectAttributeValue', value?: any | null, renderedLink?: string | null, attribute: { __typename?: 'ObjectManagerFrontendAttribute', name: string, display: string } }> | null, organization?: { __typename?: 'Organization', id: string, internalId: number, name?: string | null, active?: boolean | null, vip?: boolean | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null } | null, secondaryOrganizations?: { __typename?: 'OrganizationConnection', totalCount: number, edges: Array<{ __typename?: 'OrganizationEdge', node: { __typename?: 'Organization', id: string, internalId: number, active?: boolean | null, name?: string | null } }> } | null, ticketsCount?: { __typename?: 'TicketCount', open: number, closed: number } | null } | null } };\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumTwoFactorAuthenticationMethod } from '#shared/graphql/types.ts'\n\nimport type { TwoFactorPlugin } from '../types.ts'\n\nexport default {\n  name: EnumTwoFactorAuthenticationMethod.AuthenticatorApp,\n  label: __('Authenticator App'),\n  description: __(\n    'Get the security code from the authenticator app on your device.',\n  ),\n  order: 200,\n  icon: '2fa-authenticator-app',\n  loginOptions: {\n    helpMessage: __('Enter the code from your two-factor authenticator app.'),\n  },\n} satisfies TwoFactorPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumTwoFactorAuthenticationMethod } from '#shared/graphql/types.ts'\n\nimport type { TwoFactorPlugin } from '../types.ts'\nimport type { CredentialRequestOptionsJSON } from '@github/webauthn-json'\n\nexport default {\n  name: EnumTwoFactorAuthenticationMethod.SecurityKeys,\n  label: __('Security Keys'),\n  description: __('Complete the sign-in with your security key.'),\n  order: 100,\n  icon: '2fa-security-keys',\n  loginOptions: {\n    helpMessage: __('Verifying key information…'),\n    errorHelpMessage: __('Try using your security key again.'),\n    form: false,\n    async setup(\n      publicKey: NonNullable<CredentialRequestOptionsJSON['publicKey']>,\n    ) {\n      if (!window.isSecureContext) {\n        return {\n          success: false,\n          retry: false,\n          error: __('The application is not running in a secure context.'),\n        }\n      }\n      try {\n        const { get } = await import('@github/webauthn-json')\n\n        const publicKeyCredential = await get({ publicKey })\n        return {\n          success: true,\n          payload: {\n            challenge: publicKey.challenge,\n            credential: publicKeyCredential,\n          },\n        }\n      } catch {\n        return {\n          success: false,\n          retry: true,\n          error: __('Security key verification failed.'),\n        }\n      }\n    },\n  },\n} satisfies TwoFactorPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { EnumTwoFactorAuthenticationMethod } from '#shared/graphql/types.ts'\n\nimport type {\n  TwoFactorConfigurationOptions,\n  TwoFactorPlugin,\n} from '../types.ts'\n\nconst pluginsModules = import.meta.glob<TwoFactorPlugin>('../plugins/*.ts', {\n  eager: true,\n  import: 'default',\n})\n\nexport const twoFactorPluginsFiles = Object.values(pluginsModules).sort(\n  (p1, p2) => p1.order - p2.order,\n)\n\nexport const initializeTwoFactorPlugins = (\n  twoFactorConfigurationPlugins: Record<\n    EnumTwoFactorAuthenticationMethod,\n    TwoFactorConfigurationOptions\n  >,\n) => {\n  twoFactorPluginsFiles.forEach((plugin) => {\n    if (twoFactorConfigurationPlugins[plugin.name]) {\n      plugin.configurationOptions = twoFactorConfigurationPlugins[plugin.name]\n    }\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useNow } from '@vueuse/core'\n\nconst reactiveNow = useNow({\n  interval: 1000,\n})\n\nexport const useReactiveNow = () => reactiveNow\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { Translator } from './translator.ts'\n\nconst formatNumber = (num: number, digits: number): string => {\n  let result = num.toString()\n  while (result.length < digits) {\n    result = `0${result}`\n  }\n  return result\n}\n\nconst parseDate = (dateTimeString: string): Date => {\n  let date = new Date(dateTimeString)\n  // On firefox the Date constructor does not recongise date format that\n  // ends with UTC, instead it returns a NaN (Invalid Date Format) this\n  // block serves as polyfill to support time format that ends UTC in firefox\n  if (Number.isNaN(date.getDate())) {\n    // works for only time string with this format: 2021-02-08 09:13:20 UTC\n    const timeArray = dateTimeString.match(/\\d+/g) || []\n    const [y, m, d, H, M] = timeArray.map((value) => {\n      return parseInt(value, 10)\n    })\n    date = new Date(Date.UTC(y, m - 1, d, H, M))\n  }\n\n  return date\n}\n\nexport const absoluteDateTime = (\n  dateTimeString: string,\n  template: string,\n): string => {\n  const date = parseDate(dateTimeString)\n\n  const d = date.getDate()\n  const m = date.getMonth() + 1\n  const H = date.getHours()\n  const yfull = date.getFullYear().toString()\n  const yshort = yfull.substring(yfull.length - 2)\n  const lnum = ((H + 11) % 12) + 1\n  const l = lnum < 10 ? ` ${lnum}` : lnum\n\n  return template\n    .replace('dd', formatNumber(d, 2))\n    .replace('d', d.toString())\n    .replace('mm', formatNumber(m, 2))\n    .replace('m', m.toString())\n    .replace('yyyy', yfull)\n    .replace('yy', yshort)\n    .replace('SS', formatNumber(date.getSeconds(), 2))\n    .replace('MM', formatNumber(date.getMinutes(), 2))\n    .replace('HH', formatNumber(H, 2))\n    .replace('l', l.toString())\n    .replace('P', H >= 12 ? 'pm' : 'am')\n}\n\nexport const getISODatetime = (dateTimeString: string): string =>\n  parseDate(dateTimeString).toISOString()\n\nconst durationMinute = 60\nconst durationHour = 60 * durationMinute\nconst durationDay = 24 * durationHour\nconst durationWeek = 7 * durationDay\nconst durationMonth = 30 * durationDay\nconst durationYear = 356 * durationDay\n\nenum Direction {\n  Past,\n  Future,\n}\n\ntype DurationMessages = {\n  duration: number\n  pastSingular: string\n  pastPlural: string\n  futureSingular: string\n  futurePlural: string\n}\n\nconst durations: DurationMessages[] = [\n  {\n    duration: durationYear,\n    pastSingular: __('1 year ago'),\n    pastPlural: __('%s years ago'),\n    futureSingular: __('in 1 year'),\n    futurePlural: __('in %s years'),\n  },\n  {\n    duration: durationMonth,\n    pastSingular: __('1 month ago'),\n    pastPlural: __('%s months ago'),\n    futureSingular: __('in 1 month'),\n    futurePlural: __('in %s months'),\n  },\n  {\n    duration: durationWeek,\n    pastSingular: __('1 week ago'),\n    pastPlural: __('%s weeks ago'),\n    futureSingular: __('in 1 week'),\n    futurePlural: __('in %s weeks'),\n  },\n  {\n    duration: durationDay,\n    pastSingular: __('1 day ago'),\n    pastPlural: __('%s days ago'),\n    futureSingular: __('in 1 day'),\n    futurePlural: __('in %s days'),\n  },\n  {\n    duration: durationHour,\n    pastSingular: __('1 hour ago'),\n    pastPlural: __('%s hours ago'),\n    futureSingular: __('in 1 hour'),\n    futurePlural: __('in %s hours'),\n  },\n  {\n    duration: durationMinute,\n    pastSingular: __('1 minute ago'),\n    pastPlural: __('%s minutes ago'),\n    futureSingular: __('in 1 minute'),\n    futurePlural: __('in %s minutes'),\n  },\n]\n\nexport const relativeDateTime = (\n  dateTimeString: string,\n  baseDate: Date,\n  translator: Translator,\n): string => {\n  const date = new Date(dateTimeString)\n  let diffSeconds = (baseDate.getTime() - date.getTime()) / 1000\n\n  const direction: Direction =\n    diffSeconds > -1 ? Direction.Past : Direction.Future\n\n  diffSeconds = Math.abs(diffSeconds)\n\n  for (const duration of durations) {\n    if (diffSeconds >= duration.duration) {\n      const count = Math.floor(diffSeconds / duration.duration)\n      if (direction === Direction.Past) {\n        return count === 1\n          ? translator.translate(duration.pastSingular)\n          : translator.translate(duration.pastPlural, count)\n      }\n      return count === 1\n        ? translator.translate(duration.futureSingular)\n        : translator.translate(duration.futurePlural, count)\n    }\n  }\n\n  return translator.translate('just now')\n}\n\nexport const getDateFormat = (translator: Translator) => {\n  return translator.lookup('FORMAT_DATE') || 'yyyy-mm-dd'\n}\n\nexport const getDateTimeFormat = (translator: Translator) => {\n  return translator.lookup('FORMAT_DATETIME') || 'yyyy-mm-dd HH:MM'\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nexport type TranslationMap = Map<string, string>\n\nexport class Translator {\n  private translationMap: TranslationMap = new Map()\n\n  setTranslationMap(translationMap: TranslationMap) {\n    this.translationMap = translationMap\n  }\n\n  translate(\n    source: string,\n    ...args: Array<number | string | undefined | null | boolean>\n  ): string {\n    let target = this.translationMap.get(source) || source\n\n    args.forEach((arg) => {\n      if (arg != null) target = target.replace('%s', arg.toString())\n    })\n\n    return target\n  }\n\n  lookup(source: string): string | undefined {\n    return this.translationMap.get(source)\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { reactive } from 'vue'\n\nimport { useReactiveNow } from '#shared/composables/useReactiveNow.ts'\n\nimport * as dates from './dates.ts'\nimport { Translator } from './translator.ts'\n\nimport type { TranslationMap } from './translator.ts'\n\nconst reactiveNow = useReactiveNow()\n\nexport class I18N {\n  private translator = new Translator()\n\n  t(\n    source: string | undefined,\n    ...args: Array<string | number | undefined | null | boolean>\n  ): string {\n    if (typeof source === 'undefined') return ''\n\n    return this.translator.translate(source, ...args)\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  locale() {\n    return document.documentElement.getAttribute('lang') || 'en-US'\n  }\n\n  date(dateString: string): string {\n    const template = dates.getDateFormat(this.translator)\n    return dates.absoluteDateTime(dateString, template)\n  }\n\n  dateTime(dateTimeString: string): string {\n    const template = dates.getDateTimeFormat(this.translator)\n    return dates.absoluteDateTime(dateTimeString, template)\n  }\n\n  dateTimeISO(dateTimeString: string): string {\n    return dates.getISODatetime(dateTimeString)\n  }\n\n  relativeDateTime(dateTimeString: string, baseDate?: Date): string {\n    return dates.relativeDateTime(\n      dateTimeString,\n      baseDate || reactiveNow.value,\n      this.translator,\n    )\n  }\n\n  setTranslationMap(map: TranslationMap): void {\n    this.translator.setTranslationMap(map)\n  }\n\n  getDateFormat(): string {\n    return dates.getDateFormat(this.translator)\n  }\n\n  getDateTimeFormat(): string {\n    return dates.getDateTimeFormat(this.translator)\n  }\n\n  getTimeFormatType() {\n    const time24hour = !this.getDateTimeFormat().includes('P') // P means AM/PM\n    return time24hour ? '24hour' : '12hour'\n  }\n}\n\nexport const i18n = reactive(new I18N()) as I18N\n\ndeclare module '@vue/runtime-core' {\n  export interface ComponentCustomProperties {\n    i18n: I18N\n    $t: I18N['t']\n    __(source: string): string\n  }\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const ApplicationConfigDocument = gql`\n    query applicationConfig {\n  applicationConfig {\n    key\n    value\n  }\n}\n    `;\nexport function useApplicationConfigQuery(options: VueApolloComposable.UseQueryOptions<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables>(ApplicationConfigDocument, {}, options);\n}\nexport function useApplicationConfigLazyQuery(options: VueApolloComposable.UseQueryOptions<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables>(ApplicationConfigDocument, {}, options);\n}\nexport type ApplicationConfigQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.ApplicationConfigQuery, Types.ApplicationConfigQueryVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const ConfigUpdatesDocument = gql`\n    subscription configUpdates {\n  configUpdates {\n    setting {\n      key\n      value\n    }\n  }\n}\n    `;\nexport function useConfigUpdatesSubscription(options: VueApolloComposable.UseSubscriptionOptions<Types.ConfigUpdatesSubscription, Types.ConfigUpdatesSubscriptionVariables> | VueCompositionApi.Ref<VueApolloComposable.UseSubscriptionOptions<Types.ConfigUpdatesSubscription, Types.ConfigUpdatesSubscriptionVariables>> | ReactiveFunction<VueApolloComposable.UseSubscriptionOptions<Types.ConfigUpdatesSubscription, Types.ConfigUpdatesSubscriptionVariables>> = {}) {\n  return VueApolloComposable.useSubscription<Types.ConfigUpdatesSubscription, Types.ConfigUpdatesSubscriptionVariables>(ConfigUpdatesDocument, {}, options);\n}\nexport type ConfigUpdatesSubscriptionCompositionFunctionResult = VueApolloComposable.UseSubscriptionReturn<Types.ConfigUpdatesSubscription, Types.ConfigUpdatesSubscriptionVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { Mutex } from 'async-mutex'\n\nclass TestFlags {\n  // @ts-expect-error this is not called in production\n  private mutex: Mutex\n\n  // @ts-expect-error this is not called in production\n  private flags: Map<string, boolean>\n\n  constructor() {\n    if (VITE_TEST_MODE) {\n      this.mutex = new Mutex()\n      this.flags = new Map()\n    }\n  }\n\n  get(flag: string, skipClearing = false): boolean {\n    if (!VITE_TEST_MODE) return false\n    const flagValue = !!this.flags.get(flag)\n    if (!skipClearing) this.clear(flag)\n    return flagValue\n  }\n\n  async set(flag: string): Promise<void> {\n    if (!VITE_TEST_MODE) return\n    await this.mutex.runExclusive(() => {\n      this.flags.set(flag, true)\n      if (import.meta.env.VITE_DEBUG_TEST_FLAGS) {\n        console.log('[testFlags] set flag \"%s\"', flag)\n      }\n    })\n  }\n\n  async clear(flag: string): Promise<void> {\n    if (!VITE_TEST_MODE) return\n    await this.mutex.runExclusive(() => {\n      this.flags.delete(flag)\n    })\n  }\n}\n\nconst testFlags = new TestFlags()\n\ndeclare global {\n  interface Window {\n    testFlags: TestFlags\n  }\n}\n\nif (VITE_TEST_MODE) {\n  // Register globally for access from Capybara/Selenium.\n  window.testFlags = testFlags\n}\n\nexport default testFlags\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { defineStore } from 'pinia'\nimport { computed, effectScope, ref, type Ref } from 'vue'\n\nimport { useNotifications } from '#shared/components/CommonNotifications/index.ts'\nimport { useApplicationLoaded } from '#shared/composables/useApplicationLoaded.ts'\nimport { useApplicationConfigQuery } from '#shared/graphql/queries/applicationConfig.api.ts'\nimport { useConfigUpdatesSubscription } from '#shared/graphql/subscriptions/configUpdates.api.ts'\nimport type {\n  ApplicationConfigQuery,\n  ApplicationConfigQueryVariables,\n} from '#shared/graphql/types.ts'\nimport {\n  QueryHandler,\n  SubscriptionHandler,\n} from '#shared/server/apollo/handler/index.ts'\nimport type { ConfigList } from '#shared/types/store.ts'\nimport testFlags from '#shared/utils/testFlags.ts'\n\nlet configUpdatesSubscriptionInitialized = false\n\nlet applicationConfigQuery: QueryHandler<\n  ApplicationConfigQuery,\n  ApplicationConfigQueryVariables\n>\n\nconst getApplicationConfigQuery = () => {\n  if (applicationConfigQuery) return applicationConfigQuery\n\n  const scope = effectScope()\n  scope.run(() => {\n    applicationConfigQuery = new QueryHandler(\n      useApplicationConfigQuery({ fetchPolicy: 'no-cache' }),\n    )\n  })\n\n  return applicationConfigQuery\n}\n\n// TODO: consider switching from notification to a modal dialog, and improving the message\nconst notifications = useNotifications()\nconst { loaded } = useApplicationLoaded()\n\nexport const useApplicationStore = defineStore(\n  'application',\n  () => {\n    const loading = computed(() => !loaded.value)\n    const initialized = ref(false)\n\n    const setLoaded = (): void => {\n      if (notifications.hasErrors()) {\n        const loadingAppElement: Maybe<HTMLElement> =\n          document.getElementById('loading-app')\n\n        loadingAppElement\n          ?.getElementsByClassName('loading-animation')\n          .item(0)\n          ?.classList.add('error')\n\n        loadingAppElement\n          ?.getElementsByClassName('loading-sr-text')\n          .item(0)\n          ?.setAttribute('aria-hidden', 'true')\n\n        const loadingFailedElement = loadingAppElement\n          ?.getElementsByClassName('loading-failed')\n          .item(0)\n\n        loadingFailedElement?.classList.add('active')\n        loadingFailedElement?.setAttribute('aria-hidden', 'false')\n\n        return\n      }\n\n      loaded.value = true\n\n      testFlags.set('applicationLoaded.loaded')\n    }\n\n    const config = ref<Record<string, unknown>>({})\n\n    const initializeConfigUpdateSubscription = (): void => {\n      const scope = effectScope()\n      scope.run(() => {\n        const configUpdatesSubscription = new SubscriptionHandler(\n          useConfigUpdatesSubscription(),\n        )\n\n        configUpdatesSubscription.onResult((result) => {\n          const updatedSetting = result.data?.configUpdates.setting\n          if (updatedSetting) {\n            config.value[updatedSetting.key] = updatedSetting.value\n          } else {\n            testFlags.set('useConfigUpdatesSubscription.subscribed')\n          }\n        })\n\n        configUpdatesSubscriptionInitialized = true\n      })\n    }\n\n    const getConfig = async (): Promise<void> => {\n      const configQuery = getApplicationConfigQuery()\n\n      const { data: result } = await configQuery.refetch()\n      if (result?.applicationConfig) {\n        result.applicationConfig.forEach((item) => {\n          config.value[item.key] = item.value\n        })\n\n        // app/assets/javascripts/app/config.coffee\n        config.value.api_path = '/api/v1'\n      }\n\n      if (!configUpdatesSubscriptionInitialized) {\n        initializeConfigUpdateSubscription()\n      }\n    }\n\n    const resetAndGetConfig = async (): Promise<void> => {\n      config.value = {}\n\n      await getConfig()\n    }\n\n    const hasCustomProductBranding = computed(() =>\n      Boolean(\n        config.value.product_logo && config.value.product_logo !== 'logo.svg',\n      ),\n    )\n\n    // this is called right before router renders a page, - we remove \"loading\" element here instead of \"setLoaded\"\n    // so we don't have a short period when App route is not fetched yet and we see a black screen\n    const setInitialized = () => {\n      initialized.value = true\n\n      const appElement = document.getElementById('app')\n      if (appElement) {\n        appElement.dataset.loaded = 'true'\n      }\n\n      const loadingAppElement = document.getElementById('loading-app')\n      loadingAppElement?.remove()\n    }\n\n    return {\n      loaded,\n      loading,\n      setLoaded,\n      config: config as unknown as Ref<ConfigList>,\n      initializeConfigUpdateSubscription,\n      getConfig,\n      resetAndGetConfig,\n      hasCustomProductBranding,\n      initialized,\n      setInitialized,\n    }\n  },\n  {\n    requiresAuth: false,\n  },\n)\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const LocalesDocument = gql`\n    query locales($onlyActive: Boolean = false) {\n  locales(onlyActive: $onlyActive) {\n    locale\n    alias\n    name\n    dir\n    active\n  }\n}\n    `;\nexport function useLocalesQuery(variables: Types.LocalesQueryVariables | VueCompositionApi.Ref<Types.LocalesQueryVariables> | ReactiveFunction<Types.LocalesQueryVariables> = {}, options: VueApolloComposable.UseQueryOptions<Types.LocalesQuery, Types.LocalesQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.LocalesQuery, Types.LocalesQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.LocalesQuery, Types.LocalesQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.LocalesQuery, Types.LocalesQueryVariables>(LocalesDocument, variables, options);\n}\nexport function useLocalesLazyQuery(variables: Types.LocalesQueryVariables | VueCompositionApi.Ref<Types.LocalesQueryVariables> | ReactiveFunction<Types.LocalesQueryVariables> = {}, options: VueApolloComposable.UseQueryOptions<Types.LocalesQuery, Types.LocalesQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.LocalesQuery, Types.LocalesQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.LocalesQuery, Types.LocalesQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.LocalesQuery, Types.LocalesQueryVariables>(LocalesDocument, variables, options);\n}\nexport type LocalesQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.LocalesQuery, Types.LocalesQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { LocalesQuery } from '#shared/graphql/types.ts'\nimport { EnumTextDirection } from '#shared/graphql/types.ts'\n\nimport type { LastArrayElement } from 'type-fest'\n\nconst localeForBrowserLanguage = (\n  locales: LocalesQuery['locales'],\n): LastArrayElement<LocalesQuery['locales']> => {\n  const userLanguages = window.navigator.languages || [\n    window.navigator.language,\n  ]\n\n  for (const userLanguage of userLanguages.values()) {\n    const directMatch = locales.find((elem) => {\n      return userLanguage.toLowerCase() === elem.locale\n    })\n    if (directMatch) return directMatch\n    const alias = userLanguage.substr(0, 2).toLowerCase()\n    const aliasMatch = locales.find((elem) => {\n      return alias === elem.alias\n    })\n    if (aliasMatch) return aliasMatch\n  }\n\n  return {\n    locale: 'en-us',\n    alias: 'en',\n    // eslint-disable-next-line zammad/zammad-detect-translatable-string\n    name: 'English (United States)',\n    dir: EnumTextDirection.Ltr,\n    active: true,\n  }\n}\n\nexport default localeForBrowserLanguage\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TranslationsDocument = gql`\n    query translations($locale: String!, $cacheKey: String) {\n  translations(locale: $locale, cacheKey: $cacheKey) {\n    isCacheStillValid\n    cacheKey\n    translations\n  }\n}\n    `;\nexport function useTranslationsQuery(variables: Types.TranslationsQueryVariables | VueCompositionApi.Ref<Types.TranslationsQueryVariables> | ReactiveFunction<Types.TranslationsQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.TranslationsQuery, Types.TranslationsQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.TranslationsQuery, Types.TranslationsQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.TranslationsQuery, Types.TranslationsQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.TranslationsQuery, Types.TranslationsQueryVariables>(TranslationsDocument, variables, options);\n}\nexport function useTranslationsLazyQuery(variables?: Types.TranslationsQueryVariables | VueCompositionApi.Ref<Types.TranslationsQueryVariables> | ReactiveFunction<Types.TranslationsQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.TranslationsQuery, Types.TranslationsQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.TranslationsQuery, Types.TranslationsQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.TranslationsQuery, Types.TranslationsQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.TranslationsQuery, Types.TranslationsQueryVariables>(TranslationsDocument, variables, options);\n}\nexport type TranslationsQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.TranslationsQuery, Types.TranslationsQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { defineStore } from 'pinia'\nimport { effectScope, ref } from 'vue'\n\nimport { useTranslationsLazyQuery } from '#shared/graphql/queries/translations.api.ts'\nimport type {\n  TranslationsQuery,\n  TranslationsQueryVariables,\n} from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport log from '#shared/utils/log.ts'\n\ninterface TranslationsCacheValue {\n  cacheKey: string\n  translations: Record<string, string>\n}\n\nconst localStorageKey = (locale: string): string => {\n  return `translationsStoreCache::${locale}`\n}\n\nconst loadCache = (locale: string): TranslationsCacheValue => {\n  const cached = JSON.parse(\n    window.localStorage.getItem(localStorageKey(locale)) || '{}',\n  )\n  log.debug('translations.loadCache()', locale, cached)\n  return {\n    cacheKey: cached.cacheKey || '',\n    translations: cached.translations || {},\n  }\n}\n\nconst setCache = (locale: string, value: TranslationsCacheValue): void => {\n  const serialized = JSON.stringify(value)\n  window.localStorage.setItem(localStorageKey(locale), serialized)\n  log.debug('translations.setCache()', locale, value)\n}\n\nlet translationsQuery: QueryHandler<\n  TranslationsQuery,\n  TranslationsQueryVariables\n>\n\nconst getTranslationsQuery = () => {\n  if (translationsQuery) return translationsQuery\n\n  const scope = effectScope()\n  scope.run(() => {\n    translationsQuery = new QueryHandler(\n      useTranslationsLazyQuery({} as TranslationsQueryVariables),\n      {\n        // Don't show an error while app is loading as this would cause startup failure.\n        errorShowNotification: useApplicationStore().loaded,\n      },\n    )\n  })\n\n  return translationsQuery\n}\n\nexport const useTranslationsStore = defineStore(\n  'translations',\n  () => {\n    const cacheKey = ref<string>('CACHE_EMPTY')\n    const translationData = ref<Record<string, string>>({})\n\n    const load = async (locale: string): Promise<void> => {\n      log.debug('translations.load()', locale)\n\n      const cachedData = loadCache(locale)\n\n      const translationsQuery = getTranslationsQuery()\n\n      const { data: result } = await translationsQuery.query({\n        variables: {\n          cacheKey: cachedData.cacheKey,\n          locale,\n        },\n      })\n\n      if (!result?.translations) {\n        return\n      }\n\n      if (result.translations.isCacheStillValid) {\n        cacheKey.value = cachedData.cacheKey\n        translationData.value = cachedData.translations\n      } else {\n        cacheKey.value = result.translations.cacheKey || 'CACHE_EMPTY'\n        translationData.value = result.translations.translations\n\n        setCache(locale, {\n          cacheKey: cacheKey.value,\n          translations: translationData.value,\n        })\n      }\n\n      log.debug(\n        'translations.load() setting new translation map',\n        locale,\n        translationData.value,\n      )\n      i18n.setTranslationMap(new Map(Object.entries(translationData.value)))\n    }\n\n    return {\n      cacheKey,\n      translationData,\n      load,\n    }\n  },\n  {\n    requiresAuth: false,\n  },\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { defineStore } from 'pinia'\nimport { effectScope, ref } from 'vue'\n\nimport { useLocalesLazyQuery } from '#shared/graphql/queries/locales.api.ts'\nimport type {\n  LocalesQuery,\n  LocalesQueryVariables,\n} from '#shared/graphql/types.ts'\nimport localeForBrowserLanguage from '#shared/i18n/localeForBrowserLanguage.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\nimport log from '#shared/utils/log.ts'\n\nimport { useTranslationsStore } from './translations.ts'\n\nimport type { LastArrayElement } from 'type-fest'\n\ntype Locale = LastArrayElement<LocalesQuery['locales']>\n\nlet localesQuery: QueryHandler<LocalesQuery, LocalesQueryVariables>\n\nconst getLocalesQuery = () => {\n  if (localesQuery) return localesQuery\n\n  const scope = effectScope()\n  scope.run(() => {\n    localesQuery = new QueryHandler(useLocalesLazyQuery({ onlyActive: true }))\n  })\n\n  return localesQuery\n}\n\nexport const useLocaleStore = defineStore(\n  'locale',\n  () => {\n    const localeData = ref<Maybe<Locale>>(null)\n    const locales = ref<Maybe<LocalesQuery['locales']>>(null)\n\n    const loadLocales = async (): Promise<void> => {\n      if (locales.value) return\n\n      const currentQuery = getLocalesQuery()\n      const { data: result } = await currentQuery.query()\n\n      locales.value = result?.locales || null\n    }\n\n    const setLocale = async (locale?: string): Promise<void> => {\n      await loadLocales()\n\n      let newLocaleData\n\n      if (locale) {\n        newLocaleData = locales.value?.find((elem) => {\n          return elem.locale === locale\n        })\n      }\n\n      if (!newLocaleData)\n        newLocaleData = localeForBrowserLanguage(locales.value || [])\n\n      log.debug('localeStore.setLocale()', newLocaleData)\n\n      // Update the translation store, when the locale is different.\n      if (localeData.value?.locale !== newLocaleData.locale) {\n        await useTranslationsStore().load(newLocaleData.locale)\n        localeData.value = newLocaleData\n\n        document.documentElement.setAttribute('dir', newLocaleData.dir)\n        document.documentElement.setAttribute('lang', newLocaleData.locale)\n      }\n    }\n\n    return {\n      locales,\n      localeData,\n      setLocale,\n      loadLocales,\n    }\n  },\n  {\n    requiresAuth: false,\n  },\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { UAParser } from 'ua-parser-js'\n\nconst parser = new UAParser()\n\nexport const browser = parser.getBrowser()\n\nexport const device = parser.getDevice()\n\nexport const os = parser.getOS()\n\nexport const generateFingerprint = () => {\n  const windowResolution = `${window.screen.availWidth}x${window.screen.availHeight}/${window.screen.pixelDepth}`\n  const timezone = new Date().toString().match(/\\s\\(.+?\\)$/)?.[0]\n\n  const getMajorVersion = (version?: string): string => {\n    if (!version) return 'unknown'\n\n    const versionParts = version.split('.')\n    return versionParts[0]\n  }\n\n  const hashCode = (string: string) => {\n    return string.split('').reduce((a, b) => {\n      // eslint-disable-next-line no-bitwise\n      a = (a << 5) - a + b.charCodeAt(0)\n      // eslint-disable-next-line no-bitwise\n      return a & a\n    }, 0)\n  }\n\n  return hashCode(\n    `${browser.name}${getMajorVersion(browser.version)}${\n      os.name\n    }${getMajorVersion(os.version)}${windowResolution}${timezone}`,\n  ).toString()\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useLocalStorage } from '@vueuse/core'\n\nimport { generateFingerprint } from '#shared/utils/browser.ts'\n\nconst useFingerprint = () => {\n  const fingerprint = useLocalStorage('fingerprint', '')\n\n  if (!fingerprint.value) {\n    fingerprint.value = generateFingerprint()\n  }\n\n  return {\n    fingerprint,\n  }\n}\n\nexport default useFingerprint\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const UserPersonalSettingsFragmentDoc = gql`\n    fragment userPersonalSettings on User {\n  personalSettings {\n    notificationConfig {\n      groupIds\n      matrix {\n        create {\n          channel {\n            email\n            online\n          }\n          criteria {\n            no\n            ownedByMe\n            ownedByNobody\n            subscribed\n          }\n        }\n        escalation {\n          channel {\n            email\n            online\n          }\n          criteria {\n            no\n            ownedByMe\n            ownedByNobody\n            subscribed\n          }\n        }\n        reminderReached {\n          channel {\n            email\n            online\n          }\n          criteria {\n            no\n            ownedByMe\n            ownedByNobody\n            subscribed\n          }\n        }\n        update {\n          channel {\n            email\n            online\n          }\n          criteria {\n            no\n            ownedByMe\n            ownedByNobody\n            subscribed\n          }\n        }\n      }\n    }\n    notificationSound {\n      enabled\n      file\n    }\n  }\n}\n    `;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const ObjectAttributeValuesFragmentDoc = gql`\n    fragment objectAttributeValues on ObjectAttributeValue {\n  attribute {\n    name\n    display\n  }\n  value\n  renderedLink\n}\n    `;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { UserPersonalSettingsFragmentDoc } from './userPersonalSettings.api';\nimport { ObjectAttributeValuesFragmentDoc } from './objectAttributeValues.api';\nexport const UserAttributesFragmentDoc = gql`\n    fragment userAttributes on User {\n  id\n  internalId\n  firstname\n  lastname\n  fullname\n  image\n  outOfOffice\n  outOfOfficeStartAt\n  outOfOfficeEndAt\n  outOfOfficeReplacement {\n    id\n    internalId\n    firstname\n    lastname\n    fullname\n    login\n    phone\n    email\n  }\n  preferences\n  ...userPersonalSettings\n  objectAttributeValues {\n    ...objectAttributeValues\n  }\n  organization {\n    id\n    internalId\n    name\n    active\n    objectAttributeValues {\n      ...objectAttributeValues\n    }\n  }\n  hasSecondaryOrganizations\n}\n    ${UserPersonalSettingsFragmentDoc}\n${ObjectAttributeValuesFragmentDoc}`;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { UserAttributesFragmentDoc } from './userAttributes.api';\nexport const CurrentUserAttributesFragmentDoc = gql`\n    fragment currentUserAttributes on User {\n  ...userAttributes\n  authorizations {\n    id\n    provider\n    uid\n    username\n  }\n  email\n  permissions {\n    names\n  }\n}\n    ${UserAttributesFragmentDoc}`;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { CurrentUserAttributesFragmentDoc } from '../fragments/currentUserAttributes.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const CurrentUserDocument = gql`\n    query currentUser {\n  currentUser {\n    ...currentUserAttributes\n  }\n}\n    ${CurrentUserAttributesFragmentDoc}`;\nexport function useCurrentUserQuery(options: VueApolloComposable.UseQueryOptions<Types.CurrentUserQuery, Types.CurrentUserQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.CurrentUserQuery, Types.CurrentUserQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.CurrentUserQuery, Types.CurrentUserQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.CurrentUserQuery, Types.CurrentUserQueryVariables>(CurrentUserDocument, {}, options);\n}\nexport function useCurrentUserLazyQuery(options: VueApolloComposable.UseQueryOptions<Types.CurrentUserQuery, Types.CurrentUserQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.CurrentUserQuery, Types.CurrentUserQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.CurrentUserQuery, Types.CurrentUserQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.CurrentUserQuery, Types.CurrentUserQueryVariables>(CurrentUserDocument, {}, options);\n}\nexport type CurrentUserQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.CurrentUserQuery, Types.CurrentUserQueryVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const SessionFragmentDoc = gql`\n    fragment session on Session {\n  id\n  afterAuth {\n    type\n    data\n  }\n}\n    `;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { SessionFragmentDoc } from '../fragments/session.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const SessionDocument = gql`\n    query session {\n  session {\n    ...session\n  }\n}\n    ${SessionFragmentDoc}`;\nexport function useSessionQuery(options: VueApolloComposable.UseQueryOptions<Types.SessionQuery, Types.SessionQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.SessionQuery, Types.SessionQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.SessionQuery, Types.SessionQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.SessionQuery, Types.SessionQueryVariables>(SessionDocument, {}, options);\n}\nexport function useSessionLazyQuery(options: VueApolloComposable.UseQueryOptions<Types.SessionQuery, Types.SessionQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.SessionQuery, Types.SessionQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.SessionQuery, Types.SessionQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.SessionQuery, Types.SessionQueryVariables>(SessionDocument, {}, options);\n}\nexport type SessionQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.SessionQuery, Types.SessionQueryVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { CurrentUserAttributesFragmentDoc } from '../fragments/currentUserAttributes.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const CurrentUserUpdatesDocument = gql`\n    subscription currentUserUpdates($userId: ID!) {\n  userUpdates(userId: $userId) {\n    user {\n      ...currentUserAttributes\n    }\n  }\n}\n    ${CurrentUserAttributesFragmentDoc}`;\nexport function useCurrentUserUpdatesSubscription(variables: Types.CurrentUserUpdatesSubscriptionVariables | VueCompositionApi.Ref<Types.CurrentUserUpdatesSubscriptionVariables> | ReactiveFunction<Types.CurrentUserUpdatesSubscriptionVariables>, options: VueApolloComposable.UseSubscriptionOptions<Types.CurrentUserUpdatesSubscription, Types.CurrentUserUpdatesSubscriptionVariables> | VueCompositionApi.Ref<VueApolloComposable.UseSubscriptionOptions<Types.CurrentUserUpdatesSubscription, Types.CurrentUserUpdatesSubscriptionVariables>> | ReactiveFunction<VueApolloComposable.UseSubscriptionOptions<Types.CurrentUserUpdatesSubscription, Types.CurrentUserUpdatesSubscriptionVariables>> = {}) {\n  return VueApolloComposable.useSubscription<Types.CurrentUserUpdatesSubscription, Types.CurrentUserUpdatesSubscriptionVariables>(CurrentUserUpdatesDocument, variables, options);\n}\nexport type CurrentUserUpdatesSubscriptionCompositionFunctionResult = VueApolloComposable.UseSubscriptionReturn<Types.CurrentUserUpdatesSubscription, Types.CurrentUserUpdatesSubscriptionVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RequiredPermission } from '#shared/types/permission.ts'\n\n/**\n * Check if the access can be granted for the given permissions.\n *\n * Examples:\n * hasPermission('ticket.agent', [...]) # access to certain permission key\n * hasPermission['ticket.agent', 'ticket.customer'], [...]) # access to one of permission keys\n *\n * hasPermission('user_preferences.calendar+ticket.agent', [...]) # access must have two permission keys\n *\n * hasPermission('admin.*', [...]) # access if one sub key access exists\n *\n * @param {Array<string>|string} requiredPermission - The permissions which are required.\n * @param {Array<string>} permissions - The available permission.\n *\n * @returns {boolean}\n */\nconst hasPermission = (\n  requiredPermission: RequiredPermission,\n  permissions: Array<string>,\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n): boolean => {\n  const requiredPermissions = Array.isArray(requiredPermission)\n    ? requiredPermission\n    : [requiredPermission]\n\n  // Available with any permission.\n  if (requiredPermissions.length === 0 || requiredPermissions.includes('*')) {\n    return true\n  }\n\n  // If a permission is needed, but no permission was given, permission will not be granted.\n  if (permissions.length === 0) return false\n\n  for (const localRequirePermission of requiredPermissions) {\n    // The permission can be combined with a 'AND', then every single permission needs to match.\n    const localRequiredPermissions = localRequirePermission.split('+')\n\n    let accessGranted = false\n    for (const requiredPermissionItem of localRequiredPermissions) {\n      let singleAccessGranted = false\n\n      // Check first if a permission with wildcard is matching.\n      if (requiredPermissionItem.includes('*')) {\n        const regexRequiredPermission = new RegExp(\n          requiredPermissionItem.replace('.', '\\\\.').replace('*', '.+'),\n        )\n\n        singleAccessGranted = permissions.some((permission) =>\n          regexRequiredPermission.test(permission),\n        )\n      }\n\n      // If not already a wildcard permission match exists, check for a direct permission.\n      if (!singleAccessGranted) {\n        const partsRequiredPermission = requiredPermissionItem.split('.')\n\n        let checkPartsRequiredPermission = ''\n        for (const partRequiredPermission of partsRequiredPermission) {\n          if (checkPartsRequiredPermission) checkPartsRequiredPermission += '.'\n          checkPartsRequiredPermission += partRequiredPermission\n\n          singleAccessGranted = permissions.includes(\n            checkPartsRequiredPermission,\n          )\n\n          if (singleAccessGranted) break\n        }\n      }\n\n      accessGranted = singleAccessGranted\n\n      // If one permission not exists, no access can be granted for this required permission.\n      if (!accessGranted) break\n    }\n\n    // If one required permission matches, the access can be granted.\n    if (accessGranted) return accessGranted\n  }\n\n  return false\n}\n\nexport default hasPermission\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { cloneDeep } from 'lodash-es'\nimport { defineStore } from 'pinia'\nimport { computed, effectScope, ref } from 'vue'\n\nimport useFingerprint from '#shared/composables/useFingerprint.ts'\nimport { useCurrentUserLazyQuery } from '#shared/graphql/queries/currentUser.api.ts'\nimport { useSessionLazyQuery } from '#shared/graphql/queries/session.api.ts'\nimport { useCurrentUserUpdatesSubscription } from '#shared/graphql/subscriptions/currentUserUpdates.api.ts'\nimport type {\n  CurrentUserQuery,\n  CurrentUserQueryVariables,\n  CurrentUserUpdatesSubscription,\n  CurrentUserUpdatesSubscriptionVariables,\n  SessionAfterAuth,\n  SessionQuery,\n  SessionQueryVariables,\n} from '#shared/graphql/types.ts'\nimport {\n  QueryHandler,\n  SubscriptionHandler,\n} from '#shared/server/apollo/handler/index.ts'\nimport type { RequiredPermission } from '#shared/types/permission.ts'\nimport type { UserData } from '#shared/types/store.ts'\nimport hasPermission from '#shared/utils/hasPermission.ts'\nimport log from '#shared/utils/log.ts'\nimport testFlags from '#shared/utils/testFlags.ts'\n\nimport { useLocaleStore } from './locale.ts'\n\nimport type { JsonValue } from 'type-fest'\n\nlet sessionQuery: QueryHandler<SessionQuery, SessionQueryVariables>\n\nconst getSessionQuery = () => {\n  if (sessionQuery) return sessionQuery\n\n  const { fingerprint } = useFingerprint()\n\n  const scope = effectScope()\n  scope.run(() => {\n    sessionQuery = new QueryHandler(\n      useSessionLazyQuery({\n        fetchPolicy: 'network-only',\n        context: {\n          error: {\n            logLevel: 'silent',\n          },\n          headers: {\n            'X-Browser-Fingerprint': fingerprint.value,\n          },\n        },\n      }),\n      {\n        errorShowNotification: false,\n      },\n    )\n  })\n\n  return sessionQuery\n}\n\nlet currentUserQuery: QueryHandler<CurrentUserQuery, CurrentUserQueryVariables>\n\nconst getCurrentUserQuery = () => {\n  if (currentUserQuery) return currentUserQuery\n\n  const scope = effectScope()\n  scope.run(() => {\n    currentUserQuery = new QueryHandler(\n      useCurrentUserLazyQuery({ fetchPolicy: 'network-only' }),\n    )\n  })\n\n  return currentUserQuery\n}\n\nexport const useSessionStore = defineStore(\n  'session',\n  () => {\n    const id = ref<Maybe<string>>(null)\n    const afterAuth = ref<Maybe<SessionAfterAuth>>(null)\n    const initialized = ref(false)\n    const locale = useLocaleStore()\n\n    const checkSession = async (): Promise<string | null> => {\n      const sessionQuery = getSessionQuery()\n      const { data: result } = await sessionQuery.query()\n\n      // Refresh the current sessionId state.\n      id.value = result?.session.id || null\n      afterAuth.value = result?.session.afterAuth || null\n\n      return id.value\n    }\n\n    const user = ref<Maybe<UserData>>(null)\n\n    // In case of unauthenticated users, current user ID may be an empty string.\n    //   Use with care.\n    const userId = computed(() => user.value?.id || '')\n\n    let currentUserUpdateSubscription: SubscriptionHandler<\n      CurrentUserUpdatesSubscription,\n      CurrentUserUpdatesSubscriptionVariables\n    >\n    const getCurrentUser = async (): Promise<Maybe<UserData>> => {\n      if (currentUserQuery && !user.value) {\n        currentUserQuery.start()\n      }\n\n      const userQuery = getCurrentUserQuery()\n\n      const { data: result } = await userQuery.query()\n\n      user.value = cloneDeep(result?.currentUser) || null\n\n      log.debug('currentUserUpdate', user.value)\n\n      // Check if the locale is different, then a update is needed.\n      const userLocale = user.value?.preferences?.locale as string | undefined\n\n      if (\n        userLocale &&\n        (!locale.localeData || userLocale !== locale.localeData.locale)\n      ) {\n        await locale.setLocale(userLocale)\n      }\n\n      if (user.value) {\n        if (!currentUserUpdateSubscription) {\n          const scope = effectScope()\n          scope.run(() => {\n            currentUserUpdateSubscription = new SubscriptionHandler(\n              useCurrentUserUpdatesSubscription(() => ({\n                userId: userId.value,\n              })),\n            )\n\n            currentUserUpdateSubscription.onResult((result) => {\n              const updatedUser = result.data?.userUpdates.user\n              if (!updatedUser) {\n                testFlags.set('useCurrentUserUpdatesSubscription.subscribed')\n              } else {\n                user.value = updatedUser\n              }\n            })\n          })\n        } else {\n          currentUserUpdateSubscription.start()\n        }\n\n        testFlags.set('useSessionUserStore.getCurrentUser.loaded')\n      }\n\n      return user.value\n    }\n\n    const resetCurrentSession = () => {\n      if (currentUserUpdateSubscription) currentUserUpdateSubscription.stop()\n      if (currentUserQuery) currentUserQuery.stop()\n\n      id.value = null\n      user.value = null\n    }\n\n    const userHasPermission = (\n      requiredPermission: RequiredPermission,\n    ): boolean => {\n      return hasPermission(\n        requiredPermission,\n        user.value?.permissions?.names || [],\n      )\n    }\n\n    const setUserPreference = (key: string, value: JsonValue) => {\n      if (!user.value) return\n\n      user.value.preferences[key] = value\n\n      return user.value\n    }\n\n    return {\n      id,\n      afterAuth,\n      initialized,\n      checkSession,\n      user,\n      userId,\n      getCurrentUser,\n      resetCurrentSession,\n      hasPermission: userHasPermission,\n      setUserPreference,\n    }\n  },\n  {\n    requiresAuth: false,\n  },\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { keyBy } from 'lodash-es'\n\nimport { twoFactorPluginsFiles } from './initializeTwoFactorPlugins.ts'\n\nconst plugins = twoFactorPluginsFiles\nconst pluginListLookup = keyBy(plugins, 'name')\n\nexport const useTwoFactorPlugins = () => {\n  return {\n    twoFactorMethods: plugins,\n    twoFactorMethodLookup: pluginListLookup,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport { useTwoFactorPlugins } from '#shared/entities/two-factor/composables/useTwoFactorPlugins.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nconst { twoFactorMethods } = useTwoFactorPlugins()\n\nexport const useApplicationConfigTwoFactor = () => {\n  const application = useApplicationStore()\n\n  const { config } = storeToRefs(application)\n\n  const twoFactorEnabledMethods = computed(() =>\n    twoFactorMethods.filter(\n      (method) =>\n        config.value[`two_factor_authentication_method_${method.name}`],\n    ),\n  )\n\n  const hasEnabledMethods = computed(() =>\n    Boolean(twoFactorEnabledMethods.value.length),\n  )\n\n  const hasEnabledRecoveryCodes = computed(\n    () => config.value.two_factor_authentication_recovery_codes,\n  )\n\n  return {\n    hasEnabledMethods,\n    hasEnabledRecoveryCodes,\n    twoFactorEnabledMethods,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nexport const isMainRoute = true\n\nconst route: RouteRecordRaw[] = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('./views/Login.vue'),\n    meta: {\n      title: __('Sign in'),\n      requiresAuth: false,\n      requiredPermission: null,\n      redirectToDefaultRoute: true,\n      hasOwnLandmarks: true,\n    },\n  },\n  {\n    path: '/admin-password-auth',\n    name: 'AdminPasswordAuth',\n    component: () => import('./views/AdminPasswordAuth.vue'),\n    meta: {\n      title: __('Admin Password Login'),\n      requiresAuth: false,\n      requiredPermission: null,\n      redirectToDefaultRoute: true,\n      hasOwnLandmarks: true,\n    },\n  },\n  {\n    path: '/login/after-auth',\n    name: 'LoginAfterAuth',\n    component: () => import('./views/LoginAfterAuth.vue'),\n    meta: {\n      requiresAuth: true,\n      requiredPermission: null,\n      hasOwnLandmarks: true,\n    },\n  },\n  {\n    path: '/reset-password',\n    name: 'PasswordReset',\n    component: () => import('./views/PasswordReset.vue'),\n    meta: {\n      requiresAuth: false,\n      requiredPermission: null,\n      redirectToDefaultRoute: true,\n      hasOwnLandmarks: true,\n    },\n  },\n  {\n    path: '/reset-password/verify/:token?',\n    name: 'PasswordResetVerify',\n    props: true,\n    component: () => import('./views/PasswordResetVerify.vue'),\n    meta: {\n      requiresAuth: false,\n      requiredPermission: null,\n      redirectToDefaultRoute: true,\n      hasOwnLandmarks: true,\n    },\n  },\n  {\n    path: '/logout',\n    name: 'Logout',\n    component: {\n      async beforeRouteEnter() {\n        const [{ useAuthenticationStore }, { useNotifications }] =\n          await Promise.all([\n            import('#shared/stores/authentication.ts'),\n            import(\n              '#shared/components/CommonNotifications/useNotifications.ts'\n            ),\n          ])\n\n        const { clearAllNotifications } = useNotifications()\n\n        const authentication = useAuthenticationStore()\n\n        clearAllNotifications()\n        await authentication.logout()\n\n        if (authentication.externalLogout) return false\n\n        return '/login'\n      },\n    },\n    meta: {\n      requiresAuth: false,\n      requiredPermission: null,\n    },\n  },\n  {\n    path: '/signup',\n    name: 'Signup',\n    component: () => import('./views/Signup.vue'),\n    meta: {\n      title: __('Sign up'),\n      requiresAuth: false,\n      requiredPermission: null,\n      redirectToDefaultRoute: true,\n      hasOwnLandmarks: true,\n    },\n  },\n  {\n    path: '/signup/verify/:token?',\n    name: 'SignupVerify',\n    props: true,\n    component: () => import('./views/SignupVerify.vue'),\n    meta: {\n      title: __('Email Verification'),\n      requiresAuth: false,\n      requiredPermission: null,\n      redirectToDefaultRoute: true,\n      hasOwnLandmarks: true,\n    },\n  },\n]\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst route: RouteRecordRaw[] = [\n  {\n    path: '/playground',\n    name: 'Playground',\n    props: true,\n    component: () => import('./views/Playground.vue'),\n    meta: {\n      title: 'Playground',\n      icon: 'logo-flat',\n      requiresAuth: true,\n      requiredPermission: ['*'],\n      order: 500,\n    },\n  },\n]\n\n// Temporary until we work on the dashboard\nif (import.meta.env.DEV || VITE_TEST_MODE) {\n  route.push({\n    path: '/dashboard',\n    name: 'Dashboard',\n    alias: '/',\n    props: true,\n    component: () => import('./views/Dashboard.vue'),\n    meta: {\n      title: __('Dashboard'),\n      requiresAuth: true,\n      icon: 'speedometer2',\n      requiredPermission: ['*'],\n      order: 0,\n      level: 1,\n      permanentItem: true,\n    },\n  })\n}\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nexport const isMainRoute = true\n\nconst route: RouteRecordRaw[] = [\n  {\n    path: '/guided-setup',\n    name: 'GuidedSetup',\n    component: () => import('./views/GuidedSetup.vue'),\n    children: [\n      {\n        path: '',\n        name: 'GuidedSetupStart',\n        component: () => import('./views/GuidedSetupStart.vue'),\n        meta: {\n          title: __('Get Started'),\n          requiresAuth: false,\n          requiredPermission: null,\n          hasOwnLandmarks: true,\n        },\n      },\n      {\n        path: 'automated',\n        name: 'GuidedSetupAutomatedInfo',\n        component: () =>\n          import('./views/GuidedSetupAutomated/GuidedSetupAutomatedInfo.vue'),\n        meta: {\n          title: __('Automated Setup'),\n          requiresAuth: false,\n          requiredPermission: null,\n          hasOwnLandmarks: true,\n        },\n      },\n      {\n        path: 'automated/run/:token?',\n        name: 'GuidedSetupAutomatedRun',\n        props: true,\n        component: () =>\n          import('./views/GuidedSetupAutomated/GuidedSetupAutomatedRun.vue'),\n        meta: {\n          title: __('Automated Setup'),\n          requiresAuth: false,\n          requiredPermission: null,\n          hasOwnLandmarks: true,\n        },\n      },\n      {\n        path: 'manual',\n        name: 'GuidedSetupManual',\n        component: () =>\n          import('./views/GuidedSetupManual/GuidedSetupManual.vue'),\n        children: [\n          {\n            path: 'admin',\n            alias: '',\n            name: 'GuidedSetupManualAdmin',\n            component: () =>\n              import('./views/GuidedSetupManual/GuidedSetupManualAdmin.vue'),\n            meta: {\n              title: __('Create Administrator Account'),\n              requiresAuth: false,\n              requiredPermission: null,\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: 'finish',\n            alias: '',\n            name: 'GuidedSetupManualFinish',\n            component: () =>\n              import('./views/GuidedSetupManual/GuidedSetupManualFinish.vue'),\n            meta: {\n              title: __('Setup Finished'),\n              requiresAuth: true,\n              requiredPermission: 'admin.wizard',\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: 'system-information',\n            name: 'GuidedSetupManualSystemInformation',\n            component: () =>\n              import(\n                './views/GuidedSetupManual/GuidedSetupManualSystemInformation.vue'\n              ),\n            meta: {\n              title: __('System Information'),\n              requiresAuth: true,\n              requiredPermission: 'admin.wizard',\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: 'email-notification',\n            name: 'GuidedSetupManualEmailNotification',\n            component: () =>\n              import(\n                './views/GuidedSetupManual/GuidedSetupManualEmailNotification.vue'\n              ),\n            meta: {\n              title: __('Email Notification'),\n              requiresAuth: true,\n              requiredPermission: 'admin.wizard',\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: 'channels',\n            name: 'GuidedSetupManualChannels',\n            component: () =>\n              import('./views/GuidedSetupManual/GuidedSetupManualChannels.vue'),\n            meta: {\n              title: __('Connect Channels'),\n              requiresAuth: true,\n              requiredPermission: 'admin.wizard',\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: 'channels/email',\n            name: 'GuidedSetupManualChannelEmail',\n            component: () =>\n              import(\n                './views/GuidedSetupManual/GuidedSetupManualChannelEmail.vue'\n              ),\n            meta: {\n              title: __('Email Account'),\n              requiresAuth: true,\n              requiredPermission: 'admin.wizard',\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: 'channels/email-pre-configured',\n            name: 'GuidedSetupManualChannelEmailPreConfigured',\n            component: () =>\n              import(\n                './views/GuidedSetupManual/GuidedSetupManualChannelEmailPreConfigured.vue'\n              ),\n            meta: {\n              title: __('Connect Channels'),\n              requiresAuth: true,\n              requiredPermission: 'admin.wizard',\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: 'invite',\n            name: 'GuidedSetupManualInviteColleagues',\n            component: () =>\n              import(\n                './views/GuidedSetupManual/GuidedSetupManualInviteColleagues.vue'\n              ),\n            meta: {\n              title: __('Invite Colleagues'),\n              requiresAuth: true,\n              requiredPermission: 'admin.wizard',\n              hasOwnLandmarks: true,\n            },\n          },\n        ],\n      },\n      {\n        path: 'import',\n        name: 'GuidedSetupImport',\n        component: () =>\n          import('./views/GuidedSetupImport/GuidedSetupImport.vue'),\n        children: [\n          {\n            path: '',\n            name: 'GuidedSetupImportSelection',\n            component: () =>\n              import(\n                './views/GuidedSetupImport/GuidedSetupImportSelection.vue'\n              ),\n            meta: {\n              title: __('Import'),\n              requiresAuth: false,\n              requiredPermission: null,\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: ':source',\n            name: 'GuidedSetupImportSource',\n            props: true,\n            component: () =>\n              import(\n                './views/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSource.vue'\n              ),\n            meta: {\n              title: __('Import from Source'),\n              requiresAuth: false,\n              requiredPermission: null,\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: ':source/start',\n            name: 'GuidedSetupImportSourceStart',\n            props: true,\n            component: () =>\n              import(\n                './views/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSourceStart.vue'\n              ),\n            meta: {\n              title: __('Start Import from Source'),\n              requiresAuth: false,\n              requiredPermission: null,\n              hasOwnLandmarks: true,\n            },\n          },\n          {\n            path: ':source/status',\n            name: 'GuidedSetupImportSourceStatus',\n            props: true,\n            component: () =>\n              import(\n                './views/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSourceStatus.vue'\n              ),\n            meta: {\n              title: __('Status Import'),\n              requiresAuth: false,\n              requiredPermission: null,\n              hasOwnLandmarks: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n]\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nexport const usePersonalSettingStore = defineStore('personalSetting', () => {\n  const previousPersonalSettingPath = ref('/personal-setting/appearance')\n\n  const setPreviousPersonalSettingScreen = (path: string) => {\n    previousPersonalSettingPath.value = path\n  }\n\n  return {\n    previousPersonalSettingPath,\n    setPreviousPersonalSettingScreen,\n  }\n})\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Appearance'),\n  category: {\n    label: __('Profile'),\n    id: 'category-profile',\n    order: 1000,\n  },\n  route: {\n    path: 'appearance',\n    name: 'PersonalSettingAppearance',\n    component: () => import('../../PersonalSettingAppearance.vue'),\n    level: 2,\n    meta: {\n      title: __('Appearance'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.appearance',\n    },\n  },\n  order: 1000,\n  keywords: __('theme,color,style,dark mode,night mode,light mode'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Avatar'),\n  category: {\n    label: __('Profile'),\n    id: 'category-profile',\n    order: 1000,\n  },\n  route: {\n    path: 'avatar',\n    name: 'PersonalSettingAvatar',\n    component: () => import('../../PersonalSettingAvatar.vue'),\n    level: 2,\n    meta: {\n      title: __('Avatar'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.avatar',\n    },\n  },\n  order: 3000,\n  keywords: __('camera,image,photo,picture'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Calendar'),\n  category: {\n    label: __('Tickets'),\n    id: 'category-tickets',\n    order: 3000,\n  },\n  route: {\n    path: 'calendar-subscriptions',\n    name: 'PersonalSettingCalendar',\n    component: () => import('../../PersonalSettingCalendar.vue'),\n    level: 2,\n    meta: {\n      title: __('Calendar'),\n      requiresAuth: true,\n      requiredPermission: ['user_preferences.calendar+ticket.agent'],\n    },\n  },\n  order: 3000,\n  keywords: __('subscription,calendars,ticket,ical'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Devices'),\n  category: {\n    label: __('Security'),\n    id: 'category-security',\n    order: 2000,\n  },\n  route: {\n    path: 'devices',\n    name: 'PersonalSettingDevices',\n    component: () => import('../../PersonalSettingDevices.vue'),\n    level: 2,\n    meta: {\n      title: __('Devices'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.device',\n    },\n  },\n  order: 3000,\n  keywords: __('session,sessions,computer,computers,browser,browsers,access'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport { EnumAuthenticationProvider } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport type { ThirdPartyAuthProvider } from '#shared/types/authentication.ts'\n\nexport const useThirdPartyAuthentication = () => {\n  const application = useApplicationStore()\n  const { config } = storeToRefs(application)\n\n  const providers = computed<ThirdPartyAuthProvider[]>(() => {\n    return [\n      {\n        name: EnumAuthenticationProvider.Facebook,\n        label: i18n.t('Facebook'),\n        enabled: !!config.value.auth_facebook,\n        icon: 'facebook',\n        url: '/auth/facebook',\n      },\n      {\n        name: EnumAuthenticationProvider.Twitter,\n        label: i18n.t('Twitter'),\n        enabled: !!config.value.auth_twitter,\n        icon: 'twitter',\n        url: '/auth/twitter',\n      },\n      {\n        name: EnumAuthenticationProvider.Linkedin,\n        label: i18n.t('LinkedIn'),\n        enabled: !!config.value.auth_linkedin,\n        icon: 'linkedin',\n        url: '/auth/linkedin',\n      },\n      {\n        name: EnumAuthenticationProvider.Github,\n        label: i18n.t('GitHub'),\n        enabled: !!config.value.auth_github,\n        icon: 'github',\n        url: '/auth/github',\n      },\n      {\n        name: EnumAuthenticationProvider.Gitlab,\n        label: i18n.t('GitLab'),\n        enabled: !!config.value.auth_gitlab,\n        icon: 'gitlab',\n        url: '/auth/gitlab',\n      },\n      {\n        name: EnumAuthenticationProvider.MicrosoftOffice365,\n        label: i18n.t('Microsoft'),\n        enabled: !!config.value.auth_microsoft_office365,\n        icon: 'microsoft',\n        url: '/auth/microsoft_office365',\n      },\n      {\n        name: EnumAuthenticationProvider.GoogleOauth2,\n        label: i18n.t('Google'),\n        enabled: !!config.value.auth_google_oauth2,\n        icon: 'google',\n        url: '/auth/google_oauth2',\n      },\n      {\n        name: EnumAuthenticationProvider.Weibo,\n        label: i18n.t('Weibo'),\n        enabled: !!config.value.auth_weibo,\n        icon: 'weibo',\n        url: '/auth/weibo',\n      },\n      {\n        name: EnumAuthenticationProvider.Saml,\n        label:\n          (config.value['auth_saml_credentials.display_name'] as string) ||\n          i18n.t('SAML'),\n        enabled: !!config.value.auth_saml,\n        icon: 'saml',\n        url: '/auth/saml',\n      },\n      {\n        name: EnumAuthenticationProvider.Sso,\n        label: i18n.t('SSO'),\n        enabled: !!config.value.auth_sso,\n        icon: 'sso',\n        url: '/auth/sso',\n      },\n      {\n        name: EnumAuthenticationProvider.OpenidConnect,\n        label:\n          (config.value[\n            'auth_openid_connect_credentials.display_name'\n          ] as string) || i18n.t('OpenID Connect'),\n        enabled: !!config.value.auth_openid_connect,\n        icon: 'openid-connect',\n        url: '/auth/openid_connect',\n      },\n    ]\n  })\n\n  const enabledProviders = computed(() => {\n    return providers.value.filter((provider) => provider.enabled)\n  })\n\n  return {\n    enabledProviders,\n    hasEnabledProviders: computed(() => enabledProviders.value.length > 0),\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useThirdPartyAuthentication } from '#shared/composables/authentication/useThirdPartyAuthentication.ts'\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Linked Accounts'),\n  category: {\n    label: __('Security'),\n    id: 'category-security',\n    order: 2000,\n  },\n  route: {\n    path: 'linked-accounts',\n    name: 'PersonalSettingLinkedAccounts',\n    component: () => import('../../PersonalSettingLinkedAccounts.vue'),\n    level: 2,\n    meta: {\n      title: __('Linked Accounts'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.linked_accounts',\n    },\n  },\n  order: 5000,\n  keywords: __(\n    'linked accounts,facebook,github,gitlab,google,linkedin,microsoft,saml',\n  ),\n  show: () => {\n    const { hasEnabledProviders } = useThirdPartyAuthentication()\n    return hasEnabledProviders.value\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Language'),\n  category: {\n    label: __('Profile'),\n    id: 'category-profile',\n    order: 1000,\n  },\n  route: {\n    path: 'locale',\n    name: 'PersonalSettingLocale',\n    component: () => import('../../PersonalSettingLocale.vue'),\n    level: 2,\n    meta: {\n      title: __('Language'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.language',\n    },\n  },\n  order: 2000,\n  keywords: __('translation,locale,localization'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Notifications'),\n  category: {\n    label: __('Tickets'),\n    id: 'category-tickets',\n    order: 3000,\n  },\n  route: {\n    path: 'notifications',\n    name: 'PersonalSettingNotifications',\n    component: () => import('../../PersonalSettingNotifications.vue'),\n    level: 1,\n    meta: {\n      title: __('Notifications'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.notifications+ticket.agent',\n    },\n  },\n  order: 1000,\n  keywords: __('notifications,tickets'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Out of Office'),\n  category: {\n    label: __('Profile'),\n    id: 'category-profile',\n    order: 1000,\n  },\n  route: {\n    path: 'out-of-office',\n    name: 'PersonalSettingOutOfOffice',\n    component: () => import('../../PersonalSettingOutOfOffice.vue'),\n    level: 2,\n    meta: {\n      title: __('Out of Office'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.out_of_office+ticket.agent',\n    },\n  },\n  order: 4000,\n  keywords: __('vacation,holiday,replacement,time off'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed } from 'vue'\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nexport const useCheckChangePassword = () => {\n  const { config } = useApplicationStore()\n  const { hasPermission } = useSessionStore()\n\n  const canChangePassword = computed(\n    () => config.user_show_password_login || hasPermission('admin.*'),\n  )\n\n  return {\n    canChangePassword,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useCheckChangePassword } from '../../../composables/permission/useCheckChangePassword.ts'\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Password'),\n  category: {\n    label: __('Security'),\n    id: 'category-security',\n    order: 9000,\n  },\n  route: {\n    path: 'password',\n    name: 'PersonalSettingPassword',\n    component: () => import('../../PersonalSettingPassword.vue'),\n    level: 2,\n    meta: {\n      title: __('Password'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.password',\n    },\n  },\n  order: 1000,\n  keywords: __(\n    'current,new,confirm,change,current password,new password,confirm password,change password',\n  ),\n  show: () => {\n    const { canChangePassword } = useCheckChangePassword()\n\n    return canChangePassword.value\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Overviews'),\n  category: {\n    label: __('Tickets'),\n    id: 'category-tickets',\n    order: 3000,\n  },\n  route: {\n    path: 'ticket-overviews',\n    name: 'PersonalSettingOverviews',\n    component: () => import('../../PersonalSettingOverviews.vue'),\n    level: 2,\n    meta: {\n      title: __('Overviews'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.overview_sorting',\n    },\n  },\n  order: 2000,\n  keywords: __('order,sort,overview,ticket,sorting'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed } from 'vue'\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nexport const useCheckTokenAccess = () => {\n  const { config } = useApplicationStore()\n\n  const canUseAccessToken = computed(() => !!config.api_token_access)\n\n  return {\n    canUseAccessToken,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useCheckTokenAccess } from '../../../composables/permission/useCheckTokenAccess.ts'\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Token Access'),\n  category: {\n    label: __('Security'),\n    id: 'category-security',\n    order: 9000,\n  },\n  route: {\n    path: 'token-access',\n    name: 'PersonalSettingTokenAccess',\n    component: () => import('../../PersonalSettingTokenAccess.vue'),\n    level: 2,\n    meta: {\n      title: __('Token Access'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.access_token',\n    },\n  },\n  order: 4000,\n  keywords: __('token access,token,api,access token,application'),\n  show: () => {\n    const { canUseAccessToken } = useCheckTokenAccess()\n\n    return canUseAccessToken.value\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useApplicationConfigTwoFactor } from '#shared/composables/authentication/useApplicationConfigTwoFactor.ts'\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nexport default <PersonalSettingPlugin>{\n  label: __('Two-factor Authentication'),\n  category: {\n    label: __('Security'),\n    id: 'category-security',\n    order: 2000,\n  },\n  route: {\n    path: 'two-factor-auth',\n    name: 'PersonalSettingTwoFactorAuth',\n    component: () => import('../../PersonalSettingTwoFactorAuth.vue'),\n    level: 2,\n    meta: {\n      title: __('Two-factor Authentication'),\n      requiresAuth: true,\n      requiredPermission: 'user_preferences.two_factor_authentication',\n    },\n  },\n  order: 2000,\n  keywords: __('twofactor,2fa,security key,passkey,authenticator app'),\n  show: () => {\n    const { hasEnabledMethods } = useApplicationConfigTwoFactor()\n    return hasEnabledMethods.value\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { NavigationMenuCategory } from '#desktop/components/NavigationMenu/types.ts'\n\nimport type { PersonalSettingPlugin } from './types.ts'\n\nconst plugins = import.meta.glob<PersonalSettingPlugin>(\n  ['./**/*.ts', '!./**/index.ts', '!./types.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nconst categories: NavigationMenuCategory[] = []\nconst categorizedItems: Record<string, PersonalSettingPlugin[]> = {}\n\nObject.values(plugins).forEach((plugin) => {\n  if (\n    !categories.find((category) => category.label === plugin.category.label)\n  ) {\n    categories.push(plugin.category)\n  }\n\n  return categories.sort((c1, c2) => c1.order - c2.order)\n})\n\nObject.values(plugins).forEach((plugin) => {\n  const categoryLabel = plugin.category.label\n  if (!categorizedItems[categoryLabel]) {\n    categorizedItems[categoryLabel] = []\n  }\n\n  categorizedItems[categoryLabel].push(plugin)\n  categorizedItems[categoryLabel].sort((p1, p2) => p1.order - p2.order)\n\n  return categorizedItems\n})\n\nexport const personalSettingCategories = categories\nexport const personalSettingItems = categorizedItems\n\nexport const personalSettingRoutes = Object.values(plugins).map(\n  (plugin) => plugin.route,\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { usePersonalSettingStore } from './stores/personalSetting.ts'\nimport { personalSettingRoutes } from './views/PersonalSetting/plugins/index.ts'\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst route: RouteRecordRaw[] = [\n  {\n    path: '/personal-setting',\n    name: 'PersonalSettings',\n    component: () => import('./views/PersonalSetting.vue'),\n    meta: {\n      title: __('Profile'),\n      icon: 'person-gear',\n      requiresAuth: true,\n      requiredPermission: ['*'],\n      level: 2,\n      pageKey: 'personal-setting',\n      permanentItem: true,\n    },\n    children: personalSettingRoutes,\n    redirect: () => ({\n      path: usePersonalSettingStore().previousPersonalSettingPath,\n    }),\n  },\n]\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst route: RouteRecordRaw[] = [\n  {\n    path: '/tickets/view/:overviewLink?',\n    name: 'TicketOverview',\n    component: () => import('./views/TicketOverviews.vue'),\n    alias:\n      // Temporary until we work on the dashboard\n      import.meta.env.DEV || VITE_TEST_MODE\n        ? '/ticket/view/:overviewLink?'\n        : ['/', '/ticket/view/:overviewLink?'],\n    props: true,\n    meta: {\n      title: __('Overviews'),\n      requiresAuth: true,\n      icon: 'all-tickets',\n      requiredPermission: ['ticket.agent', 'ticket.customer'],\n      level: 1,\n      pageKey: 'ticket-overviews',\n      permanentItem: true,\n    },\n  },\n]\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumTaskbarEntity } from '#shared/graphql/types.ts'\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst route: RouteRecordRaw[] = [\n  {\n    path: '/tickets/create/:tabId?',\n    name: 'TicketCreate',\n    props: true,\n    component: () => import('./views/TicketCreate.vue'),\n    alias: ['/ticket/create/:tabId?', '/ticket/create/:pathMatch(.*)*'],\n    meta: {\n      title: __('New Ticket'),\n      requiresAuth: true,\n      requiredPermission: ['ticket.agent', 'ticket.customer'],\n      taskbarTabEntity: EnumTaskbarEntity.TicketCreate,\n      level: 2,\n    },\n  },\n  {\n    path: '/tickets/:internalId(\\\\d+)',\n    alias: ['/ticket/:internalId(\\\\d+)', '/ticket/zoom/:internalId(\\\\d+)'],\n    name: 'TicketDetailView',\n    props: true,\n    component: () => import('./views/TicketDetailView.vue'),\n    meta: {\n      title: __('Ticket'),\n      requiresAuth: true,\n      requiredPermission: ['ticket.agent', 'ticket.customer'],\n      taskbarTabEntity: EnumTaskbarEntity.TicketZoom,\n      messageForbidden: __('You have insufficient rights to view this ticket.'),\n      messageNotFound: __(\n        'Ticket with specified ID was not found. Try checking the URL for errors.',\n      ),\n      level: 2,\n    },\n  },\n  {\n    path: '/ticket/zoom/:internalId(\\\\d+)/:articleId(\\\\d+)',\n    redirect: (to) =>\n      `/tickets/${to.params.internalId}#article-${to.params.articleId}`,\n  },\n  {\n    path: '/tickets/:internalId(\\\\d+)/:articleId(\\\\d+)',\n    redirect: (to) =>\n      `/tickets/${to.params.internalId}#article-${to.params.articleId}`,\n  },\n]\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: '/account',\n    name: 'AccountOverview',\n    props: true,\n    component: () => import('./views/AccountOverview.vue'),\n    alias: '/profile',\n    meta: {\n      title: __('Account'),\n      requiresAuth: true,\n      requiredPermission: ['*'],\n      hasBottomNavigation: true,\n      hasHeader: true,\n      level: 1,\n    },\n  },\n  {\n    path: '/account/avatar',\n    name: 'PersonalSettingAvatar',\n    props: true,\n    component: () => import('./views/PersonalSettingAvatar.vue'),\n    alias: '/profile/avatar',\n    meta: {\n      title: __('Avatar'),\n      requiresAuth: true,\n      requiredPermission: ['user_preferences.avatar'],\n      hasBottomNavigation: false,\n      hasHeader: true,\n      level: 2,\n    },\n  },\n]\n\nexport default routes\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nexport const isMainRoute = true\n\nconst route: RouteRecordRaw[] = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('./views/Login.vue'),\n    meta: {\n      title: __('Sign in'),\n      requiresAuth: false,\n      requiredPermission: null,\n      hasOwnLandmarks: true,\n    },\n  },\n  {\n    path: '/login/after-auth',\n    name: 'LoginAfterAuth',\n    component: () => import('./views/LoginAfterAuth.vue'),\n    async beforeEnter(to) {\n      // don't open the page if there is nothing to show\n      const { useAfterAuthPlugins } = await import(\n        './after-auth/composable/useAfterAuthPlugins.ts'\n      )\n      const { currentPlugin } = useAfterAuthPlugins()\n      if (!currentPlugin.value) {\n        return to.redirectedFrom ? false : '/'\n      }\n    },\n    meta: {\n      requiresAuth: false,\n      requiredPermission: null,\n      hasOwnLandmarks: true,\n    },\n  },\n  {\n    path: '/logout',\n    name: 'Logout',\n    component: {\n      async beforeRouteEnter() {\n        const [{ useAuthenticationStore }, { useNotifications }] =\n          await Promise.all([\n            import('#shared/stores/authentication.ts'),\n            import(\n              '#shared/components/CommonNotifications/useNotifications.ts'\n            ),\n          ])\n\n        const { clearAllNotifications } = useNotifications()\n\n        const authentication = useAuthenticationStore()\n\n        clearAllNotifications()\n        await authentication.logout()\n\n        if (authentication.externalLogout) return false\n\n        return '/login'\n      },\n    },\n    meta: {\n      requiresAuth: false,\n      requiredPermission: null,\n    },\n  },\n]\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nexport const isMainRoute = true\n\nconst route: RouteRecordRaw = {\n  path: '/error',\n  alias: '/:pathMatch(.*)*',\n  name: 'Error',\n  props: true,\n  component: () => import('./views/Error.vue'),\n  meta: {\n    requiresAuth: false,\n    requiredPermission: null,\n    hasOwnLandmarks: true,\n  },\n}\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst route: RouteRecordRaw[] = [\n  {\n    path: '/',\n    name: 'Home',\n    props: true,\n    component: () => import('./views/Home.vue'),\n    beforeEnter(to) {\n      const location = to.hash && to.hash.slice(1)\n\n      if (!location) return true\n\n      const route = Router.resolve(location)\n      const path = route.name === 'Error' ? '/' : `/${location}`\n\n      return { path, replace: true }\n    },\n    meta: {\n      title: __('Home'),\n      requiresAuth: true,\n      requiredPermission: ['*'],\n      hasBottomNavigation: true,\n      level: 1,\n    },\n  },\n  {\n    path: '/favorite/ticket-overviews/edit',\n    props: true,\n    name: 'TicketOverviews',\n    component: () => import('./views/FavoriteTicketOverviewsEdit.vue'),\n    meta: {\n      title: __('Ticket Overview'),\n      requiresAuth: true,\n      requiredPermission: ['ticket.agent', 'ticket.customer'],\n      hasBottomNavigation: true,\n      hasHeader: true,\n      level: 2,\n    },\n  },\n]\n\nexport default route\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: '/notifications',\n    name: 'NotificationsList',\n    component: () => import('./views/NotificationsList.vue'),\n    meta: {\n      title: __('Notifications'),\n      requiresAuth: true,\n      requiredPermission: null,\n      hasHeader: true,\n      hasBottomNavigation: true,\n      level: 1,\n    },\n  },\n]\n\nexport default routes\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: '/organizations/:internalId(\\\\d+)',\n    name: 'OrganizationDetailView',\n    props: (route) => ({ internalId: Number(route.params.internalId) }),\n    component: () => import('./views/OrganizationDetailView.vue'),\n    alias: '/organization/profile/:internalId(\\\\d+)',\n    meta: {\n      title: __('Organization'),\n      requiresAuth: true,\n      requiredPermission: ['ticket.agent'],\n      hasBottomNavigation: true,\n      hasHeader: true,\n      level: 1,\n    },\n  },\n]\n\nexport default routes\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n/* eslint-disable zammad/zammad-detect-translatable-string */\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: '/playground',\n    name: 'PlaygroundOverview',\n    props: true,\n    component: () => import('./views/PlaygroundOverview.vue'),\n    meta: {\n      title: 'Playground',\n      requiresAuth: true,\n      requiredPermission: ['*'],\n      hasBottomNavigation: true,\n      level: 2,\n    },\n  },\n]\n\nexport default routes\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: '/search/:type?',\n    name: 'SearchOverview',\n    props: true,\n    component: () => import('./views/SearchOverview.vue'),\n    beforeEnter(to) {\n      const redirectedHash = to.redirectedFrom?.hash\n      // if redirected from hash-based route, get search from the hash\n      // or if already redirected form itself, do nothing\n      if (!redirectedHash || to.query.search || to.params.type) return\n      const search = redirectedHash.slice('#search/'.length)\n      return {\n        name: 'SearchOverview',\n        // probably a ticket, but can be anything\n        params: { type: 'ticket' },\n        query: { search },\n      }\n    },\n    meta: {\n      title: __('Search'),\n      requiresAuth: true,\n      requiredPermission: ['ticket.agent', 'ticket.customer'],\n      hasBottomNavigation: true,\n      level: 3,\n    },\n  },\n]\n\nexport default routes\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketInformationPlugin } from './index.ts'\n\nexport default <TicketInformationPlugin>{\n  label: __('Customer'),\n  route: {\n    path: 'customer',\n    name: 'TicketInformationCustomer',\n    props: (route) => ({ internalId: Number(route.params.internalId) }),\n    component: () => import('../TicketInformationCustomer.vue'),\n    meta: {\n      requiresAuth: true,\n      requiredPermission: ['ticket.agent'],\n    },\n  },\n  order: 200,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketInformationPlugin } from './index.ts'\n\nexport default <TicketInformationPlugin>{\n  label: __('Organization'),\n  route: {\n    path: 'organization',\n    name: 'TicketInformationOrganization',\n    component: () => import('../TicketInformationOrganization.vue'),\n    meta: {\n      requiresAuth: true,\n      requiredPermission: [],\n    },\n  },\n  order: 300,\n  condition: (ticket) => !!ticket?.organization,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketInformationPlugin } from './index.ts'\n\nexport default <TicketInformationPlugin>{\n  label: __('Ticket'),\n  route: {\n    path: '',\n    name: 'TicketInformationDetails',\n    component: () => import('../TicketInformationDetails.vue'),\n    meta: {\n      requiresAuth: true,\n      requiredPermission: [],\n    },\n  },\n  order: 100,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nexport interface TicketInformationPlugin {\n  order: number\n  label: string\n  route: RouteRecordRaw & { name: string }\n  condition?: (ticket?: TicketById) => boolean\n}\n\nconst pluginsModules = import.meta.glob<TicketInformationPlugin>(\n  ['./**/*.ts', '!./**/index.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nexport const ticketInformationPlugins = Object.values(pluginsModules).sort(\n  (p1, p2) => p1.order - p2.order,\n)\n\nexport const ticketInformationRoutes = ticketInformationPlugins.map(\n  (plugin) => plugin.route,\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { ticketInformationRoutes } from './views/TicketInformation/plugins/index.ts'\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: '/tickets/:internalId(\\\\d+)',\n    name: 'TicketDetailView',\n    props: true,\n    component: () => import('./views/TicketDetailView.vue'),\n    alias: ['/ticket/:internalId(\\\\d+)', '/ticket/zoom/:internalId(\\\\d+)'],\n    children: [\n      {\n        path: '',\n        name: 'TicketDetailArticlesView',\n        component: () => import('./views/TicketDetailArticlesView.vue'),\n        props: true,\n        meta: {\n          title: __('Ticket'),\n          requiresAuth: true,\n          requiredPermission: ['ticket.agent', 'ticket.customer'],\n          level: 3,\n        },\n      },\n      {\n        path: 'information',\n        component: () =>\n          import('./views/TicketInformation/TicketInformationView.vue'),\n        name: 'TicketInformationView',\n        props: true,\n        children: ticketInformationRoutes,\n        meta: {\n          title: __('Ticket information'),\n          requiresAuth: true,\n          requiredPermission: ['ticket.agent', 'ticket.customer'],\n          hasHeader: false,\n          level: 4,\n        },\n      },\n    ],\n  },\n  {\n    path: '/tickets/view/:overviewLink?',\n    name: 'TicketOverview',\n    props: true,\n    component: () => import('./views/TicketOverview.vue'),\n    alias: '/ticket/view/:overviewLink?',\n    meta: {\n      title: __('Tickets'),\n      requiresAuth: true,\n      requiredPermission: ['ticket.agent', 'ticket.customer'],\n      hasBottomNavigation: true,\n      level: 2,\n    },\n  },\n  {\n    path: '/tickets/create',\n    name: 'TicketCreate',\n    props: false,\n    component: () => import('./views/TicketCreate.vue'),\n    alias: ['/ticket/create', '/ticket/create/:pathMatch(.*)*'],\n    meta: {\n      title: __('Create Ticket'),\n      requiresAuth: true,\n      requiredPermission: ['ticket.agent', 'ticket.customer'],\n      level: 2,\n    },\n  },\n  {\n    path: '/ticket/zoom/:internalId(\\\\d+)/:articleId(\\\\d+)',\n    redirect: (to) =>\n      `/tickets/${to.params.internalId}#article-${to.params.articleId}`,\n  },\n]\n\nexport default routes\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\nconst routes: RouteRecordRaw = {\n  path: '/users/:internalId(\\\\d+)',\n  name: 'UserDetailView',\n  props: (route) => ({ internalId: Number(route.params.internalId) }),\n  component: () => import('./views/UserDetailView.vue'),\n  alias: '/user/profile/:internalId(\\\\d+)',\n  meta: {\n    title: __('User'),\n    requiresAuth: true,\n    // app/assets/javascripts/app/controllers/user_profile.coffee:291\n    requiredPermission: ['ticket.agent'],\n    hasHeader: true,\n    level: 2,\n  },\n}\n\nexport default routes\n"],"file":"assets/routes-CgLO9M4y.js"}