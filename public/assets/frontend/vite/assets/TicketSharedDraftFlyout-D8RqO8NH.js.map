{"version":3,"file":"TicketSharedDraftFlyout-D8RqO8NH.js","sources":["../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketSharedDraftFlyout.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\n\nimport {\n  NotificationTypes,\n  useNotifications,\n} from '#shared/components/CommonNotifications/index.ts'\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport type { FormRef } from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport type {\n  TicketSharedDraftStartSingleQuery,\n  TicketSharedDraftZoomShowQuery,\n} from '#shared/graphql/types.ts'\nimport { convertToGraphQLId } from '#shared/graphql/utils.ts'\nimport {\n  MutationHandler,\n  QueryHandler,\n} from '#shared/server/apollo/handler/index.ts'\nimport type {\n  OperationMutationFunction,\n  OperationQueryFunction,\n} from '#shared/types/server/apollo/handler'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport CommonFlyout from '#desktop/components/CommonFlyout/CommonFlyout.vue'\nimport { closeFlyout } from '#desktop/components/CommonFlyout/useFlyout.ts'\nimport CommonObjectAttribute from '#desktop/components/CommonObjectAttribute/CommonObjectAttribute.vue'\nimport CommonObjectAttributeContainer from '#desktop/components/CommonObjectAttribute/CommonObjectAttributeContainer.vue'\n\nconst props = defineProps<{\n  sharedDraftId: string\n  form: FormRef | undefined\n  draftType: 'start' | 'detail-view'\n  metaInformationQuery: OperationQueryFunction\n  deleteMutation: OperationMutationFunction\n}>()\n\nconst emit = defineEmits<{\n  'shared-draft-applied': [id: string]\n  'shared-draft-deleted': [id: string]\n}>()\n\nconst { metaInformationQuery, deleteMutation } = props\n\nconst flyoutName = 'shared-draft'\n\nconst metaInformationQueryHandler = new QueryHandler(\n  metaInformationQuery({\n    sharedDraftId: props.sharedDraftId,\n  }),\n)\n\nconst metaInformationQueryResult = metaInformationQueryHandler.result()\n\nconst sharedDraft = computed(() => {\n  if (props.draftType === 'start') {\n    return metaInformationQueryResult.value\n      ?.ticketSharedDraftStartSingle as TicketSharedDraftStartSingleQuery['ticketSharedDraftStartSingle']\n  }\n\n  return metaInformationQueryResult.value\n    ?.ticketSharedDraftZoomShow as TicketSharedDraftZoomShowQuery['ticketSharedDraftZoomShow']\n})\n\nconst sharedDraftContent = computed(() => {\n  if (props.draftType === 'start') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const content: any =\n      sharedDraft.value as TicketSharedDraftStartSingleQuery['ticketSharedDraftStartSingle']\n\n    return content.content.body\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const newArticle: any =\n    sharedDraft.value as TicketSharedDraftZoomShowQuery['ticketSharedDraftZoomShow']\n\n  return newArticle.newArticle.body\n})\n\nconst close = () => {\n  closeFlyout(flyoutName)\n}\n\nconst { waitForConfirmation, waitForVariantConfirmation } = useConfirmation()\n\nconst { notify } = useNotifications()\n\nconst sharedDrafteleteMutation = new MutationHandler(deleteMutation({}))\n\nconst { isDirty, triggerFormUpdater, updateFieldValues, values } = useForm(\n  toRef(props, 'form'),\n)\n\nconst deleteSharedDraft = async (sharedDraftId: string) => {\n  const confirmed = await waitForVariantConfirmation('delete')\n  if (!confirmed) return\n\n  sharedDrafteleteMutation\n    .send({\n      sharedDraftId,\n    })\n    .then(() => {\n      // Reset shared draft internal ID, if currently set to the same value in the form.\n      if (\n        (props.draftType === 'start' &&\n          convertToGraphQLId(\n            'Ticket::SharedDraftStart',\n            Number(values.value.shared_draft_id),\n          ) === sharedDraftId) ||\n        (props.draftType === 'detail-view' &&\n          convertToGraphQLId(\n            'Ticket::SharedDraftZoom',\n            Number(values.value.shared_draft_id),\n          ) === sharedDraftId)\n      ) {\n        updateFieldValues({\n          shared_draft_id: null,\n        })\n      }\n\n      notify({\n        id: 'shared-draft-deleted',\n        type: NotificationTypes.Success,\n        message: __('Shared draft has been deleted.'),\n      })\n\n      emit('shared-draft-deleted', sharedDraftId)\n\n      close()\n    })\n}\n\nconst applySharedDraft = async (sharedDraftId: string) => {\n  if (isDirty.value) {\n    const confirmed = await waitForConfirmation(\n      __('There is existing content. Do you want to overwrite it?'),\n      {\n        headerTitle: __('Apply Draft'),\n        buttonLabel: __('Overwrite Content'),\n        buttonVariant: 'danger',\n      },\n    )\n    if (!confirmed) return\n  }\n\n  const additionalParams = {\n    sharedDraftId,\n    draftType: props.draftType,\n  }\n\n  triggerFormUpdater({ additionalParams })\n\n  // NB: Skip notifying the user via toast, since they will immediately see the shared draft applied on screen.\n\n  emit('shared-draft-applied', sharedDraftId)\n\n  close()\n}\n\nconst headerTitle = computed(() => {\n  if (props.draftType === 'start') {\n    return __('Preview Shared Draft')\n  }\n\n  return __('Apply Shared Draft')\n})\n</script>\n\n<template>\n  <CommonFlyout\n    :header-title=\"headerTitle\"\n    :footer-action-options=\"{\n      actionLabel: __('Apply'),\n      actionButton: { variant: 'primary' },\n    }\"\n    header-icon=\"file-text\"\n    :name=\"flyoutName\"\n    @activated=\"metaInformationQueryHandler.refetch()\"\n  >\n    <div v-if=\"sharedDraft\" class=\"flex flex-col gap-3\">\n      <!-- TODO: Surely we should also display the name of the shared draft somewhere, no? -->\n      <!-- <CommonObjectAttributeContainer>\n        <CommonObjectAttribute :label=\"__('Name')\">\n          {{ sharedDraft?.name }}\n        </CommonObjectAttribute>\n      </CommonObjectAttributeContainer> -->\n\n      <div class=\"flex items-start gap-y-3\">\n        <CommonObjectAttributeContainer\n          v-if=\"sharedDraft?.updatedBy\"\n          class=\"grow\"\n        >\n          <CommonObjectAttribute :label=\"__('Author')\">\n            <div class=\"flex items-center gap-1.5\">\n              <CommonUserAvatar :entity=\"sharedDraft?.updatedBy\" size=\"small\" />\n              <CommonLabel>{{ sharedDraft.updatedBy.fullname }}</CommonLabel>\n            </div>\n          </CommonObjectAttribute>\n        </CommonObjectAttributeContainer>\n\n        <CommonObjectAttributeContainer class=\"grow\">\n          <CommonObjectAttribute :label=\"__('Last changed')\">\n            <CommonDateTime :date-time=\"sharedDraft?.updatedAt\" />\n          </CommonObjectAttribute>\n        </CommonObjectAttributeContainer>\n      </div>\n\n      <!--\n        TODO: Think about showing more attributes here, since the body might not be present at all in the draft.\n          But keep in mind this might not be easily possible, since we are missing some information from the query.\n          For example, we have only `owner_id`/`state_id`/`priority_id`, what about lookup objects?!\n      -->\n      <CommonObjectAttributeContainer v-if=\"sharedDraftContent\">\n        <CommonObjectAttribute :label=\"__('Text')\">\n          <!-- eslint-disable vue/no-v-html -->\n          <span v-html=\"sharedDraftContent\" />\n        </CommonObjectAttribute>\n      </CommonObjectAttributeContainer>\n    </div>\n\n    <template #footer>\n      <div class=\"flex items-center justify-end gap-4\">\n        <CommonButton size=\"large\" variant=\"secondary\" @click=\"close\">\n          {{ $t('Cancel & Go Back') }}\n        </CommonButton>\n        <CommonButton\n          size=\"large\"\n          variant=\"danger\"\n          @click=\"deleteSharedDraft(sharedDraftId)\"\n        >\n          {{ $t('Delete') }}\n        </CommonButton>\n        <CommonButton\n          size=\"large\"\n          variant=\"primary\"\n          @click=\"applySharedDraft(sharedDraftId)\"\n        >\n          {{ $t('Apply') }}\n        </CommonButton>\n      </div>\n    </template>\n  </CommonFlyout>\n</template>\n"],"names":["flyoutName","props","__props","emit","__emit","metaInformationQuery","deleteMutation","metaInformationQueryHandler","QueryHandler","metaInformationQueryResult","sharedDraft","computed","_a","_b","sharedDraftContent","close","closeFlyout","waitForConfirmation","waitForVariantConfirmation","useConfirmation","notify","useNotifications","sharedDrafteleteMutation","MutationHandler","isDirty","triggerFormUpdater","updateFieldValues","values","useForm","toRef","deleteSharedDraft","sharedDraftId","convertToGraphQLId","NotificationTypes","applySharedDraft","additionalParams","headerTitle"],"mappings":"kiDAgDMA,EAAa,sNAfnB,MAAMC,EAAQC,EAQRC,EAAOC,EAKP,CAAE,qBAAAC,EAAsB,eAAAC,CAAmB,EAAAL,EAI3CM,EAA8B,IAAIC,EACtCH,EAAqB,CACnB,cAAeJ,EAAM,aAAA,CACtB,CAAA,EAGGQ,EAA6BF,EAA4B,SAEzDG,EAAcC,EAAS,IAAM,SAC7B,OAAAV,EAAM,YAAc,SACfW,EAAAH,EAA2B,QAA3B,YAAAG,EACH,8BAGCC,EAAAJ,EAA2B,QAA3B,YAAAI,EACH,yBAAA,CACL,EAEKC,EAAqBH,EAAS,IAC9BV,EAAM,YAAc,QAGpBS,EAAY,MAEC,QAAQ,KAKvBA,EAAY,MAEI,WAAW,IAC9B,EAEKK,EAAQ,IAAM,CAClBC,EAAYhB,CAAU,CAAA,EAGlB,CAAE,oBAAAiB,EAAqB,2BAAAC,CAA2B,EAAIC,EAAgB,EAEtE,CAAE,OAAAC,GAAWC,IAEbC,EAA2B,IAAIC,EAAgBjB,EAAe,CAAA,CAAE,CAAC,EAEjE,CAAE,QAAAkB,EAAS,mBAAAC,EAAoB,kBAAAC,EAAmB,OAAAC,CAAW,EAAAC,EACjEC,EAAM5B,EAAO,MAAM,CAAA,EAGf6B,EAAoB,MAAOC,GAA0B,CACvC,MAAMb,EAA2B,QAAQ,GAG3DI,EACG,KAAK,CACJ,cAAAS,CAAA,CACD,EACA,KAAK,IAAM,EAGP9B,EAAM,YAAc,SACnB+B,EACE,2BACA,OAAOL,EAAO,MAAM,eAAe,CAC/B,IAAAI,GACP9B,EAAM,YAAc,eACnB+B,EACE,0BACA,OAAOL,EAAO,MAAM,eAAe,KAC/BI,IAEUL,EAAA,CAChB,gBAAiB,IAAA,CAClB,EAGIN,EAAA,CACL,GAAI,uBACJ,KAAMa,EAAkB,QACxB,QAAS,GAAG,gCAAgC,CAAA,CAC7C,EAED9B,EAAK,uBAAwB4B,CAAa,EAEpChB,GAAA,CACP,CAAA,EAGCmB,EAAmB,MAAOH,GAA0B,CACxD,GAAIP,EAAQ,OASN,CARc,MAAMP,EACtB,GAAG,yDAAyD,EAC5D,CACE,YAAa,GAAG,aAAa,EAC7B,YAAa,GAAG,mBAAmB,EACnC,cAAe,QACjB,CAAA,EAEc,OAGlB,MAAMkB,EAAmB,CACvB,cAAAJ,EACA,UAAW9B,EAAM,SAAA,EAGAwB,EAAA,CAAE,iBAAAU,EAAkB,EAIvChC,EAAK,uBAAwB4B,CAAa,EAEpChB,GAAA,EAGFqB,EAAczB,EAAS,IACvBV,EAAM,YAAc,QACf,GAAG,sBAAsB,EAG3B,GAAG,oBAAoB,CAC/B"}