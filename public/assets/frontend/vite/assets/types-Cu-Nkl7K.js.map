{"version":3,"file":"types-Cu-Nkl7K.js","sources":["../../../../../app/frontend/shared/entities/ticket/types.ts"],"sourcesContent":["// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FileUploaded } from '#shared/components/Form/fields/FieldFile/types.ts'\nimport type { SecurityValue } from '#shared/components/Form/fields/FieldSecurity/types.ts'\nimport type { FormFieldValue } from '#shared/components/Form/types.ts'\nimport {\n  type TicketQuery,\n  type TicketArticlesQuery,\n  type TicketLiveUser,\n  type EnumTaskbarApp,\n  type EnumSecurityOption,\n} from '#shared/graphql/types.ts'\nimport type { ConfidentTake } from '#shared/types/utils.ts'\n\nexport enum TicketState {\n  Closed = 'closed',\n  WaitingForClosure = 'pending close',\n  WaitingForReminder = 'pending reminder',\n  Open = 'open',\n  New = 'new',\n}\n\nexport enum TicketCreateArticleType {\n  PhoneIn = 'phone-in',\n  PhoneOut = 'phone-out',\n  EmailOut = 'email-out',\n}\n\nexport type TicketView = 'agent' | 'customer'\n\nexport interface TicketLiveAppUser {\n  user: TicketLiveUser['user']\n  editing: boolean\n  lastInteraction?: string\n  app: EnumTaskbarApp\n  isIdle?: boolean\n}\n\nexport type TicketById = TicketQuery['ticket']\n\nexport type TicketArticle = ConfidentTake<\n  TicketArticlesQuery,\n  'articles.edges.node'\n>\n\nexport interface TicketCustomerUpdateFormData {\n  customer_id: number\n  organization_id?: number\n}\n\nexport interface TicketFormData {\n  title: string\n  customer_id?: number\n  cc?: string[]\n  body: string\n  attachments?: FileUploaded[]\n  group_id: number\n  owner_id?: number\n  state_id?: number\n  pending_time?: string\n  priority_id?: number\n  articleSenderType: TicketCreateArticleType\n  tags: string[]\n  security?: EnumSecurityOption[]\n  externalReferences: {\n    github: string[]\n    gitlab: string[]\n  }\n  [index: string]: FormFieldValue\n}\n\nexport interface TicketUpdateFormData {\n  group_id: number\n  owner_id?: number\n  state_id?: number\n  priority_id?: number\n  pending_time?: string\n  isDefaultFollowUpStateSet?: boolean\n  article?: {\n    articleType?: string\n    body?: string\n    internal?: boolean\n    cc?: string[]\n    subtype?: string\n    inReplyTo?: string\n    to?: string[]\n    subject?: string\n    contentType?: string\n    security?: SecurityValue\n    timeUnit?: number\n    accountedTimeTypeId?: ID\n  }\n  [index: string]: FormFieldValue\n}\n\nexport interface TicketArticleTimeAccountingFormData {\n  time_unit?: string\n  accounted_time_type_id?: number\n}\n\nexport type TicketDuplicateDetectionItem = [\n  id: number,\n  number: string,\n  title: string,\n]\n"],"names":["TicketState","TicketCreateArticleType"],"mappings":"AAcY,IAAAA,GAAAA,IACVA,EAAA,OAAS,SACTA,EAAA,kBAAoB,gBACpBA,EAAA,mBAAqB,mBACrBA,EAAA,KAAO,OACPA,EAAA,IAAM,MALIA,IAAAA,GAAA,CAAA,CAAA,EAQAC,GAAAA,IACVA,EAAA,QAAU,WACVA,EAAA,SAAW,YACXA,EAAA,SAAW,YAHDA,IAAAA,GAAA,CAAA,CAAA"}