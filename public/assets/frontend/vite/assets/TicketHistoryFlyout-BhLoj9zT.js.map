{"version":3,"file":"TicketHistoryFlyout-BhLoj9zT.js","sources":["../../../../../app/frontend/apps/desktop/pages/ticket/graphql/queries/ticketHistory.api.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/utils/historyEventEntityNames.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/utils/eventHelpers.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/added.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/checklist-item-checked.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/created-mention.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/HistoryEventDetails/HistoryEventDetailsReaction.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/created.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/email.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/HistoryEventDetails/HistoryEventDetailsMerge.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/merged-into.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/notification.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/received-merge.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/removed-mention.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/removed.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/time-trigger-performed.ts","../../../../../app/frontend/shared/utils/datetime.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/updated.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/event-actions/index.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/utils/historyEventIssuerNames.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/composables/useHistoryEvents.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/HistoryEventDetails/HistoryEventDetails.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/HistoryEvent.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/HistoryEventIssuer.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/actions/TicketHistory/TicketHistoryFlyout.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TicketHistoryDocument = gql`\n    query ticketHistory($ticketId: ID, $ticketInternalId: Int, $ticketNumber: String) {\n  ticketHistory(\n    ticket: {ticketId: $ticketId, ticketInternalId: $ticketInternalId, ticketNumber: $ticketNumber}\n  ) {\n    createdAt\n    records {\n      issuer {\n        ... on User {\n          id\n          internalId\n          firstname\n          lastname\n          fullname\n          phone\n          email\n          image\n        }\n        ... on Trigger {\n          id\n          name\n        }\n        ... on Job {\n          id\n          name\n        }\n        ... on PostmasterFilter {\n          id\n          name\n        }\n        ... on ObjectClass {\n          klass\n          info\n        }\n      }\n      events {\n        createdAt\n        action\n        object {\n          ... on Checklist {\n            id\n            name\n          }\n          ... on ChecklistItem {\n            id\n            text\n            checked\n          }\n          ... on Group {\n            id\n            name\n          }\n          ... on Mention {\n            id\n            user {\n              id\n              fullname\n            }\n          }\n          ... on Organization {\n            id\n            name\n          }\n          ... on Ticket {\n            id\n            internalId\n            number\n            title\n          }\n          ... on TicketArticle {\n            id\n            body\n          }\n          ... on TicketSharedDraftZoom {\n            id\n          }\n          ... on User {\n            id\n            fullname\n          }\n          ... on ObjectClass {\n            klass\n            info\n          }\n        }\n        attribute\n        changes\n      }\n    }\n  }\n}\n    `;\nexport function useTicketHistoryQuery(variables: Types.TicketHistoryQueryVariables | VueCompositionApi.Ref<Types.TicketHistoryQueryVariables> | ReactiveFunction<Types.TicketHistoryQueryVariables> = {}, options: VueApolloComposable.UseQueryOptions<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables>(TicketHistoryDocument, variables, options);\n}\nexport function useTicketHistoryLazyQuery(variables: Types.TicketHistoryQueryVariables | VueCompositionApi.Ref<Types.TicketHistoryQueryVariables> | ReactiveFunction<Types.TicketHistoryQueryVariables> = {}, options: VueApolloComposable.UseQueryOptions<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables>(TicketHistoryDocument, variables, options);\n}\nexport type TicketHistoryQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.TicketHistoryQuery, Types.TicketHistoryQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\n// TODO: Think about a better way to avoid duplication.\n\nexport const eventEntityNames: Record<string, string> = {\n  TicketArticle: __('Article'),\n  'Ticket::Article': __('Article'),\n  TicketSharedDraftZoom: __('Shared Draft'),\n  'Ticket::SharedDraftZoom': __('Shared Draft'),\n  ChecklistItem: __('Checklist Item'),\n  'Checklist::Item': __('Checklist Item'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { HistoryRecordEvent, ObjectClass } from '#shared/graphql/types.ts'\nimport type { DeepPartial } from '#shared/types/utils.ts'\n\nimport { eventEntityNames } from './historyEventEntityNames.ts'\n\nexport const getEntityFromObject = (\n  object?: Maybe<DeepPartial<HistoryRecordEvent['object']>>,\n) => {\n  return (\n    (object?.__typename === 'ObjectClass'\n      ? (object as ObjectClass).klass\n      : object?.__typename) || __('Unknown')\n  )\n}\n\nexport const getEntityNameFromObject = (\n  object?: Maybe<DeepPartial<HistoryRecordEvent['object']>>,\n) => {\n  const entity = getEntityFromObject(object)\n\n  return eventEntityNames[entity] || entity\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { capitalize } from '#shared/utils/formatter.ts'\n\nimport { getEntityNameFromObject } from '../utils/eventHelpers.ts'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'added',\n  actionName: 'added',\n  content: (event) => {\n    const { attribute } = event\n\n    return {\n      entityName: getEntityNameFromObject(event.object),\n      attributeName: attribute ? capitalize(attribute) : '',\n      details: event.changes?.to || '',\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'checklist-item-checked',\n  actionName: (event) =>\n    event.changes?.to === 'true' ? 'checked' : 'unchecked',\n  content: (event) => {\n    return {\n      entityName: __('Checklist Item'),\n      details: event.changes?.from || '',\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { User } from '#shared/graphql/types.ts'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'created-mention',\n  actionName: 'created',\n  content: (event) => {\n    return {\n      description: __('Mention for'),\n      details:\n        event.object?.__typename === 'User'\n          ? (event.object as User).fullname\n          : '-',\n    }\n  },\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport CommonTranslateRenderer from '#shared/components/CommonTranslateRenderer/CommonTranslateRenderer.vue'\nimport type { RenderPlaceholder } from '#shared/components/CommonTranslateRenderer/types.ts'\n\nimport type { EventActionOutput } from '../types.ts'\n\ninterface Props {\n  event: EventActionOutput\n}\n\nconst { event } = defineProps<Props>()\n\nconst actionName2Source: Record<string, string> = {\n  'removed-reaction': __('Removed reaction from message %s from %s'),\n  'changed-reaction': __('Changed reaction on message %s from %s'),\n  'changed-reaction-to': __('Changed reaction to %s on message %s from %s'),\n  reacted: __('Reacted to message %s from %s'),\n  'reacted-with': __('Reacted with %s to message %s from %s'),\n}\n\nconst truncatedArticle: RenderPlaceholder = {\n  type: 'label',\n  props: {\n    size: 'medium',\n    class:\n      'cursor-text rounded bg-neutral-200 px-0.5 font-mono text-black dark:bg-gray-400 dark:text-white',\n  },\n  content: event.details || '',\n}\n\nconst messageCreator: RenderPlaceholder = {\n  type: 'label',\n  props: {\n    size: 'medium',\n  },\n  content: event.additionalDetails || '',\n}\n\nconst emoji: RenderPlaceholder = {\n  type: 'label',\n  props: {\n    size: 'medium',\n  },\n  content: event.description || '',\n}\n\nconst actionName2Placeholder: Record<string, RenderPlaceholder[]> = {\n  'changed-reaction': [truncatedArticle, messageCreator],\n  'changed-reaction-to': [emoji, truncatedArticle, messageCreator],\n  reacted: [truncatedArticle, messageCreator],\n  'reacted-with': [emoji, truncatedArticle, messageCreator],\n  'removed-reaction': [truncatedArticle, messageCreator],\n}\n</script>\n\n<template>\n  <span>\n    <CommonTranslateRenderer\n      class=\"text-sm leading-snug text-gray-100 dark:text-neutral-400\"\n      :source=\"actionName2Source[event.actionName]\"\n      :placeholders=\"actionName2Placeholder[event.actionName]\"\n    />\n  </span>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketArticle } from '#shared/graphql/types.ts'\nimport { textTruncate } from '#shared/utils/helpers.ts'\n\nimport HistoryEventDetailsReaction from '../HistoryEventDetails/HistoryEventDetailsReaction.vue'\nimport { getEntityNameFromObject } from '../utils/eventHelpers.ts'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'created',\n  actionName: (event) => {\n    if (!event.attribute || event.attribute !== 'reaction') return 'created'\n\n    const emoji = event.changes?.to as string\n\n    return emoji.length > 0 ? 'reacted-with' : 'reacted'\n  },\n  content: (event) => {\n    if (event.attribute && event.attribute === 'reaction') {\n      const article = event.object as TicketArticle\n\n      const emoji = event.changes?.to as string\n\n      return {\n        description: emoji,\n        details: textTruncate(article.body),\n        additionalDetails: event.changes.from,\n        component: HistoryEventDetailsReaction,\n      }\n    }\n\n    const details = (event.changes?.to || '') as string\n\n    return {\n      entityName: getEntityNameFromObject(event.object),\n      details,\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport HistoryEventDetailsEmail from '../HistoryEventDetails/HistoryEventDetailsEmail.vue'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'email',\n  actionName: 'email',\n  component: HistoryEventDetailsEmail,\n  content: (event) => {\n    return {\n      details: event.changes?.to,\n    }\n  },\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport CommonTranslateRenderer from '#shared/components/CommonTranslateRenderer/CommonTranslateRenderer.vue'\n\nimport type { EventActionOutput } from '../types.ts'\n\ninterface Props {\n  event: EventActionOutput\n}\n\nconst { event } = defineProps<Props>()\n\nconst actionName2Source: Record<string, string> = {\n  'received-merge': __('Merged %s into this ticket'),\n  'merged-into': __('Merged this ticket into %s'),\n}\n</script>\n\n<template>\n  <span>\n    <CommonTranslateRenderer\n      class=\"text-sm leading-snug text-gray-100 dark:text-neutral-400\"\n      :source=\"actionName2Source[event.actionName]\"\n      :placeholders=\"[\n        {\n          type: 'link',\n          props: {\n            link: event.link,\n            size: 'medium',\n            class: 'text-blue-800 hover:underline',\n          },\n          content: event.details || '',\n        },\n      ]\"\n    />\n  </span>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { Ticket } from '#shared/graphql/types.ts'\n\nimport HistoryEventDetailsMerge from '../HistoryEventDetails/HistoryEventDetailsMerge.vue'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'merged-into',\n  actionName: 'merged-into',\n  component: HistoryEventDetailsMerge,\n  content: (event) => {\n    const ticket = event.object as Ticket\n\n    const details = `#${ticket.number}`\n\n    return {\n      details,\n      link: `/tickets/${ticket.internalId}`,\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'notification',\n  actionName: 'notification',\n  content: (event) => {\n    const notification = event.changes?.to as string\n\n    const match = notification.match(/^(?<email>[^(]+)\\((?<details>[^)]+)\\)$/)\n\n    return {\n      details: match?.groups?.email,\n      additionalDetails: match?.groups?.details,\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { Ticket } from '#shared/graphql/types.ts'\n\nimport HistoryEventDetailsMerge from '../HistoryEventDetails/HistoryEventDetailsMerge.vue'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'received-merge',\n  actionName: 'received-merge',\n  component: HistoryEventDetailsMerge,\n  content: (event) => {\n    const ticket = event.object as Ticket\n\n    const details = `#${ticket.number}`\n\n    return {\n      details,\n      link: `/tickets/${ticket.internalId}`,\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { User } from '#shared/graphql/types.ts'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'removed-mention',\n  actionName: 'removed',\n  content: (event) => {\n    return {\n      description: __('Mention for'),\n      details:\n        event.object?.__typename === 'User'\n          ? (event.object as User).fullname\n          : '-',\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketArticle } from '#shared/graphql/types.ts'\nimport { capitalize } from '#shared/utils/formatter.ts'\nimport { textTruncate } from '#shared/utils/helpers.ts'\n\nimport HistoryEventDetailsReaction from '../HistoryEventDetails/HistoryEventDetailsReaction.vue'\nimport { getEntityNameFromObject } from '../utils/eventHelpers.ts'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'removed',\n  actionName: (event) => {\n    if (event.attribute && event.attribute === 'reaction') {\n      return 'removed-reaction'\n    }\n    return 'removed'\n  },\n  content: (event) => {\n    if (event.attribute && event.attribute === 'reaction') {\n      const article = event.object as TicketArticle\n\n      return {\n        details: textTruncate(article.body),\n        additionalDetails: event.changes.from,\n        component: HistoryEventDetailsReaction,\n      }\n    }\n\n    const details = (event.changes?.to || '') as string\n\n    return {\n      entityName: getEntityNameFromObject(event.object),\n      attributeName: event.attribute ? capitalize(event.attribute) : '',\n      details,\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport HistoryEventDetailsTimeTriggerPerformed from '../HistoryEventDetails/HistoryEventDetailsTimeTriggerPerformed.vue'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'time-trigger-performed',\n  actionName: 'triggered',\n  content: (event) => {\n    switch (event.changes?.from) {\n      case 'reminder_reached':\n        return {\n          description: __('Triggered because pending reminder was reached'),\n          component: HistoryEventDetailsTimeTriggerPerformed,\n        }\n      case 'escalation':\n        return {\n          description: __('Triggered because ticket was escalated'),\n          component: HistoryEventDetailsTimeTriggerPerformed,\n        }\n      case 'escalation_warning':\n        return {\n          description: __('Triggered because ticket will escalate soon'),\n          component: HistoryEventDetailsTimeTriggerPerformed,\n        }\n      default:\n        return {\n          description: __('Triggered because time event was reached'),\n          component: HistoryEventDetailsTimeTriggerPerformed,\n        }\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\n// export const validDateTime = (value: string) =>\n//   !Number.isNaN(Date.parse(String(value)))\n\nexport const validDateTime = (value: string) => {\n  const dateTimeRegex =\n    /^(?:\\d{4}-\\d{2}-\\d{2}|(?:\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z)|(?:\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2} UTC))$/\n\n  if (!dateTimeRegex.test(value)) return false\n\n  return !Number.isNaN(Date.parse(String(value)))\n}\n\nexport const isDateString = (value: string) => {\n  const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/\n\n  return dateRegex.test(value)\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useObjectAttributes } from '#shared/entities/object-attributes/composables/useObjectAttributes.ts'\nimport {\n  EnumObjectManagerObjects,\n  type TicketArticle,\n} from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { isDateString, validDateTime } from '#shared/utils/datetime.ts'\nimport { textTruncate } from '#shared/utils/helpers.ts'\n\nimport HistoryEventDetailsReaction from '../HistoryEventDetails/HistoryEventDetailsReaction.vue'\nimport { getEntityFromObject } from '../utils/eventHelpers.ts'\nimport { eventEntityNames } from '../utils/historyEventEntityNames.ts'\n\nimport type { EventActionModule } from '../types.ts'\n\nexport default <EventActionModule>{\n  name: 'updated',\n  actionName: (event) => {\n    if (!event.attribute || event.attribute !== 'reaction') return 'updated'\n\n    const emoji = event.changes?.to as string\n\n    return emoji.length > 0 ? 'changed-reaction-to' : 'changed-reaction'\n  },\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  content: (event) => {\n    const { attribute: attributeName } = event\n\n    if (attributeName === 'reaction') {\n      const article = event.object as TicketArticle\n\n      const emoji = event.changes?.to as string\n\n      return {\n        description: emoji,\n        details: textTruncate(article.body),\n        additionalDetails: event.changes.from,\n        component: HistoryEventDetailsReaction,\n      }\n    }\n\n    const entity = getEntityFromObject(event.object)\n\n    let details = (event.changes?.from || '-') as string\n    let additionalDetails = (event.changes?.to || '-') as string\n\n    let displayName = attributeName\n    let needsTranslation = false\n\n    if (entity in EnumObjectManagerObjects) {\n      const { attributesLookup: objectAttributesLookup } = useObjectAttributes(\n        EnumObjectManagerObjects[\n          entity as keyof typeof EnumObjectManagerObjects\n        ],\n      )\n\n      if (attributeName) {\n        const objectAttribute =\n          objectAttributesLookup.value.get(`${attributeName}_id`) ||\n          objectAttributesLookup.value.get(attributeName)\n\n        needsTranslation = objectAttribute?.dataOption?.translate ?? false\n\n        if (objectAttribute?.display) displayName = objectAttribute?.display\n      }\n    }\n\n    if (validDateTime(details) || validDateTime(additionalDetails)) {\n      const dateFormatFunction =\n        isDateString(details) || isDateString(additionalDetails)\n          ? 'date'\n          : 'dateTime'\n\n      if (details !== '-') {\n        details = i18n[dateFormatFunction](details)\n      }\n      if (additionalDetails !== '-') {\n        additionalDetails = i18n[dateFormatFunction](additionalDetails)\n      }\n    } else if (needsTranslation) {\n      details = i18n.t(details)\n      additionalDetails = i18n.t(additionalDetails)\n    }\n\n    if (attributeName === 'group') {\n      details = details.replace('::', ' › ')\n      additionalDetails = additionalDetails.replace('::', ' › ')\n    }\n\n    return {\n      entityName: eventEntityNames[entity] || entity,\n      attributeName: displayName,\n      details,\n      additionalDetails,\n      showSeparator: details.length > 0 && additionalDetails.length > 0,\n    }\n  },\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { EventActionModule } from '../types.ts'\n\nconst eventActionModules = import.meta.glob<EventActionModule>(\n  ['./*.ts', '!./index.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\n// Put all event actions from the glob output into an hash\nconst eventActions = Object.entries(eventActionModules).reduce(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  (lookup: Record<string, EventActionModule>, [_, module]) => {\n    lookup[module.name] = module\n    return lookup\n  },\n  {} as Record<string, EventActionModule>,\n)\n\nexport const eventActionsLookup = eventActions\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nexport const historyEventIssuerNames: Record<string, string> = {\n  Job: __('Scheduler'),\n  PostmasterFilter: __('Postmaster Filter'),\n  Trigger: __('Trigger'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { kebabCase } from 'lodash-es'\n\nimport type {\n  HistoryRecordEvent,\n  HistoryRecordIssuer,\n  User,\n} from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport type { DeepPartial } from '#shared/types/utils.ts'\n\nimport { eventActionsLookup } from '../event-actions/index.ts'\nimport { historyEventIssuerNames } from '../utils/historyEventIssuerNames.ts'\n\nimport type { EventActionOutput } from '../types.ts'\n\nexport const useHistoryEvents = () => {\n  const issuedBySystemService = (issuer: Partial<HistoryRecordIssuer>) => {\n    return issuer.__typename !== 'User'\n  }\n\n  const issuedBySystemUser = (issuer: Partial<HistoryRecordIssuer>) => {\n    if (issuedBySystemService(issuer)) return false\n\n    return (issuer as User).internalId === 1\n  }\n\n  const getIssuerName = (issuer: Partial<HistoryRecordIssuer>) => {\n    switch (issuer.__typename) {\n      case 'User':\n        if (issuedBySystemUser(issuer)) return i18n.t('System')\n        return issuer.fullname\n      case 'Job':\n      case 'PostmasterFilter':\n      case 'Trigger':\n        return `${i18n.t(historyEventIssuerNames[issuer.__typename])}: ${issuer.name}`\n      case 'ObjectClass':\n        return `${i18n.t(historyEventIssuerNames[issuer.klass!])}: ${issuer.info}`\n      default:\n        return i18n.t('Unknown')\n    }\n  }\n\n  const getEventOutput = (\n    event: DeepPartial<HistoryRecordEvent>,\n  ): EventActionOutput => {\n    if (!event.action || !eventActionsLookup[kebabCase(event.action)]) {\n      throw new Error(\n        // eslint-disable-next-line zammad/zammad-detect-translatable-string\n        'Event action is missing or not found in event actions lookup!',\n      )\n    }\n\n    const module = eventActionsLookup[kebabCase(event.action)]\n\n    const actionName =\n      typeof module.actionName === 'function'\n        ? module.actionName(event)\n        : module.actionName\n\n    return {\n      component: module.component,\n      ...module.content(event),\n      actionName: kebabCase(actionName),\n    }\n  }\n\n  return {\n    getIssuerName,\n    issuedBySystemService,\n    issuedBySystemUser,\n    getEventOutput,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { i18n } from '#shared/i18n.ts'\nimport { capitalize } from '#shared/utils/formatter.ts'\n\nimport type { EventActionOutput } from '../types.ts'\n\ninterface Props {\n  event: EventActionOutput\n}\n\nconst { event } = defineProps<Props>()\n\nconst descriptionOutput = computed(() => {\n  if (event.description) return i18n.t(event.description)\n\n  return (\n    [event.entityName, event.attributeName]\n      .filter((item) => !!item)\n      .map((item) => i18n.t(item as string))\n      .join(' ') || null\n  )\n})\n</script>\n\n<template>\n  <span>\n    <CommonLabel class=\"text-gray-100 ltr:mr-1 rtl:ml-1 dark:text-neutral-400\">\n      {{ capitalize($t(event.actionName)) }}\n    </CommonLabel>\n\n    <CommonLabel\n      v-if=\"descriptionOutput\"\n      class=\"text-gray-100 dark:text-neutral-400\"\n      >{{ descriptionOutput }}</CommonLabel\n    >\n\n    <CommonLabel\n      v-if=\"event.details\"\n      class=\"cursor-text rounded bg-neutral-200 px-0.5 font-mono text-black dark:bg-gray-400 dark:text-white\"\n      :class=\"{\n        'ltr:mr-1 rtl:ml-1': event.showSeparator || event.additionalDetails,\n        'ltr:ml-1 rtl:mr-1': descriptionOutput,\n      }\"\n      >{{ event.details }}</CommonLabel\n    >\n\n    <CommonLabel\n      v-if=\"event.showSeparator && event.details && event.additionalDetails\"\n      class=\"text-gray-100 dark:text-neutral-400\"\n      :class=\"{\n        'ltr:mr-1 rtl:ml-1': event.details || event.additionalDetails,\n      }\"\n      >→</CommonLabel\n    >\n\n    <CommonLabel\n      v-if=\"event.additionalDetails\"\n      class=\"cursor-text rounded bg-neutral-200 px-0.5 font-mono text-black dark:bg-gray-400 dark:text-white\"\n      >{{ event.additionalDetails }}</CommonLabel\n    >\n  </span>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport type { HistoryRecordEvent } from '#shared/graphql/types.ts'\n\nimport { useHistoryEvents } from './composables/useHistoryEvents.ts'\nimport HistoryEventDetails from './HistoryEventDetails/HistoryEventDetails.vue'\n\ninterface Props {\n  event: HistoryRecordEvent\n}\n\nconst { event } = defineProps<Props>()\n\nconst { getEventOutput } = useHistoryEvents()\n\nconst eventDetails = getEventOutput(event)\n</script>\n\n<template>\n  <div class=\"px-2\">\n    <component\n      :is=\"eventDetails.component\"\n      v-if=\"eventDetails.component\"\n      :event=\"eventDetails\"\n    />\n    <HistoryEventDetails v-else :event=\"eventDetails\" />\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport CommonAvatar from '#shared/components/CommonAvatar/CommonAvatar.vue'\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport type { HistoryRecordIssuer, User } from '#shared/graphql/types.ts'\n\nimport { useHistoryEvents } from './composables/useHistoryEvents.ts'\n\ninterface Props {\n  issuer: HistoryRecordIssuer\n}\n\nconst { issuer } = defineProps<Props>()\n\nconst { issuedBySystemService, issuedBySystemUser, getIssuerName } =\n  useHistoryEvents()\n</script>\n\n<template>\n  <CommonLabel class=\"p-2\">\n    <CommonIcon\n      v-if=\"issuedBySystemService(issuer)\"\n      class=\"text-yellow-700 dark:text-yellow-300\"\n      name=\"play-circle\"\n      size=\"small\"\n    />\n    <!-- TODO: Link to user profile -->\n    <CommonUserAvatar\n      v-else-if=\"!issuedBySystemUser(issuer)\"\n      :entity=\"issuer as User\"\n      size=\"xs\"\n      no-indicator\n    />\n    <CommonAvatar\n      v-else-if=\"issuedBySystemUser(issuer)\"\n      icon=\"logo\"\n      class=\"dark:bg-white\"\n      size=\"xs\"\n    />\n\n    {{ getIssuerName(issuer) }}\n  </CommonLabel>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, useTemplateRef, nextTick, watch } from 'vue'\n\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\nimport type {\n  HistoryRecordEvent,\n  HistoryRecordIssuer,\n} from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n/index.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport CommonDivider from '#desktop/components/CommonDivider/CommonDivider.vue'\nimport CommonFlyout from '#desktop/components/CommonFlyout/CommonFlyout.vue'\nimport CommonLoader from '#desktop/components/CommonLoader/CommonLoader.vue'\nimport { useTicketHistoryQuery } from '#desktop/pages/ticket/graphql/queries/ticketHistory.api.ts'\n\nimport HistoryEvent from './HistoryEvent.vue'\nimport HistoryEventHeader from './HistoryEventHeader.vue'\nimport HistoryEventIssuer from './HistoryEventIssuer.vue'\n\ninterface Props {\n  ticket: TicketById\n}\n\nconst { ticket } = defineProps<Props>()\n\nconst ticketHistoryQuery = new QueryHandler(\n  useTicketHistoryQuery({\n    ticketId: ticket.id,\n  }),\n)\nconst ticketHistoryQueryResult = ticketHistoryQuery.result()\nconst ticketHistoryQueryLoading = ticketHistoryQuery.loading()\n\nconst ticketHistory = computed(() => {\n  return ticketHistoryQueryResult.value?.ticketHistory\n})\n\nconst isLoadingHistory = computed(() => {\n  // Return already true when a history result already exists from the cache, also\n  // when maybe a loading is in progress(because of cache + network).\n  if (ticketHistory.value !== undefined) return false\n\n  return ticketHistoryQueryLoading.value\n})\n\nconst historyContainerElement = useTemplateRef('history-container')\n\nwatch(\n  [historyContainerElement, ticketHistoryQueryLoading],\n  (newValue) => {\n    if (!newValue || !ticketHistoryQueryResult.value?.ticketHistory.length) {\n      return\n    }\n\n    nextTick(() => {\n      historyContainerElement.value?.scrollIntoView({\n        behavior: 'instant',\n        block: 'end',\n      })\n    })\n  },\n  { flush: 'post' },\n)\n\nwatch(\n  () => ticket,\n  () => ticketHistoryQuery.refetch(),\n)\n</script>\n\n<template>\n  <CommonFlyout\n    :header-title=\"__('Ticket History')\"\n    header-icon=\"clock-history\"\n    size=\"large\"\n    name=\"ticket-history\"\n    no-close-on-action\n    hide-footer\n  >\n    <CommonLoader :loading=\"isLoadingHistory\" no-transition>\n      <div ref=\"history-container\">\n        <div\n          v-for=\"(entry, idxAll) in ticketHistory\"\n          :key=\"`${entry.createdAt}-${idxAll}`\"\n          class=\"my-3\"\n          :class=\"{\n            'mt-0': idxAll === 0,\n          }\"\n        >\n          <HistoryEventHeader :created-at=\"entry.createdAt\" />\n\n          <div\n            v-for=\"(record, idxRecord) in entry.records\"\n            :key=\"`${'id' in record.issuer ? record.issuer.id : record.issuer.klass}-${idxRecord}`\"\n            :class=\"{\n              'rounded-b-none': idxRecord !== entry.records.length - 1,\n              'rounded-tr-none':\n                idxRecord === entry.records.length - 1 &&\n                entry.records.length > 1,\n              'border-b-0': idxRecord !== entry.records.length - 1,\n              'border-t-0':\n                idxRecord === entry.records.length - 1 &&\n                entry.records.length > 1,\n            }\"\n            class=\"rounded-lg rounded-tl-none border border-neutral-100 bg-blue-200 pb-1 dark:border-gray-700 dark:bg-gray-700\"\n          >\n            <HistoryEventIssuer\n              :issuer=\"record.issuer as HistoryRecordIssuer\"\n            />\n\n            <HistoryEvent\n              v-for=\"(event, idxEvent) in record.events\"\n              :key=\"`${event.createdAt}-${idxEvent}`\"\n              v-tooltip=\"i18n.dateTimeISO(event.createdAt)\"\n              :event=\"event as HistoryRecordEvent\"\n            />\n\n            <CommonDivider\n              v-if=\"idxRecord !== entry.records.length - 1\"\n              class=\"mt-2 px-2\"\n              alternative-background\n            />\n          </div>\n        </div>\n      </div>\n    </CommonLoader>\n  </CommonFlyout>\n</template>\n"],"names":["TicketHistoryDocument","gql","useTicketHistoryQuery","variables","options","VueApolloComposable.useQuery","eventEntityNames","getEntityFromObject","object","getEntityNameFromObject","entity","__vite_glob_0_0","event","attribute","capitalize","_a","__vite_glob_0_1","__vite_glob_0_2","actionName2Source","truncatedArticle","__props","messageCreator","emoji","actionName2Placeholder","__vite_glob_0_3","article","textTruncate","HistoryEventDetailsReaction","details","_b","__vite_glob_0_4","HistoryEventDetailsEmail","__vite_glob_0_5","HistoryEventDetailsMerge","ticket","__vite_glob_0_6","match","_c","__vite_glob_0_7","__vite_glob_0_8","__vite_glob_0_9","__vite_glob_0_10","HistoryEventDetailsTimeTriggerPerformed","validDateTime","value","isDateString","__vite_glob_0_11","attributeName","additionalDetails","displayName","needsTranslation","EnumObjectManagerObjects","objectAttributesLookup","useObjectAttributes","objectAttribute","_d","dateFormatFunction","i18n","eventActionModules","eventActions","lookup","_","module","eventActionsLookup","historyEventIssuerNames","useHistoryEvents","issuedBySystemService","issuer","issuedBySystemUser","kebabCase","actionName","descriptionOutput","computed","item","getEventOutput","eventDetails","getIssuerName","ticketHistoryQuery","QueryHandler","ticketHistoryQueryResult","ticketHistoryQueryLoading","ticketHistory","isLoadingHistory","historyContainerElement","useTemplateRef","watch","newValue","nextTick"],"mappings":"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"}