{"version":3,"file":"GuidedSetupImportSourceStart-BWkDRs4x.js","sources":["../../../../../app/frontend/apps/desktop/pages/guided-setup/graphql/mutations/systemImportStart.api.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/views/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSourceStart.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const SystemImportStartDocument = gql`\n    mutation systemImportStart {\n  systemImportStart {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useSystemImportStartMutation(options: VueApolloComposable.UseMutationOptions<Types.SystemImportStartMutation, Types.SystemImportStartMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.SystemImportStartMutation, Types.SystemImportStartMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.SystemImportStartMutation, Types.SystemImportStartMutationVariables>(SystemImportStartDocument, options);\n}\nexport type SystemImportStartMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.SystemImportStartMutation, Types.SystemImportStartMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useRouter } from 'vue-router'\n\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport GuidedSetupActionFooter from '../../../components/GuidedSetupActionFooter.vue'\nimport { guidedSetupImportSourcePluginLookup } from '../../../components/GuidedSetupImport/GuidedSetupImportSource/plugins/index.ts'\nimport { useSystemSetup } from '../../../composables/useSystemSetup.ts'\nimport { useSystemImportStartMutation } from '../../../graphql/mutations/systemImportStart.api.ts'\nimport { useSystemSetupInfoStore } from '../../../stores/systemSetupInfo.ts'\n\ndefineOptions({\n  // The import source start page is only available when \"import_backend\" already exists\n  // and the previous route was not the import from source page.\n  beforeRouteEnter(to, from) {\n    const application = useApplicationStore()\n\n    if (\n      !application.config.import_backend &&\n      from.name !== 'GuidedSetupImportSource'\n    ) {\n      return { path: `/guided-setup/import/${to.params.source}`, replace: true }\n    }\n  },\n})\n\ninterface Props {\n  source: EnumSystemImportSource\n}\n\nconst props = defineProps<Props>()\n\nconst router = useRouter()\n\nconst { setTitle } = useSystemSetup()\nconst { systemSetupUnlock } = useSystemSetupInfoStore()\n\nconst sourcePlugin = guidedSetupImportSourcePluginLookup[props.source]\n\nsetTitle(i18n.t('Start Import from %s', sourcePlugin.label))\n\nconst startImport = () => {\n  const importStartMutation = new MutationHandler(\n    useSystemImportStartMutation(),\n  )\n\n  importStartMutation\n    .send()\n    .then(() => {\n      systemSetupUnlock(() => {\n        router.push(`/guided-setup/import/${props.source}/status`)\n      })\n    })\n    .catch(() => {})\n}\n</script>\n\n<template>\n  <div class=\"mb-2.5 flex flex-col gap-3\">\n    <CommonLabel\n      >{{\n        $t(\n          'Initiate the import process to transfer your data into Zammad. Keep track of the migration progress on this page to be notified as soon as the import is successfully finished.',\n        )\n      }}\n    </CommonLabel>\n    <CommonLink\n      class=\"text-sm\"\n      :link=\"sourcePlugin.documentationURL\"\n      external\n      open-in-new-tab\n      >{{\n        $t('For additional support, consult our migration guide.')\n      }}</CommonLink\n    >\n    <div\n      v-if=\"sourcePlugin.preStartHints && sourcePlugin.preStartHints.length > 0\"\n      class=\"flex flex-col gap-1.5\"\n    >\n      <CommonLabel>\n        {{\n          $t(\n            'Before you start, make sure to check the following points to ensure a smooth migration and usage of your Zammad instance:',\n          )\n        }}\n      </CommonLabel>\n\n      <ul\n        class=\"flex list-disc flex-col gap-1.5 text-sm text-gray-100 ltr:ml-5 rtl:mr-5 dark:text-neutral-400\"\n      >\n        <li v-for=\"hint in sourcePlugin.preStartHints\" :key=\"hint\">\n          {{ $t(hint) }}\n        </li>\n      </ul>\n    </div>\n  </div>\n  <GuidedSetupActionFooter\n    :go-back-route=\"`/guided-setup/import/${source}`\"\n    :submit-button-text=\"__('Start Import')\"\n    @submit=\"startImport\"\n  />\n</template>\n"],"names":["SystemImportStartDocument","gql","ErrorsFragmentDoc","useSystemImportStartMutation","options","VueApolloComposable.useMutation","props","__props","router","useRouter","setTitle","useSystemSetup","systemSetupUnlock","useSystemSetupInfoStore","sourcePlugin","guidedSetupImportSourcePluginLookup","i18n","startImport","MutationHandler"],"mappings":"8gDAQO,MAAMA,EAA4BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASnCC,CAAiB,GACP,SAAAC,EAA6BC,EAAmQ,GAAI,CAC3S,OAAAC,EAA2GL,EAA2BI,CAAO,CACtJ,kaCeA,MAAME,EAAQC,EAERC,EAASC,IAET,CAAE,SAAAC,GAAaC,IACf,CAAE,kBAAAC,GAAsBC,IAExBC,EAAeC,EAAoCT,EAAM,MAAM,EAErEI,EAASM,EAAK,EAAE,uBAAwBF,EAAa,KAAK,CAAC,EAE3D,MAAMG,EAAc,IAAM,CACI,IAAIC,EAC9Bf,EAA6B,CAAA,EAI5B,OACA,KAAK,IAAM,CACVS,EAAkB,IAAM,CACtBJ,EAAO,KAAK,wBAAwBF,EAAM,MAAM,SAAS,CAAA,CAC1D,CAAA,CACF,EACA,MAAM,IAAM,CAAA,CAAE,CAAA"}