{"version":3,"file":"Login-BiT9rZoi.js","sources":["../../../../../app/frontend/apps/mobile/pages/authentication/components/LoginCredentialsForm.vue","../../../../../app/frontend/apps/mobile/pages/authentication/components/LoginRecoveryCode.vue","../../../../../app/frontend/apps/mobile/pages/authentication/components/LoginThirdParty.vue","../../../../../app/frontend/apps/mobile/pages/authentication/components/LoginTwoFactor.vue","../../../../../app/frontend/apps/mobile/pages/authentication/components/LoginTwoFactorMethods.vue","../../../../../app/frontend/apps/mobile/pages/authentication/views/Login.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useRouter } from 'vue-router'\n\nimport { useNotifications } from '#shared/components/CommonNotifications/index.ts'\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { useForceDesktop } from '#shared/composables/useForceDesktop.ts'\nimport type { LoginCredentials } from '#shared/entities/two-factor/types.ts'\nimport UserError from '#shared/errors/UserError.ts'\nimport { defineFormSchema } from '#shared/form/defineFormSchema.ts'\nimport type { UserLoginTwoFactorMethods } from '#shared/graphql/types.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\n\nimport { ensureAfterAuth } from '../after-auth/composable/useAfterAuthPlugins.ts'\n\nconst emit = defineEmits<{\n  error: [UserError]\n  finish: []\n  'ask-two-factor': [\n    twoFactor: Required<UserLoginTwoFactorMethods>,\n    formData: FormSubmitData<LoginCredentials>,\n  ]\n}>()\n\nconst application = useApplicationStore()\nconst { forceDesktop } = useForceDesktop()\n\nconst loginSchema = defineFormSchema([\n  {\n    isLayout: true,\n    component: 'FormGroup',\n    children: [\n      {\n        name: 'login',\n        type: 'text',\n        label: __('Username / Email'),\n        placeholder: __('Username / Email'),\n        required: true,\n      },\n    ],\n  },\n  {\n    isLayout: true,\n    component: 'FormGroup',\n    children: [\n      {\n        name: 'password',\n        label: __('Password'),\n        placeholder: __('Password'),\n        type: 'password',\n        required: true,\n      },\n    ],\n  },\n  {\n    isLayout: true,\n    element: 'div',\n    attrs: {\n      class: 'mt-2.5 flex grow items-center justify-between text-white',\n    },\n    children: [\n      {\n        type: 'checkbox',\n        name: 'rememberMe',\n        label: __('Remember me'),\n        wrapperClass: '!h-6',\n      },\n      // TODO support if/then in form-schema\n      ...(application.config.user_lost_password\n        ? [\n            {\n              isLayout: true,\n              component: 'CommonLink',\n              props: {\n                class: 'text-right text-white',\n                link: '/#password_reset',\n                onClick: forceDesktop,\n              },\n              children: __('Forgot password?'),\n            },\n          ]\n        : []),\n    ],\n  },\n])\n\nconst { form, isDisabled } = useForm()\n\nconst { clearAllNotifications } = useNotifications()\n\nconst authentication = useAuthenticationStore()\nconst router = useRouter()\n\nconst sendCredentials = (formData: FormSubmitData<LoginCredentials>) => {\n  // Clear notifications to avoid duplicated error messages.\n  clearAllNotifications()\n\n  return authentication\n    .login(formData)\n    .then(({ twoFactor, afterAuth }) => {\n      if (afterAuth) {\n        return ensureAfterAuth(router, afterAuth)\n      }\n\n      if (!twoFactor || !twoFactor.defaultTwoFactorAuthenticationMethod) {\n        emit('finish')\n      } else {\n        emit(\n          'ask-two-factor',\n          twoFactor as Required<UserLoginTwoFactorMethods>,\n          formData,\n        )\n      }\n    })\n    .catch((error: UserError) => {\n      if (error instanceof UserError) {\n        emit('error', error)\n      }\n    })\n}\n</script>\n\n<template>\n  <Form\n    id=\"signin\"\n    ref=\"form\"\n    class=\"text-left\"\n    :schema=\"loginSchema\"\n    @submit=\"sendCredentials($event as FormSubmitData<LoginCredentials>)\"\n  >\n    <template #after-fields>\n      <div\n        v-if=\"$c.user_create_account\"\n        class=\"mt-4 flex grow items-center justify-center\"\n      >\n        <span class=\"ltr:mr-1 rtl:ml-1\">{{ $t('New user?') }}</span>\n        <CommonLink\n          link=\"/#signup\"\n          class=\"!text-yellow cursor-pointer underline select-none\"\n          @click=\"forceDesktop\"\n        >\n          {{ $t('Register') }}\n        </CommonLink>\n      </div>\n      <FormKit\n        wrapper-class=\"mt-6 flex grow justify-center items-center\"\n        input-class=\"py-2 px-4 w-full h-14 text-xl rounded-xl select-none\"\n        variant=\"submit\"\n        type=\"submit\"\n        :disabled=\"isDisabled\"\n      >\n        {{ $t('Sign in') }}\n      </FormKit>\n    </template>\n  </Form>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useNotifications } from '#shared/components/CommonNotifications/index.ts'\nimport Form from '#shared/components/Form/Form.vue'\nimport type {\n  FormSubmitData,\n  FormSchemaNode,\n} from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport type {\n  LoginCredentials,\n  RecoveryCodeFormData,\n} from '#shared/entities/two-factor/types.ts'\nimport UserError from '#shared/errors/UserError.ts'\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\n\nconst props = defineProps<{\n  credentials: LoginCredentials\n}>()\n\nconst emit = defineEmits<{\n  finish: []\n  error: [UserError]\n}>()\n\nconst schema: FormSchemaNode[] = [\n  {\n    isLayout: true,\n    component: 'FormGroup',\n    props: {\n      help: __('Enter one of your unused recovery codes.'),\n    },\n    children: [\n      {\n        type: 'text',\n        name: 'code',\n        label: __('Recovery Code'),\n        required: true,\n      },\n    ],\n  },\n]\n\nconst { clearAllNotifications } = useNotifications()\nconst authentication = useAuthenticationStore()\nconst { form, isDisabled } = useForm()\n\nconst enterRecoveryCode = (formData: FormSubmitData<RecoveryCodeFormData>) => {\n  // Clear notifications to avoid duplicated error messages.\n  clearAllNotifications()\n  const { login, password, rememberMe } = props.credentials\n\n  return authentication\n    .login({\n      login,\n      password,\n      rememberMe,\n      recoveryCode: formData.code,\n    })\n    .then(() => {\n      emit('finish')\n    })\n    .catch((error: UserError) => {\n      if (error instanceof UserError) {\n        emit('error', error)\n      }\n    })\n}\n</script>\n\n<template>\n  <Form\n    ref=\"form\"\n    :schema=\"schema\"\n    @submit=\"enterRecoveryCode($event as FormSubmitData<RecoveryCodeFormData>)\"\n  >\n    <template #after-fields>\n      <FormKit\n        wrapper-class=\"mt-6 flex grow justify-center items-center\"\n        input-class=\"py-2 px-4 w-full h-14 text-xl rounded-xl select-none\"\n        variant=\"submit\"\n        type=\"submit\"\n        :disabled=\"isDisabled\"\n      >\n        {{ $t('Sign in') }}\n      </FormKit>\n    </template>\n  </Form>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport useFingerprint from '#shared/composables/useFingerprint.ts'\nimport { getCSRFToken } from '#shared/server/apollo/utils/csrfToken.ts'\nimport type { ThirdPartyAuthProvider } from '#shared/types/authentication.ts'\n\nexport interface Props {\n  providers: ThirdPartyAuthProvider[]\n}\n\nconst props = defineProps<Props>()\n\nconst csrfToken = getCSRFToken()\n\nconst { fingerprint } = useFingerprint()\n</script>\n\n<template>\n  <section class=\"mt-4 mb-16 w-full max-w-md\" data-test-id=\"loginThirdParty\">\n    <p class=\"p-3 text-center\">\n      {{\n        $c.user_show_password_login\n          ? $t('Or sign in using')\n          : $t('Sign in using')\n      }}\n    </p>\n    <div class=\"-m-2 flex flex-wrap p-1\">\n      <form\n        v-for=\"provider of props.providers\"\n        :key=\"provider.name\"\n        class=\"flex min-w-1/2 grow\"\n        method=\"post\"\n        :action=\"`${provider.url}?fingerprint=${fingerprint}`\"\n      >\n        <input type=\"hidden\" name=\"authenticity_token\" :value=\"csrfToken\" />\n        <button\n          class=\"m-1 flex h-14 w-full cursor-pointer items-center justify-center rounded-xl bg-gray-600 px-4 py-2 text-white select-none\"\n        >\n          <CommonIcon\n            :name=\"provider.icon\"\n            size=\"base\"\n            decorative\n            class=\"shrink-0 ltr:mr-2.5 rtl:ml-2.5\"\n          />\n          <span class=\"truncate text-xl leading-7\">\n            {{ $t(provider.label) }}\n          </span>\n        </button>\n      </form>\n    </div>\n  </section>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\n\nimport { useNotifications } from '#shared/components/CommonNotifications/useNotifications.ts'\nimport Form from '#shared/components/Form/Form.vue'\nimport type {\n  FormSubmitData,\n  FormSchemaNode,\n} from '#shared/components/Form/types.ts'\nimport type {\n  TwoFactorLoginFormData,\n  TwoFactorPlugin,\n  LoginCredentials,\n} from '#shared/entities/two-factor/types.ts'\nimport UserError from '#shared/errors/UserError.ts'\nimport { useTwoFactorMethodInitiateAuthenticationMutation } from '#shared/graphql/mutations/twoFactorMethodInitiateAuthentication.api.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\n\nimport CommonButton from '#mobile/components/CommonButton/CommonButton.vue'\nimport CommonLoader from '#mobile/components/CommonLoader/CommonLoader.vue'\n\nexport interface Props {\n  credentials: LoginCredentials\n  twoFactor: TwoFactorPlugin\n}\n\nconst props = defineProps<Props>()\n\nconst emit = defineEmits<{\n  finish: []\n  error: [UserError]\n}>()\n\nconst twoFactorLoginOptions = computed(() => props.twoFactor.loginOptions)\n\nconst schema: FormSchemaNode[] = [\n  {\n    isLayout: true,\n    component: 'FormGroup',\n    props: {\n      help: computed(() => twoFactorLoginOptions.value.helpMessage),\n    },\n    children: [\n      {\n        type: 'text',\n        name: 'code',\n        label: __('Security Code'),\n        required: true,\n        props: {\n          autocomplete: 'one-time-code',\n          autofocus: true,\n          inputmode: 'numeric',\n          pattern: '[0-9]*',\n        },\n      },\n    ],\n  },\n]\n\nconst { clearAllNotifications } = useNotifications()\nconst authentication = useAuthenticationStore()\n\nconst loading = ref(false)\nconst error = ref<string | null>(null)\nconst canRetry = ref(true)\n\nconst login = (payload: unknown) => {\n  clearAllNotifications()\n  const { login, password, rememberMe } = props.credentials\n\n  return authentication\n    .login({\n      login,\n      password,\n      rememberMe,\n      twoFactorAuthentication: {\n        payload,\n        method: props.twoFactor.name,\n      },\n    })\n    .then(() => {\n      canRetry.value = false\n      emit('finish')\n    })\n    .catch((error: UserError) => {\n      if (error instanceof UserError) {\n        emit('error', error)\n      }\n    })\n}\n\nconst tryMethod = async () => {\n  if (!twoFactorLoginOptions.value.setup) return\n\n  const initialDataMutation = new MutationHandler(\n    useTwoFactorMethodInitiateAuthenticationMutation(),\n  )\n\n  error.value = null\n  loading.value = true\n  try {\n    const initiated = await initialDataMutation.send({\n      twoFactorMethod: props.twoFactor.name,\n      password: props.credentials.password,\n      login: props.credentials.login,\n    })\n    if (!initiated?.twoFactorMethodInitiateAuthentication?.initiationData) {\n      error.value = __(\n        'Two-factor authentication method could not be initiated.',\n      )\n      return\n    }\n    const result = await twoFactorLoginOptions.value.setup(\n      initiated.twoFactorMethodInitiateAuthentication.initiationData,\n    )\n    canRetry.value = result.retry ?? true\n    if (result?.success) {\n      await login(result.payload)\n    } else if (result?.error) {\n      error.value = result.error\n    }\n  } catch (err) {\n    if (err instanceof UserError) {\n      error.value = err.errors[0].message\n    }\n  } finally {\n    loading.value = false\n  }\n}\n\nonMounted(async () => {\n  await tryMethod()\n})\n</script>\n\n<template>\n  <Form\n    v-if=\"twoFactorLoginOptions.form !== false\"\n    :schema=\"schema\"\n    @submit=\"login(($event as FormSubmitData<TwoFactorLoginFormData>).code)\"\n  >\n    <template #after-fields>\n      <FormKit\n        wrapper-class=\"mt-6 flex grow justify-center items-center\"\n        input-class=\"py-2 px-4 w-full h-14 text-xl rounded-xl select-none\"\n        variant=\"submit\"\n        type=\"submit\"\n      >\n        {{ $t('Sign in') }}\n      </FormKit>\n    </template>\n  </Form>\n  <section\n    v-else-if=\"twoFactorLoginOptions.setup\"\n    class=\"flex flex-col items-center justify-center\"\n  >\n    <CommonLoader :loading=\"loading\" :error=\"error\" />\n\n    <div class=\"text-gray pt-2 pb-2 leading-4 font-medium\">\n      <template v-if=\"error && twoFactorLoginOptions.errorHelpMessage\">\n        {{ $t(twoFactorLoginOptions.errorHelpMessage) }}\n      </template>\n      <template v-else-if=\"twoFactorLoginOptions.helpMessage\">\n        {{ $t(twoFactorLoginOptions.helpMessage) }}\n      </template>\n    </div>\n\n    <CommonButton\n      v-if=\"!loading && canRetry\"\n      variant=\"primary\"\n      class=\"mt-3 px-5 py-2 text-base\"\n      @click=\"tryMethod\"\n    >\n      {{ $t('Retry') }}\n    </CommonButton>\n  </section>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport type { TwoFactorPlugin } from '#shared/entities/two-factor/types.ts'\nimport type { EnumTwoFactorAuthenticationMethod } from '#shared/graphql/types.ts'\n\nimport CommonSectionMenu from '#mobile/components/CommonSectionMenu/CommonSectionMenu.vue'\nimport CommonSectionMenuLink from '#mobile/components/CommonSectionMenu/CommonSectionMenuLink.vue'\n\ndefineProps<{\n  methods: TwoFactorPlugin[]\n  recoveryCodesAvailable: boolean\n}>()\n\nconst emit = defineEmits<{\n  select: [twoFactorMethod: EnumTwoFactorAuthenticationMethod]\n  'use-recovery-code': []\n}>()\n</script>\n\n<template>\n  <CommonSectionMenu>\n    <CommonSectionMenuLink\n      v-for=\"method of methods\"\n      :key=\"method.name\"\n      :label=\"method.label\"\n      :icon=\"method.icon\"\n      @click=\"emit('select', method.name)\"\n    />\n  </CommonSectionMenu>\n  <button\n    v-if=\"recoveryCodesAvailable\"\n    class=\"text-gray mb-6 w-full max-w-md text-center font-semibold\"\n    @click=\"emit('use-recovery-code')\"\n  >\n    {{ $t('Or use one of your recovery codes.') }}\n  </button>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nimport {\n  useNotifications,\n  NotificationTypes,\n} from '#shared/components/CommonNotifications/index.ts'\nimport useLoginTwoFactor from '#shared/composables/authentication/useLoginTwoFactor.ts'\nimport { useThirdPartyAuthentication } from '#shared/composables/authentication/useThirdPartyAuthentication.ts'\nimport { useForceDesktop } from '#shared/composables/useForceDesktop.ts'\nimport { usePublicLinks } from '#shared/composables/usePublicLinks.ts'\nimport type UserError from '#shared/errors/UserError.ts'\nimport { EnumPublicLinksScreen } from '#shared/graphql/types.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport LoginCredentialsForm from '../components/LoginCredentialsForm.vue'\nimport LoginFooter from '../components/LoginFooter.vue'\nimport LoginHeader from '../components/LoginHeader.vue'\nimport LoginRecoveryCode from '../components/LoginRecoveryCode.vue'\nimport LoginThirdParty from '../components/LoginThirdParty.vue'\nimport LoginTwoFactor from '../components/LoginTwoFactor.vue'\nimport LoginTwoFactorMethods from '../components/LoginTwoFactorMethods.vue'\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst { notify, clearAllNotifications } = useNotifications()\n\n// Output a hint when the session is no longer valid.\n// This could happen because the session was deleted on the server.\nif (route.query.invalidatedSession === '1') {\n  notify({\n    id: 'invalid-session',\n    message: __('The session is no longer valid. Please log in again.'),\n    type: NotificationTypes.Warn,\n  })\n\n  router.replace({ name: 'Login' })\n}\n\nconst {\n  loginFlow,\n  askTwoFactor,\n  twoFactorPlugin,\n  twoFactorAllowedMethods,\n  updateState,\n  updateSecondFactor,\n  hasAlternativeLoginMethod,\n  goBack,\n  statePreviousMap,\n  loginPageTitle,\n} = useLoginTwoFactor(clearAllNotifications)\n\nconst application = useApplicationStore()\n\nconst { links } = usePublicLinks(EnumPublicLinksScreen.Login)\n\nconst { enabledProviders, hasEnabledProviders } = useThirdPartyAuthentication()\n\nconst showPasswordLogin = computed(\n  () =>\n    application.config.user_show_password_login || !hasEnabledProviders.value,\n)\n\nconst { forceDesktop } = useForceDesktop()\n\nconst finishLogin = () => {\n  const { redirect: redirectUrl } = route.query\n  if (typeof redirectUrl === 'string') {\n    router.replace(redirectUrl)\n  } else {\n    router.replace('/')\n  }\n}\n\nconst showError = (error: UserError) => {\n  notify({\n    id: 'login-error',\n    message: error.generalErrors[0],\n    type: NotificationTypes.Error,\n  })\n}\n</script>\n\n<template>\n  <div class=\"flex h-full min-h-screen flex-col items-center px-6 pt-6 pb-4\">\n    <div v-if=\"statePreviousMap[loginFlow.state]\" class=\"flex w-full\">\n      <button\n        class=\"cursor-pointer\"\n        :aria-label=\"__('Go back')\"\n        @click=\"goBack\"\n      >\n        <CommonIcon name=\"chevron-left\" decorative />\n      </button>\n    </div>\n    <main class=\"m-auto w-full max-w-md\">\n      <div class=\"flex grow flex-col justify-center\">\n        <div class=\"my-5 grow\">\n          <LoginHeader :title=\"loginPageTitle\" />\n          <LoginCredentialsForm\n            v-if=\"loginFlow.state === 'credentials' && showPasswordLogin\"\n            @ask-two-factor=\"askTwoFactor\"\n            @error=\"showError\"\n            @finish=\"finishLogin\"\n          />\n          <LoginTwoFactor\n            v-else-if=\"\n              loginFlow.state === '2fa' &&\n              twoFactorPlugin &&\n              loginFlow.credentials\n            \"\n            :credentials=\"loginFlow.credentials\"\n            :two-factor=\"twoFactorPlugin\"\n            @error=\"showError\"\n            @finish=\"finishLogin\"\n          />\n          <LoginRecoveryCode\n            v-else-if=\"\n              loginFlow.state === 'recovery-code' && loginFlow.credentials\n            \"\n            :credentials=\"loginFlow.credentials\"\n            @error=\"showError\"\n            @finish=\"finishLogin\"\n          />\n          <LoginTwoFactorMethods\n            v-else-if=\"loginFlow.state === '2fa-select'\"\n            :methods=\"twoFactorAllowedMethods\"\n            :recovery-codes-available=\"loginFlow.recoveryCodesAvailable\"\n            @select=\"updateSecondFactor\"\n            @use-recovery-code=\"updateState('recovery-code')\"\n          />\n        </div>\n      </div>\n      <section\n        v-if=\"\n          (loginFlow.state === '2fa' || loginFlow.state === 'recovery-code') &&\n          hasAlternativeLoginMethod\n        \"\n        class=\"text-center\"\n      >\n        {{ $t('Having problems?') }}\n        <button\n          class=\"text-gray cursor-pointer pb-2 leading-4 font-semibold\"\n          @click.prevent=\"updateState('2fa-select')\"\n        >\n          {{ $t('Try another method') }}\n        </button>\n      </section>\n    </main>\n    <LoginThirdParty\n      v-if=\"hasEnabledProviders && loginFlow.state === 'credentials'\"\n      :providers=\"enabledProviders\"\n    />\n    <section v-if=\"!showPasswordLogin\" class=\"mb-6 w-full max-w-md text-center\">\n      <p>\n        {{\n          $t(\n            'If you have problems with the third-party login you can request a one-time password login as an admin.',\n          )\n        }}\n      </p>\n      <CommonLink\n        link=\"/#admin_password_auth\"\n        class=\"text-gray font-semibold\"\n        @click=\"forceDesktop\"\n      >\n        {{ $t('Request the password login here.') }}\n      </CommonLink>\n    </section>\n    <div\n      v-if=\"loginFlow.state !== 'credentials' && !hasAlternativeLoginMethod\"\n      class=\"text-gray pb-2 leading-4 font-medium\"\n    >\n      {{ $t('Contact the administrator if you have any problems logging in.') }}\n    </div>\n    <CommonLink\n      link=\"/#login\"\n      class=\"text-gray leading-4 font-medium\"\n      @click=\"forceDesktop\"\n    >\n      {{ $t('Continue to desktop') }}\n    </CommonLink>\n    <nav\n      v-if=\"links.length\"\n      class=\"mt-4 flex w-full max-w-md flex-wrap items-center justify-center gap-1\"\n    >\n      <template v-for=\"link in links\" :key=\"link.id\">\n        <CommonLink\n          :link=\"link.link\"\n          :title=\"link.description\"\n          :open-in-new-tab=\"link.newTab\"\n          class=\"text-gray leading-4 font-semibold tracking-wide after:ml-1 after:font-medium after:text-gray-200 after:content-['|'] last:after:content-none\"\n        >\n          {{ $t(link.title) }}\n        </CommonLink>\n      </template>\n    </nav>\n    <LoginFooter />\n  </div>\n</template>\n"],"names":["emit","__emit","application","useApplicationStore","forceDesktop","useForceDesktop","loginSchema","defineFormSchema","form","isDisabled","useForm","clearAllNotifications","useNotifications","authentication","useAuthenticationStore","router","useRouter","sendCredentials","formData","twoFactor","afterAuth","ensureAfterAuth","error","UserError","props","__props","schema","enterRecoveryCode","login","password","rememberMe","csrfToken","getCSRFToken","fingerprint","useFingerprint","twoFactorLoginOptions","computed","loading","ref","canRetry","payload","tryMethod","initialDataMutation","MutationHandler","useTwoFactorMethodInitiateAuthenticationMutation","initiated","_a","result","err","onMounted","route","useRoute","notify","NotificationTypes","loginFlow","askTwoFactor","twoFactorPlugin","twoFactorAllowedMethods","updateState","updateSecondFactor","hasAlternativeLoginMethod","goBack","statePreviousMap","loginPageTitle","useLoginTwoFactor","links","usePublicLinks","EnumPublicLinksScreen","enabledProviders","hasEnabledProviders","useThirdPartyAuthentication","showPasswordLogin","finishLogin","redirectUrl","showError"],"mappings":"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"}