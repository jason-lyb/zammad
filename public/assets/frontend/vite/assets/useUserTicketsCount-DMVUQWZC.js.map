{"version":3,"file":"useUserTicketsCount-DMVUQWZC.js","sources":["../../../../../app/frontend/apps/mobile/components/CommonOrganizationsList/CommonOrganizationsList.vue","../../../../../app/frontend/apps/mobile/pages/user/graphql/mutations/update.api.ts","../../../../../app/frontend/apps/mobile/entities/user/composables/useUserEdit.ts","../../../../../app/frontend/apps/mobile/entities/user/composables/useUserTicketsCount.ts"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport CommonOrganizationAvatar from '#shared/components/CommonOrganizationAvatar/CommonOrganizationAvatar.vue'\nimport type { AvatarOrganization } from '#shared/components/CommonOrganizationAvatar/index.ts'\n\nimport CommonSectionMenu from '../CommonSectionMenu/CommonSectionMenu.vue'\nimport CommonShowMoreButton from '../CommonShowMoreButton/CommonShowMoreButton.vue'\n\ninterface Props {\n  organizations: (AvatarOrganization & { id: string; internalId: number })[]\n  totalCount: number\n  disableShowMore?: boolean\n  label?: string\n}\n\nwithDefaults(defineProps<Props>(), {\n  disableShowMore: false,\n})\n\nconst emit = defineEmits<{\n  'show-more': []\n}>()\n</script>\n\n<template>\n  <CommonSectionMenu v-if=\"organizations.length\" :header-label=\"label\">\n    <CommonLink\n      v-for=\"organization of organizations\"\n      :key=\"organization.id\"\n      :link=\"`/organizations/${organization.internalId}`\"\n      class=\"flex min-h-[66px] items-center\"\n    >\n      <CommonOrganizationAvatar\n        :entity=\"organization\"\n        class=\"ltr:mr-3 rtl:ml-3\"\n      />\n      <span class=\"truncate\">\n        {{ organization.name }}\n      </span>\n    </CommonLink>\n    <CommonShowMoreButton\n      :entities=\"organizations\"\n      :disabled=\"disableShowMore\"\n      :total-count=\"totalCount\"\n      @click=\"emit('show-more')\"\n    />\n  </CommonSectionMenu>\n</template>\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { UserAttributesFragmentDoc } from '../../../../../../shared/graphql/fragments/userAttributes.api';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserUpdateDocument = gql`\n    mutation userUpdate($id: ID!, $input: UserInput!) {\n  userUpdate(id: $id, input: $input) {\n    user {\n      ...userAttributes\n    }\n    errors {\n      ...errors\n    }\n  }\n}\n    ${UserAttributesFragmentDoc}\n${ErrorsFragmentDoc}`;\nexport function useUserUpdateMutation(options: VueApolloComposable.UseMutationOptions<Types.UserUpdateMutation, Types.UserUpdateMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.UserUpdateMutation, Types.UserUpdateMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.UserUpdateMutation, Types.UserUpdateMutationVariables>(UserUpdateDocument, options);\n}\nexport type UserUpdateMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.UserUpdateMutation, Types.UserUpdateMutationVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { FormSchemaField } from '#shared/components/Form/types.ts'\nimport { defineFormSchema } from '#shared/form/defineFormSchema.ts'\nimport type { UserQuery } from '#shared/graphql/types.ts'\nimport {\n  EnumFormUpdaterId,\n  EnumObjectManagerObjects,\n} from '#shared/graphql/types.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport type { ConfidentTake } from '#shared/types/utils.ts'\n\nimport { useDialogObjectForm } from '#mobile/components/CommonDialogObjectForm/useDialogObjectForm.ts'\nimport { useUserUpdateMutation } from '#mobile/pages/user/graphql/mutations/update.api.ts'\n\nexport const useUserEdit = () => {\n  const dialog = useDialogObjectForm('user-edit', EnumObjectManagerObjects.User)\n\n  const schema = defineFormSchema(\n    [\n      {\n        screen: 'edit',\n        object: EnumObjectManagerObjects.User,\n      },\n      {\n        name: 'active',\n        required: true,\n        screen: 'edit',\n        object: EnumObjectManagerObjects.User,\n      },\n    ],\n    { showDirtyMark: true },\n  )\n\n  const application = useApplicationStore()\n\n  const openEditUserDialog = async (user: ConfidentTake<UserQuery, 'user'>) => {\n    const formChangeFields: Record<string, Partial<FormSchemaField>> = {\n      note: {\n        props: {\n          meta: {\n            mentionText: {\n              disabled: true,\n            },\n            mentionKnowledgeBase: {\n              disabled: true,\n            },\n            mentionUser: {\n              disabled: true,\n            },\n          },\n        },\n      },\n      organization_id: {\n        helpClass: '',\n      },\n    }\n\n    dialog.openDialog({\n      object: user,\n      mutation: useUserUpdateMutation,\n      schema,\n      formChangeFields,\n      onChangedField: (fieldName, newValue) => {\n        if (\n          fieldName === 'organization_id' &&\n          application.config.ticket_organization_reassignment\n        ) {\n          formChangeFields.organization_id ||= {}\n\n          let msg = __(\n            \"Attention! Changing the organization will update the user's most recent tickets to the new organization.\",\n          )\n          let helpClass = 'text-yellow'\n\n          if (user.organization?.internalId === newValue) {\n            msg = ''\n            helpClass = ''\n          }\n\n          formChangeFields.organization_id.help = msg\n          formChangeFields.organization_id.helpClass = helpClass\n        }\n      },\n      formUpdaterId: EnumFormUpdaterId.FormUpdaterUpdaterUserEdit,\n      errorNotificationMessage: __('User could not be updated.'),\n    })\n  }\n\n  return { openEditUserDialog }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketCount } from '#shared/graphql/types.ts'\n\ninterface RequiredUser {\n  id: string\n  internalId: number\n  ticketsCount?: Maybe<TicketCount>\n}\n\nexport const useUsersTicketsCount = () => {\n  const getTicketData = (user?: Maybe<RequiredUser>) => {\n    if (!user || !user.ticketsCount) return null\n    return {\n      count: user.ticketsCount,\n      createLabel: __('Create new ticket for this user'),\n      createLink: `/tickets/create?customer_id=${user.internalId}`,\n      query: `customer.id: ${user.internalId}`,\n    }\n  }\n\n  return { getTicketData }\n}\n"],"names":["emit","__emit","UserUpdateDocument","gql","UserAttributesFragmentDoc","ErrorsFragmentDoc","useUserUpdateMutation","options","VueApolloComposable.useMutation","useUserEdit","dialog","useDialogObjectForm","EnumObjectManagerObjects","schema","defineFormSchema","application","useApplicationStore","user","formChangeFields","fieldName","newValue","msg","helpClass","_a","EnumFormUpdaterId","useUsersTicketsCount"],"mappings":"kpBAoBA,MAAMA,EAAOC,ylBCXAC,EAAqBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW5BC,CAAyB;AAAA,EAC7BC,CAAiB,GACH,SAAAC,EAAsBC,EAAuO,GAAI,CACxQ,OAAAC,EAA6FN,EAAoBK,CAAO,CACjI,CCTO,MAAME,EAAc,IAAM,CAC/B,MAAMC,EAASC,EAAoB,YAAaC,EAAyB,IAAI,EAEvEC,EAASC,EACb,CACE,CACE,OAAQ,OACR,OAAQF,EAAyB,IACnC,EACA,CACE,KAAM,SACN,SAAU,GACV,OAAQ,OACR,OAAQA,EAAyB,IACnC,CACF,EACA,CAAE,cAAe,EAAK,CAAA,EAGlBG,EAAcC,IAuDpB,MAAO,CAAE,mBArDkB,MAAOC,GAA2C,CAC3E,MAAMC,EAA6D,CACjE,KAAM,CACJ,MAAO,CACL,KAAM,CACJ,YAAa,CACX,SAAU,EACZ,EACA,qBAAsB,CACpB,SAAU,EACZ,EACA,YAAa,CACX,SAAU,EACZ,CACF,CACF,CACF,EACA,gBAAiB,CACf,UAAW,EACb,CAAA,EAGFR,EAAO,WAAW,CAChB,OAAQO,EACR,SAAUX,EACV,OAAAO,EACA,iBAAAK,EACA,eAAgB,CAACC,EAAWC,IAAa,OACvC,GACED,IAAc,mBACdJ,EAAY,OAAO,iCACnB,CACiBG,EAAA,kBAAjBA,EAAiB,gBAAoB,CAAC,GAEtC,IAAIG,EAAM,GACR,0GAAA,EAEEC,EAAY,gBAEZC,EAAAN,EAAK,eAAL,YAAAM,EAAmB,cAAeH,IAC9BC,EAAA,GACMC,EAAA,IAGdJ,EAAiB,gBAAgB,KAAOG,EACxCH,EAAiB,gBAAgB,UAAYI,CAC/C,CACF,EACA,cAAeE,EAAkB,2BACjC,yBAA0B,GAAG,4BAA4B,CAAA,CAC1D,CAAA,CAGyB,CAC9B,EChFaC,EAAuB,KAW3B,CAAE,cAVcR,GACjB,CAACA,GAAQ,CAACA,EAAK,aAAqB,KACjC,CACL,MAAOA,EAAK,aACZ,YAAa,GAAG,iCAAiC,EACjD,WAAY,+BAA+BA,EAAK,UAAU,GAC1D,MAAO,gBAAgBA,EAAK,UAAU,EAAA,CAInB"}