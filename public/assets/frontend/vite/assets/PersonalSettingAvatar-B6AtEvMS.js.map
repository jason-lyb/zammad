{"version":3,"file":"PersonalSettingAvatar-B6AtEvMS.js","sources":["../../../../../app/frontend/apps/mobile/pages/account/graphql/queries/userCurrentAvatarActive.api.ts","../../../../../app/frontend/apps/mobile/pages/account/views/PersonalSettingAvatar.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserCurrentAvatarActiveDocument = gql`\n    query userCurrentAvatarActive {\n  userCurrentAvatarActive {\n    id\n    default\n    deletable\n    initial\n    imageFull\n    imageResize\n    createdAt\n    updatedAt\n  }\n}\n    `;\nexport function useUserCurrentAvatarActiveQuery(options: VueApolloComposable.UseQueryOptions<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables>(UserCurrentAvatarActiveDocument, {}, options);\n}\nexport function useUserCurrentAvatarActiveLazyQuery(options: VueApolloComposable.UseQueryOptions<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables>(UserCurrentAvatarActiveDocument, {}, options);\n}\nexport type UserCurrentAvatarActiveQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.UserCurrentAvatarActiveQuery, Types.UserCurrentAvatarActiveQueryVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { reactive, shallowRef, watch, ref, computed } from 'vue'\nimport { Cropper, type CropperResult } from 'vue-advanced-cropper'\nimport { useRouter } from 'vue-router'\nimport 'vue-advanced-cropper/dist/style.css'\n\nimport CommonAvatar from '#shared/components/CommonAvatar/CommonAvatar.vue'\nimport {\n  useNotifications,\n  NotificationTypes,\n} from '#shared/components/CommonNotifications/index.ts'\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport { useUserCurrentAvatarAddMutation } from '#shared/entities/user/current/graphql/mutations/userCurrentAvatarAdd.api.ts'\nimport { useUserCurrentAvatarDeleteMutation } from '#shared/entities/user/current/graphql/mutations/userCurrentAvatarDelete.api.ts'\nimport type UserError from '#shared/errors/UserError.ts'\nimport type { UserCurrentAvatarActiveQuery } from '#shared/graphql/types.ts'\nimport {\n  MutationHandler,\n  QueryHandler,\n} from '#shared/server/apollo/handler/index.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\nimport type { ImageFileData } from '#shared/utils/files.ts'\nimport {\n  convertFileList,\n  allowedImageTypesString,\n} from '#shared/utils/files.ts'\n\nimport CommonButton from '#mobile/components/CommonButton/CommonButton.vue'\nimport CommonButtonGroup from '#mobile/components/CommonButtonGroup/CommonButtonGroup.vue'\nimport type { CommonButtonOption } from '#mobile/components/CommonButtonGroup/types.ts'\nimport CommonLoader from '#mobile/components/CommonLoader/CommonLoader.vue'\nimport { useHeader } from '#mobile/composables/useHeader.ts'\n\nimport { useUserCurrentAvatarActiveQuery } from '../graphql/queries/userCurrentAvatarActive.api.ts'\n\nconst router = useRouter()\n\nconst fileCameraInput = shallowRef<HTMLInputElement>()\nconst fileGalleryInput = shallowRef<HTMLInputElement>()\nconst avatarImage = shallowRef<ImageFileData>()\n\nconst activeAvatarQuery = new QueryHandler(useUserCurrentAvatarActiveQuery(), {\n  errorNotificationMessage: __('The avatar could not be fetched.'),\n})\nconst activeAvatar =\n  ref<UserCurrentAvatarActiveQuery['userCurrentAvatarActive']>()\n\nactiveAvatarQuery.watchOnResult((data) => {\n  activeAvatar.value = data?.userCurrentAvatarActive\n})\n\nconst avatarLoading = activeAvatarQuery.loading()\n\nconst state = reactive({\n  resizedImage: activeAvatar.value?.imageResize || '',\n})\n\nwatch(activeAvatar, (newValue) => {\n  state.resizedImage = newValue?.imageResize || ''\n})\n\nconst { user } = storeToRefs(useSessionStore())\n\nconst avatarDeleteDisabled = computed(() => {\n  return !activeAvatar.value?.deletable\n})\n\nconst addAvatar = () => {\n  if (!state.resizedImage) return\n  if (!avatarImage.value) return\n\n  const addAvatarMutation = new MutationHandler(\n    useUserCurrentAvatarAddMutation({\n      variables: {\n        images: {\n          original: avatarImage.value,\n          resized: {\n            name: 'resized_avatar.png',\n            type: 'image/png',\n            content: state.resizedImage,\n          },\n        },\n      },\n    }),\n    {\n      errorNotificationMessage: __('The avatar could not be uploaded.'),\n    },\n  )\n\n  const { notify, clearAllNotifications } = useNotifications()\n\n  // Clear notifications to avoid duplicated error messages.\n  clearAllNotifications()\n\n  addAvatarMutation\n    .send()\n    .then((data) => {\n      if (data?.userCurrentAvatarAdd?.avatar) {\n        activeAvatar.value = data.userCurrentAvatarAdd.avatar\n        avatarImage.value = undefined\n\n        if (user.value) {\n          user.value.image = data.userCurrentAvatarAdd.avatar.imageHash\n        }\n      }\n    })\n    .catch((errors: UserError) => {\n      notify({\n        id: 'avatar-add-error',\n        message: errors.generalErrors[0],\n        type: NotificationTypes.Error,\n      })\n    })\n}\n\nconst canRemoveAvatar = () => {\n  if (!user.value) return false\n  if (!activeAvatar.value?.id) return false\n  if (!activeAvatar.value?.deletable) return false\n\n  return true\n}\n\nconst removeAvatar = () => {\n  if (!canRemoveAvatar()) return\n  if (!activeAvatar.value?.id) return\n\n  const removeAvatarMutation = new MutationHandler(\n    useUserCurrentAvatarDeleteMutation({\n      variables: { id: activeAvatar.value.id },\n    }),\n    {\n      errorNotificationMessage: __('The avatar could not be deleted.'),\n    },\n  )\n\n  removeAvatarMutation.send().then((data) => {\n    if (data?.userCurrentAvatarDelete?.success) {\n      state.resizedImage = ''\n      avatarImage.value = undefined\n      activeAvatar.value = undefined\n\n      // reset image value in user store\n      if (user.value) {\n        user.value.image = undefined\n      }\n    }\n  })\n}\nconst { waitForConfirmation } = useConfirmation()\n\nconst confirmRemoveAvatar = async () => {\n  if (!canRemoveAvatar()) return\n\n  const confirmed = await waitForConfirmation(\n    __('Do you really want to delete your current avatar?'),\n    {\n      buttonLabel: __('Delete avatar'),\n      buttonVariant: 'danger',\n    },\n  )\n  if (confirmed) removeAvatar()\n}\n\nconst saveButtonActive = computed(() => {\n  if (state.resizedImage && avatarImage.value) return true\n  return false\n})\n\nuseHeader({\n  title: __('Avatar'),\n  backUrl: '/account',\n  actionTitle: __('Done'),\n  backIgnore: ['/user/current/avatar'],\n  refetch: computed(\n    () => avatarLoading.value && !!activeAvatarQuery.result().value,\n  ),\n  onAction() {\n    router.push('/account')\n  },\n})\n\nconst loadAvatar = async (input?: HTMLInputElement) => {\n  const files = input?.files\n  if (!files) return\n  const [avatar] = await convertFileList(files)\n  avatarImage.value = avatar\n\n  // Reset input value to allow selecting the same file again\n  input.value = ''\n}\n\nconst imageCropped = (crop: CropperResult) => {\n  if (!crop.canvas) return\n  state.resizedImage = crop.canvas.toDataURL('image/png')\n}\n\nconst cancelCropping = () => {\n  avatarImage.value = undefined\n  state.resizedImage = activeAvatar.value?.imageResize || ''\n}\n\nconst actions = computed<CommonButtonOption[]>(() => [\n  {\n    label: __('Library'),\n    icon: 'photos',\n    value: 'library',\n    onAction: () => fileGalleryInput.value?.click(),\n  },\n  {\n    label: __('Camera'),\n    icon: 'camera',\n    value: 'camera',\n    onAction: () => fileCameraInput.value?.click(),\n  },\n  {\n    label: __('Delete'),\n    icon: 'delete',\n    value: 'delete',\n    disabled: avatarDeleteDisabled.value,\n    class: 'bg-red-dark !text-red-bright',\n    onAction: confirmRemoveAvatar,\n  },\n])\n</script>\n\n<template>\n  <div v-if=\"user\" class=\"px-4\">\n    <div class=\"flex flex-col items-center py-6\">\n      <CommonLoader\n        :loading=\"avatarLoading && !activeAvatarQuery.result().value\"\n      >\n        <CommonAvatar\n          v-if=\"state.resizedImage\"\n          :image=\"state.resizedImage\"\n          size=\"xl\"\n        />\n        <CommonUserAvatar v-else :entity=\"user\" size=\"xl\" personal />\n        <CommonButtonGroup class=\"mt-6\" mode=\"full\" :options=\"actions\" />\n      </CommonLoader>\n\n      <input\n        ref=\"fileGalleryInput\"\n        data-test-id=\"fileGalleryInput\"\n        type=\"file\"\n        class=\"hidden\"\n        aria-hidden=\"true\"\n        :accept=\"allowedImageTypesString()\"\n        @change=\"loadAvatar(fileGalleryInput)\"\n      />\n\n      <input\n        ref=\"fileCameraInput\"\n        data-test-id=\"fileCameraInput\"\n        type=\"file\"\n        class=\"hidden\"\n        aria-hidden=\"true\"\n        :accept=\"allowedImageTypesString()\"\n        capture=\"user\"\n        @change=\"loadAvatar(fileCameraInput)\"\n      />\n\n      <div\n        v-if=\"avatarImage\"\n        class=\"flex w-full flex-col items-center justify-center\"\n      >\n        <Cropper\n          class=\"mt-4 mb-4 !max-h-[250px] !max-w-[400px]\"\n          :src=\"avatarImage.content\"\n          :stencil-props=\"{\n            aspectRatio: 1,\n          }\"\n          :transitions=\"false\"\n          background-class=\"!bg-black\"\n          foreground-class=\"!bg-black\"\n          @change=\"imageCropped\"\n        />\n        <div class=\"flex w-full gap-2\">\n          <CommonButton class=\"h-10 flex-1\" @click=\"cancelCropping\">\n            {{ $t('Cancel') }}\n          </CommonButton>\n          <CommonButton\n            variant=\"primary\"\n            :disabled=\"!saveButtonActive\"\n            class=\"h-10 flex-1\"\n            @click=\"addAvatar\"\n          >\n            {{ $t('Save') }}\n          </CommonButton>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"],"names":["UserCurrentAvatarActiveDocument","gql","useUserCurrentAvatarActiveQuery","options","VueApolloComposable.useQuery","router","useRouter","fileCameraInput","shallowRef","fileGalleryInput","avatarImage","activeAvatarQuery","QueryHandler","activeAvatar","ref","data","avatarLoading","state","reactive","_a","watch","newValue","user","storeToRefs","useSessionStore","avatarDeleteDisabled","computed","addAvatar","addAvatarMutation","MutationHandler","useUserCurrentAvatarAddMutation","notify","clearAllNotifications","useNotifications","errors","NotificationTypes","canRemoveAvatar","_b","removeAvatar","useUserCurrentAvatarDeleteMutation","waitForConfirmation","useConfirmation","confirmRemoveAvatar","saveButtonActive","useHeader","loadAvatar","input","files","avatar","convertFileList","imageCropped","crop","cancelCropping","actions"],"mappings":"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"}