{"version":3,"file":"index-IyuspdAl.js","sources":["../../../../../app/frontend/apps/desktop/pages/guided-setup/graphql/mutations/systemImportConfiguration.api.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/composables/useImportSourceConfiguration.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSourceFreshdesk.vue","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/plugins/freshdesk.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSourceKayako.vue","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/plugins/kayako.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSourceOTRSDownloadButtons.vue","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSourceOTRS.vue","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/plugins/otrs.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/GuidedSetupImportSourceZendesk.vue","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/plugins/zendesk.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/components/GuidedSetupImport/GuidedSetupImportSource/plugins/index.ts"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const SystemImportConfigurationDocument = gql`\n    mutation systemImportConfiguration($configuration: SystemImportConfigurationInput!) {\n  systemImportConfiguration(configuration: $configuration) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useSystemImportConfigurationMutation(options: VueApolloComposable.UseMutationOptions<Types.SystemImportConfigurationMutation, Types.SystemImportConfigurationMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.SystemImportConfigurationMutation, Types.SystemImportConfigurationMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.SystemImportConfigurationMutation, Types.SystemImportConfigurationMutationVariables>(SystemImportConfigurationDocument, options);\n}\nexport type SystemImportConfigurationMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.SystemImportConfigurationMutation, Types.SystemImportConfigurationMutationVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useRouter } from 'vue-router'\n\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\n\nimport { useSystemImportConfigurationMutation } from '../graphql/mutations/systemImportConfiguration.api.ts'\n\nimport { useImportSource } from './useImportSource.ts'\n\nimport type { ImportSourceConfigurationBase } from '../types/setup-import.ts'\n\nexport const useImportSourceConfiguration = <\n  T extends ImportSourceConfigurationBase,\n>(\n  source: EnumSystemImportSource,\n) => {\n  const router = useRouter()\n  const { loading } = useImportSource()\n\n  const configureSystemImportSource = (data: T) => {\n    loading.value = true\n\n    const systemImportConfigurationMutation = new MutationHandler(\n      useSystemImportConfigurationMutation(),\n    )\n\n    let tlsVerify = true\n    if (data.sslVerify !== undefined) {\n      tlsVerify = data.sslVerify\n      delete data.sslVerify\n    }\n\n    return systemImportConfigurationMutation\n      .send({\n        configuration: {\n          ...data,\n          source,\n          tlsVerify,\n        },\n      })\n      .then((result) => {\n        if (result?.systemImportConfiguration?.success) {\n          // TODO: For OTRS we need to remember some stuff (maybe with importSource-Date or something in the route?)\n          router.push(`/guided-setup/import/${source}/start`)\n        }\n      })\n      .finally(() => {\n        loading.value = false\n      })\n  }\n\n  return {\n    configureSystemImportSource,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n/index.ts'\n\nimport { useImportSource } from '../../../composables/useImportSource.ts'\nimport { useImportSourceConfiguration } from '../../../composables/useImportSourceConfiguration.ts'\n\nimport type { ImportSourceConfigurationFreshdeskData } from '../../../types/setup-import.ts'\n\nconst { form } = useImportSource()\n\nconst formSchema = [\n  {\n    isLayout: true,\n    element: 'div',\n    attrs: {\n      class: 'grid grid-cols-1 gap-y-2.5 gap-x-3',\n    },\n    children: [\n      {\n        label: 'URL',\n        name: 'url',\n        type: 'text',\n        required: true,\n        validation: 'url',\n        help: i18n.t('Enter the URL of your %s system.', 'Freshdesk'),\n\n        // TODO: :)\n        // sectionsSchema: {\n        //   prefix: {\n        //     $el: 'span',\n        //     children: 'https://',\n        //     attrs: {\n        //       class:\n        //         'py-2.5 px-2.5 outline outline-1 -outline-offset-1 outline-blue-200 dark:outline-gray-700 bg-neutral-50 dark:bg-gray-500 rounded-s-md text-stone-200 dark:text-neutral-500',\n        //       readonly: 'readonly',\n        //     },\n        //   },\n        //   suffix: {\n        //     $el: 'span',\n        //     children: '.freshdesk.com',\n        //     attrs: {\n        //       class:\n        //         'py-2.5 px-2.5 outline outline-1 -outline-offset-1 outline-blue-200 dark:outline-gray-700 bg-neutral-50 dark:bg-gray-500 rounded-e-md text-stone-200 dark:text-neutral-500',\n        //       readonly: 'readonly',\n        //     },\n        //   },\n        // },\n      },\n      {\n        label: __('API token'),\n        name: 'secret',\n        type: 'text',\n        placeholder: 'XYZ3133723421111',\n        required: true,\n        sectionsSchema: {\n          help: {\n            children: [\n              '$help',\n              {\n                $cmp: 'CommonLink',\n                props: {\n                  link: 'https://support.freshdesk.com/support/solutions/articles/215517-how-to-find-your-api-key',\n                  external: true,\n                  openInNewTab: true,\n                  class: 'ltr:ml-1 rtl:mr-1',\n                },\n                children: __('More information can be found here.'),\n              },\n            ],\n          },\n        },\n        help: __(\n          'Enter your Freshdesk API token gained from your account profile settings.',\n        ),\n      },\n    ],\n  },\n]\n\nconst { configureSystemImportSource } = useImportSourceConfiguration(\n  EnumSystemImportSource.Freshdesk,\n)\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-y-2.5\">\n    <CommonAlert variant=\"info\">\n      {{\n        $t(\n          'After the import is completed, the account associated with the API token will become your username, and the token itself will be your password.',\n        )\n      }}\n    </CommonAlert>\n    <Form\n      id=\"import-freshdesk-configuration\"\n      ref=\"form\"\n      form-class=\"mb-2.5\"\n      :schema=\"formSchema\"\n      @submit=\"\n        configureSystemImportSource(\n          $event as FormSubmitData<ImportSourceConfigurationFreshdeskData>,\n        )\n      \"\n    />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\n\nimport GuidedSetupImportSourceFreshdesk from '../GuidedSetupImportSourceFreshdesk.vue'\n\nimport type { GuidedSetupImportSourcePlugin } from './index.ts'\n\nexport default <GuidedSetupImportSourcePlugin>{\n  source: EnumSystemImportSource.Freshdesk,\n  label: __('Freshdesk'),\n  beta: true,\n  component: GuidedSetupImportSourceFreshdesk,\n  importEntities: {\n    Groups: __('Groups'),\n    Organizations: __('Organizations'),\n    Users: __('Users'),\n    Tickets: __('Tickets'),\n  },\n  documentationURL:\n    'https://docs.zammad.org/en/latest/migration/freshdesk.html',\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n/index.ts'\n\nimport { useImportSource } from '../../../composables/useImportSource.ts'\nimport { useImportSourceConfiguration } from '../../../composables/useImportSourceConfiguration.ts'\n\nimport type { ImportSourceConfigurationKayakoData } from '../../../types/setup-import.ts'\n\nconst { form } = useImportSource()\n\nconst formSchema = [\n  {\n    isLayout: true,\n    element: 'div',\n    attrs: {\n      class: 'grid grid-cols-1 gap-y-2.5 gap-x-3',\n    },\n    children: [\n      {\n        label: 'URL',\n        name: 'url',\n        type: 'text',\n        required: true,\n        validation: 'url',\n        help: i18n.t('Enter the URL of your %s system.', 'Kayako'),\n      },\n      {\n        name: 'username',\n        label: __('Email'),\n        type: 'email',\n        validation: 'email',\n        placeholder: 'admin@example.com',\n        props: {\n          maxLength: 150,\n        },\n        required: true,\n        help: __(\n          'Enter your email address from your Kayako account which should be used for the import.',\n        ),\n      },\n      {\n        label: __('Password'),\n        name: 'secret',\n        type: 'password',\n        required: true,\n        help: __(\n          'Enter your password from your Kayako account which should be used for the import.',\n        ),\n      },\n    ],\n  },\n]\n\nconst { configureSystemImportSource } = useImportSourceConfiguration(\n  EnumSystemImportSource.Kayako,\n)\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-y-2.5\">\n    <CommonAlert variant=\"info\">\n      {{\n        $t(\n          'The entered email and password will become your Zammad login credentials after the import is completed.',\n        )\n      }}\n    </CommonAlert>\n    <Form\n      id=\"import-kayako-configuration\"\n      ref=\"form\"\n      form-class=\"mb-2.5\"\n      :schema=\"formSchema\"\n      @submit=\"\n        configureSystemImportSource(\n          $event as FormSubmitData<ImportSourceConfigurationKayakoData>,\n        )\n      \"\n    />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\n\nimport GuidedSetupImportSourceKayako from '../GuidedSetupImportSourceKayako.vue'\n\nimport type { GuidedSetupImportSourcePlugin } from './index.ts'\n\nexport default <GuidedSetupImportSourcePlugin>{\n  source: EnumSystemImportSource.Kayako,\n  label: __('Kayako'),\n  beta: true,\n  component: GuidedSetupImportSourceKayako,\n  importEntities: {\n    Groups: __('Groups'),\n    Organizations: __('Organizations'),\n    Users: __('Users'),\n    Tickets: __('Tickets'),\n  },\n  documentationURL: 'https://docs.zammad.org/en/latest/migration/kayako.html',\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { i18n } from '#shared/i18n/index.ts'\nimport openExternalLink from '#shared/utils/openExternalLink.ts'\n\nimport CommonButtonGroup from '#desktop/components/CommonButtonGroup/CommonButtonGroup.vue'\nimport type { CommonButtonItem } from '#desktop/components/CommonButtonGroup/types.ts'\n\nconst downloadPluginAndContinue = (downloadLink: string) => {\n  openExternalLink(downloadLink)\n}\n\nconst otrsPlugins: CommonButtonItem[] = [\n  {\n    label: i18n.t('Migration Plugin for %s', 'OTRS 6'),\n    variant: 'primary',\n    size: 'medium',\n    icon: 'download',\n    onActionClick: () =>\n      downloadPluginAndContinue(\n        'https://ftp.zammad.com/otrs-migrator-plugins/Znuny4OTRS-ZammadMigrator-6.0.7.opm',\n      ),\n  },\n  {\n    label: i18n.t('Migration Plugin for %s', 'OTRS 5'),\n    variant: 'primary',\n    size: 'medium',\n    icon: 'download',\n    onActionClick: () =>\n      downloadPluginAndContinue(\n        'https://ftp.zammad.com/otrs-migrator-plugins/Znuny4OTRS-ZammadMigrator-5.0.4.opm',\n      ),\n  },\n  {\n    label: i18n.t('Migration Plugin for %s', 'OTRS 4'),\n    variant: 'primary',\n    size: 'medium',\n    icon: 'download',\n    onActionClick: () =>\n      downloadPluginAndContinue(\n        'https://ftp.zammad.com/otrs-migrator-plugins/Znuny4OTRS-ZammadMigrator-4.1.12.opm',\n      ),\n  },\n  {\n    label: i18n.t('Migration Plugin for %s', 'OTRS 3.3-3.1'),\n    variant: 'primary',\n    size: 'medium',\n    icon: 'download',\n    onActionClick: () =>\n      downloadPluginAndContinue(\n        'https://ftp.zammad.com/otrs-migrator-plugins/Znuny4OTRS-ZammadMigrator-3.0.33.opm',\n      ),\n  },\n]\n</script>\n\n<template>\n  <CommonButtonGroup :items=\"otrsPlugins\" />\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { ref, reactive } from 'vue'\n\nimport Form from '#shared/components/Form/Form.vue'\nimport type {\n  FormFieldValue,\n  FormSchemaField,\n  FormSubmitData,\n} from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n/index.ts'\n\nimport { useSSLVerificationWarningHandler } from '#desktop/form/composables/useSSLVerificationWarningHandler.ts'\n\nimport { useImportSource } from '../../../composables/useImportSource.ts'\nimport { useImportSourceConfiguration } from '../../../composables/useImportSourceConfiguration.ts'\nimport { useSystemSetup } from '../../../composables/useSystemSetup.ts'\n\nimport GuidedSetupImportSourceOTRSDownloadButtons from './GuidedSetupImportSourceOTRSDownloadButtons.vue'\n\nimport type { ImportSourceConfigurationOtrsData } from '../../../types/setup-import.ts'\n\nconst { setTitle } = useSystemSetup()\n\nsetTitle(i18n.t('Download %s Migration Plugin', 'OTRS'))\n\nconst pluginDownloaded = ref(false)\n\nconst { form, onContinueButtonCallback } = useImportSource()\n\nonContinueButtonCallback.value = () => {\n  setTitle(i18n.t('Link %s', 'OTRS'))\n\n  onContinueButtonCallback.value = undefined\n  pluginDownloaded.value = true\n}\n\nconst formSchema = [\n  {\n    isLayout: true,\n    element: 'div',\n    attrs: {\n      class: 'flex flex-col gap-y-2.5 gap-x-3',\n    },\n    children: [\n      {\n        name: 'url',\n        label: __('URL'),\n        type: 'text',\n        placeholder:\n          'https://example.com/otrs/public.pl?Action=ZammadMigrator;Key=31337',\n        required: true,\n        validation: 'url',\n        help: __(\n          'Enter the link provided by the plugin at the end of the installation to link the two systems.',\n        ),\n      },\n      {\n        name: 'sslVerify',\n        label: __('SSL verification'),\n        type: 'toggle',\n        value: true,\n        props: {\n          variants: {\n            true: 'yes',\n            false: 'no',\n          },\n        },\n      },\n    ],\n  },\n]\n\nconst { configureSystemImportSource } = useImportSourceConfiguration(\n  EnumSystemImportSource.Otrs,\n)\n\nconst { updateFieldValues, onChangedField } = useForm(form)\nconst formChangeFields = reactive<Record<string, Partial<FormSchemaField>>>({})\n\nonChangedField('url', (newValue: FormFieldValue) => {\n  if (newValue && typeof newValue === 'string') {\n    const disabled = newValue.startsWith('http://')\n\n    formChangeFields.sslVerify = {\n      disabled,\n    }\n\n    updateFieldValues({\n      sslVerify: !disabled,\n    })\n  }\n})\n</script>\n\n<template>\n  <div v-if=\"!pluginDownloaded\" class=\"flex flex-col gap-2\">\n    <CommonLabel>\n      {{\n        $t(\n          'Download and install the %s Migration Plugin on your %s instance.',\n          'OTRS',\n          'OTRS',\n        )\n      }}\n    </CommonLabel>\n    <GuidedSetupImportSourceOTRSDownloadButtons class=\"mb-5\" />\n  </div>\n  <Form\n    v-if=\"pluginDownloaded === true\"\n    id=\"import-otrs-configuration\"\n    ref=\"form\"\n    form-class=\"mb-2.5\"\n    :handlers=\"[useSSLVerificationWarningHandler()]\"\n    :schema=\"formSchema\"\n    :change-fields=\"formChangeFields\"\n    @submit=\"\n      configureSystemImportSource(\n        $event as FormSubmitData<ImportSourceConfigurationOtrsData>,\n      )\n    \"\n  />\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\n\nimport GuidedSetupImportSourceOTRS from '../GuidedSetupImportSourceOTRS.vue'\n\nimport type { GuidedSetupImportSourcePlugin } from './index.ts'\n\nexport default <GuidedSetupImportSourcePlugin>{\n  source: EnumSystemImportSource.Otrs,\n  label: __('OTRS'),\n  beta: true,\n  component: GuidedSetupImportSourceOTRS,\n  importEntities: {\n    Configuration: __('Configuration'),\n    Base: __('Base Objects'),\n    User: __('Users'),\n    Ticket: __('Tickets'),\n  },\n  preStartHints: [\n    __(\n      \"OTRS BPM processes can't get imported into Zammad since it currently doesn't support this kind of workflows.\",\n    ),\n    __(\n      'Dynamic fields are not that common in Zammad, as it takes a different approach to ticket attributes. Zammad also uses tags in addition to custom fields to classify tickets. This difference can create a new philosophy of your ticket attributes/tags compared to your current use of dynamic fields in OTRS.',\n    ),\n  ],\n  documentationURL: 'https://docs.zammad.org/en/latest/migration/otrs.html',\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n/index.ts'\n\nimport { useImportSource } from '../../../composables/useImportSource.ts'\nimport { useImportSourceConfiguration } from '../../../composables/useImportSourceConfiguration.ts'\n\nimport type { ImportSourceConfigurationZendeskData } from '../../../types/setup-import.ts'\n\nconst { form } = useImportSource()\n\nconst formSchema = [\n  {\n    isLayout: true,\n    element: 'div',\n    attrs: {\n      class: 'grid grid-cols-1 gap-y-2.5 gap-x-3',\n    },\n    children: [\n      {\n        label: 'URL',\n        name: 'url',\n        type: 'text',\n        required: true,\n        validation: 'url',\n        help: i18n.t('Enter the URL of your %s system.', 'Zendesk'),\n      },\n      {\n        name: 'username',\n        label: __('Email'),\n        type: 'email',\n        validation: 'email',\n        placeholder: 'admin@example.com',\n        props: {\n          maxLength: 150,\n        },\n        required: true,\n      },\n      {\n        label: __('API token'),\n        name: 'secret',\n        type: 'text',\n        placeholder: 'XYZ3133723421111',\n        required: true,\n        sectionsSchema: {\n          help: {\n            children: [\n              '$help',\n              {\n                $cmp: 'CommonLink',\n                props: {\n                  link: 'https://support.zendesk.com/hc/en-us/articles/4408889192858-Managing-access-to-the-Zendesk-API#topic_tcb_fk1_2yb',\n                  external: true,\n                  openInNewTab: true,\n                  class: 'ltr:ml-1 rtl:mr-1',\n                },\n                children: __('More information can be found here.'),\n              },\n            ],\n          },\n        },\n        help: __(\n          'Enter your Zendesk API token gained from your admin interface.',\n        ),\n      },\n    ],\n  },\n]\n\nconst { configureSystemImportSource } = useImportSourceConfiguration(\n  EnumSystemImportSource.Zendesk,\n)\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-y-2.5\">\n    <CommonAlert variant=\"info\">\n      {{\n        $t(\n          'The entered email and API token will become your Zammad login credentials after the import is completed.',\n        )\n      }}\n    </CommonAlert>\n    <Form\n      id=\"import-zendesk-configuration\"\n      ref=\"form\"\n      form-class=\"mb-2.5\"\n      :schema=\"formSchema\"\n      @submit=\"\n        configureSystemImportSource(\n          $event as FormSubmitData<ImportSourceConfigurationZendeskData>,\n        )\n      \"\n    />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumSystemImportSource } from '#shared/graphql/types.ts'\n\nimport GuidedSetupImportSourceZendesk from '../GuidedSetupImportSourceZendesk.vue'\n\nimport type { GuidedSetupImportSourcePlugin } from './index.ts'\n\nexport default <GuidedSetupImportSourcePlugin>{\n  source: EnumSystemImportSource.Zendesk,\n  label: __('Zendesk'),\n  beta: true,\n  component: GuidedSetupImportSourceZendesk,\n  importEntities: {\n    Groups: __('Groups'),\n    Organizations: __('Organizations'),\n    Users: __('Users'),\n    Tickets: __('Tickets'),\n  },\n  documentationURL: 'https://docs.zammad.org/en/latest/migration/zendesk.html',\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { EnumSystemImportSource } from '#shared/graphql/types.ts'\n\nimport type { Component } from 'vue'\n\nexport interface GuidedSetupImportSourcePlugin {\n  source: EnumSystemImportSource\n  label: string\n  beta: boolean\n  component: Component\n  importEntities: Record<string, string>\n  preStartHints?: string[]\n  documentationURL: string\n}\n\nconst pluginsModules = import.meta.glob<GuidedSetupImportSourcePlugin>(\n  ['./**/*.ts', '!./**/index.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nexport const guidedSetupImportSourcePlugins = Object.values(\n  pluginsModules,\n).sort((p1, p2) => p1.label.localeCompare(p2.label))\n\nexport const guidedSetupImportSourcePluginLookup =\n  guidedSetupImportSourcePlugins.reduce(\n    (lookup: Record<string, GuidedSetupImportSourcePlugin>, plugin) => {\n      lookup[plugin.source] = plugin\n      return lookup\n    },\n    {},\n  )\n"],"names":["SystemImportConfigurationDocument","gql","ErrorsFragmentDoc","useSystemImportConfigurationMutation","options","VueApolloComposable.useMutation","useImportSourceConfiguration","source","router","useRouter","loading","useImportSource","data","systemImportConfigurationMutation","MutationHandler","tlsVerify","result","_a","form","formSchema","i18n","configureSystemImportSource","EnumSystemImportSource","__vite_glob_0_0","GuidedSetupImportSourceFreshdesk","__vite_glob_0_1","GuidedSetupImportSourceKayako","downloadPluginAndContinue","downloadLink","openExternalLink","otrsPlugins","setTitle","useSystemSetup","pluginDownloaded","ref","onContinueButtonCallback","updateFieldValues","onChangedField","useForm","formChangeFields","reactive","newValue","disabled","__vite_glob_0_2","GuidedSetupImportSourceOTRS","__vite_glob_0_3","GuidedSetupImportSourceZendesk","pluginsModules","guidedSetupImportSourcePlugins","p1","p2","guidedSetupImportSourcePluginLookup","lookup","plugin"],"mappings":"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"}