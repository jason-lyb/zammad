{"version":3,"file":"useSSLVerificationWarningHandler-CuWTKKwG.js","sources":["../../../../../app/frontend/apps/desktop/form/composables/useAlertFormHandler.ts","../../../../../app/frontend/apps/desktop/form/composables/useSSLVerificationWarningHandler.ts"],"sourcesContent":["// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createMessage } from '@formkit/core'\n\nimport { FormHandlerExecution } from '#shared/components/Form/types.ts'\nimport type {\n  ChangedField,\n  FormHandler,\n  FormHandlerFunction,\n  ReactiveFormSchemaDataField,\n  ReactiveFormSchemData,\n} from '#shared/components/Form/types.ts'\n\nimport type { FormKitMessage, FormKitNode } from '@formkit/core'\n\nexport const useAlertFormHandler = (\n  nodeName: string,\n  message: Partial<FormKitMessage> & Pick<FormKitMessage, 'key'>,\n  initialAddCallback: (\n    field: ReactiveFormSchemaDataField,\n    fields: Record<string, ReactiveFormSchemaDataField>,\n  ) => boolean,\n  changeAddCallback: (\n    field: ChangedField | undefined,\n    fields: Record<string, ReactiveFormSchemaDataField>,\n  ) => boolean,\n  eventHandler: (\n    node: FormKitNode,\n    addAlert: () => void,\n    clearAlert: () => void,\n  ) => void,\n  eventName: string = 'input',\n): FormHandler => {\n  const addAlert = (formNode?: FormKitNode) => {\n    formNode?.store.set(\n      createMessage({\n        blocking: false,\n        type: 'warning',\n        visible: true,\n        ...message,\n      }),\n    )\n  }\n\n  const clearAlert = (formNode?: FormKitNode) => {\n    formNode?.store.remove(message.key)\n  }\n\n  const initializeNodeEvent = (node: FormKitNode, formNode: FormKitNode) => {\n    node.on(eventName, ({ origin }) => {\n      eventHandler(\n        origin,\n        () => addAlert(formNode),\n        () => clearAlert(formNode),\n      )\n    })\n  }\n\n  const initializeFormNodeEvents = (formNode: FormKitNode) => {\n    formNode.on('child.deep', ({ payload }) => {\n      const childNode = payload as FormKitNode\n      if (childNode.name !== nodeName) return\n\n      initializeNodeEvent(childNode, formNode)\n\n      childNode.on('destroying', () => {\n        clearAlert(formNode)\n      })\n    })\n  }\n\n  const initializeNodeEvents = (\n    execution: FormHandlerExecution,\n    getNodeByName: (id: string) => FormKitNode | undefined,\n    formNode?: FormKitNode,\n  ) => {\n    if (execution === FormHandlerExecution.InitialSettled && formNode) {\n      const node = getNodeByName(nodeName)\n\n      if (node) {\n        initializeNodeEvent(node, formNode)\n\n        node.on('destroying', () => {\n          clearAlert(formNode)\n          initializeFormNodeEvents(formNode)\n        })\n\n        return\n      }\n\n      initializeFormNodeEvents(formNode)\n    }\n  }\n\n  const executeHandler = (\n    execution: FormHandlerExecution,\n    schemaData: ReactiveFormSchemData,\n    changedField?: ChangedField,\n    formNode?: FormKitNode,\n  ) => {\n    if (\n      schemaData.fields[nodeName] === undefined ||\n      schemaData.fields[nodeName] === null ||\n      (execution === FormHandlerExecution.FieldChange &&\n        (!changedField || changedField.name !== nodeName)) ||\n      (typeof formNode?.find === 'function' && !formNode?.find(nodeName))\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  const alertFormHandler: FormHandlerFunction = (\n    execution,\n    reactivity,\n    data,\n  ) => {\n    const { changedField, formNode, getNodeByName } = data\n    const { schemaData } = reactivity\n\n    initializeNodeEvents(execution, getNodeByName, formNode)\n\n    if (!executeHandler(execution, schemaData, changedField, formNode)) return\n\n    if (\n      (execution === FormHandlerExecution.InitialSettled &&\n        initialAddCallback(schemaData.fields[nodeName], schemaData.fields)) ||\n      (execution === FormHandlerExecution.FieldChange &&\n        changeAddCallback(changedField, schemaData.fields))\n    ) {\n      addAlert(formNode)\n\n      return\n    }\n\n    clearAlert(formNode)\n  }\n\n  return {\n    execution: [\n      FormHandlerExecution.InitialSettled,\n      FormHandlerExecution.FieldChange,\n    ],\n    callback: alertFormHandler,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { i18n } from '#shared/i18n.ts'\n\nimport { useAlertFormHandler } from './useAlertFormHandler.ts'\n\nexport const useSSLVerificationWarningHandler = () =>\n  useAlertFormHandler(\n    'sslVerify',\n    {\n      key: 'sslVerificationWarning',\n      value: i18n.t(\n        'Turning off SSL verification is a security risk and should be used only temporary. Use this option at your own risk!',\n      ),\n    },\n    (field) => !field.props.disabled && field.props.value === false,\n    (changedField, fields) =>\n      !fields.sslVerify.props.disabled && changedField?.newValue === false,\n    (node, addAlert, clearAlert) => {\n      const { props, value } = node\n\n      if (props.disabled) clearAlert()\n      else if (value === false) addAlert()\n    },\n    'prop:disabled',\n  )\n"],"names":["useAlertFormHandler","nodeName","message","initialAddCallback","changeAddCallback","eventHandler","eventName","addAlert","formNode","createMessage","clearAlert","initializeNodeEvent","node","origin","initializeFormNodeEvents","payload","childNode","initializeNodeEvents","execution","getNodeByName","FormHandlerExecution","executeHandler","schemaData","changedField","alertFormHandler","reactivity","data","useSSLVerificationWarningHandler","i18n","field","fields","props","value"],"mappings":"6IAea,MAAAA,EAAsB,CACjCC,EACAC,EACAC,EAIAC,EAIAC,EAKAC,EAAoB,UACJ,CACV,MAAAC,EAAYC,GAA2B,CAC3CA,GAAA,MAAAA,EAAU,MAAM,IACdC,EAAc,CACZ,SAAU,GACV,KAAM,UACN,QAAS,GACT,GAAGP,CAAA,CACJ,EACH,EAGIQ,EAAcF,GAA2B,CACnCA,GAAA,MAAAA,EAAA,MAAM,OAAON,EAAQ,IAAG,EAG9BS,EAAsB,CAACC,EAAmBJ,IAA0B,CACxEI,EAAK,GAAGN,EAAW,CAAC,CAAE,OAAAO,KAAa,CACjCR,EACEQ,EACA,IAAMN,EAASC,CAAQ,EACvB,IAAME,EAAWF,CAAQ,CAAA,CAC3B,CACD,CAAA,EAGGM,EAA4BN,GAA0B,CAC1DA,EAAS,GAAG,aAAc,CAAC,CAAE,QAAAO,KAAc,CACzC,MAAMC,EAAYD,EACdC,EAAU,OAASf,IAEvBU,EAAoBK,EAAWR,CAAQ,EAE7BQ,EAAA,GAAG,aAAc,IAAM,CAC/BN,EAAWF,CAAQ,CAAA,CACpB,EAAA,CACF,CAAA,EAGGS,EAAuB,CAC3BC,EACAC,EACAX,IACG,CACC,GAAAU,IAAcE,EAAqB,gBAAkBZ,EAAU,CAC3D,MAAAI,EAAOO,EAAclB,CAAQ,EAEnC,GAAIW,EAAM,CACRD,EAAoBC,EAAMJ,CAAQ,EAE7BI,EAAA,GAAG,aAAc,IAAM,CAC1BF,EAAWF,CAAQ,EACnBM,EAAyBN,CAAQ,CAAA,CAClC,EAED,MACF,CAEAM,EAAyBN,CAAQ,CACnC,CAAA,EAGIa,EAAiB,CACrBH,EACAI,EACAC,EACAf,IAGE,EAAAc,EAAW,OAAOrB,CAAQ,IAAM,QAChCqB,EAAW,OAAOrB,CAAQ,IAAM,MAC/BiB,IAAcE,EAAqB,cACjC,CAACG,GAAgBA,EAAa,OAAStB,IACzC,OAAOO,GAAA,YAAAA,EAAU,OAAS,YAAc,EAACA,GAAA,MAAAA,EAAU,KAAKP,KAQvDuB,EAAwC,CAC5CN,EACAO,EACAC,IACG,CACH,KAAM,CAAE,aAAAH,EAAc,SAAAf,EAAU,cAAAW,CAAA,EAAkBO,EAC5C,CAAE,WAAAJ,CAAe,EAAAG,EAIvB,GAFqBR,EAAAC,EAAWC,EAAeX,CAAQ,EAEnD,EAACa,EAAeH,EAAWI,EAAYC,EAAcf,CAAQ,EAEjE,IACGU,IAAcE,EAAqB,gBAClCjB,EAAmBmB,EAAW,OAAOrB,CAAQ,EAAGqB,EAAW,MAAM,GAClEJ,IAAcE,EAAqB,aAClChB,EAAkBmB,EAAcD,EAAW,MAAM,EACnD,CACAf,EAASC,CAAQ,EAEjB,MACF,CAEAE,EAAWF,CAAQ,EAAA,EAGd,MAAA,CACL,UAAW,CACTY,EAAqB,eACrBA,EAAqB,WACvB,EACA,SAAUI,CAAA,CAEd,EC5IaG,EAAmC,IAC9C3B,EACE,YACA,CACE,IAAK,yBACL,MAAO4B,EAAK,EACV,sHACF,CACF,EACCC,GAAU,CAACA,EAAM,MAAM,UAAYA,EAAM,MAAM,QAAU,GAC1D,CAACN,EAAcO,IACb,CAACA,EAAO,UAAU,MAAM,WAAYP,GAAA,YAAAA,EAAc,YAAa,GACjE,CAACX,EAAML,EAAUG,IAAe,CACxB,KAAA,CAAE,MAAAqB,EAAO,MAAAC,CAAU,EAAApB,EAErBmB,EAAM,SAAqBrB,IACtBsB,IAAU,IAAgBzB,GACrC,EACA,eACF"}