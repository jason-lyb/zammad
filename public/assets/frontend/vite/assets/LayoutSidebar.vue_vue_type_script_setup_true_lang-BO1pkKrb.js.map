{"version":3,"file":"LayoutSidebar.vue_vue_type_script_setup_true_lang-BO1pkKrb.js","sources":["../../../../../app/frontend/apps/desktop/components/ResizeLine/ResizeLine.vue","../../../../../app/frontend/apps/desktop/components/ResizeLine/useResizeLine.ts","../../../../../app/frontend/apps/desktop/components/CollapseButton/CollapseButton.vue","../../../../../app/frontend/apps/desktop/components/CollapseButton/useCollapseHandler.ts","../../../../../app/frontend/apps/desktop/components/layout/types.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n<script lang=\"ts\" setup>\nimport { useEventListener } from '@vueuse/core'\nimport { computed, readonly, ref } from 'vue'\n\nimport getUuid from '#shared/utils/getUuid.ts'\n\ninterface Props {\n  label: string\n  /**\n   * horizontal line or vertical line\n   * */\n  orientation?: 'horizontal' | 'vertical'\n  values?: {\n    /**\n     * Maximum width/height in px value of what the container can be resized to\n     * */\n    max?: number | string\n    /**\n     * Minimum width/height in px value of what the container can be resized to\n     * */\n    min?: number | string\n    /**\n     * Current width/height in px value of the container\n     * */\n    current?: number | string\n  }\n  disabled?: boolean\n  buttonClass?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  orientation: 'vertical',\n})\n\nconst resizeLine = ref<HTMLDivElement>()\nconst resizing = ref(false)\n\nconst emit = defineEmits<{\n  'mousedown-event': [MouseEvent]\n  'touchstart-event': [TouchEvent]\n  'dblclick-event': [MouseEvent]\n}>()\n\nconst resizeOrientation = computed(() =>\n  // Vertical resize line should have horizontal aria-orientation  -> container width\n  // Horizontal resize line should have vertical aria-orientation -> container height\n  props.orientation === 'horizontal' ? 'vertical' : 'horizontal',\n)\n\nconst addRemoveResizingListener = (event: 'mouseup' | 'touchend') => {\n  useEventListener(\n    event,\n    () => {\n      resizing.value = false\n    },\n    { once: true },\n  )\n}\n\nconst handleMousedown = (event: MouseEvent) => {\n  if (props.disabled) return\n\n  emit('mousedown-event', event)\n  resizing.value = true\n\n  addRemoveResizingListener('mouseup')\n}\n\nconst handleTouchstart = (event: TouchEvent) => {\n  if (props.disabled) return\n\n  emit('touchstart-event', event)\n  resizing.value = true\n\n  addRemoveResizingListener('touchend')\n}\n\nconst handleDoubleClick = (event: MouseEvent) => {\n  if (props.disabled) return\n\n  emit('dblclick-event', event)\n  resizeLine.value?.blur()\n}\n\nconst id = getUuid()\n\ndefineExpose({\n  resizeLine,\n  resizing: readonly(resizing),\n})\n</script>\n<template>\n  <div\n    class=\"flex justify-center opacity-0 focus-within:opacity-100 hover:opacity-100\"\n    :class=\"\n      {\n        horizontal: 'h-[12px] w-full',\n        vertical: 'h-full w-[12px]',\n      }[orientation]\n    \"\n  >\n    <button\n      ref=\"resizeLine\"\n      v-tooltip=\"!disabled ? label : undefined\"\n      :aria-describedby=\"id\"\n      :disabled=\"disabled\"\n      tabindex=\"0\"\n      class=\"not-disabled:bg-neutral-500 focus-within:bg-blue-800! not-disabled:hover:bg-blue-600 focus:outline-hidden disabled:pointer-events-none not-disabled:dark:bg-gray-200 not-disabled:dark:hover:bg-blue-900\"\n      :class=\"[\n        { 'bg-blue-800!': resizing },\n        {\n          horizontal: 'h-1 w-full enabled:cursor-row-resize!',\n          vertical: 'h-full w-1 enabled:cursor-col-resize!',\n        }[orientation],\n        buttonClass,\n      ]\"\n      @mousedown=\"handleMousedown\"\n      @blur=\"resizing = false\"\n      @touchstart=\"handleTouchstart\"\n      @dblclick=\"handleDoubleClick\"\n    />\n\n    <span\n      v-if=\"!disabled\"\n      :id=\"id\"\n      role=\"separator\"\n      class=\"invisible absolute -z-20\"\n      :aria-orientation=\"resizeOrientation\"\n      :aria-valuenow=\"values?.current ?? undefined\"\n      :aria-valuemax=\"values?.max ?? undefined\"\n      :aria-valuemin=\"values?.min ?? undefined\"\n    />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport {\n  type MaybeComputedElementRef,\n  type MaybeElement,\n  onKeyStroke,\n  useElementBounding,\n  useWindowSize,\n} from '@vueuse/core'\nimport { ref, type Ref, onBeforeUnmount } from 'vue'\n\nimport { EnumTextDirection } from '#shared/graphql/types.ts'\nimport { useLocaleStore } from '#shared/stores/locale.ts'\n\nexport const useResizeLine = (\n  resizeCallback: (positionX: number) => void,\n  resizeLineElementRef: MaybeComputedElementRef<MaybeElement>,\n  keyStrokeCallback: (e: KeyboardEvent, adjustment: number) => void,\n  options?: {\n    calculateFromRight?: boolean\n    /**\n     * @default 'horizontal'\n     * */\n    orientation: 'horizontal' | 'vertical'\n    offsetThreshold?: number\n  },\n) => {\n  const isResizing = ref(false)\n\n  const locale = useLocaleStore()\n  const { height: screenHeight } = useWindowSize()\n\n  const { width, height } = useElementBounding(\n    resizeLineElementRef as MaybeComputedElementRef<MaybeElement>,\n  )\n  const { width: screenWidth } = useWindowSize()\n\n  const handleVerticalResize = (event: MouseEvent | TouchEvent) => {\n    // Position the cursor as close to the handle center as possible.\n    let positionX = Math.round(width.value / 2)\n\n    if (event instanceof MouseEvent) {\n      positionX += event.pageX\n    } else if (event.targetTouches[0]) {\n      positionX += event.targetTouches[0].pageX\n    }\n\n    // In case of RTL locale, subtract the reported position from the current screen width.\n    if (\n      locale.localeData?.dir === EnumTextDirection.Rtl &&\n      !options?.calculateFromRight // If the option is set, do not calculate from the right.\n    )\n      positionX = screenWidth.value - positionX\n\n    // In case of LTR locale and resizer is used from right side of the window, subtract the reported position from the current screen width.\n    if (\n      locale.localeData?.dir === EnumTextDirection.Ltr &&\n      options?.calculateFromRight\n    )\n      positionX = screenWidth.value - positionX\n\n    resizeCallback(positionX)\n  }\n\n  const handleHorizontalResize = (event: MouseEvent | TouchEvent) => {\n    // Position the cursor as close to the handle center as possible.\n    let positionY = Math.round(height.value / 2)\n\n    if (event instanceof MouseEvent) {\n      positionY += event.pageY\n    } else if (event.targetTouches[0]) {\n      positionY += event.targetTouches[0].pageY\n    }\n\n    positionY = screenHeight.value - positionY - (options?.offsetThreshold ?? 0)\n\n    resizeCallback(positionY)\n  }\n\n  const resize = (event: MouseEvent | TouchEvent) => {\n    if (options?.orientation === 'vertical') return handleVerticalResize(event)\n\n    handleHorizontalResize(event)\n  }\n\n  const endResizing = () => {\n    // eslint-disable-next-line no-use-before-define\n    removeListeners()\n    isResizing.value = false\n  }\n\n  const removeListeners = () => {\n    document.removeEventListener('touchmove', resize)\n    document.removeEventListener('touchend', endResizing)\n    document.removeEventListener('mousemove', resize)\n    document.removeEventListener('mouseup', endResizing)\n  }\n  const addEventListeners = () => {\n    document.addEventListener('touchend', endResizing)\n    document.addEventListener('touchmove', resize)\n    document.addEventListener('mouseup', endResizing)\n    document.addEventListener('mousemove', resize)\n  }\n\n  const startResizing = (e: MouseEvent | TouchEvent) => {\n    // Do not react on double click event.\n    if (e.detail > 1) return\n\n    e.preventDefault()\n\n    isResizing.value = true\n\n    addEventListeners()\n  }\n\n  onBeforeUnmount(() => {\n    removeListeners()\n  })\n\n  // a11y keyboard navigation horizontal resize\n  if (options?.orientation === 'vertical') {\n    onKeyStroke(\n      'ArrowLeft',\n      (e: KeyboardEvent) => {\n        if (options?.calculateFromRight) {\n          keyStrokeCallback(e, locale.localeData?.dir === 'rtl' ? -5 : 5)\n        } else {\n          keyStrokeCallback(e, locale.localeData?.dir === 'rtl' ? 5 : -5)\n        }\n      },\n      { target: resizeLineElementRef as Ref<EventTarget> },\n    )\n\n    onKeyStroke(\n      'ArrowRight',\n      (e: KeyboardEvent) => {\n        if (options?.calculateFromRight) {\n          keyStrokeCallback(e, locale.localeData?.dir === 'rtl' ? 5 : -5)\n        } else {\n          keyStrokeCallback(e, locale.localeData?.dir === 'rtl' ? -5 : 5)\n        }\n      },\n      { target: resizeLineElementRef as Ref<EventTarget> },\n    )\n  } else {\n    onKeyStroke(\n      'ArrowUp',\n      (e: KeyboardEvent) => {\n        keyStrokeCallback(e, 5)\n      },\n      { target: resizeLineElementRef as Ref<EventTarget> },\n    )\n\n    onKeyStroke(\n      'ArrowDown',\n      (e: KeyboardEvent) => {\n        keyStrokeCallback(e, -5)\n      },\n      { target: resizeLineElementRef as Ref<EventTarget> },\n    )\n  }\n\n  return {\n    isResizing,\n    startResizing,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { useTouchDevice } from '#shared/composables/useTouchDevice.ts'\nimport { EnumTextDirection } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n/index.ts'\nimport { useLocaleStore } from '#shared/stores/locale.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\n\nconst { isTouchDevice } = useTouchDevice()\n\ninterface Props {\n  ownerId: string\n  collapsed?: boolean\n  orientation?: 'horizontal' | 'vertical'\n  expandLabel?: string\n  collapseLabel?: string\n  inverse?: boolean\n  variant?: 'none' | 'tertiary-gray'\n  noPadded?: boolean\n  buttonClass?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  orientation: 'horizontal',\n  collapsed: false,\n})\n\ndefineEmits<{\n  'toggle-collapse': [MouseEvent]\n}>()\n\nconst locale = useLocaleStore()\n\nconst collapseButtonIcon = computed(() => {\n  if (props.orientation === 'vertical')\n    return props.collapsed ? 'arrows-expand' : 'arrows-collapse'\n\n  if (\n    (props.inverse && locale.localeData?.dir !== EnumTextDirection.Rtl) ||\n    (!props.inverse && locale.localeData?.dir === EnumTextDirection.Rtl)\n  )\n    return props.collapsed ? 'arrow-bar-left' : 'arrow-bar-right'\n\n  return props.collapsed ? 'arrow-bar-right' : 'arrow-bar-left'\n})\n\n// :TODO think if we add this variant as a Variant of CommonButton\nconst variantClass = computed(() => {\n  if (props.variant === 'tertiary-gray')\n    return 'bg-neutral-500 focus-visible:bg-blue-800 active:dark:bg-blue-800 focus:dark:bg-blue-800 active:bg-blue-800 focus:bg-blue-800 hover:bg-blue-600 hover:dark:bg-blue-900 text-black dark:bg-gray-200 dark:text-white'\n\n  return ''\n})\n\nconst labels = computed(() => ({\n  expand: props.expandLabel || i18n.t('Expand this element'),\n  collapse: props.collapseLabel || i18n.t('Collapse this element'),\n}))\n</script>\n\n<template>\n  <div\n    class=\"flex items-center justify-center focus-within:opacity-100 hover:opacity-100\"\n    :class=\"{\n      'opacity-0': !isTouchDevice,\n      'p-2': !noPadded,\n    }\"\n  >\n    <CommonButton\n      v-tooltip=\"collapsed ? labels.expand : labels.collapse\"\n      class=\"hover:outline-transparent focus:outline-transparent focus-visible:outline-transparent dark:hover:outline-transparent dark:focus:outline-transparent\"\n      :class=\"[variantClass, buttonClass]\"\n      :icon=\"collapseButtonIcon\"\n      :aria-expanded=\"!collapsed\"\n      variant=\"none\"\n      :aria-controls=\"ownerId\"\n      :data-test-id=\"`controls-${ownerId}`\"\n      :aria-label=\"\n        collapsed ? $t('Expand this element') : $t('Collapse this element')\n      \"\n      size=\"small\"\n      @click=\"$emit('toggle-collapse', $event)\"\n    />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useLocalStorage } from '@vueuse/core'\nimport { onMounted, type Ref, ref, watch } from 'vue'\n\nimport emitter from '#shared/utils/emitter.ts'\n\nimport type { CollapseOptions, CollapseEmit } from './types.ts'\n\n/**\n * @args emit - The emit function from the setup function\n * @args options.storageKey - The key to store the collapse state in local storage\n * * */\nexport const useCollapseHandler = (\n  emit: CollapseEmit,\n  options?: CollapseOptions,\n) => {\n  let isCollapsed: Ref<boolean>\n\n  if (options?.storageKey) {\n    isCollapsed = useLocalStorage(options.storageKey, false)\n  } else {\n    isCollapsed = ref(false)\n  }\n\n  const callEmit = () =>\n    isCollapsed.value ? emit('collapse', true) : emit('expand', true)\n\n  const toggleCollapse = () => {\n    isCollapsed.value = !isCollapsed.value\n\n    callEmit()\n  }\n\n  emitter.on('expand-collapsed-content', (name: string) => {\n    if (options?.name === name && isCollapsed.value) toggleCollapse()\n  })\n\n  onMounted(() => {\n    // Set up watcher on the local storage value, so other browser tabs can sync their collapse states.\n    if (options?.storageKey) {\n      watch(\n        isCollapsed,\n        () => {\n          callEmit()\n        },\n        {\n          immediate: true,\n        },\n      )\n    }\n  })\n\n  return {\n    isCollapsed,\n    toggleCollapse,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nexport type BoxSizes = 'small' | 'medium' | 'large'\n\nexport type ContentWidth = 'narrow' | 'full'\n\nexport type BackgroundVariant = 'primary' | 'tertiary'\n\nexport enum SidebarPosition {\n  Start = 'start',\n  End = 'end',\n}\n\nexport type ContentAlignment = 'center' | 'start'\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useActiveElement } from '@vueuse/core'\nimport { computed, useTemplateRef, watch } from 'vue'\n\nimport CollapseButton from '#desktop/components/CollapseButton/CollapseButton.vue'\nimport type { CollapseOptions } from '#desktop/components/CollapseButton/types.ts'\nimport { useCollapseHandler } from '#desktop/components/CollapseButton/useCollapseHandler.ts'\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport ResizeLine from '#desktop/components/ResizeLine/ResizeLine.vue'\nimport { useResizeLine } from '#desktop/components/ResizeLine/useResizeLine.ts'\n\nimport { SidebarPosition } from './types.ts'\n\ninterface Props {\n  name: string\n  /**\n   @property currentWidth\n   @property minWidth\n   @property maxWidth\n   - used for accessibility\n   / */\n  currentWidth?: number | string\n  minWidth?: number | string\n  maxWidth?: number | string\n  noScroll?: boolean\n  collapsible?: boolean\n  iconCollapsed?: string\n  position?: SidebarPosition\n  resizable?: boolean\n  id: string\n  noPadding?: boolean\n  classes?: {\n    resizeLine?: string\n    collapseButton?: string\n  }\n  rememberCollapse?: boolean\n  backgroundVariant?: 'primary' | 'secondary'\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  position: SidebarPosition.Start,\n  backgroundVariant: 'primary',\n  hideButtonWhenCollapsed: false,\n})\n\nconst emit = defineEmits<{\n  'resize-horizontal': [number]\n  'resize-horizontal-start': []\n  'resize-horizontal-end': []\n  'reset-width': []\n  collapse: [boolean]\n  expand: [boolean]\n}>()\n\nconst collapseOptions: CollapseOptions = {\n  name: props.name,\n}\n\nif (props.rememberCollapse)\n  collapseOptions.storageKey = `${props.name}-sidebar-collapsed`\n\nconst { toggleCollapse, isCollapsed } = useCollapseHandler(\n  emit,\n  collapseOptions,\n)\n\nconst backgroundVariantClass = computed(() => {\n  switch (props.backgroundVariant) {\n    case 'secondary':\n      return 'bg-blue-50 dark:bg-gray-800'\n    case 'primary':\n    default:\n      return 'bg-neutral-950'\n  }\n})\n\n// a11y keyboard navigation // TS: Does not infer type for some reason?\nconst resizeLineInstance =\n  useTemplateRef<InstanceType<typeof ResizeLine>>('resize-line')\n\nconst activeElement = useActiveElement()\n\nconst handleKeyStroke = (e: KeyboardEvent, adjustment: number) => {\n  if (\n    !props.currentWidth ||\n    activeElement.value !== resizeLineInstance.value?.resizeLine\n  )\n    return\n\n  e.preventDefault()\n\n  const newWidth = Number(props.currentWidth) + adjustment\n\n  emit('resize-horizontal', newWidth)\n}\n\nconst { startResizing, isResizing } = useResizeLine(\n  (positionX) => emit('resize-horizontal', positionX),\n  resizeLineInstance.value?.resizeLine,\n  handleKeyStroke,\n  {\n    calculateFromRight: props.position === SidebarPosition.End,\n    orientation: 'vertical',\n  },\n)\n\nwatch(isResizing, (isResizing) => {\n  if (isResizing) {\n    emit('resize-horizontal-start')\n  } else {\n    emit('resize-horizontal-end')\n  }\n})\n\nconst collapseButtonClass = computed(() => {\n  if (props.position === SidebarPosition.Start)\n    return 'ltr:rounded-l-none rtl:rounded-r-none'\n  if (props.position === SidebarPosition.End)\n    return 'ltr:rounded-r-none rtl:rounded-l-none'\n\n  return ''\n})\n</script>\n\n<template>\n  <aside\n    :id=\"id\"\n    class=\"relative flex max-h-screen flex-col overflow-y-clip border-neutral-100 dark:border-gray-900\"\n    :class=\"[\n      {\n        'py-3': isCollapsed && !noPadding,\n        'border-s': position === SidebarPosition.End,\n      },\n      backgroundVariantClass,\n    ]\"\n  >\n    <CommonButton\n      v-if=\"iconCollapsed && isCollapsed\"\n      class=\"mx-auto\"\n      size=\"large\"\n      data-test-id=\"action-button\"\n      variant=\"neutral\"\n      :icon=\"iconCollapsed\"\n      @click=\"toggleCollapse\"\n    />\n    <div\n      v-else\n      class=\"flex h-full max-w-full flex-col overflow-x-hidden\"\n      :class=\"{\n        'px-3 py-2.5': !isCollapsed && !noPadding,\n        'overflow-y-hidden': noScroll,\n        'overflow-y-auto': !noScroll,\n        'border-e border-neutral-100 dark:border-gray-900':\n          backgroundVariant === 'secondary' && SidebarPosition.Start,\n        'border-s border-neutral-100 dark:border-gray-900':\n          backgroundVariant === 'secondary' && SidebarPosition.End,\n      }\"\n    >\n      <slot v-bind=\"{ isCollapsed, toggleCollapse }\" />\n    </div>\n\n    <ResizeLine\n      v-if=\"resizable\"\n      ref=\"resize-line\"\n      :label=\"$t('Resize sidebar')\"\n      class=\"absolute z-20 has-[+div:hover]:opacity-100\"\n      :class=\"[\n        {\n          'ltr:right-0 ltr:translate-x-1/2 rtl:left-0 rtl:-translate-x-1/2':\n            position === SidebarPosition.Start,\n          'ltr:left-0 ltr:-translate-x-1/2 rtl:right-0 rtl:translate-x-1/2':\n            position === SidebarPosition.End,\n          peer: !resizeLineInstance?.resizing,\n        },\n        classes?.resizeLine || '',\n      ]\"\n      :values=\"{\n        max: Number(maxWidth)?.toFixed(2),\n        min: minWidth,\n        current: currentWidth,\n      }\"\n      :disabled=\"isCollapsed\"\n      @mousedown-event=\"startResizing\"\n      @touchstart-event=\"startResizing\"\n      @dblclick-event=\"$emit('reset-width')\"\n    />\n\n    <CollapseButton\n      v-if=\"collapsible\"\n      :collapsed=\"isCollapsed\"\n      :owner-id=\"id\"\n      class=\"absolute top-[49px] z-20 peer-hover:opacity-100\"\n      :inverse=\"position === SidebarPosition.End\"\n      variant=\"tertiary-gray\"\n      :collapse-label=\"$t('Collapse sidebar')\"\n      :expand-label=\"$t('Expand sidebar')\"\n      :class=\"[\n        {\n          'ltr:right-0 ltr:translate-x-[calc(100%-10px)] rtl:left-0 rtl:-translate-x-[calc(100%-10px)]':\n            position === SidebarPosition.Start,\n          'ltr:left-0 ltr:-translate-x-[calc(100%-10px)] rtl:right-0 rtl:translate-x-[calc(100%-10px)]':\n            position === SidebarPosition.End,\n          'ltr:translate-x-[calc(100%-7.5px)] rtl:-translate-x-[calc(100%-7.5px)]':\n            isCollapsed && position === SidebarPosition.Start,\n          'ltr:-translate-x-[calc(100%-7.5px)] rtl:translate-x-[calc(100%-7.5px)]':\n            isCollapsed && position === SidebarPosition.End,\n        },\n        classes?.collapseButton || '',\n      ]\"\n      :button-class=\"collapseButtonClass\"\n      @click=\"(node: MouseEvent) => (node.target as HTMLButtonElement)?.blur()\"\n      @toggle-collapse=\"toggleCollapse\"\n    />\n  </aside>\n</template>\n"],"names":["props","__props","resizeLine","ref","resizing","emit","__emit","resizeOrientation","computed","addRemoveResizingListener","event","useEventListener","handleMousedown","handleTouchstart","handleDoubleClick","_a","id","getUuid","__expose","readonly","useResizeLine","resizeCallback","resizeLineElementRef","keyStrokeCallback","options","isResizing","locale","useLocaleStore","screenHeight","useWindowSize","width","height","useElementBounding","screenWidth","handleVerticalResize","positionX","EnumTextDirection","_b","handleHorizontalResize","positionY","resize","endResizing","removeListeners","addEventListeners","startResizing","e","onBeforeUnmount","onKeyStroke","isTouchDevice","useTouchDevice","collapseButtonIcon","variantClass","labels","i18n","useCollapseHandler","isCollapsed","useLocalStorage","callEmit","toggleCollapse","emitter","name","onMounted","watch","SidebarPosition","collapseOptions","backgroundVariantClass","resizeLineInstance","useTemplateRef","activeElement","useActiveElement","handleKeyStroke","adjustment","newWidth","collapseButtonClass"],"mappings":"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"}