{"version":3,"file":"SignupVerify-CiR2JRTA.js","sources":["../../../../../app/frontend/apps/desktop/pages/authentication/graphql/mutations/userSignupVerify.api.ts","../../../../../app/frontend/apps/desktop/pages/authentication/views/SignupVerify.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { SessionFragmentDoc } from '../../../../../../shared/graphql/fragments/session.api';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserSignupVerifyDocument = gql`\n    mutation userSignupVerify($token: String!) {\n  userSignupVerify(token: $token) {\n    session {\n      ...session\n    }\n    errors {\n      ...errors\n    }\n  }\n}\n    ${SessionFragmentDoc}\n${ErrorsFragmentDoc}`;\nexport function useUserSignupVerifyMutation(options: VueApolloComposable.UseMutationOptions<Types.UserSignupVerifyMutation, Types.UserSignupVerifyMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.UserSignupVerifyMutation, Types.UserSignupVerifyMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.UserSignupVerifyMutation, Types.UserSignupVerifyMutationVariables>(UserSignupVerifyDocument, options);\n}\nexport type UserSignupVerifyMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.UserSignupVerifyMutation, Types.UserSignupVerifyMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport useFingerprint from '#shared/composables/useFingerprint.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\n\nimport CommonLoader from '#desktop/components/CommonLoader/CommonLoader.vue'\nimport LayoutPublicPage from '#desktop/components/layout/LayoutPublicPage/LayoutPublicPage.vue'\n\nimport { ensureAfterAuth } from '../after-auth/composable/useAfterAuthPlugins.ts'\nimport { useUserSignupVerifyMutation } from '../graphql/mutations/userSignupVerify.api.ts'\n\nimport type { VerifyState } from '../types/signup.ts'\n\ndefineOptions({\n  beforeRouteEnter(to) {\n    const application = useApplicationStore()\n    if (!application.config.user_create_account) {\n      return to.redirectedFrom ? false : '/'\n    }\n    return true\n  },\n})\n\ninterface Props {\n  token?: string\n}\n\nconst props = defineProps<Props>()\n\nconst router = useRouter()\n\nconst state = ref<VerifyState>('loading')\n\nconst setState = (newState: VerifyState) => {\n  state.value = newState\n}\n\nconst message = computed(() => {\n  switch (state.value) {\n    case 'success':\n      return __('Woo hoo! Your email address has been verified!')\n    case 'error':\n      return __(\n        'Email could not be verified. Please contact your administrator.',\n      )\n    case 'loading':\n    default:\n      return __('Verifying your emailâ€¦')\n  }\n})\n\nonMounted(() => {\n  if (!props.token) {\n    state.value = 'error'\n    return\n  }\n\n  const { fingerprint } = useFingerprint()\n\n  const userSignupVerify = new MutationHandler(\n    useUserSignupVerifyMutation({\n      variables: { token: props.token },\n      context: {\n        headers: {\n          'X-Browser-Fingerprint': fingerprint.value,\n        },\n      },\n    }),\n    {\n      errorShowNotification: false,\n    },\n  )\n\n  userSignupVerify\n    .send()\n    .then(async (result) => {\n      const { setAuthenticatedSessionId } = useAuthenticationStore()\n\n      if (\n        await setAuthenticatedSessionId(\n          result?.userSignupVerify?.session?.id || null,\n        )\n      ) {\n        setState('success')\n\n        const afterAuth = result?.userSignupVerify?.session?.afterAuth\n\n        // Redirect only after some seconds, in order to give the user a chance to read the message.\n        window.setTimeout(() => {\n          if (afterAuth) {\n            ensureAfterAuth(router, afterAuth)\n            return\n          }\n\n          router.replace('/')\n        }, 2000)\n\n        return\n      }\n\n      setState('error')\n    })\n    .catch(() => {\n      setState('error')\n    })\n})\n</script>\n\n<template>\n  <LayoutPublicPage box-size=\"small\" :title=\"__('Email Verification')\">\n    <div class=\"mt-1 text-center\">\n      <CommonLabel>\n        {{ $t(message) }}\n      </CommonLabel>\n      <CommonLoader v-if=\"state === 'loading'\" class=\"mt-9 mb-3\" loading />\n      <CommonIcon\n        v-else-if=\"state === 'success'\"\n        class=\"mx-auto mt-9 mb-3 fill-green-500\"\n        name=\"check-circle-outline\"\n      />\n      <CommonIcon\n        v-else-if=\"state === 'error'\"\n        class=\"mx-auto mt-9 mb-3 fill-red-500\"\n        name=\"x-circle\"\n      />\n    </div>\n  </LayoutPublicPage>\n</template>\n"],"names":["UserSignupVerifyDocument","gql","SessionFragmentDoc","ErrorsFragmentDoc","useUserSignupVerifyMutation","options","VueApolloComposable.useMutation","props","__props","router","useRouter","state","ref","setState","newState","message","computed","onMounted","fingerprint","useFingerprint","MutationHandler","result","setAuthenticatedSessionId","useAuthenticationStore","_b","_a","afterAuth","_d","_c","ensureAfterAuth"],"mappings":"yzCASO,MAAMA,EAA2BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWlCC,CAAkB;AAAA,EACtBC,CAAiB,GACH,SAAAC,EAA4BC,EAA+P,GAAI,CACtS,OAAAC,EAAyGN,EAA0BK,CAAO,CACnJ,gLCSA,MAAME,EAAQC,EAERC,EAASC,IAETC,EAAQC,EAAiB,SAAS,EAElCC,EAAYC,GAA0B,CAC1CH,EAAM,MAAQG,CAAA,EAGVC,EAAUC,EAAS,IAAM,CAC7B,OAAQL,EAAM,MAAO,CACnB,IAAK,UACH,OAAO,GAAG,gDAAgD,EAC5D,IAAK,QACI,OAAA,GACL,iEAAA,EAEJ,IAAK,UACL,QACE,OAAO,GAAG,uBAAuB,CACrC,CAAA,CACD,EAED,OAAAM,EAAU,IAAM,CACV,GAAA,CAACV,EAAM,MAAO,CAChBI,EAAM,MAAQ,QACd,MACF,CAEM,KAAA,CAAE,YAAAO,GAAgBC,IAEC,IAAIC,EAC3BhB,EAA4B,CAC1B,UAAW,CAAE,MAAOG,EAAM,KAAM,EAChC,QAAS,CACP,QAAS,CACP,wBAAyBW,EAAY,KACvC,CACF,CAAA,CACD,EACD,CACE,sBAAuB,EACzB,CAAA,EAIC,KAAK,EACL,KAAK,MAAOG,GAAW,aAChB,KAAA,CAAE,0BAAAC,GAA8BC,IAEtC,GACE,MAAMD,IACJE,GAAAC,EAAAJ,GAAA,YAAAA,EAAQ,mBAAR,YAAAI,EAA0B,UAA1B,YAAAD,EAAmC,KAAM,IAAA,EAE3C,CACAX,EAAS,SAAS,EAEZ,MAAAa,GAAYC,GAAAC,EAAAP,GAAA,YAAAA,EAAQ,mBAAR,YAAAO,EAA0B,UAA1B,YAAAD,EAAmC,UAGrD,OAAO,WAAW,IAAM,CACtB,GAAID,EAAW,CACbG,EAAgBpB,EAAQiB,CAAS,EACjC,MACF,CAEAjB,EAAO,QAAQ,GAAG,GACjB,GAAI,EAEP,MACF,CAEAI,EAAS,OAAO,CAAA,CACjB,EACA,MAAM,IAAM,CACXA,EAAS,OAAO,CAAA,CACjB,CAAA,CACJ"}