{"version":3,"mappings":"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","names":["CommonButton","defineAsyncComponent","__vitePreload","props","__props","emit","__emit","target","useTemplateRef","isHoverTargetLink","ref","isValid","labelInstance","newEditValue","isEditing","_useModel","activeEditingMode","computed","contentTooltip","i18n","checkValidity","edit","inputValue","value","stopEditing","emitCancel","activateEditing","event","_a","submitEdit","submitEditResult","result","handleMouseOver","handleMouseLeave","onClickOutside","setupLinksHandlers","useHtmlLinks","handleEnterKey","processedContent","textToHtml","useTrapTab","watch","_b","onMounted","nextTick","vFocus","el","focusClasses","classes","focusNonEditClasses","disabledClasses","fontSizeClassMap","minHeightClassMap","editBackgroundClass","hoverClasses","__expose"],"ignoreList":[],"sources":["../../../../../app/frontend/apps/desktop/components/CommonInlineEdit/CommonInlineEdit.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { onClickOutside } from '@vueuse/core'\nimport {\n  computed,\n  defineAsyncComponent,\n  ref,\n  nextTick,\n  watch,\n  onMounted,\n  useTemplateRef,\n} from 'vue'\n\nimport CommonLabel from '#shared/components/CommonLabel/CommonLabel.vue'\nimport { useHtmlLinks } from '#shared/composables/useHtmlLinks.ts'\nimport { useTrapTab } from '#shared/composables/useTrapTab.ts'\nimport { i18n } from '#shared/i18n/index.ts'\nimport { textToHtml } from '#shared/utils/helpers.ts'\n\nconst CommonButton = defineAsyncComponent(\n  () => import('#desktop/components/CommonButton/CommonButton.vue'),\n)\n\nexport interface Props {\n  value: string\n  initialEditValue?: string\n  id?: string\n  disabled?: boolean\n  required?: boolean\n  placeholder?: string\n  size?: 'xs' | 'small' | 'medium' | 'large' | 'xl'\n  alternativeBackground?: boolean\n  submitLabel?: string\n  cancelLabel?: string\n  detectLinks?: boolean\n  loading?: boolean\n  labelAttrs?: Record<string, string>\n  label?: string\n  block?: boolean\n  classes?: {\n    label?: string\n    input?: string\n  }\n  onSubmitEdit?: (\n    value: string,\n  ) => Promise<void | (() => void)> | void | (() => void)\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  size: 'medium',\n})\n\nconst emit = defineEmits<{\n  'cancel-edit': []\n}>()\n\nconst target = useTemplateRef('target')\n\nconst isHoverTargetLink = ref(false)\n\nconst isValid = ref(false) // default user made no changes\nconst labelInstance = useTemplateRef('label')\nconst newEditValue = ref(props.value)\n\nconst isEditing = defineModel<boolean>('editing', {\n  default: false,\n})\n\nconst activeEditingMode = computed(() => {\n  return !props.disabled && isEditing.value\n})\n\nconst contentTooltip = computed(() => {\n  if (props.disabled) return\n\n  if (isHoverTargetLink.value) return i18n.t('Open link')\n\n  return props.label || i18n.t('Start Editing')\n})\n\nconst checkValidity = (edit: string) => {\n  if (props.required) {\n    isValid.value = edit.length >= 1\n  } else {\n    isValid.value = true\n  }\n\n  return isValid.value\n}\n\nconst inputValue = computed({\n  get: () => newEditValue.value,\n  set: (value: string) => {\n    newEditValue.value = value\n    isValid.value = checkValidity(newEditValue.value)\n  },\n})\n\nconst stopEditing = (emitCancel = true) => {\n  isEditing.value = false\n  if (emitCancel) emit('cancel-edit')\n\n  if (!newEditValue.value.length)\n    newEditValue.value = props.initialEditValue ?? props.value\n}\n\nconst activateEditing = (event?: MouseEvent | KeyboardEvent) => {\n  if (props.detectLinks && (event?.target as HTMLElement)?.closest('a')) return // guard to prevent editing when clicking on a link\n\n  if (isEditing.value || props.disabled) return\n\n  isEditing.value = true\n}\n\nconst submitEdit = () => {\n  // Needs to be checked, because the 'onSubmit' function is not required.\n  if (!props.onSubmitEdit) return undefined\n\n  // Don't trigger a mutation if there is no change\n  if (props.value === newEditValue.value) return stopEditing(false)\n\n  if (!checkValidity(inputValue.value)) return\n\n  const submitEditResult = props.onSubmitEdit(inputValue.value)\n\n  if (submitEditResult instanceof Promise) {\n    return submitEditResult\n      .then((result) => {\n        result?.()\n\n        stopEditing(false)\n      })\n      .catch(() => {}) // :TODO if promise rejects should we not show something to the user?\n  }\n\n  submitEditResult?.()\n\n  stopEditing(false)\n}\n\nconst handleMouseOver = (event: MouseEvent) => {\n  if (!props.detectLinks) return\n\n  if ((event.target as HTMLElement).closest('a')) {\n    isHoverTargetLink.value = true\n    return\n  }\n  isHoverTargetLink.value = false\n}\n\nconst handleMouseLeave = () => {\n  if (!props.detectLinks) return\n  isHoverTargetLink.value = false\n}\n\nonClickOutside(target, () => {\n  if (isEditing.value) return submitEdit()\n  stopEditing()\n})\n\nconst { setupLinksHandlers } = useHtmlLinks('/desktop')\n\nconst handleEnterKey = (event: KeyboardEvent) => {\n  event.preventDefault()\n  submitEdit()\n}\n\nconst processedContent = computed(() => {\n  if (props.detectLinks) return textToHtml(props.value)\n  return props.value\n})\n\nuseTrapTab(target)\n\nwatch(\n  () => props.value,\n  () => {\n    if (props.detectLinks && labelInstance.value?.$el)\n      setupLinksHandlers(labelInstance.value?.$el)\n  },\n  {\n    flush: 'post',\n  },\n)\n\nonMounted(() => {\n  nextTick(() => {\n    if (props.detectLinks && labelInstance.value?.$el)\n      setupLinksHandlers(labelInstance.value?.$el)\n  })\n})\n\nwatch(isEditing, () => {\n  newEditValue.value = props.initialEditValue ?? props.value\n})\n\nconst vFocus = (el: HTMLElement) => {\n  checkValidity(inputValue.value)\n\n  nextTick(() => {\n    // Add this to the event loop to ensure when clicking fast between inputs does not loose focus\n    setTimeout(() => {\n      el.focus()\n    }, 0)\n  })\n}\n\n// Styling\nconst focusClasses = computed(() => {\n  let classes =\n    'group-focus-within:before:absolute group-focus-within:before:-left-[5px] group-focus-within:before:top-1/2 group-focus-within:before:z-0 group-focus-within:before:h-[calc(100%+10px)] group-focus-within:before:w-[calc(100%+10px)] group-focus-within:before:-translate-y-1/2 group-focus-within:before:rounded-md'\n\n  if (props.alternativeBackground) {\n    classes +=\n      ' group-focus-within:before:bg-neutral-50 group-focus-within:before:dark:bg-gray-500'\n  } else {\n    classes +=\n      ' group-focus-within:before:bg-blue-200 group-focus-within:before:dark:bg-gray-700'\n  }\n  return classes\n})\n\nconst focusNonEditClasses = computed(() => ({\n  [focusClasses.value]: !isEditing.value && !props.disabled,\n}))\n\nconst disabledClasses = computed(() => ({\n  'cursor-text': props.disabled,\n}))\n\nconst fontSizeClassMap = {\n  xs: 'text-[10px] leading-[10px]',\n  small: 'text-xs leading-snug',\n  medium: 'text-sm leading-snug',\n  large: 'text-base leading-snug',\n  xl: 'text-xl leading-snug',\n}\n\nconst minHeightClassMap = {\n  xs: 'min-h-2',\n  small: 'min-h-3',\n  medium: 'min-h-4',\n  large: 'min-h-5',\n  xl: 'min-h-6',\n}\n\nconst editBackgroundClass = computed(() =>\n  props.alternativeBackground\n    ? 'before:bg-neutral-50 dark:before:bg-gray-500'\n    : 'before:bg-blue-200 dark:before:bg-gray-700',\n)\n\nconst hoverClasses = computed(() => {\n  let classes =\n    'before:absolute before:-left-[5px] before:top-1/2 before:-translate-y-1/2 before:-z-10 before:h-[calc(100%+10px)] before:w-[calc(100%+10px)] before:rounded-md'\n\n  if (props.alternativeBackground) {\n    classes += ' hover:before:bg-neutral-50 dark:hover:before:bg-gray-500'\n  } else {\n    classes += ' hover:before:bg-blue-200 dark:hover:before:bg-gray-700' // default background\n  }\n\n  return props.disabled ? '' : classes\n})\n\ndefineExpose({\n  activateEditing,\n  isEditing,\n})\n</script>\n\n<template>\n  <!-- eslint-disable vuejs-accessibility/no-static-element-interactions,vuejs-accessibility/mouse-events-have-key-events-->\n  <div\n    ref=\"target\"\n    :role=\"activeEditingMode || disabled ? undefined : 'button'\"\n    class=\"group relative flex w-fit items-center gap-1 focus:outline-hidden\"\n    :class=\"[\n      disabledClasses,\n      {\n        'w-full': block,\n      },\n    ]\"\n    :aria-disabled=\"disabled\"\n    :tabindex=\"activeEditingMode || disabled ? undefined : 0\"\n    @click.capture=\"activateEditing\"\n    @keydown.enter.capture=\"activateEditing\"\n    @mouseover=\"handleMouseOver\"\n    @mouseleave=\"handleMouseLeave\"\n    @keydown.esc=\"stopEditing()\"\n  >\n    <div\n      v-if=\"!isEditing\"\n      v-tooltip=\"contentTooltip\"\n      class=\"Content relative z-0 flex grow items-center\"\n      :class=\"[\n        {\n          grow: block,\n          'invisible opacity-0': isEditing,\n        },\n        focusNonEditClasses,\n        hoverClasses,\n      ]\"\n    >\n      <!--   eslint-disable vue/no-v-text-v-html-on-component vue/no-v-html   -->\n      <CommonLabel\n        :id=\"id\"\n        ref=\"label\"\n        class=\"z-10 break-words\"\n        style=\"word-break: break-word\"\n        v-bind=\"labelAttrs\"\n        :size=\"size\"\n        :class=\"[classes?.label, minHeightClassMap[size]]\"\n        v-html=\"processedContent\"\n      />\n    </div>\n\n    <div\n      v-else\n      class=\"flex max-w-full items-center gap-2 before:absolute before:top-1/2 before:-left-[5px] before:z-0 before:h-[calc(100%+10px)] before:w-[calc(100%+10px)] before:-translate-y-1/2 before:rounded-md\"\n      :class=\"[\n        { 'w-full': block },\n        editBackgroundClass,\n        fontSizeClassMap[size],\n      ]\"\n    >\n      <div class=\"relative z-10 w-full ltr:pr-14 rtl:pl-14\">\n        <input\n          key=\"editable-content-key\"\n          v-model.trim=\"inputValue\"\n          v-focus\n          class=\"block w-full flex-shrink-0 bg-transparent text-gray-100 outline-hidden dark:text-neutral-400\"\n          :class=\"[{ grow: block }, classes?.input || '']\"\n          :disabled=\"disabled || loading\"\n          :placeholder=\"placeholder\"\n          @keydown.stop.enter=\"handleEnterKey\"\n        />\n      </div>\n\n      <div class=\"absolute z-10 flex gap-1 ltr:right-0 rtl:left-0 rtl:-order-1\">\n        <CommonButton\n          v-tooltip=\"cancelLabel || $t('Cancel')\"\n          icon=\"x-lg\"\n          variant=\"danger\"\n          @click=\"stopEditing()\"\n          @keydown.enter.stop=\"stopEditing()\"\n        />\n        <CommonButton\n          v-tooltip=\"submitLabel || $t('Save changes')\"\n          class=\"rtl:-order-1\"\n          icon=\"check2\"\n          :disabled=\"!isValid\"\n          variant=\"submit\"\n          @click=\"submitEdit\"\n          @keydown.enter.stop=\"submitEdit\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"],"file":"assets/CommonInlineEdit.vue_vue_type_script_setup_true_lang-Blo3VlqB.js"}