{"version":3,"file":"index-D5f5eTVX.js","sources":["../../../../../app/frontend/shared/entities/ticket-article/graphql/mutations/delete.api.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/articleDelete.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/articlePermalink.ts","../../../../../app/frontend/shared/entities/ticket-article/graphql/mutations/changeVisibility.api.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/changeVisibility.ts","../../../../../app/frontend/shared/composables/useEmailFileUrls.ts","../../../../../app/frontend/shared/entities/ticket-article/graphql/mutations/ticketArticleEmailForwardReply.api.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/email/forward.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/email/selection.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/email/reply.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/email.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/facebook.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/note.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/phone.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/sms.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/split.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/telegram.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/twitter.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/web.ts","../../../../../app/frontend/shared/entities/ticket/channel/plugins/whatsapp.ts","../../../../../app/frontend/shared/entities/ticket/channel/plugins/index.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/whatsapp.ts","../../../../../app/frontend/shared/entities/ticket-article/action/plugins/index.ts"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TicketArticleDeleteDocument = gql`\n    mutation ticketArticleDelete($articleId: ID!) {\n  ticketArticleDelete(articleId: $articleId) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useTicketArticleDeleteMutation(options: VueApolloComposable.UseMutationOptions<Types.TicketArticleDeleteMutation, Types.TicketArticleDeleteMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.TicketArticleDeleteMutation, Types.TicketArticleDeleteMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.TicketArticleDeleteMutation, Types.TicketArticleDeleteMutationVariables>(TicketArticleDeleteDocument, options);\n}\nexport type TicketArticleDeleteMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.TicketArticleDeleteMutation, Types.TicketArticleDeleteMutationVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\nimport { useTicketArticleDeleteMutation } from '#shared/entities/ticket-article/graphql/mutations/delete.api.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport type { TicketArticleActionPlugin, TicketArticleAction } from './types.ts'\n\nconst deleteAction = async (article: TicketArticle) => {\n  const { waitForConfirmation } = useConfirmation()\n\n  const confirmed = await waitForConfirmation(\n    __('Are you sure to remove this article?'),\n  )\n\n  if (!confirmed) return\n\n  const mutation = new MutationHandler(\n    useTicketArticleDeleteMutation({\n      variables: { articleId: article.id },\n    }),\n    { errorNotificationMessage: __('The article could not be deleted.') },\n  )\n\n  mutation.send()\n}\n\nconst hasDeleteTimeframe = (deleteTimeframe: number) =>\n  deleteTimeframe && deleteTimeframe > 0\n\nconst secondsToDelete = (article: TicketArticle, deleteTimeframe: number) => {\n  if (!hasDeleteTimeframe(deleteTimeframe)) return 0\n\n  const now = new Date().getTime()\n  const createdAt = new Date(article.createdAt).getTime()\n  const secondsSinceCreated = (now - createdAt) / 1000\n\n  if (secondsSinceCreated > deleteTimeframe) return 0\n\n  return deleteTimeframe - secondsSinceCreated\n}\n\nconst isDeletable = (article: TicketArticle, deleteTimeframe: number) => {\n  const session = useSessionStore()\n\n  if (article.author?.id !== session.userId) return false\n\n  if (article.type?.communication && !article.internal) return false\n\n  if (\n    hasDeleteTimeframe(deleteTimeframe) &&\n    !secondsToDelete(article, deleteTimeframe)\n  )\n    return false\n\n  return true\n}\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 999,\n\n  addActions(ticket, article, { onDispose, recalculate, config }) {\n    const deleteTimeframe =\n      config.ui_ticket_zoom_article_delete_timeframe as number\n\n    if (!isDeletable(article, deleteTimeframe)) return []\n\n    const seconds = secondsToDelete(article, deleteTimeframe)\n\n    if (seconds) {\n      const timeout = window.setTimeout(() => {\n        recalculate()\n      }, seconds * 1_000)\n\n      onDispose(() => {\n        window.clearTimeout(timeout)\n      })\n    }\n\n    const action: TicketArticleAction = {\n      apps: ['mobile', 'desktop'],\n      label: __('Delete Article'),\n      name: 'articleDelete',\n      icon: 'trash',\n      perform: () => deleteAction(article),\n      view: {\n        agent: ['change'],\n      },\n    }\n\n    return [action]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useBaseUrl } from '#shared/composables/useBaseUrl.ts'\nimport { useCopyToClipboard } from '#shared/composables/useCopyToClipboard.ts'\n\nimport type { TicketArticleActionPlugin, TicketArticleAction } from './types.ts'\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 900,\n\n  addActions(ticket, article) {\n    const action: TicketArticleAction = {\n      apps: ['desktop'],\n      label: __('Copy article permalink'),\n      name: 'article-permalink',\n      icon: 'files',\n      view: {\n        agent: ['read'],\n        customer: ['read'],\n      },\n      link: `/tickets/${ticket.internalId}/${article.internalId}`,\n      perform: () => {\n        const { baseUrl } = useBaseUrl()\n        const { copyToClipboard } = useCopyToClipboard()\n\n        copyToClipboard(\n          `${baseUrl.value}/desktop/tickets/${ticket.internalId}/${article.internalId}`,\n        )\n      },\n    }\n\n    return [action]\n  },\n}\n\nexport default actionPlugin\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TicketArticleChangeVisibilityDocument = gql`\n    mutation ticketArticleChangeVisibility($articleId: ID!, $internal: Boolean!) {\n  ticketArticleChangeVisibility(articleId: $articleId, internal: $internal) {\n    article {\n      id\n      internal\n    }\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useTicketArticleChangeVisibilityMutation(options: VueApolloComposable.UseMutationOptions<Types.TicketArticleChangeVisibilityMutation, Types.TicketArticleChangeVisibilityMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.TicketArticleChangeVisibilityMutation, Types.TicketArticleChangeVisibilityMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.TicketArticleChangeVisibilityMutation, Types.TicketArticleChangeVisibilityMutationVariables>(TicketArticleChangeVisibilityDocument, options);\n}\nexport type TicketArticleChangeVisibilityMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.TicketArticleChangeVisibilityMutation, Types.TicketArticleChangeVisibilityMutationVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useTicketArticleChangeVisibilityMutation } from '#shared/entities/ticket-article/graphql/mutations/changeVisibility.api.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport type { TicketArticleActionPlugin, TicketArticleAction } from './types.ts'\n\nconst changeVisibilityAction = (\n  articleId: string,\n  targetInternalState: boolean,\n) => {\n  const errorNotificationMessage = targetInternalState\n    ? __('The article could not be set to internal.')\n    : __('The article could not be set to public.')\n\n  const mutation = new MutationHandler(\n    useTicketArticleChangeVisibilityMutation({\n      variables: { articleId, internal: targetInternalState },\n    }),\n    { errorNotificationMessage },\n  )\n\n  return mutation.send()\n}\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 50,\n\n  addActions(ticket, article) {\n    const targetInternalState = !article.internal\n\n    const label = targetInternalState\n      ? __('Set to internal')\n      : __('Set to public')\n\n    const iconName = targetInternalState ? 'lock' : 'lock-open'\n\n    const action: TicketArticleAction = {\n      apps: ['mobile', 'desktop'],\n      label,\n      name: 'changeVisibility',\n      icon: iconName,\n      view: {\n        agent: ['change'],\n      },\n      perform: () => changeVisibilityAction(article.id, targetInternalState),\n    }\n\n    return [action]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { find } from 'lodash-es'\nimport { computed, type Ref, type MaybeRef, toValue } from 'vue'\n\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\n\n// TODO MaybeRef needed? Check...\nexport const useEmailFileUrls = (\n  ticketArticle: MaybeRef<TicketArticle>,\n  ticketInternalId: Ref<number>,\n) => {\n  const article = computed(() => toValue(ticketArticle))\n\n  const originalFormattingUrl = computed(() => {\n    if (article.value.type?.name !== 'email') return\n\n    const originalFormattingFile = find(\n      article.value.attachmentsWithoutInline,\n      (file) => {\n        return file.preferences?.['original-format'] === true\n      },\n    )\n\n    if (!originalFormattingFile) return\n\n    return `/api/v1/ticket_attachment/${ticketInternalId.value}/${article.value.internalId}/${originalFormattingFile.internalId}?disposition=attachment`\n  })\n\n  const rawMessageUrl = computed(() => {\n    if (article.value.type?.name !== 'email') return\n\n    return `/api/v1/ticket_article_plain/${article.value.internalId}`\n  })\n\n  return { originalFormattingUrl, rawMessageUrl }\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TicketArticleEmailForwardReplyDocument = gql`\n    mutation ticketArticleEmailForwardReply($articleId: ID!, $formId: FormId!) {\n  ticketArticleEmailForwardReply(articleId: $articleId, formId: $formId) {\n    quotableFrom\n    quotableTo\n    quotableCc\n    attachments {\n      id\n      internalId\n      name\n      size\n      type\n    }\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useTicketArticleEmailForwardReplyMutation(options: VueApolloComposable.UseMutationOptions<Types.TicketArticleEmailForwardReplyMutation, Types.TicketArticleEmailForwardReplyMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.TicketArticleEmailForwardReplyMutation, Types.TicketArticleEmailForwardReplyMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.TicketArticleEmailForwardReplyMutation, Types.TicketArticleEmailForwardReplyMutationVariables>(TicketArticleEmailForwardReplyDocument, options);\n}\nexport type TicketArticleEmailForwardReplyMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.TicketArticleEmailForwardReplyMutation, Types.TicketArticleEmailForwardReplyMutationVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { getAttachmentLinks } from '#shared/composables/getAttachmentLinks.ts'\nimport type {\n  TicketArticle,\n  TicketById,\n} from '#shared/entities/ticket/types.ts'\nimport { useTicketArticleEmailForwardReplyMutation } from '#shared/entities/ticket-article/graphql/mutations/ticketArticleEmailForwardReply.api.ts'\nimport type { TicketArticleEmailForwardReplyMutation } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport type { ConfigList } from '#shared/types/store.ts'\nimport type { ConfidentTake } from '#shared/types/utils.ts'\nimport { textCleanup, textToHtml } from '#shared/utils/helpers.ts'\n\nimport type { TicketArticlePerformOptions } from '../types.ts'\n\nconst forwardMutation = new MutationHandler(\n  useTicketArticleEmailForwardReplyMutation({}),\n  { errorShowNotification: true },\n)\n\nexport const buildEmailForwardHeader = (\n  article: TicketArticle,\n  meta: ConfidentTake<\n    TicketArticleEmailForwardReplyMutation,\n    'ticketArticleEmailForwardReply'\n  >,\n) => {\n  const { quotableFrom, quotableCc, quotableTo } = meta || {}\n\n  const fields = [\n    [__('Subject'), article.subject],\n    [__('Date'), i18n.dateTime(article.createdAt)],\n    [__('From'), quotableFrom],\n    [__('To'), quotableTo],\n    [__('CC'), quotableCc],\n  ] as const\n\n  const output = fields.reduce((acc, [key, value]) => {\n    if (value) {\n      acc.append(i18n.t(key), ': ', value, document.createElement('br'))\n    }\n    return acc\n  }, document.createElement('p'))\n\n  output.appendChild(document.createElement('br'))\n\n  return output.outerHTML\n}\n\nexport const forwardEmail = async (\n  ticket: TicketById,\n  article: TicketArticle,\n  options: TicketArticlePerformOptions,\n  config: ConfigList,\n) => {\n  let body =\n    article.contentType === 'text/html'\n      ? textCleanup(article.bodyWithUrls)\n      : textToHtml(textCleanup(article.bodyWithUrls))\n\n  // TODO: standardise this in https://github.com/zammad/coordination-feature-mobile-view/issues/396\n  body = body.replace(/<p><br><\\/p>/g, '<p></p>') // cleanup\n\n  const result = await forwardMutation\n    .send({\n      formId: options.formId,\n      articleId: article.id,\n    })\n    .then((r) => r?.ticketArticleEmailForwardReply)\n\n  // show attachment previews, but don't save its content\n  const attachments = (result?.attachments || []).map((file, idx) => {\n    const originalAttachment = article.attachmentsWithoutInline[idx]\n    if (!originalAttachment || originalAttachment.name !== file.name)\n      return file\n    const { previewUrl, inlineUrl } = getAttachmentLinks(\n      {\n        internalId: originalAttachment.internalId,\n        type: file.type,\n      },\n      config.api_path,\n    )\n    return {\n      ...file,\n      preview: previewUrl,\n      inline: inlineUrl,\n    }\n  })\n  const quotedHeader =\n    config.ui_ticket_zoom_article_email_full_quote_header && result\n      ? buildEmailForwardHeader(article, result)\n      : ''\n\n  const quotedBody = `<p data-marker=\"signature-before\"></p><p>---${i18n.t(\n    'Begin forwarded message',\n  )}:---</p><p></p><blockquote type=\"cite\">${quotedHeader}${body}</blockquote>`\n\n  return options.openReplyForm({\n    articleType: 'email',\n    subject: config.ui_ticket_zoom_article_email_subject\n      ? article.subject || ticket.title\n      : '',\n    subtype: 'forward',\n    attachments,\n    body: quotedBody,\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport type { ConfigList } from '#shared/types/store.ts'\nimport { textToHtml, textCleanup } from '#shared/utils/helpers.ts'\nimport type { SelectionData } from '#shared/utils/selection.ts'\n\nconst formatDate = (date: string) => {\n  const options = {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n  } as const\n  try {\n    return new Date(date).toLocaleTimeString(i18n.locale(), options)\n  } catch {\n    return new Date(date).toLocaleTimeString('en-US', options)\n  }\n}\n\nexport const getReplyQuoteHeader = (\n  config: ConfigList,\n  article: TicketArticle,\n) => {\n  if (!config.ui_ticket_zoom_article_email_full_quote_header) return ''\n\n  const date = formatDate(article.createdAt)\n  const name = article.author.fullname || ''\n\n  return `${i18n.t('On %s, %s wrote:', date, name)}<p>\\n</p>`\n}\n\nexport const getArticleSelection = (\n  selection: SelectionData | undefined,\n  article: TicketArticle,\n  config: ConfigList,\n) => {\n  if (selection?.html) {\n    const clean = selection.html\n    if (clean) return { content: clean, full: false }\n  }\n  if (selection?.text) {\n    return { content: textToHtml(selection.text), full: false }\n  }\n  if (config.ui_ticket_zoom_article_email_full_quote) {\n    const cleanBody = textCleanup(article.bodyWithUrls)\n    const content =\n      article.contentType === 'text/html' ? cleanBody : textToHtml(cleanBody)\n\n    return { content, full: true }\n  }\n  return { content: null, full: false }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { uniq } from 'lodash-es'\n\nimport type {\n  TicketById,\n  TicketArticle,\n} from '#shared/entities/ticket/types.ts'\nimport {\n  EnumTicketArticleSenderName,\n  type AddressesField,\n} from '#shared/graphql/types.ts'\nimport type { ConfigList } from '#shared/types/store.ts'\n\nimport { getArticleSelection, getReplyQuoteHeader } from './selection.ts'\n\nimport type { TicketArticlePerformOptions } from '../types.ts'\n\nconst getEmailAddresses = (field?: Maybe<AddressesField>) => {\n  if (!field) return []\n  const addresses = field.parsed?.filter(\n    (email): email is { emailAddress: string; isSystemAddress: boolean } =>\n      !!email.emailAddress,\n  )\n  if (addresses?.length) {\n    return addresses\n      .filter((address) => !address.isSystemAddress)\n      .map((address) => address.emailAddress)\n  }\n  return []\n}\n\nconst getEmptyArticle = (article: TicketArticle) => ({\n  articleType: 'email',\n  subtype: 'reply',\n  to: [] as string[],\n  cc: [] as string[],\n  subject: undefined as string | undefined,\n  body: '',\n  inReplyTo: article.messageId,\n})\n\nconst getPhoneArticle = (ticket: TicketById, article: TicketArticle) => {\n  const newArticle = getEmptyArticle(article)\n\n  const sender = article.sender?.name\n\n  // the article we are replying to is an outbound call\n  if (sender === EnumTicketArticleSenderName.Agent) {\n    if (article.to?.raw.includes('@')) {\n      newArticle.to = getEmailAddresses(article.to)\n    }\n    // the article we are replying to is an incoming call\n  } else if (article.from?.raw.includes('@')) {\n    newArticle.to = getEmailAddresses(article.from)\n  }\n  // if sender is customer but in article.from is no email, try to get\n  // customers email via customer user\n  if (!newArticle.to.length || newArticle.to.every((r) => !r.includes('@')))\n    newArticle.to = ticket.customer.email ? [ticket.customer.email] : []\n  return newArticle\n}\n\nconst areAddressesSystem = (address?: Maybe<AddressesField>) => {\n  if (!address?.parsed) return false\n  return address.parsed.some((address) => address.isSystemAddress)\n}\n\nconst prepareEmails = (\n  emailsSeen: Set<string>,\n  emails: string[],\n  newEmail?: string[],\n) => {\n  const filteredEmails = emails\n    .map((email) => email.toLowerCase())\n    .filter((email) => {\n      if (!email || emailsSeen.has(email)) return false\n      return true\n    })\n\n  if (newEmail) {\n    filteredEmails.push(...newEmail)\n  }\n\n  filteredEmails.forEach((email) => emailsSeen.add(email))\n\n  // see https://github.com/zammad/zammad/issues/2154\n  return uniq(filteredEmails).map((a) => a.replace(/'(\\S+@\\S+\\.\\S+)'/, '$1'))\n}\n\nconst prepareAllEmails = (\n  emailsSeen: Set<string>,\n  article: TicketArticle,\n  newArticle: ReturnType<typeof getEmptyArticle>,\n) => {\n  if (article.from) {\n    newArticle.to = prepareEmails(\n      emailsSeen,\n      getEmailAddresses(article.from),\n      newArticle.to,\n    )\n  }\n\n  if (article.to) {\n    newArticle.to = prepareEmails(\n      emailsSeen,\n      getEmailAddresses(article.to),\n      newArticle.to,\n    )\n  }\n\n  if (article.cc) {\n    newArticle.cc = prepareEmails(\n      emailsSeen,\n      getEmailAddresses(article.cc),\n      newArticle.cc,\n    )\n  }\n}\n\n// app/assets/javascripts/app/lib/app_post/utils.coffee:1236\nconst getRecipientArticle = (\n  ticket: TicketById,\n  article: TicketArticle,\n  all = false,\n) => {\n  const type = article.type?.name\n\n  if (type === 'phone') {\n    return getPhoneArticle(ticket, article)\n  }\n\n  const newArticle = getEmptyArticle(article)\n\n  const sender = article.sender?.name\n\n  const senderIsSystem = areAddressesSystem(article.from)\n  const recipientIsSystem = areAddressesSystem(article.to)\n\n  const senderEmail = article.author.email\n  const isSystem =\n    !recipientIsSystem &&\n    sender === EnumTicketArticleSenderName.Agent &&\n    senderEmail &&\n    article.from?.parsed?.some((address) =>\n      address.emailAddress?.toLowerCase().includes(senderEmail),\n    )\n\n  if (senderIsSystem) {\n    newArticle.to = getEmailAddresses(article.replyTo || article.to)\n  }\n  // sender is agent - sent via system\n  else if (isSystem) {\n    newArticle.to = getEmailAddresses(article.to)\n  }\n  // sender was regular customer\n  else {\n    newArticle.to = getEmailAddresses(article.replyTo || article.from)\n    if (!newArticle.to.length || newArticle.to.every((r) => !r.includes('@')))\n      newArticle.to = senderEmail ? [senderEmail] : []\n  }\n\n  const emailsSeen = new Set<string>()\n\n  if (newArticle.to.length) {\n    newArticle.to = prepareEmails(emailsSeen, newArticle.to)\n  }\n\n  if (!all) {\n    return newArticle\n  }\n\n  prepareAllEmails(emailsSeen, article, newArticle)\n\n  return newArticle\n}\n\nexport const replyToEmail = (\n  ticket: TicketById,\n  article: TicketArticle,\n  options: TicketArticlePerformOptions,\n  config: ConfigList,\n  all = false,\n) => {\n  const newArticle = getRecipientArticle(ticket, article, all)\n\n  if (config.ui_ticket_zoom_article_email_subject) {\n    newArticle.subject = article.subject || ticket.title\n  }\n\n  // eslint-disable-next-line prefer-const\n  let { content: selection, full } = getArticleSelection(\n    options.selection,\n    article,\n    config,\n  )\n\n  if (selection) {\n    const header = getReplyQuoteHeader(config, article)\n    // data-full will be removed by the backend, it's used only for siganture handling\n    selection = `${full ? '' : '<p><br><br></p>'}<blockquote type=\"cite\" ${\n      full ? 'data-marker=\"signature-before\"' : ''\n    }>${header}${selection}</blockquote>`\n  }\n\n  const currentBody = options.getNewArticleBody('text/html')\n  const body =\n    (selection || '') +\n    (currentBody && selection ? `<p></p>${currentBody}` : currentBody)\n\n  // signature is handled in article type \"onSelected\" hook\n  options.openReplyForm({\n    ...newArticle,\n    subtype: 'reply',\n    body,\n  })\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { uniq } from 'lodash-es'\nimport { ref } from 'vue'\n\nimport { useEmailFileUrls } from '#shared/composables/useEmailFileUrls.ts'\nimport { getTicketSignatureQuery } from '#shared/composables/useTicketSignature.ts'\nimport type {\n  TicketArticle,\n  TicketById,\n} from '#shared/entities/ticket/types.ts'\nimport { EnumTicketArticleSenderName } from '#shared/graphql/types.ts'\nimport { getIdFromGraphQLId } from '#shared/graphql/utils.ts'\nimport { textCleanup } from '#shared/utils/helpers.ts'\nimport openExternalLink from '#shared/utils/openExternalLink.ts'\n\nimport { forwardEmail } from './email/forward.ts'\nimport { replyToEmail } from './email/reply.ts'\n\nimport type {\n  TicketFieldsType,\n  TicketArticleAction,\n  TicketArticleActionPlugin,\n  TicketArticleSelectionOptions,\n  TicketArticleType,\n} from './types.ts'\n\nconst canReplyAll = (article: TicketArticle) => {\n  const addresses = [article.to, article.cc]\n  if (article.sender?.name === EnumTicketArticleSenderName.Customer) {\n    addresses.push(article.from)\n  }\n  const foreignRecipients = addresses\n    .flatMap((address) => address?.parsed || [])\n    .filter((address) => address.emailAddress && !address.isSystemAddress)\n    .map((address) => address.emailAddress)\n  return uniq(foreignRecipients).length > 1\n}\n\nconst addSignature = async (\n  ticket: TicketById,\n  { body }: TicketArticleSelectionOptions,\n  position?: number,\n) => {\n  const ticketSignature = getTicketSignatureQuery()\n  const { data: signature } = await ticketSignature.query({\n    variables: {\n      groupId: ticket.group.id,\n      ticketId: ticket.id,\n    },\n  })\n  const text = signature?.ticketSignature?.renderedBody\n  const id = signature?.ticketSignature?.id\n  if (!text || !id) {\n    body.removeSignature()\n    return\n  }\n  body.addSignature({\n    body: textCleanup(text),\n    id: getIdFromGraphQLId(id),\n    position,\n  })\n}\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 200,\n\n  addActions(ticket, article, { config }) {\n    if (!ticket.group.emailAddress) return []\n\n    const type = article.type?.name\n    const sender = article.sender?.name\n    const actions: TicketArticleAction[] = []\n\n    const isEmail = type === 'email' || type === 'web'\n    const isPhone =\n      type === 'phone' &&\n      (sender === EnumTicketArticleSenderName.Customer ||\n        sender === EnumTicketArticleSenderName.Agent)\n\n    if (isEmail || isPhone) {\n      actions.push(\n        {\n          apps: ['mobile', 'desktop'],\n          name: 'email-reply',\n          view: { agent: ['change'] },\n          label: __('Reply'),\n          icon: 'reply',\n          alwaysVisible: true,\n          perform: (t, a, o) => replyToEmail(t, a, o, config),\n        },\n        {\n          apps: ['mobile', 'desktop'],\n          name: 'email-forward',\n          view: { agent: ['change'] },\n          label: __('Forward'),\n          icon: 'forward',\n          perform: (t, a, o) => forwardEmail(t, a, o, config),\n        },\n      )\n    }\n\n    if (isEmail && canReplyAll(article)) {\n      actions.push({\n        apps: ['mobile', 'desktop'],\n        name: 'email-reply-all',\n        view: { agent: ['change'] },\n        label: __('Reply All'),\n        icon: 'reply-alt',\n        alwaysVisible: true,\n        perform: (t, a, o) => replyToEmail(t, a, o, config, true),\n      })\n    }\n\n    if (isEmail) {\n      const emailFileUrls = useEmailFileUrls(article, ref(ticket.internalId))\n\n      if (emailFileUrls.originalFormattingUrl.value) {\n        actions.push({\n          apps: ['desktop'],\n          name: 'email-download-original-email',\n          view: { agent: ['read'] },\n          label: __('Download original email'),\n          icon: 'download',\n          perform: () =>\n            openExternalLink(\n              emailFileUrls.originalFormattingUrl.value as string,\n            ),\n        })\n      }\n\n      if (emailFileUrls.rawMessageUrl.value) {\n        actions.push({\n          apps: ['desktop'],\n          name: 'email-download-raw-email',\n          view: { agent: ['read'] },\n          label: __('Download raw email'),\n          icon: 'download',\n          perform: () =>\n            openExternalLink(emailFileUrls.rawMessageUrl.value as string),\n        })\n      }\n    }\n\n    return actions\n  },\n\n  addTypes(ticket, { config }) {\n    if (!ticket.group.emailAddress) return []\n\n    const fields: Partial<TicketFieldsType> = {\n      to: { required: true },\n      cc: {},\n      subject: {},\n      body: {\n        required: true,\n      },\n      subtype: {},\n      attachments: {},\n      security: {},\n    }\n\n    if (!config.ui_ticket_zoom_article_email_subject) delete fields.subject\n\n    const type: TicketArticleType = {\n      value: 'email',\n      label: __('Email'),\n      buttonLabel: __('Add email'),\n      apps: ['mobile', 'desktop'],\n      icon: 'mail',\n      view: { agent: ['change'] },\n      fields,\n      onDeselected(_, { body }) {\n        getTicketSignatureQuery().cancel()\n        body.removeSignature()\n      },\n      onOpened(_, { body }) {\n        // always reset position if reply is added as a new article\n        return addSignature(ticket, { body }, 1)\n      },\n      onSelected(_, { body }) {\n        // try to dynamically set cursor position, dependeing on where it was before signature was added\n        return addSignature(ticket, { body })\n      },\n      internal: false,\n      performReply(ticket) {\n        return {\n          subtype: 'reply',\n          to: ticket.customer.email ? [ticket.customer.email] : [],\n        }\n      },\n    }\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type {\n  TicketArticleAction,\n  TicketArticleActionPlugin,\n  TicketArticleType,\n} from './types.ts'\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 300,\n\n  addActions(ticket, article) {\n    const type = article.type?.name\n\n    if (type !== 'facebook feed comment' && type !== 'facebook feed post')\n      return []\n\n    const action: TicketArticleAction = {\n      apps: ['mobile', 'desktop'],\n      label: __('Reply'),\n      name: type,\n      icon: 'reply',\n      view: {\n        agent: ['change'],\n      },\n      perform(ticket, article, { openReplyForm }) {\n        const articleData = {\n          // always a comment, doesn't depend on current article type\n          articleType: 'facebook feed comment',\n          body: '',\n          inReplyTo: null,\n        }\n\n        openReplyForm(articleData)\n      },\n    }\n    return [action]\n  },\n\n  addTypes(ticket) {\n    const descriptionType = ticket.createArticleType?.name\n\n    if (descriptionType !== 'facebook feed post') return []\n\n    const type: TicketArticleType = {\n      apps: ['mobile', 'desktop'],\n      value: 'facebook feed comment',\n      label: __('Facebook'),\n      buttonLabel: __('Add comment'),\n      icon: 'facebook',\n      view: {\n        agent: ['change'],\n      },\n      fields: {},\n      internal: false,\n      contentType: 'text/plain',\n    }\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketArticleActionPlugin, TicketArticleType } from './types.ts'\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 100,\n\n  addTypes(ticket, { config }) {\n    const isInternal = !!config.ui_ticket_zoom_article_note_new_internal\n\n    const type: TicketArticleType = {\n      apps: ['mobile', 'desktop'],\n      value: 'note',\n      label: __('Note'),\n      buttonLabel: isInternal ? __('Add internal note') : __('Add note'),\n      icon: 'note',\n      fields: {\n        attachments: {},\n        body: {\n          required: true,\n        },\n      },\n      view: {\n        agent: ['change'],\n      },\n      internal: isInternal,\n    }\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketArticleActionPlugin, TicketArticleType } from './types.ts'\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 100,\n\n  addTypes() {\n    const type: TicketArticleType = {\n      apps: ['mobile', 'desktop'],\n      value: 'phone',\n      label: __('Phone'),\n      buttonLabel: __('Add phone call'),\n      icon: 'phone',\n      fields: {\n        attachments: {},\n        body: {\n          required: true,\n        },\n      },\n      view: {\n        agent: ['change'],\n      },\n      internal: false,\n    }\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumTicketArticleSenderName } from '#shared/graphql/types.ts'\n\nimport type {\n  TicketArticleAction,\n  TicketArticleActionPlugin,\n  TicketArticleType,\n} from './types.ts'\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 300,\n\n  addActions(ticket, article) {\n    if (\n      article.sender?.name !== EnumTicketArticleSenderName.Customer ||\n      article.type?.name !== 'sms'\n    )\n      return []\n    const action: TicketArticleAction = {\n      apps: ['mobile', 'desktop'],\n      label: __('Reply'),\n      name: 'sms',\n      icon: 'reply',\n      view: {\n        agent: ['change'],\n      },\n      perform(ticket, article, { openReplyForm }) {\n        const from = article.from?.raw\n        const articleData = {\n          articleType: 'sms',\n          to: from ? [from] : [],\n          inReplyTo: article.messageId,\n        }\n\n        openReplyForm(articleData)\n      },\n    }\n    return [action]\n  },\n\n  addTypes(ticket) {\n    const descriptionType = ticket.createArticleType?.name\n    if (descriptionType !== 'sms') return []\n    const type: TicketArticleType = {\n      apps: ['mobile', 'desktop'],\n      value: 'sms',\n      label: __('Sms'),\n      buttonLabel: __('Add sms'),\n      icon: 'message',\n      view: {\n        agent: ['change'],\n      },\n      internal: false,\n      contentType: 'text/plain',\n      fields: {\n        body: {\n          required: true,\n          validation: 'length:1,160',\n        },\n        to: {},\n      },\n      options: {\n        recipientContact: 'phone',\n      },\n      editorMeta: {\n        footer: {\n          maxlength: 160,\n          warningLength: 30,\n        },\n      },\n      performReply(ticket) {\n        const { preferences } = ticket\n        return {\n          to: [preferences?.sms?.originator || preferences?.sms?.From],\n        }\n      },\n    }\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketArticleActionPlugin, TicketArticleAction } from './types.ts'\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 700,\n\n  addActions(_ticket, article) {\n    const action: TicketArticleAction = {\n      apps: ['desktop'],\n      label: __('Split'),\n      name: 'split',\n      icon: 'split',\n      view: {\n        agent: ['read'],\n      },\n      link: `/tickets/create?splitTicketArticleId=${encodeURIComponent(article.id)}`,\n    }\n\n    return [action]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumTicketArticleSenderName } from '#shared/graphql/types.ts'\n\nimport type {\n  TicketArticleAction,\n  TicketArticleActionPlugin,\n  TicketArticleType,\n} from './types.ts'\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 300,\n\n  addActions(ticket, article) {\n    const sender = article.sender?.name\n    const type = article.type?.name\n\n    if (\n      sender !== EnumTicketArticleSenderName.Customer ||\n      type !== 'telegram personal-message'\n    )\n      return []\n\n    const action: TicketArticleAction = {\n      apps: ['mobile', 'desktop'],\n      label: __('Reply'),\n      name: 'telegram personal-message',\n      icon: 'reply',\n      view: {\n        agent: ['change'],\n      },\n      perform(ticket, article, { openReplyForm }) {\n        const articleData = {\n          articleType: type,\n          inReplyTo: article.messageId,\n        }\n\n        openReplyForm(articleData)\n      },\n    }\n    return [action]\n  },\n\n  addTypes(ticket) {\n    const descriptionType = ticket.createArticleType?.name\n\n    if (descriptionType !== 'telegram personal-message') return []\n\n    const type: TicketArticleType = {\n      apps: ['mobile', 'desktop'],\n      value: 'telegram personal-message',\n      label: __('Telegram'),\n      buttonLabel: __('Add message'),\n      icon: 'telegram',\n      view: {\n        agent: ['change'],\n      },\n      internal: false,\n      contentType: 'text/plain',\n      fields: {\n        body: {\n          required: true,\n          validation: 'length:1,10000',\n        },\n        attachments: {},\n      },\n      editorMeta: {\n        footer: {\n          maxlength: 10000,\n          warningLength: 5000,\n        },\n      },\n    }\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { isArray, isObject, uniq } from 'lodash-es'\n\nimport type { FieldEditorProps } from '#shared/components/Form/fields/FieldEditor/types.ts'\nimport type { FormValues } from '#shared/components/Form/types.ts'\nimport { EnumTicketArticleSenderName } from '#shared/graphql/types.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\nimport type { ConfigList } from '#shared/types/store.ts'\nimport type { ConfidentTake } from '#shared/types/utils.ts'\nimport { getInitials } from '#shared/utils/formatter.ts'\n\nimport type {\n  TicketArticleAction,\n  TicketArticleActionPlugin,\n  TicketArticleType,\n} from './types.ts'\n\nconst replyToTwitterComment = ((\n  ticket,\n  article,\n  { openReplyForm, getNewArticleBody },\n) => {\n  const articleData: FormValues = {\n    articleType: 'twitter status',\n    inReplyTo: article.messageId,\n  }\n\n  const body = getNewArticleBody('text/plain')\n\n  const recipients = article.from ? [article.from.raw] : []\n\n  if (article.to) recipients.push(article.to.raw)\n\n  const recipientsString = uniq(\n    recipients.filter((recipient) => {\n      recipient = recipient.trim().toLowerCase()\n      if (body.toLowerCase().includes(recipient)) return false\n      if (recipient === `@${ticket.preferences?.channel_screen_name}`)\n        return false\n      return true\n    }),\n  ).join(' ')\n\n  if (body) articleData.body = `${recipientsString} ${body} `\n  else articleData.body = `${recipientsString} `\n\n  openReplyForm(articleData)\n}) satisfies TicketArticleAction['perform']\n\nconst replyToTwitterDm = ((ticket, article, { openReplyForm }) => {\n  const sender = article.sender?.name\n\n  let to: string | undefined | null\n  if (sender === EnumTicketArticleSenderName.Customer) to = article.from?.raw\n  else if (sender === EnumTicketArticleSenderName.Agent) to = article.to?.raw\n\n  if (!to) {\n    const autorization = article.author.authorizations?.find(\n      (a) => a.provider === 'twitter',\n    )\n    to = autorization?.username || autorization?.uid\n  }\n\n  const articleData: FormValues = {\n    articleType: 'twitter direct-message',\n    body: '',\n    to: to ? [to] : [],\n    inReplyTo: article.messageId,\n  }\n\n  openReplyForm(articleData)\n}) satisfies TicketArticleAction['perform']\n\nconst getTwitterInitials = (config: ConfigList) => {\n  if (config.ui_ticket_zoom_article_twitter_initials) {\n    const { user } = useSessionStore()\n    if (user) {\n      const { firstname, lastname, email } = user\n      return `/${getInitials(firstname, lastname, email)}`\n    }\n  }\n  return null\n}\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 300,\n\n  addActions(ticket, article) {\n    const type = article.type?.name\n\n    if (type !== 'twitter status' && type !== 'twitter direct-message')\n      return []\n\n    const action: TicketArticleAction = {\n      apps: ['mobile', 'desktop'],\n      label: __('Reply'),\n      name: type,\n      icon: 'reply',\n      view: {\n        agent: ['change'],\n      },\n      perform(ticket, article, options) {\n        if (type === 'twitter status')\n          return replyToTwitterComment(ticket, article, options)\n        return replyToTwitterDm(ticket, article, options)\n      },\n    }\n    return [action]\n  },\n\n  addTypes(ticket, { config }) {\n    const descriptionType = ticket.createArticleType?.name\n\n    if (\n      descriptionType !== 'twitter status' &&\n      descriptionType !== 'twitter direct-message'\n    )\n      return []\n\n    const type: TicketArticleType = {\n      apps: ['mobile', 'desktop'],\n      value: descriptionType,\n      label: __('Twitter'),\n      buttonLabel: __('Add message'),\n      icon: 'twitter',\n      view: {\n        agent: ['change'],\n      },\n      fields: {\n        body: {\n          required: true,\n        },\n        to: {},\n      },\n      internal: false,\n      contentType: 'text/plain',\n      updateForm(values) {\n        if (!isObject(values.article) || isArray(values.article)) return values\n        if (typeof values.article.body === 'string') {\n          const initials = getTwitterInitials(config)\n          values.article.body += initials ? `\\n${initials}` : ''\n        }\n        return values\n      },\n    }\n\n    let footer: ConfidentTake<FieldEditorProps, 'meta.footer'> = {}\n\n    if (descriptionType === 'twitter status' && type.fields.body) {\n      type.fields.body.validation = 'length:1,280'\n      footer = {\n        maxlength: 280,\n        warningLength: 30,\n      }\n    } else if (type.fields.to && type.fields.body) {\n      type.fields.to.required = true\n      type.fields.body.validation = 'length:1,10000'\n\n      footer = {\n        maxlength: 10000,\n        warningLength: 500,\n      }\n    }\n\n    const initials = getTwitterInitials(config)\n\n    if (initials) footer.text = initials\n\n    type.editorMeta = {\n      footer,\n    }\n\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { TicketArticleActionPlugin, TicketArticleType } from './types.ts'\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 100,\n\n  addTypes() {\n    const type: TicketArticleType = {\n      apps: ['mobile', 'desktop'],\n      value: 'web',\n      label: __('Web'),\n      buttonLabel: __('Add Reply'),\n      icon: 'web',\n      view: {\n        customer: ['change'],\n      },\n      fields: {\n        attachments: {},\n      },\n      internal: false,\n    }\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumChannelArea } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\n\nimport type { TicketChannelPlugin } from './types.ts'\nimport type { TicketById } from '../../types.ts'\n\nconst ticketChannelPlugin: TicketChannelPlugin = {\n  area: EnumChannelArea.WhatsAppBusiness,\n\n  channelAlert(ticket: TicketById) {\n    const lastWhatsappTimestamp =\n      ticket.preferences?.whatsapp?.timestamp_incoming\n\n    // In case the customer service window is not open yet, or the ticket is closed, hide the alert.\n    if (\n      !lastWhatsappTimestamp ||\n      /^(closed|merged|removed)$/.test(ticket.state.name)\n    )\n      return null\n\n    // Determine the end of the customer service window and set the appropriate alert text and type.\n    const timeWindowEnd = new Date(lastWhatsappTimestamp * 1000)\n    timeWindowEnd.setHours(timeWindowEnd.getHours() + 24)\n\n    // If time window is already closed, show an error alert.\n    if (timeWindowEnd <= new Date()) {\n      return {\n        text: __(\n          'The 24 hour customer service window is now closed, no further WhatsApp messages can be sent.',\n        ),\n        variant: 'danger',\n      }\n    }\n\n    // Otherwise, show a warning alert with a \"humanized\" end time of the window.\n    return {\n      text: __(\n        'You have a 24 hour window to send WhatsApp messages in this conversation. The customer service window closes %s.',\n      ),\n      textPlaceholder: i18n.relativeDateTime(timeWindowEnd.toString()),\n      variant: 'warning',\n    }\n  },\n}\n\nexport default ticketChannelPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { keyBy } from 'lodash-es'\n\nimport type { EnumChannelArea } from '#shared/graphql/types.ts'\n\nimport type { TicketChannelPlugin } from './types.ts'\n\nconst pluginModules = import.meta.glob<TicketChannelPlugin>(\n  ['./*.ts', '!./initialize.ts', '!./types.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nconst ticketChannelPluginFiles = Object.values(pluginModules)\nexport const ticketChannelPlugins = keyBy(ticketChannelPluginFiles, 'area')\n\nexport const getTicketChannelPlugin = (\n  ticketChannel?: Maybe<EnumChannelArea>,\n) => {\n  if (!ticketChannel) return null\n\n  return ticketChannelPlugins[ticketChannel]\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { createMessage, type FormKitNode } from '@formkit/core'\nimport { useFormKitNodeById } from '@formkit/vue'\n\nimport type { FileUploaded } from '#shared/components/Form/fields/FieldFile/types.ts'\nimport {\n  FormValidationVisibility,\n  type FormRef,\n} from '#shared/components/Form/types.ts'\nimport { getNodeId } from '#shared/components/Form/utils.ts'\nimport { getTicketChannelPlugin } from '#shared/entities/ticket/channel/plugins/index.ts'\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\nimport { EnumTicketArticleSenderName } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { getAcceptableFileTypesString } from '#shared/utils/files.ts'\n\nimport type {\n  TicketArticleAction,\n  TicketArticleActionPlugin,\n  TicketArticleType,\n} from './types.ts'\n\nconst allowedFiles = [\n  {\n    label: __('Audio file'),\n    types: ['audio/aac', 'audio/mp4', 'audio/amr', 'audio/mpeg', 'audio/ogg'],\n    size: 16 * 1024 * 1024,\n  },\n  {\n    label: __('Sticker file'),\n    types: ['image/webp'],\n    size: 500 * 1024,\n  },\n  {\n    label: __('Image file'),\n    types: ['image/jpeg', 'image/png'],\n    size: 5 * 1024 * 1024,\n  },\n  {\n    label: __('Video file'),\n    types: ['video/mp4', 'video/3gpp'],\n    size: 16 * 1024 * 1024,\n  },\n  {\n    label: __('Document file'),\n    types: [\n      'text/plain',\n      'application/pdf',\n      'application/vnd.ms-powerpoint',\n      'application/msword',\n      'application/vnd.ms-excel',\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    ],\n    size: 100 * 1024 * 1024,\n  },\n]\n\nconst acceptableFileTypes = getAcceptableFileTypesString(allowedFiles)\nconst canUseWhatsapp = (ticket: TicketById) => {\n  const channelPlugin = getTicketChannelPlugin(ticket.initialChannel)\n  const channelAlert = channelPlugin?.channelAlert(ticket)\n\n  return Boolean(channelAlert) && Boolean(channelAlert?.variant !== 'danger')\n}\n\nconst actionPlugin: TicketArticleActionPlugin = {\n  order: 300,\n\n  addActions(ticket, article) {\n    const sender = article.sender?.name\n    const type = article.type?.name // 'whatsapp message'\n\n    if (\n      sender !== EnumTicketArticleSenderName.Customer ||\n      type !== 'whatsapp message'\n    )\n      return []\n    if (!canUseWhatsapp(ticket)) return []\n\n    const action: TicketArticleAction = {\n      apps: ['mobile', 'desktop'],\n      label: __('Reply'),\n      name: 'whatsapp message',\n      icon: 'reply',\n      alwaysVisible: true,\n      view: {\n        agent: ['change'],\n      },\n      perform(ticket, article, { openReplyForm }) {\n        const articleData = {\n          articleType: type,\n          inReplyTo: article.messageId,\n        }\n        openReplyForm(articleData)\n      },\n    }\n\n    return [action]\n  },\n\n  addTypes(ticket) {\n    const descriptionType = ticket.createArticleType?.name\n\n    if (descriptionType !== 'whatsapp message') return []\n    if (!canUseWhatsapp(ticket)) return []\n\n    let attachmentsFieldNode: FormKitNode\n    let attachmentsCommitEvent: string\n    let bodyCommitEventNode: FormKitNode\n    let bodyCommitEventListener: string\n\n    const setBodyNotAllowedMessage = (body: FormKitNode) => {\n      body.emit('prop:validationVisibility', FormValidationVisibility.Live)\n\n      body.store.set(\n        createMessage({\n          key: 'bodyNotAllowedForMediaType',\n          blocking: true,\n          value: i18n.t(\n            'No additional text can be sent with this media type. Please remove the text.',\n          ),\n          type: 'validation',\n          visible: true,\n        }),\n      )\n    }\n\n    const removeBodyNotAllowedMessage = (body: FormKitNode) => {\n      body.emit('prop:validationVisibility', FormValidationVisibility.Submit)\n      body.store.remove('bodyNotAllowedForMediaType')\n    }\n\n    const deRegisterListeners = () => {\n      if (attachmentsFieldNode) {\n        attachmentsFieldNode.off(attachmentsCommitEvent)\n      }\n\n      if (bodyCommitEventNode) {\n        bodyCommitEventNode.off(bodyCommitEventListener)\n        removeBodyNotAllowedMessage(bodyCommitEventNode)\n      }\n    }\n\n    const handleAllowedBody = (form?: FormRef) => {\n      if (!form) return\n\n      const checkAllowedForFileType = (currentFiles: FileUploaded[]) => {\n        const body = form.getNodeByName('body')\n\n        if (!body) return\n\n        bodyCommitEventNode = body\n\n        if (\n          currentFiles &&\n          currentFiles.length > 0 &&\n          currentFiles[0].type &&\n          (currentFiles[0].type === 'image/webp' ||\n            currentFiles[0].type.startsWith('audio'))\n        ) {\n          bodyCommitEventListener = bodyCommitEventNode.on(\n            'commit',\n            ({ payload: newValue }) => {\n              if (newValue) {\n                setBodyNotAllowedMessage(bodyCommitEventNode)\n              } else {\n                removeBodyNotAllowedMessage(bodyCommitEventNode)\n              }\n            },\n          )\n\n          if (bodyCommitEventNode.value) {\n            setBodyNotAllowedMessage(bodyCommitEventNode)\n          }\n        } else {\n          removeBodyNotAllowedMessage(bodyCommitEventNode)\n          bodyCommitEventNode.off(bodyCommitEventListener)\n        }\n      }\n\n      useFormKitNodeById(getNodeId(form.formId, 'attachments'), (node) => {\n        attachmentsFieldNode = node\n\n        // Check if the attachments are already present (e.g. after article type switch).\n        if (attachmentsFieldNode.value) {\n          checkAllowedForFileType(attachmentsFieldNode.value as FileUploaded[])\n        }\n\n        attachmentsCommitEvent = node.on('commit', ({ payload: newValue }) => {\n          checkAllowedForFileType(newValue)\n        })\n      })\n    }\n\n    const type: TicketArticleType = {\n      apps: ['mobile', 'desktop'],\n      value: 'whatsapp message',\n      label: __('WhatsApp'),\n      buttonLabel: __('Add message'),\n      icon: 'whatsapp',\n      view: {\n        agent: ['change'],\n      },\n      fields: {\n        body: {\n          required: false,\n          validation: 'require_one:attachments|length:1,4096',\n        },\n        attachments: {\n          validation: 'require_one:body',\n          accept: acceptableFileTypes,\n          multiple: false,\n          allowedFiles,\n        },\n      },\n      internal: false,\n      contentType: 'text/plain',\n      onDeselected: () => {\n        deRegisterListeners()\n      },\n      onSelected: (ticket, context, form) => handleAllowedBody(form),\n      onOpened: (ticket, context, form) => handleAllowedBody(form),\n    }\n    return [type]\n  },\n}\n\nexport default actionPlugin\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type {\n  TicketArticle,\n  TicketById,\n} from '#shared/entities/ticket/types.ts'\nimport { getTicketView } from '#shared/entities/ticket/utils/getTicketView.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport type { AppName } from '#shared/types/app.ts'\n\nimport type {\n  TicketTypeAddOptions,\n  TicketActionAddOptions,\n  TicketArticleActionPlugin,\n  TicketViewPolicyMap,\n  AppSpecificTicketArticleType,\n} from './types.ts'\n\nconst pluginsModules = import.meta.glob<TicketArticleActionPlugin>(\n  ['./*.ts', '!./initialize.ts', '!./types.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nexport const articleActionPlugins = Object.values(pluginsModules).sort(\n  (p1, p2) => p1.order - p2.order,\n)\n\nconst createFilter = (options: TicketTypeAddOptions, app: AppName) => {\n  return (object: { view: TicketViewPolicyMap; apps: AppName[] }) => {\n    if (!object.apps.includes(app)) return false\n    const view = object.view[options.view.ticketView]\n    if (!view || !view.length) return false\n    if (view.includes('read')) return true\n    if (options.view.isTicketEditable && view.includes('change')) return true\n    return false\n  }\n}\n\nexport const createArticleActions = (\n  ticket: TicketById,\n  article: TicketArticle,\n  app: AppName,\n  _options: Pick<TicketActionAddOptions, 'onDispose' | 'recalculate'>,\n) => {\n  const application = useApplicationStore()\n  const options = {\n    ..._options,\n    view: getTicketView(ticket),\n    config: application.config,\n  }\n  const filterByView = createFilter(options, app)\n  return articleActionPlugins\n    .map((p) => p.addActions?.(ticket, article, options) || [])\n    .flat()\n    .filter(filterByView)\n}\n\nexport const createArticleTypes = (\n  ticket: TicketById,\n  app: AppName,\n): AppSpecificTicketArticleType[] => {\n  const application = useApplicationStore()\n  const options: TicketTypeAddOptions = {\n    view: getTicketView(ticket),\n    config: application.config,\n  }\n  const filterByView = createFilter(options, app)\n  return (\n    articleActionPlugins\n      .map((p) => p.addTypes?.(ticket, options) || [])\n      .flat()\n      .filter(filterByView)\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .map(({ apps, ...type }) => ({\n        ...type,\n        icon: type.icon,\n      }))\n  )\n}\n"],"names":["TicketArticleDeleteDocument","gql","ErrorsFragmentDoc","useTicketArticleDeleteMutation","options","VueApolloComposable.useMutation","deleteAction","article","waitForConfirmation","useConfirmation","MutationHandler","hasDeleteTimeframe","deleteTimeframe","secondsToDelete","now","createdAt","secondsSinceCreated","isDeletable","session","useSessionStore","_a","_b","actionPlugin","ticket","onDispose","recalculate","config","seconds","timeout","baseUrl","useBaseUrl","copyToClipboard","useCopyToClipboard","TicketArticleChangeVisibilityDocument","useTicketArticleChangeVisibilityMutation","changeVisibilityAction","articleId","targetInternalState","errorNotificationMessage","label","useEmailFileUrls","ticketArticle","ticketInternalId","computed","toValue","originalFormattingUrl","originalFormattingFile","find","file","rawMessageUrl","TicketArticleEmailForwardReplyDocument","useTicketArticleEmailForwardReplyMutation","forwardMutation","buildEmailForwardHeader","meta","quotableFrom","quotableCc","quotableTo","output","i18n","acc","key","value","forwardEmail","body","textCleanup","textToHtml","result","r","attachments","idx","originalAttachment","previewUrl","inlineUrl","getAttachmentLinks","quotedHeader","quotedBody","formatDate","date","getReplyQuoteHeader","name","getArticleSelection","selection","clean","cleanBody","getEmailAddresses","field","addresses","email","address","getEmptyArticle","getPhoneArticle","newArticle","EnumTicketArticleSenderName","_c","areAddressesSystem","prepareEmails","emailsSeen","emails","newEmail","filteredEmails","uniq","a","prepareAllEmails","getRecipientArticle","all","sender","senderIsSystem","recipientIsSystem","senderEmail","isSystem","_d","replyToEmail","full","header","currentBody","canReplyAll","foreignRecipients","addSignature","position","ticketSignature","getTicketSignatureQuery","signature","text","id","getIdFromGraphQLId","type","actions","isEmail","isPhone","t","o","emailFileUrls","ref","openExternalLink","fields","_","openReplyForm","isInternal","from","articleData","preferences","_ticket","replyToTwitterComment","getNewArticleBody","recipients","recipientsString","recipient","replyToTwitterDm","to","autorization","getTwitterInitials","user","firstname","lastname","getInitials","descriptionType","values","isObject","isArray","initials","footer","ticketChannelPlugin","EnumChannelArea","lastWhatsappTimestamp","timeWindowEnd","pluginModules","__vite_glob_0_0","ticketChannelPluginFiles","ticketChannelPlugins","keyBy","getTicketChannelPlugin","ticketChannel","allowedFiles","acceptableFileTypes","getAcceptableFileTypesString","canUseWhatsapp","channelPlugin","channelAlert","attachmentsFieldNode","attachmentsCommitEvent","bodyCommitEventNode","bodyCommitEventListener","setBodyNotAllowedMessage","FormValidationVisibility","createMessage","removeBodyNotAllowedMessage","deRegisterListeners","handleAllowedBody","form","checkAllowedForFileType","currentFiles","newValue","useFormKitNodeById","getNodeId","node","context","pluginsModules","__vite_glob_0_1","__vite_glob_0_2","__vite_glob_0_3","__vite_glob_0_4","__vite_glob_0_5","__vite_glob_0_6","__vite_glob_0_7","__vite_glob_0_8","__vite_glob_0_9","__vite_glob_0_10","__vite_glob_0_11","__vite_glob_0_12","articleActionPlugins","p1","p2","createFilter","app","object","view","createArticleActions","_options","application","useApplicationStore","getTicketView","filterByView","p","createArticleTypes","apps"],"mappings":"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"}