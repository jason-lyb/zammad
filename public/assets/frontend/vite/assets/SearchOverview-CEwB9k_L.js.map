{"version":3,"file":"SearchOverview-CEwB9k_L.js","sources":["../../../../../app/frontend/apps/mobile/components/Organization/OrganizationItem.vue","../../../../../app/frontend/apps/mobile/pages/search/plugins/organization.ts","../../../../../app/frontend/apps/mobile/pages/search/plugins/ticket.ts","../../../../../app/frontend/apps/mobile/components/User/UserItem.vue","../../../../../app/frontend/apps/mobile/pages/search/plugins/user.ts","../../../../../app/frontend/apps/mobile/pages/search/plugins/index.ts","../../../../../app/frontend/apps/mobile/pages/search/components/SearchResults.vue","../../../../../app/frontend/apps/mobile/pages/search/graphql/queries/searchOverview.api.ts","../../../../../app/frontend/apps/mobile/pages/search/views/SearchOverview.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\n\nimport CommonOrganizationAvatar from '#shared/components/CommonOrganizationAvatar/CommonOrganizationAvatar.vue'\n\nimport { useEditedBy } from '#mobile/composables/useEditedBy.ts'\n\nimport type { OrganizationItemData } from './types.ts'\n\nexport interface Props {\n  entity: OrganizationItemData\n}\n\nconst props = defineProps<Props>()\n\nconst { stringUpdated } = useEditedBy(toRef(props, 'entity'))\n\nconst users = computed(() => {\n  const { members } = props.entity\n  if (!members) return ''\n\n  const users = members.edges\n    .map((edge) => edge.node.fullname)\n    .filter((fullname) => fullname && fullname !== '-')\n    .slice(0, 2)\n\n  let usersString = users.join(', ')\n\n  const length = members.totalCount - users.length\n\n  if (length > 0) {\n    usersString += `, +${length}`\n  }\n\n  return usersString\n})\n</script>\n\n<template>\n  <div class=\"flex ltr:pr-3 rtl:pl-3\">\n    <div class=\"mt-4 flex w-14 justify-center\">\n      <CommonOrganizationAvatar\n        aria-hidden=\"true\"\n        class=\"bg-gray\"\n        :entity=\"entity\"\n      />\n    </div>\n    <div\n      class=\"flex flex-1 flex-col overflow-hidden border-b border-white/10 py-3 text-gray-100\"\n    >\n      <span class=\"truncate\">\n        {{\n          entity.ticketsCount?.open === 1\n            ? `1 ${$t('ticket')}`\n            : $t('%s tickets', entity.ticketsCount?.open || 0)\n        }}\n        <template v-if=\"users\">\n          ·\n          {{ users }}\n        </template>\n      </span>\n      <span\n        class=\"mb-1 line-clamp-3 text-lg leading-5 font-bold whitespace-normal\"\n      >\n        <slot> {{ entity.name }} </slot>\n      </span>\n      <div\n        v-if=\"stringUpdated\"\n        data-test-id=\"stringUpdated\"\n        class=\"text-gray truncate\"\n      >\n        {{ stringUpdated }}\n      </div>\n    </div>\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport OrganizationItem from '#mobile/components/Organization/OrganizationItem.vue'\n\nimport type { SearchPlugin } from './index.ts'\n\nexport default <SearchPlugin>{\n  model: 'Organization',\n  headerLabel: __('Organizations'),\n  searchLabel: __('Organizations with \"%s\"'),\n  component: OrganizationItem,\n  link: '/organizations/#{internalId}',\n  permissions: ['ticket.agent'],\n  order: 300,\n  icon: { name: 'organization', size: 'base' },\n  iconBg: 'bg-orange',\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport TicketItem from '#mobile/components/Ticket/TicketItem.vue'\n\nimport type { SearchPlugin } from './index.ts'\n\nexport default <SearchPlugin>{\n  model: 'Ticket',\n  headerLabel: __('Tickets'),\n  searchLabel: __('Tickets with \"%s\"'),\n  component: TicketItem,\n  link: '/tickets/#{internalId}',\n  permissions: ['ticket.agent', 'ticket.customer'],\n  icon: { name: 'all-tickets', size: 'base' },\n  iconBg: 'bg-blue',\n  order: 100,\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\n\nimport { useEditedBy } from '#mobile/composables/useEditedBy.ts'\n\nimport type { UserItemData } from './types.ts'\n\nexport interface Props {\n  entity: UserItemData\n}\n\nconst props = defineProps<Props>()\n\nconst { stringUpdated } = useEditedBy(toRef(props, 'entity'))\n</script>\n\n<template>\n  <div class=\"flex ltr:pr-3 rtl:pl-3\">\n    <div class=\"mt-4 flex w-14 justify-center\">\n      <CommonUserAvatar aria-hidden=\"true\" :entity=\"entity\" />\n    </div>\n    <div\n      class=\"flex flex-1 flex-col overflow-hidden border-b border-white/10 py-3 text-gray-100\"\n    >\n      <span class=\"truncate\">\n        {{\n          entity.ticketsCount?.open === 1\n            ? `1 ${$t('ticket')}`\n            : $t('%s tickets', entity.ticketsCount?.open || 0)\n        }}\n        <template v-if=\"entity.organization\">\n          ·\n          {{ entity.organization.name }}\n        </template>\n      </span>\n      <span\n        class=\"mb-1 line-clamp-3 text-lg leading-5 font-bold whitespace-normal\"\n      >\n        <slot> {{ entity.firstname }} {{ entity.lastname }} </slot>\n      </span>\n      <div v-if=\"stringUpdated\" class=\"truncate\" data-test-id=\"stringUpdated\">\n        {{ stringUpdated }}\n      </div>\n    </div>\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport UserItem from '#mobile/components/User/UserItem.vue'\n\nimport type { SearchPlugin } from './index.ts'\n\nexport default <SearchPlugin>{\n  model: 'User',\n  headerLabel: __('Users'),\n  searchLabel: __('Users with \"%s\"'),\n  component: UserItem,\n  order: 200,\n  link: '/users/#{internalId}',\n  permissions: ['ticket.agent'],\n  icon: { name: 'person', size: 'base' },\n  iconBg: 'bg-pink',\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { Props as IconProps } from '#shared/components/CommonIcon/CommonIcon.vue'\nimport type { EnumSearchableModels } from '#shared/graphql/types.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport type { Component } from 'vue'\n\nexport interface SearchPlugin {\n  model: EnumSearchableModels\n  headerLabel: string\n  searchLabel: string\n  order: number\n  link: string\n  permissions: string[]\n  icon?: string | IconProps\n  iconBg?: string\n  component: Component // component needs to have a slot called \"default\" and prop \"entity\"\n}\n\nconst pluginsModules = import.meta.glob<SearchPlugin>(\n  ['./**/*.ts', '!./**/index.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nconst pluginsFiles = Object.entries(pluginsModules)\n  .map<[string, SearchPlugin]>(([file, plugin]) => {\n    const name = file.replace(/^.*\\/([^/]+)\\.ts$/, '$1')\n    return [name, plugin]\n  })\n  .sort(([, p1], [, p2]) => p1.order - p2.order)\n\nexport const useSearchPlugins = () => {\n  const { hasPermission } = useSessionStore()\n  const plugins = pluginsFiles\n    .filter(([, plugin]) => hasPermission(plugin.permissions))\n    .reduce<Record<string, SearchPlugin>>((acc, [name, plugin]) => {\n      acc[name] = plugin\n      return acc\n    }, {})\n  return plugins\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { replaceTags } from '#shared/utils/formatter.ts'\n\nimport { useSearchPlugins } from '../plugins/index.ts'\n\ninterface Props {\n  type: string\n  data: Record<string, unknown>[]\n}\n\nconst props = defineProps<Props>()\n\nconst searchPlugins = useSearchPlugins()\n\nconst plugin = computed(() => searchPlugins[props.type])\n</script>\n\n<template>\n  <template v-for=\"item in data\" :key=\"item.id\">\n    <CommonLink :link=\"replaceTags(plugin.link, item, true)\">\n      <component :is=\"plugin.component\" :entity=\"item\" />\n    </CommonLink>\n  </template>\n</template>\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const SearchDocument = gql`\n    query search($search: String!, $onlyIn: EnumSearchableModels!, $limit: Int = 30) {\n  search(search: $search, onlyIn: $onlyIn, limit: $limit) {\n    totalCount\n    items {\n      ... on Ticket {\n        id\n        internalId\n        title\n        number\n        state {\n          id\n          name\n        }\n        priority {\n          name\n          defaultCreate\n          uiColor\n        }\n        customer {\n          id\n          internalId\n          fullname\n        }\n        updatedAt\n        updatedBy {\n          id\n          fullname\n        }\n        stateColorCode\n      }\n      ... on User {\n        id\n        internalId\n        firstname\n        lastname\n        image\n        active\n        outOfOffice\n        outOfOfficeStartAt\n        outOfOfficeEndAt\n        vip\n        organization {\n          id\n          internalId\n          name\n        }\n        updatedAt\n        updatedBy {\n          id\n          fullname\n        }\n        ticketsCount {\n          open\n          closed\n        }\n      }\n      ... on Organization {\n        id\n        internalId\n        members(first: 2) {\n          edges {\n            node {\n              id\n              fullname\n            }\n          }\n          totalCount\n        }\n        active\n        name\n        vip\n        updatedAt\n        updatedBy {\n          id\n          fullname\n        }\n        ticketsCount {\n          open\n          closed\n        }\n      }\n    }\n  }\n}\n    `;\nexport function useSearchQuery(variables: Types.SearchQueryVariables | VueCompositionApi.Ref<Types.SearchQueryVariables> | ReactiveFunction<Types.SearchQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.SearchQuery, Types.SearchQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.SearchQuery, Types.SearchQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.SearchQuery, Types.SearchQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.SearchQuery, Types.SearchQueryVariables>(SearchDocument, variables, options);\n}\nexport function useSearchLazyQuery(variables?: Types.SearchQueryVariables | VueCompositionApi.Ref<Types.SearchQueryVariables> | ReactiveFunction<Types.SearchQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.SearchQuery, Types.SearchQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.SearchQuery, Types.SearchQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.SearchQuery, Types.SearchQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.SearchQuery, Types.SearchQueryVariables>(SearchDocument, variables, options);\n}\nexport type SearchQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.SearchQuery, Types.SearchQueryVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useLocalStorage } from '@vueuse/core'\nimport { ignorableWatch } from '@vueuse/shared'\nimport { debounce } from 'lodash-es'\nimport { computed, onMounted, reactive, ref, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nimport type { CommonInputSearchExpose } from '#shared/components/CommonInputSearch/CommonInputSearch.vue'\nimport CommonInputSearch from '#shared/components/CommonInputSearch/CommonInputSearch.vue'\nimport { useStickyHeader } from '#shared/composables/useStickyHeader.ts'\nimport { EnumSearchableModels } from '#shared/graphql/types.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport CommonButtonGroup from '#mobile/components/CommonButtonGroup/CommonButtonGroup.vue'\nimport type { CommonButtonOption } from '#mobile/components/CommonButtonGroup/types.ts'\nimport CommonSectionMenu from '#mobile/components/CommonSectionMenu/CommonSectionMenu.vue'\nimport type { MenuItem } from '#mobile/components/CommonSectionMenu/index.ts'\n\nimport SearchResults from '../components/SearchResults.vue'\nimport { useSearchLazyQuery } from '../graphql/queries/searchOverview.api.ts'\nimport { useSearchPlugins } from '../plugins/index.ts'\n\nimport type { LocationQueryRaw } from 'vue-router'\n\ninterface SearchTypeItem extends MenuItem {\n  value: string\n}\n\nconst LAST_SEARCHES_LENGTH_MAX = 5\n\nconst props = defineProps<{ type?: string }>()\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst searchPlugins = useSearchPlugins()\n\nconst search = ref(String(route.query.search || ''))\n// we need a separate debounced value to not trigger query\nconst filter = ref(search.value)\n\nconst canSearch = computed(() => filter.value.length >= 1)\n\nconst found = reactive({} as Record<string, Record<string, unknown>[]>)\nconst { userId } = useSessionStore()\n\nconst recentSearches = useLocalStorage<string[]>(`${userId}-recentSearches`, [])\n\nconst model = computed(() => {\n  return props.type\n    ? searchPlugins[props.type]?.model\n    : EnumSearchableModels.Ticket // default passed by router\n})\n\nconst searchQuery = new QueryHandler(\n  useSearchLazyQuery(\n    () => ({\n      search: filter.value,\n      onlyIn: model.value,\n    }),\n    () => ({ enabled: canSearch.value }),\n  ),\n)\n\nconst loading = searchQuery.loading()\n\nsearchQuery.watchOnResult((data) => {\n  if (!props.type) return\n  if (!data.search) return\n\n  found[props.type] = data.search.items\n})\n\nconst replaceQuery = (query: LocationQueryRaw) => {\n  return router.replace({\n    query: {\n      ...route.query,\n      ...query,\n    },\n  })\n}\n\nconst searchInput = ref<CommonInputSearchExpose>()\nconst focusSearch = () => searchInput.value?.focus()\n\nconst selectType = async (selectedType: string) => {\n  await router.replace({ params: { type: selectedType } })\n\n  // focus on tab that was selected\n  // it's useful when user selected type from the main screen (without tab controls)\n  // and after that we focus on tab controls, so user can easily change current type\n  const tabOption = document.querySelector(\n    `[data-value=\"${selectedType}\"]`,\n  ) as HTMLElement | null\n  tabOption?.focus()\n}\n\nonMounted(() => {\n  focusSearch()\n})\n\nconst loadByFilter = async (filterQuery: string) => {\n  filter.value = filterQuery\n  replaceQuery({ search: filterQuery })\n\n  if (!canSearch.value || !props.type) {\n    return\n  }\n\n  recentSearches.value = recentSearches.value.filter(\n    (item) => item !== filterQuery,\n  )\n  recentSearches.value.push(filterQuery)\n  if (recentSearches.value.length > LAST_SEARCHES_LENGTH_MAX) {\n    recentSearches.value.shift()\n  }\n\n  if (searchQuery.isFirstRun()) {\n    searchQuery.load()\n  }\n}\n\n// load data after a few ms to not overload the api\nconst debouncedLoad = debounce(loadByFilter, 600)\n\nconst { ignoreUpdates } = ignorableWatch(search, async (search) => {\n  if (!search || !props.type) {\n    await loadByFilter(search)\n    return\n  }\n\n  await debouncedLoad(search)\n})\n\n// load data immidiately when type changes or when recent search selected\nwatch(\n  () => props.type,\n  () => loadByFilter(search.value),\n  { immediate: true },\n)\n\nconst selectRecentSearch = async (recentSearch: string) => {\n  ignoreUpdates(() => {\n    search.value = recentSearch\n  })\n  focusSearch()\n  await loadByFilter(recentSearch)\n}\n\nconst pluginsArray = Object.entries(searchPlugins).map(([name, plugin]) => ({\n  name,\n  ...plugin,\n}))\n\nconst searchPills: CommonButtonOption[] = pluginsArray.map((plugin) => ({\n  value: plugin.name,\n  label: plugin.headerLabel,\n}))\n\nconst menuSearchTypes = computed<SearchTypeItem[]>(() =>\n  pluginsArray.map((plugin) => {\n    return {\n      label: plugin.searchLabel,\n      labelPlaceholder: [search.value],\n      type: 'link',\n      value: plugin.name,\n      icon: plugin.icon,\n      iconBg: plugin.iconBg,\n      onClick: () => selectType(plugin.name),\n    }\n  }),\n)\n\nconst canShowLastSearches = computed(() => {\n  if (loading.value) return false\n\n  return (props.type && !found[props.type]?.length) || !canSearch.value\n})\n\nconst { headerElement, stickyStyles } = useStickyHeader([\n  loading,\n  () => !!props.type,\n])\n\nconst showLoader = computed(() => {\n  if (!loading.value) return false\n  return !props.type || !found[props.type]\n})\n</script>\n\n<script lang=\"ts\">\nexport default {\n  beforeRouteEnter(to) {\n    const { type } = to.params\n    const searchPlugins = useSearchPlugins()\n\n    if (!type) {\n      const pluginsArray = Object.entries(searchPlugins)\n\n      // if no type is selected, and only one type is available, select it\n      if (pluginsArray.length === 1) {\n        return { ...to, params: { type: pluginsArray[0][0] } }\n      }\n\n      return undefined\n    }\n\n    if (Array.isArray(type) || !searchPlugins[type as string]) {\n      return { ...to, params: {} }\n    }\n\n    return undefined\n  },\n}\n</script>\n\n<template>\n  <div>\n    <header ref=\"headerElement\" class=\"bg-black\" :style=\"stickyStyles.header\">\n      <div class=\"flex p-4\">\n        <CommonInputSearch\n          ref=\"searchInput\"\n          v-model=\"search\"\n          wrapper-class=\"flex-1\"\n          class=\"!h-10\"\n          :aria-label=\"$t('Enter search and select a type to search for')\"\n        />\n        <CommonLink\n          link=\"/\"\n          class=\"text-blue flex items-center justify-center text-base ltr:pl-3 rtl:pr-3\"\n        >\n          {{ $t('Cancel') }}\n        </CommonLink>\n      </div>\n      <h1 class=\"sr-only\">{{ $t('Search') }}</h1>\n      <CommonButtonGroup\n        v-if=\"type\"\n        class=\"border-b border-[rgba(255,255,255,0.1)] px-4 pb-4\"\n        as=\"tabs\"\n        :options=\"searchPills\"\n        :model-value=\"type\"\n        @update:model-value=\"selectType($event as string)\"\n      />\n      <div\n        v-else-if=\"canSearch\"\n        class=\"mt-8 px-4\"\n        data-test-id=\"selectTypesSection\"\n      >\n        <CommonSectionMenu\n          :header-label=\"__('Search for…')\"\n          :items=\"menuSearchTypes\"\n        />\n      </div>\n    </header>\n    <div :style=\"stickyStyles.body\">\n      <div\n        v-if=\"showLoader\"\n        class=\"flex h-14 w-full items-center justify-center\"\n      >\n        <CommonIcon name=\"loading\" animation=\"spin\" />\n      </div>\n      <div\n        v-else-if=\"canSearch && type && found[type]?.length\"\n        id=\"search-results\"\n        aria-live=\"polite\"\n        role=\"tabpanel\"\n        :aria-busy=\"showLoader\"\n      >\n        <SearchResults :data=\"found[type]\" :type=\"type\" />\n      </div>\n      <div v-else-if=\"canSearch && type\" class=\"px-4 pt-4\">\n        {{ $t('No entries') }}\n      </div>\n      <div\n        v-if=\"canShowLastSearches\"\n        class=\"px-4 pt-8\"\n        data-test-id=\"recentSearches\"\n      >\n        <div class=\"text-white/50\">{{ $t('Recent searches') }}</div>\n        <ul class=\"pt-3\">\n          <li\n            v-for=\"searchItem in [...recentSearches].reverse()\"\n            :key=\"searchItem\"\n            class=\"pb-4\"\n          >\n            <button\n              type=\"button\"\n              class=\"flex items-center\"\n              @click=\"selectRecentSearch(searchItem)\"\n            >\n              <span>\n                <CommonIcon\n                  name=\"clock\"\n                  size=\"small\"\n                  class=\"mx-2 text-white/50\"\n                  decorative\n                />\n              </span>\n              <span class=\"text-left text-base\">{{ searchItem }}</span>\n            </button>\n          </li>\n          <li v-if=\"!recentSearches.length\">{{ $t('No recent searches') }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n"],"names":["props","__props","stringUpdated","useEditedBy","toRef","users","computed","members","edge","fullname","usersString","length","__vite_glob_0_0","OrganizationItem","__vite_glob_0_1","TicketItem","__vite_glob_0_2","UserItem","pluginsModules","pluginsFiles","file","plugin","p1","p2","useSearchPlugins","hasPermission","useSessionStore","acc","name","searchPlugins","SearchDocument","gql","useSearchLazyQuery","variables","options","VueApolloComposable.useLazyQuery","__default__","to","type","pluginsArray","route","useRoute","router","useRouter","search","ref","filter","canSearch","found","reactive","userId","recentSearches","useLocalStorage","model","_a","EnumSearchableModels","searchQuery","QueryHandler","loading","data","replaceQuery","query","searchInput","focusSearch","selectType","selectedType","tabOption","onMounted","loadByFilter","filterQuery","item","debouncedLoad","debounce","ignoreUpdates","ignorableWatch","watch","selectRecentSearch","recentSearch","searchPills","menuSearchTypes","canShowLastSearches","headerElement","stickyStyles","useStickyHeader","showLoader"],"mappings":"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"}