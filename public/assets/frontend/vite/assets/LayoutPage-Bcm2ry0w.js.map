{"version":3,"file":"LayoutPage-Bcm2ry0w.js","sources":["../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/AvatarMenuAppearanceItem.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/plugins/appearance.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/plugins/keyboard-shortcuts.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/plugins/logout.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/plugins/personal-settings.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/plugins/playground.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/plugins/index.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/useCollapsedState.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/AvatarMenu.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AddMenu/plugins/ticket-create.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AddMenu/plugins/index.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AddMenu/AddMenu.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AdminMenu/plugins/setting.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AdminMenu/plugins/index.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AdminMenu/AdminMenu.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/MenuContainer.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarFooterMenu.vue","../../../../../app/frontend/shared/composables/useBrowserNotifications.ts","../../../../../app/frontend/shared/composables/useOnlineNotification/useOnlineNotificationSound.ts","../../../../../app/frontend/shared/entities/online-notification/composables/useOnlineNotificationList.ts","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification/NotificationButton.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification/NotificationPopover/NotificationList/NotificationItem.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification/NotificationPopover.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification.vue","../../../../../app/frontend/apps/desktop/components/QuickSearch/QuickSearchInput/QuickSearchInput.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader.vue","../../../../../app/frontend/apps/desktop/components/PageNavigation/firstLevelRoutes.ts","../../../../../app/frontend/apps/desktop/components/PageNavigation/PageNavigation.vue","../../../../../app/frontend/apps/desktop/components/QuickSearch/graphql/queries/quickSearch.api.ts","../../../../../app/frontend/apps/desktop/components/QuickSearch/composables/useQuickSearchInput.ts","../../../../../app/frontend/apps/desktop/components/QuickSearch/entitites/Organization.vue","../../../../../app/frontend/apps/desktop/components/QuickSearch/plugins/organization.ts","../../../../../app/frontend/apps/desktop/components/QuickSearch/entitites/Ticket.vue","../../../../../app/frontend/apps/desktop/components/QuickSearch/plugins/ticket.ts","../../../../../app/frontend/apps/desktop/components/QuickSearch/entitites/User.vue","../../../../../app/frontend/apps/desktop/components/QuickSearch/plugins/user.ts","../../../../../app/frontend/apps/desktop/components/QuickSearch/plugins/index.ts","../../../../../app/frontend/apps/desktop/components/QuickSearch/QuickSearchResultList/QuickSearchResultList.vue","../../../../../app/frontend/apps/desktop/composables/useRecentSearches.ts","../../../../../app/frontend/apps/desktop/entities/user/current/graphql/mutations/userCurrentRecentViewReset.api.ts","../../../../../app/frontend/apps/desktop/entities/user/current/graphql/queries/userCurrentRecentViewList.api.ts","../../../../../app/frontend/apps/desktop/entities/user/current/graphql/subscriptions/userCurrentRecentViewUpdates.api.ts","../../../../../app/frontend/apps/desktop/components/QuickSearch/QuickSearch.vue","../../../../../app/frontend/apps/desktop/entities/user/current/graphql/mutations/userCurrentTaskbarItemListPrio.api.ts","../../../../../app/frontend/apps/desktop/components/UserTaskbarTabs/UserTaskbarTabForbidden.vue","../../../../../app/frontend/apps/desktop/components/UserTaskbarTabs/UserTaskbarTabNotFound.vue","../../../../../app/frontend/apps/desktop/components/UserTaskbarTabs/UserTaskbarTabRemove.vue","../../../../../app/frontend/apps/desktop/components/UserTaskbarTabs/UserTaskbarTabs.vue","../../../../../app/frontend/apps/desktop/components/layout/LayoutPage.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed, useTemplateRef } from 'vue'\n\nimport CommonPopoverMenuItem, {\n  type Props,\n} from '#desktop/components/CommonPopoverMenu/CommonPopoverMenuItem.vue'\nimport ThemeSwitch from '#desktop/components/ThemeSwitch/ThemeSwitch.vue'\nimport { useThemeStore } from '#desktop/stores/theme.ts'\n\ndefineProps<Props>()\n\nconst themeSwitchInstance = useTemplateRef('theme-switch')\n\nconst cycleThemeSwitchValue = () => {\n  themeSwitchInstance.value?.cycleValue()\n}\n\nconst themeStore = useThemeStore()\nconst { updateTheme } = themeStore\nconst { currentTheme } = storeToRefs(themeStore)\n\nconst modelTheme = computed({\n  get: () => currentTheme.value,\n  set: (theme) => updateTheme(theme),\n})\n</script>\n\n<template>\n  <CommonPopoverMenuItem\n    v-bind=\"{ ...$props, ...$attrs }\"\n    @click=\"cycleThemeSwitchValue\"\n  />\n  <div class=\"flex items-center px-2\">\n    <ThemeSwitch\n      ref=\"theme-switch\"\n      v-model=\"modelTheme\"\n      class=\"hover:outline-blue-300 focus:outline-blue-600 hover:focus:outline-blue-600 dark:hover:outline-blue-950 dark:focus:outline-blue-900 dark:hover:focus:outline-blue-900\"\n      size=\"small\"\n    />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport AvatarMenuAppearanceItem from '../AvatarMenuAppearanceItem.vue'\n\nimport type { AvatarMenuPlugin } from './index.ts'\n\nexport default <AvatarMenuPlugin>{\n  key: 'appearance',\n  label: __('Appearance'),\n  icon: 'brightness-alt-high',\n  noCloseOnClick: true,\n  order: 100,\n  component: AvatarMenuAppearanceItem,\n  permission: 'user_preferences.appearance',\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AvatarMenuPlugin } from './index.ts'\n\nexport default <AvatarMenuPlugin>{\n  key: 'keyboard-shortcuts',\n  label: __('Keyboard shortcuts'),\n  onClick: () => {\n    console.log('OPEN KEYBOARD SHORTCUTS DIALOG')\n  },\n  icon: 'keyboard',\n  order: 200,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AvatarMenuPlugin } from './index.ts'\n\nexport default <AvatarMenuPlugin>{\n  key: 'sign-out',\n  label: __('Sign out'),\n  link: '/logout',\n  icon: 'box-arrow-in-right',\n  separatorTop: true,\n  order: 600,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AvatarMenuPlugin } from './index.ts'\n\nexport default <AvatarMenuPlugin>{\n  key: 'personal-setting',\n  label: __('Profile settings'),\n  link: '/personal-setting',\n  icon: 'person-gear',\n  order: 400,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AvatarMenuPlugin } from './index.ts'\n\nconst IS_DEV_MODE = import.meta.env.DEV\n\nexport default <AvatarMenuPlugin>{\n  key: 'playground',\n  label: 'Playground', // no no no\n  show: () => IS_DEV_MODE,\n  link: '/playground',\n  icon: 'logo-flat',\n  order: 150,\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { MenuItem } from '#desktop/components/CommonPopoverMenu/types.ts'\n\nexport interface AvatarMenuPlugin extends MenuItem {\n  order: number\n}\n\nconst pluginModules = import.meta.glob<AvatarMenuPlugin>(\n  ['./**/*.ts', '!./**/index.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nexport const avatarMenuPlugins = Object.values(pluginModules).sort(\n  (p1, p2) => p1.order - p2.order,\n)\n\nexport const avatarMenuItems = avatarMenuPlugins.map(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ({ order, ...item }) => item,\n)\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { type ComputedRef, inject, type InjectionKey } from 'vue'\n\nexport const COLLAPSED_STATE_KEY = Symbol(\n  'collapsed-state-key',\n) as InjectionKey<ComputedRef<boolean>>\n\nexport const useCollapsedState = () => {\n  const collapsedState = inject(COLLAPSED_STATE_KEY)\n\n  return {\n    collapsedState,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport CommonPopover from '#shared/components/CommonPopover/CommonPopover.vue'\nimport { usePopover } from '#shared/components/CommonPopover/usePopover.ts'\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport CommonPopoverMenu from '#desktop/components/CommonPopoverMenu/CommonPopoverMenu.vue'\nimport { avatarMenuItems } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/plugins/index.ts'\nimport { useCollapsedState } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/useCollapsedState.ts'\n\nconst { user } = storeToRefs(useSessionStore())\n\nconst { collapsedState } = useCollapsedState()\n\nconst avatarSize = computed(() => (collapsedState?.value ? 'small' : 'normal'))\n\nconst { popover, popoverTarget, toggle, isOpen: popoverIsOpen } = usePopover()\n</script>\n\n<template>\n  <CommonPopover\n    id=\"user-menu-popover\"\n    ref=\"popover\"\n    :owner=\"popoverTarget\"\n    :hide-arrow=\"collapsedState\"\n    orientation=\"autoVertical\"\n    :placement=\"collapsedState ? 'start' : 'arrowStart'\"\n  >\n    <CommonPopoverMenu\n      :popover=\"popover\"\n      :header-label=\"user?.fullname!\"\n      :items=\"avatarMenuItems\"\n    />\n  </CommonPopover>\n\n  <button\n    id=\"user-menu\"\n    ref=\"popoverTarget\"\n    v-tooltip=\"user?.fullname || user?.email || $t('User menu')\"\n    class=\"rounded-full outline-2 outline-transparent hover:outline-blue-900 focus-visible:outline-blue-800 hover:focus-visible:outline-blue-800\"\n    :class=\"{\n      'outline-blue-800! hover:outline-blue-800!': popoverIsOpen,\n    }\"\n    :aria-label=\"user?.fullname || user?.email || $t('User menu')\"\n    aria-controls=\"user-menu-popover\"\n    aria-expanded=\"false\"\n    @click=\"toggle(true)\"\n  >\n    <CommonUserAvatar\n      v-if=\"user\"\n      :entity=\"user\"\n      class=\"!flex\"\n      :size=\"avatarSize\"\n      personal\n    />\n  </button>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport type { AddMenuItem } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/types.ts'\n\nexport default {\n  key: 'ticket-create',\n  permission: ['ticket.agent', 'ticket.customer'],\n  order: 100,\n  label: __('New ticket'),\n  variant: 'secondary',\n  show() {\n    const { config } = useApplicationStore()\n    const { user } = useSessionStore()\n\n    if (user?.permissions?.names.includes('ticket.agent')) return true\n\n    return config.customer_ticket_create\n  },\n  icon: 'plus-square-fill',\n  link: '/tickets/create',\n} as AddMenuItem\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AddMenuItem } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/types.ts'\n\nconst modules = import.meta.glob<AddMenuItem>(['./*.ts', '!./index.ts'], {\n  eager: true,\n  import: 'default',\n})\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst addModules = Object.entries(modules).map(([_, module]) => module)\n\nexport default addModules.sort((m1, m2) => m1.order - m2.order)\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport CommonActionMenu from '#desktop/components/CommonActionMenu/CommonActionMenu.vue'\nimport menuItems from '#desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AddMenu/plugins/index.ts'\nimport { useCollapsedState } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/useCollapsedState.ts'\n\nconst { collapsedState } = useCollapsedState()\n\nconst defaultItem = computed(() =>\n  menuItems.find((item) => item.key === 'ticket-create'),\n)\n</script>\n\n<template>\n  <CommonActionMenu\n    class=\"flex!\"\n    orientation=\"autoVertical\"\n    :hide-arrow=\"collapsedState\"\n    :default-icon=\"defaultItem?.icon\"\n    :default-button-variant=\"defaultItem?.variant\"\n    :placement=\"collapsedState ? 'start' : 'arrowStart'\"\n    link-size=\"small\"\n    button-size=\"large\"\n    :actions=\"menuItems\"\n  />\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AdminMenuItem } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/types.ts'\n\nexport default {\n  order: 100,\n  key: 'admin',\n  label: __('Administration'),\n  permission: ['admin.*'],\n  variant: 'neutral',\n  icon: 'gear',\n  link: '/#manage', // This is a transition solution, the actual link will be different\n} as AdminMenuItem\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { AdminMenuItem } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/types.ts'\n\nconst modules = import.meta.glob<AdminMenuItem>(['./*.ts', '!./index.ts'], {\n  eager: true,\n  import: 'default',\n})\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst adminModules = Object.entries(modules).map(([_, module]) => module)\n\nexport default adminModules.sort((m1, m2) => m1.order - m2.order)\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport CommonActionMenu from '#desktop/components/CommonActionMenu/CommonActionMenu.vue'\nimport adminItems from '#desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AdminMenu/plugins/index.ts'\nimport { useCollapsedState } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/useCollapsedState.ts'\n\nconst { collapsedState } = useCollapsedState()\n\nconst defaultItem = computed(() =>\n  adminItems.find((item) => item.key === 'admin'),\n)\n</script>\n\n<template>\n  <CommonActionMenu\n    class=\"flex!\"\n    :actions=\"adminItems\"\n    orientation=\"autoVertical\"\n    :default-icon=\"defaultItem?.icon\"\n    :default-button-variant=\"defaultItem?.variant\"\n    :hide-arrow=\"collapsedState\"\n    :placement=\"collapsedState ? 'start' : 'arrowStart'\"\n    link-size=\"small\"\n    button-size=\"large\"\n  />\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport AddMenu from '#desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AddMenu/AddMenu.vue'\nimport SettingMenu from '#desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/AdminMenu/AdminMenu.vue'\nimport { useCollapsedState } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/useCollapsedState.ts'\n\nconst { collapsedState } = useCollapsedState()\n</script>\n\n<template>\n  <div\n    role=\"list\"\n    class=\"flex items-center gap-4 rounded-xl bg-gray-700 p-4 empty:hidden\"\n    :class=\"{ 'flex-col bg-transparent': collapsedState }\"\n  >\n    <SettingMenu role=\"listitem\" />\n    <AddMenu role=\"listitem\" />\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, provide } from 'vue'\n\nimport AvatarMenu from '#desktop/components/layout/LayoutSidebar/LeftSidebar/AvatarMenu/AvatarMenu.vue'\nimport MenuContainer from '#desktop/components/layout/LayoutSidebar/LeftSidebar/MenuContainer/MenuContainer.vue'\nimport { COLLAPSED_STATE_KEY } from '#desktop/components/layout/LayoutSidebar/LeftSidebar/useCollapsedState.ts'\n\nconst props = defineProps<{\n  collapsed?: boolean\n}>()\n\nprovide(\n  COLLAPSED_STATE_KEY,\n  computed(() => props.collapsed),\n)\n</script>\n\n<template>\n  <section\n    class=\"flex flex-row items-center justify-between\"\n    :class=\"{ 'mx-auto mb-0.5 flex-col!': collapsed }\"\n  >\n    <AvatarMenu />\n    <MenuContainer />\n  </section>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { usePermission } from '@vueuse/core'\nimport { computed } from 'vue'\n\nexport const useBrowserNotifications = () => {\n  const notificationPermission = usePermission('notifications')\n\n  const isGranted = computed(() => notificationPermission.value === 'granted')\n\n  const requestNotification = async () =>\n    'requestPermission' in Notification\n      ? Notification.requestPermission()\n      : Promise.resolve()\n\n  return {\n    notificationPermission,\n    isGranted,\n    requestNotification,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nconst defaultSoundFile = 'Xylo.mp3'\n\nexport const useOnlineNotificationSound = () => {\n  const { user } = storeToRefs(useSessionStore())\n\n  const isEnabled = computed(\n    () => Boolean(user.value?.preferences?.notification_sound?.enabled ?? true), // it is enabled by default for new users\n  )\n\n  const audioPath = computed(() => {\n    const fileName = user.value?.preferences?.notification_sound?.file\n    return `/assets/sounds/${fileName ?? defaultSoundFile}`\n  })\n\n  const getPreloadedAudio = (path: string) => {\n    const sound = new Audio(path)\n    sound.preload = 'auto'\n    return sound\n  }\n\n  const audio = computed(() => getPreloadedAudio(audioPath.value))\n\n  const play = () =>\n    audio.value?.play().catch(() => {\n      console.error('Failed to play notification sound')\n    })\n\n  return {\n    isEnabled,\n    play,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\nimport { computed } from 'vue'\n\nimport { useOnlineNotificationsQuery } from '#shared/entities/online-notification/graphql/queries/onlineNotifications.api.ts'\nimport type { OnlineNotification } from '#shared/graphql/types.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\nimport { edgesToArray } from '#shared/utils/helpers.ts'\n\nexport const useOnlineNotificationList = () => {\n  const notificationsQuery = new QueryHandler(useOnlineNotificationsQuery())\n\n  const loading = notificationsQuery.loading()\n\n  const result = notificationsQuery.result()\n\n  const notificationList = computed(\n    () =>\n      edgesToArray(result.value?.onlineNotifications) as OnlineNotification[],\n  )\n\n  const isLoading = computed(() => {\n    if (result.value !== undefined) return false\n\n    return loading.value\n  })\n\n  const hasUnseenNotification = computed(() =>\n    notificationList.value.some((notification) => !notification.seen),\n  )\n\n  const refetch = () => notificationsQuery.refetch()\n\n  return {\n    notificationList,\n    hasUnseenNotification,\n    refetch,\n    loading: isLoading,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\ninterface Props {\n  unseenCount: number\n}\n\nconst props = defineProps<Props>()\n\ndefineEmits<{\n  show: [MouseEvent]\n}>()\n\nconst truncatedUnseenCount = computed(() =>\n  props.unseenCount > 99 ? '99+' : props.unseenCount,\n)\n</script>\n\n<template>\n  <button\n    v-bind=\"$attrs\"\n    :aria-label=\"$t('Show notifications')\"\n    class=\"flex h-9 w-9 items-center justify-center rounded-full outline-blue-800 focus-visible:outline\"\n    @click=\"$emit('show', $event)\"\n  >\n    <!--  :TODO Add custom branding  -->\n    <CommonIcon name=\"logo\" class=\"z-10 block h-full w-full\" />\n  </button>\n  <CommonLabel\n    v-if=\"unseenCount > 0\"\n    size=\"xs\"\n    class=\"pointer-events-none absolute -bottom-[3px] z-20 block rounded-full border-2 border-white bg-pink-500 px-1 py-0.5 text-center font-bold text-white! ltr:left-[54%] rtl:right-[54%] dark:border-gray-500\"\n    :aria-label=\"$t('Unseen notifications count')\"\n    role=\"status\"\n  >\n    {{ truncatedUnseenCount }}\n  </CommonLabel>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport { useActivityMessage } from '#shared/composables/activity-message/useActivityMessage.ts'\nimport type { OnlineNotification } from '#shared/graphql/types.ts'\nimport { markup } from '#shared/utils/markup.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\n\ninterface Props {\n  notification: OnlineNotification\n}\n\nconst props = defineProps<Props>()\n\nconst emit = defineEmits<{\n  seen: [OnlineNotification]\n  remove: [OnlineNotification]\n}>()\n\nconst { link, builder, message } = useActivityMessage(\n  toRef(props, 'notification'),\n)\n\nconst handleLinkClick = (notification: OnlineNotification) => {\n  if (link) emit('seen', notification)\n}\n</script>\n\n<template>\n  <li>\n    <div class=\"group flex items-center justify-between gap-3\">\n      <component\n        :is=\"link ? 'CommonLink' : 'div'\"\n        v-if=\"builder\"\n        class=\"group/link grid grid-cols-[1fr_auto] grid-rows-[auto_auto] gap-x-2 hover:no-underline!\"\n        :class=\"{\n          'opacity-30': notification.seen,\n        }\"\n        :link=\"`/${link}`\"\n        @click=\"handleLinkClick(notification)\"\n      >\n        <CommonUserAvatar\n          v-if=\"notification.createdBy\"\n          :entity=\"notification.createdBy\"\n          size=\"small\"\n          class=\"col-start-1 row-span-2\"\n          no-indicator\n        />\n        <CommonIcon\n          v-else\n          class=\"col-start-1 row-span-2 m-2.5 self-center text-red-500\"\n          size=\"xs\"\n          role=\"presentation\"\n          name=\"x-lg\"\n        />\n\n        <!--   eslint-disable vue/no-v-text-v-html-on-component vue/no-v-html   -->\n        <CommonLabel\n          :id=\"`notification-${notification.id}`\"\n          tag=\"p\"\n          class=\"inline! text-lg leading-5 text-black dark:text-white\"\n          :class=\"{ 'group-hover/link:underline': notification.createdBy }\"\n          v-html=\"markup(message)\"\n        />\n\n        <CommonDateTime\n          class=\"row-2 col-start-2 text-xs text-gray-100 dark:text-neutral-500\"\n          :date-time=\"notification.createdAt\"\n          type=\"relative\"\n        />\n      </component>\n\n      <CommonButton\n        :aria-labelledby=\"`notification-${notification.id}`\"\n        :aria-description=\"$t('Remove Notification')\"\n        class=\"opacity-0 group-hover:opacity-100 focus-visible:opacity-100\"\n        icon=\"x-lg\"\n        variant=\"remove\"\n        @click=\"$emit('remove', notification)\"\n      />\n    </div>\n  </li>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useTemplateRef, type Ref } from 'vue'\n\nimport { useOnlineNotificationActions } from '#shared/entities/online-notification/composables/useOnlineNotificationActions.ts'\nimport { useOnlineNotificationCount } from '#shared/entities/online-notification/composables/useOnlineNotificationCount.ts'\nimport type { OnlineNotification } from '#shared/graphql/types.ts'\n\nimport CommonLoader from '#desktop/components/CommonLoader/CommonLoader.vue'\nimport NotificationHeader from '#desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification/NotificationPopover/NotificationHeader.vue'\nimport NotificationList from '#desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification/NotificationPopover/NotificationList.vue'\nimport { useElementScroll } from '#desktop/composables/useElementScroll.ts'\n\ninterface Props {\n  notificationList: OnlineNotification[]\n  loading: boolean\n  hasUnseenNotification: boolean\n}\n\nconst props = defineProps<Props>()\n\nconst emit = defineEmits<{\n  refetch: []\n  close: []\n}>()\n\nlet mutationTriggered = false\n\nconst { notificationsCountSubscription } = useOnlineNotificationCount()\nnotificationsCountSubscription.watchOnResult(() => {\n  if (!mutationTriggered) emit('refetch')\n  mutationTriggered = false\n})\n\nconst sectionElement = useTemplateRef('section')\n\nconst { reachedTop, isScrollable } = useElementScroll(\n  sectionElement as Ref<HTMLElement>,\n)\n\nconst { seenNotification, markAllRead, deleteNotification } =\n  useOnlineNotificationActions()\n\nconst runSeenNotification = async (notification: OnlineNotification) => {\n  mutationTriggered = true\n\n  emit('close')\n\n  return seenNotification(notification.metaObject?.id as string).then(() => {\n    mutationTriggered = false\n  })\n}\n\nconst removeNotification = async (notification: OnlineNotification) =>\n  deleteNotification(notification.id)\n\nconst runMarkAllRead = async () => {\n  mutationTriggered = true\n\n  const ids = props.notificationList.map((notification) => notification.id)\n\n  return markAllRead(ids).then(() => {\n    mutationTriggered = false\n  })\n}\n</script>\n\n<template>\n  <section ref=\"section\" class=\"scroll max-h-full w-[400px] overflow-y-auto\">\n    <NotificationHeader\n      class=\"sticky top-0 z-10 mb-2 bg-neutral-50 px-3 py-3 dark:bg-gray-500\"\n      :class=\"{\n        'border-b border-b-neutral-300 dark:border-b-gray-900': !reachedTop,\n      }\"\n      :has-unseen-notification=\"hasUnseenNotification\"\n      @mark-all=\"runMarkAllRead\"\n    />\n    <CommonLoader :loading=\"loading\">\n      <NotificationList\n        :class=\"{ 'ltr:pr-5 rtl:pl-5': isScrollable }\"\n        :list=\"notificationList\"\n        @seen=\"runSeenNotification\"\n        @remove=\"removeNotification\"\n      />\n    </CommonLoader>\n  </section>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useWebNotification, whenever } from '@vueuse/core'\nimport { onMounted, watch, ref } from 'vue'\n\nimport CommonPopover from '#shared/components/CommonPopover/CommonPopover.vue'\nimport { usePopover } from '#shared/components/CommonPopover/usePopover.ts'\nimport { useActivityMessage } from '#shared/composables/activity-message/useActivityMessage.ts'\nimport { useBrowserNotifications } from '#shared/composables/useBrowserNotifications.ts'\nimport { useOnlineNotificationSound } from '#shared/composables/useOnlineNotification/useOnlineNotificationSound.ts'\nimport { useOnlineNotificationCount } from '#shared/entities/online-notification/composables/useOnlineNotificationCount.ts'\nimport { useOnlineNotificationList } from '#shared/entities/online-notification/composables/useOnlineNotificationList.ts'\nimport { cleanupMarkup } from '#shared/utils/markup.ts'\n\nimport NotificationButton from '#desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification/NotificationButton.vue'\nimport NotificationPopover from '#desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification/NotificationPopover.vue'\n\nconst { unseenCount } = useOnlineNotificationCount()\n\nconst { popover, popoverTarget, toggle, close } = usePopover()\n\nconst { play, isEnabled } = useOnlineNotificationSound()\n\nconst { notificationPermission, isGranted, requestNotification } =\n  useBrowserNotifications()\n\nconst { show, isSupported } = useWebNotification()\n\nconst {\n  notificationList,\n  loading: isLoading,\n  hasUnseenNotification,\n  refetch,\n} = useOnlineNotificationList()\n\nconst watcher = whenever(unseenCount, (newCount, oldCount) => {\n  if (!isSupported.value) return watcher.stop()\n  if (!isGranted.value && newCount > oldCount) return\n\n  const notification = notificationList.value.at(-1)\n\n  if (!notification) return\n\n  const { message } = useActivityMessage(ref(notification))\n\n  const title = cleanupMarkup(message)\n\n  show({\n    title,\n    icon: `/assets/images/logo.svg`,\n    tag: notification.id,\n    silent: true,\n  })\n})\n\nwatch(\n  unseenCount,\n  (newCount, oldCount) => {\n    if (!isEnabled.value || !oldCount) return\n    if (newCount > oldCount && isGranted.value) play()\n  },\n  {\n    flush: 'post',\n  },\n)\n\n/**\n * ⚠️ Browsers enforce user interaction before allowing media playback\n * @chrome https://developer.chrome.com/blog/autoplay\n * @firefox https://support.mozilla.org/en-US/kb/block-autoplay\n */\nonMounted(() => {\n  // If notificationPermission is undefined, we never have asked for permission\n  if (isEnabled.value && !notificationPermission.value) requestNotification()\n})\n</script>\n\n<template>\n  <div\n    id=\"app-online-notification\"\n    ref=\"popoverTarget\"\n    :aria-label=\"$t('Notifications')\"\n    class=\"relative\"\n  >\n    <NotificationButton :unseen-count=\"unseenCount\" @show=\"toggle(true)\" />\n\n    <CommonPopover ref=\"popover\" orientation=\"right\" :owner=\"popoverTarget\">\n      <NotificationPopover\n        :unseen-count=\"unseenCount\"\n        :loading=\"isLoading\"\n        :has-unseen-notification=\"hasUnseenNotification\"\n        :notification-list=\"notificationList\"\n        @refetch=\"refetch\"\n        @close=\"close\"\n      />\n    </CommonPopover>\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { onBeforeUnmount, useTemplateRef, watch } from 'vue'\n\nimport emitter from '#shared/utils/emitter.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport CommonInputSearch from '#desktop/components/CommonInputSearch/CommonInputSearch.vue'\n\nconst searchValue = defineModel<string>()\n\nconst isSearchActive = defineModel<boolean>('search-active', {\n  default: false,\n})\n\nconst inputSearchInstance = useTemplateRef('input-search')\n\nconst resetInput = () => {\n  searchValue.value = ''\n  isSearchActive.value = false\n  // Blur input to make sure it does not get refocuses automatically and focus event is not emitted\n  inputSearchInstance.value?.blur()\n}\n\nconst handleEscapeKey = (event: KeyboardEvent) => {\n  if (event.code === 'Escape') resetInput()\n}\n\nwatch(isSearchActive, (isActive) =>\n  isActive\n    ? window.addEventListener('keydown', handleEscapeKey)\n    : window.removeEventListener('keydown', handleEscapeKey),\n)\n\nonBeforeUnmount(() => {\n  window.removeEventListener('keydown', handleEscapeKey)\n})\n\nemitter.on('focus-quick-search-field', () => inputSearchInstance.value?.focus())\nemitter.on('reset-quick-search-field', () => resetInput())\n</script>\n\n<template>\n  <div class=\"flex items-center gap-3\">\n    <CommonInputSearch\n      ref=\"input-search\"\n      v-model=\"searchValue\"\n      wrapper-class=\"rounded-lg bg-blue-200 px-2.5 py-2 outline-offset-1 outline-blue-800 focus-within:outline dark:bg-gray-700\"\n      @focus-input=\"isSearchActive = true\"\n    />\n    <CommonButton\n      v-if=\"isSearchActive\"\n      :aria-label=\"$t('Reset Search')\"\n      icon=\"x-lg\"\n      variant=\"neutral\"\n      @click=\"resetInput\"\n    />\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport OnlineNotification from '#desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader/OnlineNotification.vue'\nimport QuickSearchInput from '#desktop/components/QuickSearch/QuickSearchInput/QuickSearchInput.vue'\n\ninterface Props {\n  collapsed?: boolean\n}\n\nconst searchValue = defineModel<string>('search', {\n  required: true,\n})\n\nconst isSearchActive = defineModel<boolean>('search-active', {\n  default: false,\n})\n\ndefineProps<Props>()\n</script>\n\n<template>\n  <header\n    class=\"flex gap-2 rounded-t-lg\"\n    :class=\"{ 'justify-center': collapsed }\"\n  >\n    <QuickSearchInput\n      v-if=\"!collapsed\"\n      v-model=\"searchValue\"\n      v-model:search-active=\"isSearchActive\"\n      class=\"grow\"\n    />\n\n    <OnlineNotification\n      v-show=\"!isSearchActive\"\n      :class=\"{ 'ltr:ml-auto rtl:mr-auto': !collapsed }\"\n    />\n  </header>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { RouteRecordRaw } from 'vue-router'\n\ninterface RouteModule {\n  default: RouteRecordRaw[]\n}\n\ninterface PageRoute {\n  path: string\n  name: string\n  meta: {\n    title: string\n    order: number\n    level: number\n    icon: string\n    requiredPermission: string[]\n    requiresAuth: boolean\n    [key: string]: unknown\n  }\n}\n\nconst routeFiles = import.meta.glob<RouteModule>('../../pages/**/routes.ts', {\n  eager: true,\n  import: 'default',\n})\n\nconst routeValues = Object.values(routeFiles)\nconst firstLevelRoutes: PageRoute[] = []\n\nlet permanentItemCount = 0\n\nrouteValues.forEach((routeModule) => {\n  if (Array.isArray(routeModule)) {\n    permanentItemCount += routeModule.filter(\n      (route: RouteRecordRaw) => route.meta?.permanentItem,\n    ).length\n\n    const routes = routeModule.filter((route: RouteRecordRaw) => {\n      return route.meta?.level === 1\n    })\n    if (!routes?.length) return\n\n    const mappedRoutes = routes.map((route) => ({\n      path: route.path,\n      name: route.name,\n      meta: route.meta,\n    }))\n\n    firstLevelRoutes.push(...mappedRoutes)\n  }\n})\n\nconst sortedFirstLevelRoutes = firstLevelRoutes.sort(\n  (a, b) => a.meta.order - b.meta.order,\n)\n\nconst numberOfPermanentItems = permanentItemCount\n\nexport { firstLevelRoutes, sortedFirstLevelRoutes, numberOfPermanentItems }\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { nextTick } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport { useSessionStore } from '#shared/stores/session.ts'\nimport emitter from '#shared/utils/emitter.ts'\n\nimport CommonSectionCollapse from '#desktop/components/CommonSectionCollapse/CommonSectionCollapse.vue'\nimport { sortedFirstLevelRoutes } from '#desktop/components/PageNavigation/firstLevelRoutes.ts'\n\nimport CommonButton from '../CommonButton/CommonButton.vue'\n\ninterface Props {\n  collapsed?: boolean\n}\n\n//*\n// IMPORTANT: This is just a temporary implementations please replace and adapt it later\n// *//\ndefineProps<Props>()\n\nconst router = useRouter()\n\nconst { userId } = useSessionStore()\n\nconst openSearch = () => {\n  emitter.emit('expand-collapsed-content', `${userId}-left`)\n  nextTick(() => emitter.emit('focus-quick-search-field'))\n}\n</script>\n\n<template>\n  <div class=\"py-2\">\n    <CommonSectionCollapse\n      id=\"page-navigation\"\n      :title=\"__('Navigation')\"\n      :no-header=\"collapsed\"\n    >\n      <template #default=\"{ headerId }\">\n        <nav :aria-labelledby=\"headerId\">\n          <ul class=\"m-0 flex basis-full flex-col gap-1 p-0\">\n            <li class=\"flex justify-center\">\n              <CommonButton\n                v-if=\"collapsed\"\n                class=\"flex-shrink-0 text-neutral-400 hover:outline-blue-900\"\n                size=\"large\"\n                variant=\"neutral\"\n                :aria-label=\"$t('Open quick search')\"\n                icon=\"search\"\n                @click=\"openSearch\"\n              />\n            </li>\n            <li\n              v-for=\"route in sortedFirstLevelRoutes\"\n              :key=\"route.path\"\n              class=\"flex justify-center\"\n            >\n              <CommonButton\n                v-if=\"collapsed\"\n                class=\"flex-shrink-0 text-neutral-400 hover:outline-blue-900\"\n                size=\"large\"\n                variant=\"neutral\"\n                :icon=\"route.meta.icon\"\n                @click=\"router.push(route.path.replace(/:\\w+/, ''))\"\n              />\n              <CommonLink\n                v-else\n                class=\"flex grow gap-2 rounded-md px-2 py-3 text-neutral-400 hover:bg-blue-900 hover:text-white! hover:no-underline!\"\n                :class=\"{\n                  'bg-blue-800! text-white!':\n                    router.currentRoute.value.name === route.name, // $route.name is not detected by ts\n                }\"\n                :link=\"route.path.replace(/\\/:\\w+/, '')\"\n                exact-active-class=\"bg-blue-800! w-full text-white!\"\n                internal\n              >\n                <CommonLabel\n                  class=\"gap-2 text-sm! text-current!\"\n                  size=\"large\"\n                  :prefix-icon=\"route.meta.icon\"\n                >\n                  {{ $t(route.meta.title) }}\n                </CommonLabel>\n              </CommonLink>\n            </li>\n          </ul>\n        </nav>\n      </template>\n    </CommonSectionCollapse>\n  </div>\n</template>\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const QuickSearchDocument = gql`\n    query quickSearch($search: String!, $limit: Int = 10) {\n  quickSearchOrganizations: search(\n    search: $search\n    onlyIn: Organization\n    limit: $limit\n  ) {\n    totalCount\n    items {\n      ... on Organization {\n        id\n        internalId\n        name\n        active\n      }\n    }\n  }\n  quickSearchTickets: search(search: $search, onlyIn: Ticket, limit: $limit) {\n    totalCount\n    items {\n      ... on Ticket {\n        id\n        internalId\n        title\n        number\n        state {\n          id\n          name\n        }\n        stateColorCode\n      }\n    }\n  }\n  quickSearchUsers: search(search: $search, onlyIn: User, limit: $limit) {\n    totalCount\n    items {\n      ... on User {\n        id\n        internalId\n        fullname\n        active\n      }\n    }\n  }\n}\n    `;\nexport function useQuickSearchQuery(variables: Types.QuickSearchQueryVariables | VueCompositionApi.Ref<Types.QuickSearchQueryVariables> | ReactiveFunction<Types.QuickSearchQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.QuickSearchQuery, Types.QuickSearchQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.QuickSearchQuery, Types.QuickSearchQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.QuickSearchQuery, Types.QuickSearchQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.QuickSearchQuery, Types.QuickSearchQueryVariables>(QuickSearchDocument, variables, options);\n}\nexport function useQuickSearchLazyQuery(variables?: Types.QuickSearchQueryVariables | VueCompositionApi.Ref<Types.QuickSearchQueryVariables> | ReactiveFunction<Types.QuickSearchQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.QuickSearchQuery, Types.QuickSearchQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.QuickSearchQuery, Types.QuickSearchQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.QuickSearchQuery, Types.QuickSearchQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.QuickSearchQuery, Types.QuickSearchQueryVariables>(QuickSearchDocument, variables, options);\n}\nexport type QuickSearchQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.QuickSearchQuery, Types.QuickSearchQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport emitter from '#shared/utils/emitter.ts'\n\nexport const useQuickSearchInput = () => {\n  const resetQuickSearchInputField = () => {\n    emitter.emit('reset-quick-search-field')\n  }\n\n  return {\n    resetQuickSearchInputField,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport type { QuickSearchPluginProps } from '../types.ts'\n\nconst props = defineProps<QuickSearchPluginProps>()\n\nconst isOrganizationInactive = computed(() => !props.item.active)\n</script>\n\n<template>\n  <CommonLink\n    class=\"group/item flex grow gap-2 rounded-md px-2 py-3 text-neutral-400 hover:bg-blue-900 hover:no-underline!\"\n    :link=\"`/organizations/${item.internalId}`\"\n    :aria-description=\"\n      isOrganizationInactive ? $t('Organization is inactive.') : undefined\n    \"\n    internal\n  >\n    <CommonIcon\n      class=\"shrink-0 text-neutral-500\"\n      :name=\"isOrganizationInactive ? 'buildings-slash' : 'buildings'\"\n      size=\"small\"\n      decorative\n    />\n    <CommonLabel\n      class=\"block! truncate group-hover/item:text-white\"\n      :class=\"{\n        'text-neutral-500! group-hover/item:text-white!':\n          isOrganizationInactive,\n      }\"\n    >\n      {{ item.name }}\n    </CommonLabel>\n  </CommonLink>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport Organization from '../entitites/Organization.vue'\n\nimport type { QuickSearchPlugin } from '../types.ts'\n\nexport default <QuickSearchPlugin>{\n  name: 'Organization',\n  component: Organization,\n  priority: 300,\n  searchResultKey: 'quickSearchOrganizations',\n  searchResultLabel: __('Found organizations'),\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\n\nimport CommonTicketStateIndicatorIcon from '#desktop/components/CommonTicketStateIndicator/CommonTicketStateIndicatorIcon.vue'\n\nimport type { QuickSearchPluginProps } from '../types.ts'\n\nconst props = defineProps<QuickSearchPluginProps>()\n\nconst itemLabel = computed(() => {\n  if (props.mode === 'recently-viewed') {\n    return (props.item as TicketById).title\n  }\n\n  return `#${props.item.number} - ${props.item.title}`\n})\n</script>\n\n<template>\n  <CommonLink\n    class=\"group/item flex grow gap-2 rounded-md px-2 py-3 hover:bg-blue-900 hover:no-underline!\"\n    :link=\"`/tickets/${item.internalId}`\"\n    internal\n  >\n    <CommonTicketStateIndicatorIcon\n      class=\"shrink-0\"\n      icon-size=\"small\"\n      :color-code=\"(item as TicketById).stateColorCode\"\n      :label=\"(item as TicketById).state.name\"\n    />\n    <CommonLabel class=\"block! truncate group-hover/item:text-white\">\n      {{ itemLabel }}\n    </CommonLabel>\n  </CommonLink>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport Ticket from '../entitites/Ticket.vue'\n\nimport type { QuickSearchPlugin } from '../types.ts'\n\nexport default <QuickSearchPlugin>{\n  name: 'Ticket',\n  component: Ticket,\n  priority: 100,\n  searchResultKey: 'quickSearchTickets',\n  searchResultLabel: __('Found tickets'),\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport type { QuickSearchPluginProps } from '../types.ts'\n\nconst props = defineProps<QuickSearchPluginProps>()\n\nconst isUserInactive = computed(() => !props.item?.active)\n</script>\n\n<template>\n  <CommonLink\n    class=\"group/item flex grow gap-2 rounded-md px-2 py-3 text-neutral-400 hover:bg-blue-900 hover:no-underline!\"\n    :link=\"`/users/${item.internalId}`\"\n    :aria-description=\"isUserInactive ? $t('User is inactive.') : undefined\"\n    internal\n  >\n    <CommonIcon\n      class=\"shrink-0 text-neutral-500\"\n      :name=\"isUserInactive ? 'user-inactive' : 'person'\"\n      size=\"small\"\n      decorative\n    />\n    <CommonLabel\n      class=\"block! truncate group-hover/item:text-white\"\n      :class=\"{\n        'text-neutral-500! group-hover/item:text-white!': isUserInactive,\n      }\"\n    >\n      {{ item.fullname }}\n    </CommonLabel>\n  </CommonLink>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport User from '../entitites/User.vue'\n\nimport type { QuickSearchPlugin } from '../types.ts'\n\nexport default <QuickSearchPlugin>{\n  name: 'User',\n  component: User,\n  priority: 200,\n  searchResultKey: 'quickSearchUsers',\n  searchResultLabel: __('Found users'),\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport type { QuickSearchPlugin } from '../types.ts'\n\nconst plugins = import.meta.glob<QuickSearchPlugin>(\n  ['./**/*.ts', '!./**/index.ts', '!./types.ts', '!./__tests__/**/*.ts'],\n  {\n    eager: true,\n    import: 'default',\n  },\n)\n\nexport const quickSearchPlugins = Object.values(plugins)\n\nexport const sortedQuickSearchPlugins = quickSearchPlugins.sort(\n  (a, b) => a.priority - b.priority,\n)\n\nexport const lookupQuickSearchPlugin = (searchResultKey: string) =>\n  sortedQuickSearchPlugins.find(\n    (plugin) => plugin.searchResultKey === searchResultKey,\n  )\n\nexport const lookupQuickSearchPluginComponent = (model: string) =>\n  quickSearchPlugins.find((plugin) => plugin.name === model)?.component\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { refDebounced } from '@vueuse/core'\nimport { whenever } from '@vueuse/shared'\nimport { computed, toRef } from 'vue'\n\nimport { useDebouncedLoading } from '#shared/composables/useDebouncedLoading.ts'\nimport QueryHandler from '#shared/server/apollo/handler/QueryHandler.ts'\n\nimport CommonSectionCollapse from '#desktop/components/CommonSectionCollapse/CommonSectionCollapse.vue'\nimport CommonSkeleton from '#desktop/components/CommonSkeleton/CommonSkeleton.vue'\nimport { useQuickSearchLazyQuery } from '#desktop/components/QuickSearch/graphql/queries/quickSearch.api.ts'\nimport type { QuickSearchResultData } from '#desktop/components/QuickSearch/types.ts'\n\nimport { useQuickSearchInput } from '../composables/useQuickSearchInput.ts'\nimport { sortedQuickSearchPlugins } from '../plugins/index.ts'\n\nconst RESULT_LIMIT = 10\n\ninterface Props {\n  search: string\n  debounceTime: number\n}\n\nconst props = defineProps<Props>()\n\nconst userSearchInput = toRef(props, 'search')\n\nconst debouncedSearch = refDebounced<string>(\n  userSearchInput,\n  props.debounceTime,\n)\n\nconst quickSearchQuery = new QueryHandler(\n  useQuickSearchLazyQuery(\n    () => ({\n      search: debouncedSearch.value,\n      limit: RESULT_LIMIT,\n    }),\n    {\n      fetchPolicy: 'no-cache',\n    },\n  ),\n)\n\nconst quickSearchResult = quickSearchQuery.result()\nconst searchResultsLoading = quickSearchQuery.loading()\n\nwhenever(\n  debouncedSearch,\n  () => {\n    quickSearchQuery.load()\n  },\n  { once: true, immediate: true },\n)\n\nconst mappedQuickSearchResults = computed(() => {\n  const currentResult = quickSearchResult.value\n\n  if (!currentResult) return\n\n  const searchResults: QuickSearchResultData[] = []\n\n  sortedQuickSearchPlugins.forEach((plugin) => {\n    if (!currentResult[plugin.searchResultKey]) return\n\n    const searchResult = currentResult[plugin.searchResultKey]\n    if (!searchResult || searchResult.totalCount === 0) return\n\n    searchResults.push({\n      name: plugin.name,\n      component: plugin.component,\n      items: searchResult.items,\n      label: plugin.searchResultLabel,\n      remainingItemCount: searchResult.totalCount - searchResult.items.length,\n      totalCount: searchResult.totalCount,\n    })\n  })\n\n  return searchResults\n})\n\nconst isLoadingSearchResults = computed(() => {\n  if (mappedQuickSearchResults.value !== undefined) return false\n\n  return searchResultsLoading.value\n})\n\nconst { debouncedLoading } = useDebouncedLoading({\n  isLoading: isLoadingSearchResults,\n  ms: 150,\n})\n\nconst hasResults = computed(() =>\n  Boolean(mappedQuickSearchResults.value?.length),\n)\n\nconst { resetQuickSearchInputField } = useQuickSearchInput()\n</script>\n\n<template>\n  <div v-if=\"debouncedLoading\" class=\"mt-4 flex flex-col gap-8\">\n    <div v-for=\"i in 2\" :key=\"i\" class=\"flex flex-col gap-4\">\n      <CommonSkeleton\n        v-for=\"j in 3\"\n        :key=\"j\"\n        class=\"block rounded-lg\"\n        :class=\"{\n          'h-5 w-25': j === 1,\n          'h-6 w-full': j !== 1,\n        }\"\n        :style=\"{ 'animation-delay': `${(i * 3 + j) * 0.1}s` }\"\n      />\n    </div>\n  </div>\n  <template v-else>\n    <!-- TODO: Exchange the link to the proper route when ready. -->\n    <CommonLink\n      v-if=\"!isLoadingSearchResults\"\n      class=\"group/link mb-4 block\"\n      link=\"#\"\n    >\n      <CommonLabel\n        link=\"#\"\n        class=\"text-blue-800! group-hover/link:underline\"\n        prefix-icon=\"search-detail\"\n        size=\"small\"\n      >\n        {{ $t('detailed search') }}\n      </CommonLabel>\n    </CommonLink>\n\n    <div v-if=\"hasResults\" class=\"space-y-1\">\n      <CommonSectionCollapse\n        v-for=\"(searchResult, index) in mappedQuickSearchResults\"\n        :id=\"`${searchResult.name}-${index}`\"\n        :key=\"`${searchResult.name}-${index}`\"\n        no-collapse\n        :title=\"$t(searchResult.label)\"\n      >\n        <div class=\"flex flex-col\">\n          <ol class=\"space-y-1.5\">\n            <li v-for=\"item in searchResult.items\" :key=\"item.id\">\n              <component\n                :is=\"searchResult.component\"\n                :item=\"item\"\n                mode=\"quick-search-result\"\n                @click=\"resetQuickSearchInputField\"\n              />\n            </li>\n          </ol>\n\n          <CommonLink\n            v-if=\"searchResult.remainingItemCount > 0\"\n            class=\"group/link my-1.5 ms-auto\"\n            link=\"#\"\n          >\n            <CommonLabel\n              class=\"text-blue-800! group-hover/link:underline\"\n              prefix-icon=\"search-detail\"\n              size=\"small\"\n            >\n              {{ $t('%s more', searchResult.remainingItemCount) }}\n            </CommonLabel>\n          </CommonLink>\n        </div>\n      </CommonSectionCollapse>\n    </div>\n    <CommonLabel v-else-if=\"!isLoadingSearchResults\">{{\n      $t('No results for this query.')\n    }}</CommonLabel>\n  </template>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useLocalStorage } from '@vueuse/core'\n\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nconst RECENTLY_SEARCHES_MAX_LENGTH = 10\n\nexport const useRecentSearches = () => {\n  const { userId } = useSessionStore()\n  const recentSearches = useLocalStorage<string[]>(\n    `${userId}-recentSearches`,\n    [],\n  )\n\n  const addSearch = (search: string) => {\n    // Remove the search term if it already exists to avoid duplicates\n    recentSearches.value = recentSearches.value.filter(\n      (item) => item !== search,\n    )\n\n    // Add the new search term\n    recentSearches.value.push(search)\n\n    // Remove the oldest search if we exceed the maximum length\n    if (recentSearches.value.length > RECENTLY_SEARCHES_MAX_LENGTH) {\n      recentSearches.value.shift()\n    }\n  }\n\n  const removeSearch = (search: string) => {\n    recentSearches.value = recentSearches.value.filter(\n      (item) => item !== search,\n    )\n  }\n\n  const clearSearches = () => {\n    recentSearches.value = []\n  }\n\n  return {\n    recentSearches,\n    addSearch,\n    removeSearch,\n    clearSearches,\n  }\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserCurrentRecentViewResetDocument = gql`\n    mutation userCurrentRecentViewReset {\n  userCurrentRecentViewReset {\n    success\n  }\n}\n    `;\nexport function useUserCurrentRecentViewResetMutation(options: VueApolloComposable.UseMutationOptions<Types.UserCurrentRecentViewResetMutation, Types.UserCurrentRecentViewResetMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.UserCurrentRecentViewResetMutation, Types.UserCurrentRecentViewResetMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.UserCurrentRecentViewResetMutation, Types.UserCurrentRecentViewResetMutationVariables>(UserCurrentRecentViewResetDocument, options);\n}\nexport type UserCurrentRecentViewResetMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.UserCurrentRecentViewResetMutation, Types.UserCurrentRecentViewResetMutationVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserCurrentRecentViewListDocument = gql`\n    query userCurrentRecentViewList($limit: Int) {\n  userCurrentRecentViewList(limit: $limit) {\n    ... on Ticket {\n      id\n      internalId\n      title\n      number\n      state {\n        id\n        name\n      }\n      priority {\n        id\n        name\n        defaultCreate\n        uiColor\n      }\n      stateColorCode\n    }\n    ... on User {\n      id\n      internalId\n      fullname\n      active\n    }\n    ... on Organization {\n      id\n      internalId\n      name\n      active\n    }\n  }\n}\n    `;\nexport function useUserCurrentRecentViewListQuery(variables: Types.UserCurrentRecentViewListQueryVariables | VueCompositionApi.Ref<Types.UserCurrentRecentViewListQueryVariables> | ReactiveFunction<Types.UserCurrentRecentViewListQueryVariables> = {}, options: VueApolloComposable.UseQueryOptions<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables>(UserCurrentRecentViewListDocument, variables, options);\n}\nexport function useUserCurrentRecentViewListLazyQuery(variables: Types.UserCurrentRecentViewListQueryVariables | VueCompositionApi.Ref<Types.UserCurrentRecentViewListQueryVariables> | ReactiveFunction<Types.UserCurrentRecentViewListQueryVariables> = {}, options: VueApolloComposable.UseQueryOptions<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables>(UserCurrentRecentViewListDocument, variables, options);\n}\nexport type UserCurrentRecentViewListQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.UserCurrentRecentViewListQuery, Types.UserCurrentRecentViewListQueryVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserCurrentRecentViewUpdatesDocument = gql`\n    subscription userCurrentRecentViewUpdates {\n  userCurrentRecentViewUpdates {\n    recentViewsUpdated\n  }\n}\n    `;\nexport function useUserCurrentRecentViewUpdatesSubscription(options: VueApolloComposable.UseSubscriptionOptions<Types.UserCurrentRecentViewUpdatesSubscription, Types.UserCurrentRecentViewUpdatesSubscriptionVariables> | VueCompositionApi.Ref<VueApolloComposable.UseSubscriptionOptions<Types.UserCurrentRecentViewUpdatesSubscription, Types.UserCurrentRecentViewUpdatesSubscriptionVariables>> | ReactiveFunction<VueApolloComposable.UseSubscriptionOptions<Types.UserCurrentRecentViewUpdatesSubscription, Types.UserCurrentRecentViewUpdatesSubscriptionVariables>> = {}) {\n  return VueApolloComposable.useSubscription<Types.UserCurrentRecentViewUpdatesSubscription, Types.UserCurrentRecentViewUpdatesSubscriptionVariables>(UserCurrentRecentViewUpdatesDocument, {}, options);\n}\nexport type UserCurrentRecentViewUpdatesSubscriptionCompositionFunctionResult = VueApolloComposable.UseSubscriptionReturn<Types.UserCurrentRecentViewUpdatesSubscription, Types.UserCurrentRecentViewUpdatesSubscriptionVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { refDebounced } from '@vueuse/shared'\nimport { computed } from 'vue'\n\nimport {\n  NotificationTypes,\n  useNotifications,\n} from '#shared/components/CommonNotifications/index.ts'\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport { useTouchDevice } from '#shared/composables/useTouchDevice.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\nimport QueryHandler from '#shared/server/apollo/handler/QueryHandler.ts'\nimport SubscriptionHandler from '#shared/server/apollo/handler/SubscriptionHandler.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport CommonSectionCollapse from '#desktop/components/CommonSectionCollapse/CommonSectionCollapse.vue'\nimport QuickSearchResultList from '#desktop/components/QuickSearch/QuickSearchResultList/QuickSearchResultList.vue'\nimport { useRecentSearches } from '#desktop/composables/useRecentSearches.ts'\nimport { useUserCurrentRecentViewResetMutation } from '#desktop/entities/user/current/graphql/mutations/userCurrentRecentViewReset.api.ts'\nimport { useUserCurrentRecentViewListQuery } from '#desktop/entities/user/current/graphql/queries/userCurrentRecentViewList.api.ts'\nimport { useUserCurrentRecentViewUpdatesSubscription } from '#desktop/entities/user/current/graphql/subscriptions/userCurrentRecentViewUpdates.api.ts'\n\nimport { useQuickSearchInput } from './composables/useQuickSearchInput.ts'\nimport { lookupQuickSearchPluginComponent } from './plugins/index.ts'\n\nconst DEBOUNCE_TIME = 400\n\ninterface Props {\n  collapsed?: boolean\n  search: string\n}\n\nconst props = defineProps<Props>()\n\nconst hasSearchInput = computed(() => props.search?.length > 0)\nconst debouncedHasSearchInput = refDebounced(hasSearchInput, DEBOUNCE_TIME)\n\nconst { isTouchDevice } = useTouchDevice()\n\nconst { recentSearches, clearSearches, removeSearch } = useRecentSearches()\n\nconst recentViewListQuery = new QueryHandler(\n  useUserCurrentRecentViewListQuery({\n    limit: 10,\n  }),\n)\n\nconst recentViewListQueryResult = recentViewListQuery.result()\n\nconst recentViewListItems = computed(\n  () => recentViewListQueryResult.value?.userCurrentRecentViewList ?? [],\n)\n\nconst recentViewUpdatesSubscription = new SubscriptionHandler(\n  useUserCurrentRecentViewUpdatesSubscription(),\n)\n\nrecentViewUpdatesSubscription.onResult(({ data }) => {\n  if (data?.userCurrentRecentViewUpdates) {\n    recentViewListQuery.refetch()\n  }\n})\n\nconst { waitForConfirmation } = useConfirmation()\nconst { notify } = useNotifications()\n\nconst confirmRemoveRecentSearch = async (searchQuery: string) => {\n  const confirmed = await waitForConfirmation(\n    __('Are you sure? This recent search will get lost.'),\n    { fullscreen: true },\n  )\n\n  if (!confirmed) return\n\n  removeSearch(searchQuery)\n\n  notify({\n    id: 'recent-search-removed',\n    type: NotificationTypes.Success,\n    message: __('Recent search was removed successfully.'),\n  })\n}\n\nconst confirmClearRecentSearches = async () => {\n  const confirmed = await waitForConfirmation(\n    __('Are you sure? Your recent searches will get lost.'),\n    { fullscreen: true },\n  )\n\n  if (!confirmed) return\n\n  clearSearches()\n\n  notify({\n    id: 'recent-searches-cleared',\n    type: NotificationTypes.Success,\n    message: __('Recent searches were cleared successfully.'),\n  })\n}\n\nconst recentViewResetMutation = new MutationHandler(\n  useUserCurrentRecentViewResetMutation(),\n)\n\nconst confirmClearRecentViewed = async () => {\n  const confirmed = await waitForConfirmation(\n    __('Are you sure? Your recently viewed items will get lost.'),\n    { fullscreen: true },\n  )\n\n  if (!confirmed) return\n\n  recentViewResetMutation.send().then(() => {\n    notify({\n      id: 'recent-viewed-cleared',\n      type: NotificationTypes.Success,\n      message: __('Recently viewed items were cleared successfully.'),\n    })\n  })\n}\n\nconst { resetQuickSearchInputField } = useQuickSearchInput()\n</script>\n\n<template>\n  <div class=\"overflow-x-hidden overflow-y-auto px-3 py-2.5 outline-none\">\n    <QuickSearchResultList\n      v-if=\"debouncedHasSearchInput && hasSearchInput\"\n      :search=\"search\"\n      :debounce-time=\"DEBOUNCE_TIME\"\n    />\n\n    <template\n      v-else-if=\"recentSearches.length > 0 || recentViewListItems.length > 0\"\n    >\n      <CommonSectionCollapse\n        v-if=\"recentSearches.length > 0\"\n        id=\"page-recent-searches\"\n        :title=\"__('Recent searches')\"\n        :no-header=\"collapsed\"\n        no-collapse\n      >\n        <template #default=\"{ headerId }\">\n          <nav :aria-labelledby=\"headerId\">\n            <ul class=\"m-0 flex flex-col gap-1 p-0\">\n              <li\n                v-for=\"searchQuery in recentSearches\"\n                :key=\"searchQuery\"\n                class=\"group/recent-search flex justify-center\"\n              >\n                <CommonLink\n                  class=\"relative flex grow items-center gap-2 rounded-md px-2 py-3 text-neutral-400 hover:bg-blue-900 hover:no-underline!\"\n                  :link=\"`/search/${searchQuery}`\"\n                  exact-active-class=\"bg-blue-800! w-full text-white!\"\n                  internal\n                  @click=\"resetQuickSearchInputField\"\n                >\n                  <CommonIcon name=\"search\" size=\"tiny\" />\n                  <CommonLabel class=\"gap-2 text-white!\">\n                    {{ searchQuery }}\n                  </CommonLabel>\n                  <CommonButton\n                    :aria-label=\"$t('Delete this recent search')\"\n                    :class=\"{\n                      'opacity-0 transition-opacity': !isTouchDevice,\n                    }\"\n                    class=\"absolute end-2 top-3 justify-end group-hover/recent-search:opacity-100 focus:opacity-100\"\n                    icon=\"x-lg\"\n                    size=\"small\"\n                    variant=\"remove\"\n                    @click.stop.prevent=\"confirmRemoveRecentSearch(searchQuery)\"\n                  />\n                </CommonLink>\n              </li>\n            </ul>\n            <div class=\"mt-2 mb-1 flex justify-end\">\n              <CommonLink\n                link=\"#\"\n                size=\"small\"\n                @click=\"confirmClearRecentSearches\"\n              >\n                {{ $t('Clear recent searches') }}\n              </CommonLink>\n            </div>\n          </nav>\n        </template>\n      </CommonSectionCollapse>\n\n      <CommonSectionCollapse\n        v-if=\"recentViewListItems.length > 0\"\n        id=\"page-recently-viewed\"\n        :title=\"__('Recently viewed')\"\n        :no-header=\"collapsed\"\n        no-collapse\n      >\n        <template #default=\"{ headerId }\">\n          <nav :aria-labelledby=\"headerId\">\n            <ul class=\"m-0 flex flex-col gap-1 p-0\">\n              <li\n                v-for=\"item in recentViewListItems\"\n                :key=\"item.id\"\n                class=\"relative\"\n              >\n                <component\n                  :is=\"lookupQuickSearchPluginComponent(item.__typename!)\"\n                  :item=\"item\"\n                  mode=\"recently-viewed\"\n                  @click=\"resetQuickSearchInputField\"\n                />\n              </li>\n            </ul>\n            <div class=\"mt-2 mb-1 flex justify-end\">\n              <CommonLink\n                link=\"#\"\n                size=\"small\"\n                @click=\"confirmClearRecentViewed\"\n              >\n                {{ $t('Clear recently viewed') }}\n              </CommonLink>\n            </div>\n          </nav>\n        </template>\n      </CommonSectionCollapse>\n    </template>\n    <CommonLabel v-else>\n      {{\n        $t('Start typing i.e. the name of a ticket, an organization or a user.')\n      }}\n    </CommonLabel>\n  </div>\n</template>\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserCurrentTaskbarItemListPrioDocument = gql`\n    mutation userCurrentTaskbarItemListPrio($list: [UserTaskbarItemListPrioInput!]!) {\n  userCurrentTaskbarItemListPrio(list: $list) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useUserCurrentTaskbarItemListPrioMutation(options: VueApolloComposable.UseMutationOptions<Types.UserCurrentTaskbarItemListPrioMutation, Types.UserCurrentTaskbarItemListPrioMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.UserCurrentTaskbarItemListPrioMutation, Types.UserCurrentTaskbarItemListPrioMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.UserCurrentTaskbarItemListPrioMutation, Types.UserCurrentTaskbarItemListPrioMutationVariables>(UserCurrentTaskbarItemListPrioDocument, options);\n}\nexport type UserCurrentTaskbarItemListPrioMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.UserCurrentTaskbarItemListPrioMutation, Types.UserCurrentTaskbarItemListPrioMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport { useUserTaskbarTabLink } from '#desktop/composables/useUserTaskbarTabLink.ts'\n\nimport type { UserTaskbarTabEntityProps } from './types.ts'\n\nconst props = defineProps<UserTaskbarTabEntityProps>()\n\nconst { tabLinkInstance, taskbarTabActive } = useUserTaskbarTabLink(\n  toRef(props, 'taskbarTab'),\n)\n</script>\n\n<template>\n  <CommonLink\n    v-if=\"taskbarTabLink\"\n    ref=\"tabLinkInstance\"\n    v-tooltip=\"$t('You have insufficient rights to view this object.')\"\n    class=\"flex grow gap-2 rounded-md px-2 py-3 group-hover/tab:bg-blue-600 hover:no-underline! focus-visible:rounded-md focus-visible:outline-hidden group-hover/tab:dark:bg-blue-900\"\n    :class=\"{\n      ['!bg-blue-800 text-white']: taskbarTabActive,\n    }\"\n    :link=\"taskbarTabLink\"\n    internal\n  >\n    <CommonIcon\n      name=\"x-lg\"\n      size=\"small\"\n      class=\"shrink-0 text-red-500\"\n      decorative\n    />\n\n    <CommonLabel\n      class=\"block! truncate text-gray-300 group-hover/tab:text-white group-focus-visible/link:text-white dark:text-neutral-400\"\n      :class=\"{\n        'text-white!': taskbarTabActive,\n      }\"\n    >\n      {{ $t('Access denied') }}\n    </CommonLabel>\n  </CommonLink>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport { useUserTaskbarTabLink } from '#desktop/composables/useUserTaskbarTabLink.ts'\n\nimport type { UserTaskbarTabEntityProps } from './types.ts'\n\nconst props = defineProps<UserTaskbarTabEntityProps>()\n\nconst { tabLinkInstance, taskbarTabActive } = useUserTaskbarTabLink(\n  toRef(props, 'taskbarTab'),\n)\n</script>\n\n<template>\n  <CommonLink\n    v-if=\"taskbarTabLink\"\n    ref=\"tabLinkInstance\"\n    v-tooltip=\"$t('This object could not be found.')\"\n    class=\"flex grow gap-2 rounded-md px-2 py-3 group-hover/tab:bg-blue-600 hover:no-underline! focus-visible:rounded-md focus-visible:outline-hidden group-hover/tab:dark:bg-blue-900\"\n    :class=\"{\n      ['!bg-blue-800 text-white']: taskbarTabActive,\n    }\"\n    :link=\"taskbarTabLink\"\n    internal\n  >\n    <CommonIcon\n      name=\"x-lg\"\n      size=\"small\"\n      class=\"shrink-0 text-red-500\"\n      decorative\n    />\n\n    <CommonLabel\n      class=\"block! truncate text-gray-300 group-hover/tab:text-white group-focus-visible/link:text-white dark:text-neutral-400\"\n      :class=\"{\n        'text-white!': taskbarTabActive,\n      }\"\n    >\n      {{ $t('Not found') }}\n    </CommonLabel>\n  </CommonLink>\n</template>\n\n<style scoped>\n.router-link-active span {\n  color: var(--color-white);\n}\n</style>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { useRouter } from 'vue-router'\n\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport { useTouchDevice } from '#shared/composables/useTouchDevice.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport { useUserCurrentTaskbarTabsStore } from '#desktop/entities/user/current/stores/taskbarTabs.ts'\n\nimport type { UserTaskbarTab, UserTaskbarTabPlugin } from './types.ts'\n\ninterface Props {\n  taskbarTab: UserTaskbarTab\n  dirty?: boolean\n  plugin?: UserTaskbarTabPlugin\n}\n\nconst props = defineProps<Props>()\n\nconst taskbarTabStore = useUserCurrentTaskbarTabsStore()\n\nconst { activeTaskbarTabEntityKey } = storeToRefs(taskbarTabStore)\n\nconst { isTouchDevice } = useTouchDevice()\n\nconst router = useRouter()\n\nconst confirmRemoveUserTaskbarTab = async () => {\n  if (!props.taskbarTab.taskbarTabId) return\n\n  if (props.plugin?.confirmTabRemove) {\n    // Redirect to taskbar tab that is to be closed, if:\n    //   * it has a dirty state\n    //   * it's not the currently active tab\n    //   * the tab link can be computed\n    if (\n      props.dirty &&\n      props.taskbarTab.tabEntityKey !== activeTaskbarTabEntityKey.value &&\n      typeof props.plugin?.buildTaskbarTabLink === 'function'\n    ) {\n      const link = props.plugin.buildTaskbarTabLink(\n        props.taskbarTab.entity,\n        props.taskbarTab.tabEntityKey,\n      )\n      if (link) await router.push(link)\n    }\n\n    if (props.dirty) {\n      const { waitForVariantConfirmation } = useConfirmation()\n      const confirmed = await waitForVariantConfirmation(\n        'unsaved',\n        undefined,\n        `ticket-unsaved-${props.taskbarTab.tabEntityKey}`,\n      )\n\n      if (!confirmed) return\n    }\n  }\n\n  // Redirection to a historical route will be handled by the store.\n  taskbarTabStore.deleteTaskbarTab(props.taskbarTab.taskbarTabId)\n}\n</script>\n\n<template>\n  <CommonButton\n    v-if=\"props.taskbarTab.taskbarTabId\"\n    v-tooltip=\"$t('Close this tab')\"\n    :class=\"{ 'opacity-0 transition-opacity': !isTouchDevice }\"\n    class=\"absolute end-2 top-3 group-hover/tab:opacity-100 focus:opacity-100\"\n    icon=\"x-lg\"\n    size=\"small\"\n    variant=\"remove\"\n    @click.stop=\"confirmRemoveUserTaskbarTab\"\n  />\n</template>\n\n<style scoped>\n.dragging-active button {\n  visibility: hidden;\n}\n</style>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { animations, parents, updateConfig } from '@formkit/drag-and-drop'\nimport { dragAndDrop } from '@formkit/drag-and-drop/vue'\nimport { computedAsync } from '@vueuse/core'\nimport { cloneDeep } from 'lodash-es'\nimport { storeToRefs } from 'pinia'\nimport { type Ref, ref, watch, useTemplateRef, nextTick } from 'vue'\n\nimport CommonPopover from '#shared/components/CommonPopover/CommonPopover.vue'\nimport { usePopover } from '#shared/components/CommonPopover/usePopover.ts'\nimport { EnumTaskbarEntityAccess } from '#shared/graphql/types.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport { startAndEndEventsDNDPlugin } from '#shared/utils/startAndEndEventsDNDPlugin.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport CommonLoader from '#desktop/components/CommonLoader/CommonLoader.vue'\nimport CommonSectionCollapse from '#desktop/components/CommonSectionCollapse/CommonSectionCollapse.vue'\nimport { useUserCurrentTaskbarItemListPrioMutation } from '#desktop/entities/user/current/graphql/mutations/userCurrentTaskbarItemListPrio.api.ts'\nimport { useUserCurrentTaskbarTabsStore } from '#desktop/entities/user/current/stores/taskbarTabs.ts'\n\nimport UserTaskbarTabForbidden from './UserTaskbarTabForbidden.vue'\nimport UserTaskbarTabNotFound from './UserTaskbarTabNotFound.vue'\nimport UserTaskbarTabRemove from './UserTaskbarTabRemove.vue'\n\nexport interface Props {\n  collapsed?: boolean\n}\n\nconst props = defineProps<Props>()\n\nconst taskbarTabStore = useUserCurrentTaskbarTabsStore()\n\nconst {\n  taskbarTabListByTabEntityKey,\n  taskbarTabListOrder,\n  hasTaskbarTabs,\n  taskbarTabContexts,\n  loading,\n} = storeToRefs(taskbarTabStore)\n\nconst { getTaskbarTabTypePlugin } = taskbarTabStore\n\nconst dndStartCallback = (parent: HTMLElement) => {\n  const siblings = parent.querySelectorAll('.draggable:not(.dragging-active)')\n\n  // Temporarily suspend tab hover states.\n  siblings.forEach((sibling) => {\n    sibling.classList.remove('group/tab')\n    sibling.classList.add('no-tooltip')\n  })\n}\n\nconst userCurrentTaskbarItemListPrioMutation = new MutationHandler(\n  useUserCurrentTaskbarItemListPrioMutation(),\n)\n\nconst updateTaskbarTabListOrder = (newTaskbarTabListOrder: string[]) => {\n  const taskbarTabListPrio = newTaskbarTabListOrder\n    ?.map((tabEntityKey, index) => ({\n      id: taskbarTabListByTabEntityKey.value[tabEntityKey].taskbarTabId!,\n      prio: index + 1,\n    }))\n    .filter((taskbarTabListPrioItem) => taskbarTabListPrioItem.id)\n\n  if (!taskbarTabListPrio?.length) return\n\n  userCurrentTaskbarItemListPrioMutation.send({\n    list: taskbarTabListPrio,\n  })\n}\n\nconst dndEndCallback = (parent: HTMLElement) => {\n  const parentData = parents.get(parent)\n\n  if (parentData) {\n    updateTaskbarTabListOrder(parentData.getValues(parent))\n  }\n\n  const siblings = parent.querySelectorAll('.draggable:not(.dragging-active)')\n\n  // Reactivate tab hover states.\n  siblings.forEach((sibling) => {\n    sibling.classList.add('group/tab')\n    sibling.classList.remove('no-tooltip')\n  })\n\n  // NB: Workaround for a Chrome bug where the hover state may get stuck once drag is over.\n  //   https://issues.chromium.org/issues/41129937#comment6\n  setTimeout(() => {\n    parent.classList.add('pointer-events-none')\n    requestAnimationFrame(() => {\n      parent.classList.remove('pointer-events-none')\n    })\n  }, 0)\n}\n\nconst dndParentElement = useTemplateRef('dnd-parent')\nconst dndTaskbarTabListOrder = ref(taskbarTabListOrder.value || [])\n\nwatch(taskbarTabListOrder, (newValue) => {\n  dndTaskbarTabListOrder.value = cloneDeep(newValue || [])\n})\n\ndragAndDrop({\n  parent: dndParentElement as Ref<HTMLElement>,\n  values: dndTaskbarTabListOrder,\n  plugins: [\n    startAndEndEventsDNDPlugin(dndStartCallback, dndEndCallback),\n    animations(),\n  ],\n  dropZoneClass: 'opacity-0 no-tooltip dragging-active',\n  touchDropZoneClass: 'opacity-0 no-tooltip dragging-active',\n  draggingClass: 'dragging-active',\n})\n\nwatch(\n  () => props.collapsed,\n  (isCollapsed) => {\n    if (!dndParentElement.value) return\n\n    updateConfig(dndParentElement.value, { disabled: isCollapsed })\n  },\n)\n\nconst getTaskbarTabComponent = (tabEntityKey: string) => {\n  const taskbarTab = taskbarTabListByTabEntityKey.value[tabEntityKey]\n  if (!taskbarTab) return\n\n  if (\n    !taskbarTab.entityAccess ||\n    taskbarTab.entityAccess === EnumTaskbarEntityAccess.Granted\n  )\n    return getTaskbarTabTypePlugin(taskbarTab.type).component\n\n  if (taskbarTab.entityAccess === EnumTaskbarEntityAccess.Forbidden)\n    return UserTaskbarTabForbidden\n\n  if (taskbarTab.entityAccess === EnumTaskbarEntityAccess.NotFound)\n    return UserTaskbarTabNotFound\n}\n\nconst getTaskbarTabLink = (tabEntityKey: string) => {\n  const taskbarTab = taskbarTabListByTabEntityKey.value[tabEntityKey]\n  if (!taskbarTab) return\n\n  const plugin = getTaskbarTabTypePlugin(taskbarTab.type)\n  if (typeof plugin.buildTaskbarTabLink !== 'function') return\n\n  return (\n    plugin.buildTaskbarTabLink(taskbarTab.entity, taskbarTab.tabEntityKey) ??\n    '#'\n  )\n}\n\nconst { popover, popoverTarget, toggle, isOpen: popoverIsOpen } = usePopover()\n\nconst taskbarTabListContainer = useTemplateRef('taskbar-tab-list')\n\nconst taskbarTabListLocation = computedAsync(() => {\n  if (!taskbarTabListContainer.value) return '#taskbarTabListHidden'\n\n  // NB: Prevent teleport component from complaining that the target is not ready.\n  //   Defer the value update for after next tick.\n  return nextTick(() => {\n    if (props.collapsed) return '#taskbarTabListCollapsed'\n    return '#taskbarTabListExpanded'\n  })\n}, '#taskbarTabListHidden')\n\nconst getTaskbarTabContext = (tabEntityKey: string) => {\n  if (!taskbarTabListContainer.value) return\n\n  return taskbarTabContexts.value[tabEntityKey]\n}\n\nconst getTaskbarTabDirtyFlag = (tabEntityKey: string) => {\n  if (!taskbarTabListContainer.value) return\n\n  return (\n    taskbarTabContexts.value[tabEntityKey]?.formIsDirty ??\n    taskbarTabListByTabEntityKey.value[tabEntityKey].dirty\n  )\n}\n</script>\n\n<template>\n  <CommonLoader no-transition :loading=\"loading\">\n    <div\n      v-if=\"hasTaskbarTabs\"\n      class=\"-m-1 flex flex-col overflow-y-hidden py-2\"\n    >\n      <div v-if=\"props.collapsed\" class=\"flex justify-center\">\n        <CommonPopover\n          id=\"user-taskbar-tabs-popover\"\n          ref=\"popover\"\n          class=\"max-w-64 min-w-52\"\n          :owner=\"popoverTarget\"\n          orientation=\"autoHorizontal\"\n          placement=\"start\"\n          hide-arrow\n          persistent\n        >\n          <div id=\"taskbarTabListCollapsed\" ref=\"taskbar-tab-list\" />\n        </CommonPopover>\n\n        <CommonButton\n          id=\"user-taskbar-tabs-popover-button\"\n          ref=\"popoverTarget\"\n          class=\"text-neutral-400 hover:outline-blue-900\"\n          icon=\"card-list\"\n          size=\"large\"\n          variant=\"neutral\"\n          :aria-controls=\"\n            popoverIsOpen ? 'user-taskbar-tabs-popover' : undefined\n          \"\n          aria-haspopup=\"true\"\n          :aria-expanded=\"popoverIsOpen\"\n          :aria-label=\"$t('List of all user taskbar tabs')\"\n          :class=\"{\n            '!bg-blue-800 !text-white': popoverIsOpen,\n          }\"\n          @click=\"toggle(true)\"\n        />\n      </div>\n\n      <template v-else>\n        <CommonSectionCollapse\n          id=\"user-taskbar-tabs\"\n          :title=\"__('Tabs')\"\n          no-negative-margin\n          scrollable\n        >\n          <span id=\"drag-and-drop-taskbar-tabs\" class=\"sr-only\">\n            {{ $t('Drag and drop to reorder your tabs.') }}\n          </span>\n\n          <div id=\"taskbarTabListExpanded\" ref=\"taskbar-tab-list\" />\n        </CommonSectionCollapse>\n      </template>\n\n      <div id=\"taskbarTabListHidden\" class=\"hidden\" aria-hidden=\"true\">\n        <Teleport :to=\"taskbarTabListLocation\" defer>\n          <ul\n            ref=\"dnd-parent\"\n            :class=\"{ 'flex flex-col gap-1.5 overflow-y-auto p-1': !collapsed }\"\n          >\n            <li\n              v-for=\"tabEntityKey in dndTaskbarTabListOrder\"\n              :key=\"tabEntityKey\"\n              class=\"group/tab relative\"\n              :class=\"{ draggable: !collapsed }\"\n              :draggable=\"!collapsed ? 'true' : undefined\"\n              :aria-describedby=\"\n                !collapsed ? 'drag-and-drop-taskbar-tabs' : undefined\n              \"\n            >\n              <component\n                :is=\"getTaskbarTabComponent(tabEntityKey)\"\n                :context=\"getTaskbarTabContext(tabEntityKey)\"\n                :taskbar-tab=\"taskbarTabListByTabEntityKey[tabEntityKey]\"\n                :taskbar-tab-link=\"getTaskbarTabLink(tabEntityKey)\"\n                :class=\"{\n                  'group/link rounded-none group-first/tab:rounded-t-[10px] group-last/tab:rounded-b-[10px] focus-visible:bg-blue-800 focus-visible:outline-0':\n                    collapsed,\n                  'active:cursor-grabbing': !collapsed,\n                }\"\n              />\n\n              <UserTaskbarTabRemove\n                :taskbar-tab=\"taskbarTabListByTabEntityKey[tabEntityKey]\"\n                :dirty=\"getTaskbarTabDirtyFlag(tabEntityKey)\"\n                :plugin=\"\n                  getTaskbarTabTypePlugin(\n                    taskbarTabListByTabEntityKey[tabEntityKey].type,\n                  )\n                \"\n              />\n            </li>\n          </ul>\n        </Teleport>\n      </div>\n    </div>\n  </CommonLoader>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport {\n  type MaybeElementRef,\n  useCurrentElement,\n  type VueInstance,\n} from '@vueuse/core'\nimport { storeToRefs } from 'pinia'\nimport { ref, useTemplateRef, watch } from 'vue'\n\nimport { useTrapTab } from '#shared/composables/useTrapTab.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport LeftSidebarFooterMenu from '#desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarFooterMenu.vue'\nimport LeftSidebarHeader from '#desktop/components/layout/LayoutSidebar/LeftSidebar/LeftSidebarHeader.vue'\nimport LayoutSidebar from '#desktop/components/layout/LayoutSidebar.vue'\nimport { numberOfPermanentItems } from '#desktop/components/PageNavigation/firstLevelRoutes.ts'\nimport PageNavigation from '#desktop/components/PageNavigation/PageNavigation.vue'\nimport QuickSearch from '#desktop/components/QuickSearch/QuickSearch.vue'\nimport UserTaskbarTabs from '#desktop/components/UserTaskbarTabs/UserTaskbarTabs.vue'\nimport { useResizeGridColumns } from '#desktop/composables/useResizeGridColumns.ts'\n\nconst { config } = storeToRefs(useApplicationStore())\n\nconst noTransition = ref(false)\n\nconst layoutSidebarInstance = useTemplateRef('layout-sidebar')\n\nconst isQuickSearchActive = ref(false)\nconst quickSearchValue = ref('')\n\nconst { deactivateTabTrap, activateTabTrap } = useTrapTab(\n  useCurrentElement(\n    layoutSidebarInstance as MaybeElementRef<VueInstance> | undefined,\n  ),\n  true,\n)\n\nwatch(isQuickSearchActive, (isActive) =>\n  isActive ? activateTabTrap() : deactivateTabTrap(),\n)\n\nconst { userId } = useSessionStore()\n\nconst storageKeyId = `${userId}-left`\n\nconst {\n  currentSidebarWidth,\n  maxSidebarWidth,\n  minSidebarWidth,\n  gridColumns,\n  collapseSidebar,\n  resizeSidebar,\n  expandSidebar,\n  resetSidebarWidth,\n} = useResizeGridColumns(storageKeyId)\n</script>\n\n<template>\n  <div\n    class=\"grid h-full max-h-full overflow-y-clip duration-100\"\n    :class=\"{ 'transition-none': noTransition }\"\n    :style=\"gridColumns\"\n  >\n    <LayoutSidebar\n      id=\"main-sidebar\"\n      ref=\"layout-sidebar\"\n      :name=\"storageKeyId\"\n      :aria-label=\"$t('Main sidebar')\"\n      :current-width=\"currentSidebarWidth\"\n      :max-width=\"maxSidebarWidth\"\n      :min-width=\"minSidebarWidth\"\n      :classes=\"{\n        collapseButton: 'z-60',\n        resizeLine: 'z-60',\n      }\"\n      :collapsible=\"!isQuickSearchActive\"\n      resizable\n      no-scroll\n      :no-padding=\"isQuickSearchActive\"\n      remember-collapse\n      @collapse=\"collapseSidebar\"\n      @expand=\"expandSidebar\"\n      @resize-horizontal=\"resizeSidebar\"\n      @resize-horizontal-start=\"noTransition = true\"\n      @resize-horizontal-end=\"noTransition = false\"\n      @reset-width=\"resetSidebarWidth\"\n    >\n      <template #default=\"{ isCollapsed }\">\n        <!-- TODO: Switch to `scheme-dark` utility once we upgrade to TW 4. -->\n        <div\n          class=\"flex h-full flex-col\"\n          data-theme=\"dark\"\n          style=\"color-scheme: dark\"\n        >\n          <LeftSidebarHeader\n            v-model:search=\"quickSearchValue\"\n            v-model:search-active=\"isQuickSearchActive\"\n            class=\"mb-2\"\n            :class=\"{ 'px-3 pt-2.5': isQuickSearchActive }\"\n            :collapsed=\"isCollapsed\"\n          />\n          <QuickSearch\n            v-show=\"isQuickSearchActive\"\n            :search=\"quickSearchValue\"\n            :collapsed=\"isCollapsed\"\n          />\n          <PageNavigation\n            v-show=\"!isQuickSearchActive\"\n            :collapsed=\"isCollapsed\"\n          />\n          <UserTaskbarTabs\n            v-show=\"!isQuickSearchActive\"\n            :collapsed=\"isCollapsed\"\n          />\n          <LeftSidebarFooterMenu\n            v-show=\"!isQuickSearchActive\"\n            :collapsed=\"isCollapsed\"\n            class=\"mt-auto\"\n          />\n        </div>\n      </template>\n    </LayoutSidebar>\n    <div id=\"main-content\" class=\"relative\">\n      <RouterView #default=\"{ Component, route: currentRoute }\">\n        <KeepAlive\n          :exclude=\"['ErrorTab']\"\n          :max=\"config.ui_task_mananger_max_task_count\"\n        >\n          <component\n            :is=\"Component\"\n            v-if=\"!currentRoute.meta.permanentItem\"\n            :key=\"currentRoute.path\"\n          />\n        </KeepAlive>\n        <KeepAlive :max=\"numberOfPermanentItems\">\n          <component\n            :is=\"Component\"\n            v-if=\"currentRoute.meta.permanentItem\"\n            :key=\"currentRoute.meta.pageKey || currentRoute.path\"\n          />\n        </KeepAlive>\n      </RouterView>\n    </div>\n  </div>\n</template>\n"],"names":["themeSwitchInstance","useTemplateRef","cycleThemeSwitchValue","_a","themeStore","useThemeStore","updateTheme","currentTheme","storeToRefs","modelTheme","computed","theme","__vite_glob_0_0$3","AvatarMenuAppearanceItem","__vite_glob_0_1$1","__vite_glob_0_2$1","__vite_glob_0_3","IS_DEV_MODE","__vite_glob_0_4","pluginModules","__vite_glob_0_0","__vite_glob_0_1","__vite_glob_0_2","avatarMenuPlugins","p1","p2","avatarMenuItems","order","item","COLLAPSED_STATE_KEY","useCollapsedState","inject","user","useSessionStore","collapsedState","avatarSize","popover","popoverTarget","toggle","popoverIsOpen","usePopover","__vite_glob_0_0$2","config","useApplicationStore","modules","addModules","_","module","menuItems","m1","m2","defaultItem","__vite_glob_0_0$1","adminModules","adminItems","props","__props","provide","useBrowserNotifications","notificationPermission","usePermission","isGranted","defaultSoundFile","useOnlineNotificationSound","isEnabled","_c","_b","audioPath","getPreloadedAudio","path","sound","audio","useOnlineNotificationList","notificationsQuery","QueryHandler","useOnlineNotificationsQuery","loading","result","notificationList","edgesToArray","isLoading","hasUnseenNotification","notification","truncatedUnseenCount","emit","__emit","link","builder","message","useActivityMessage","toRef","handleLinkClick","mutationTriggered","notificationsCountSubscription","useOnlineNotificationCount","sectionElement","reachedTop","isScrollable","useElementScroll","seenNotification","markAllRead","deleteNotification","useOnlineNotificationActions","runSeenNotification","removeNotification","runMarkAllRead","ids","unseenCount","close","play","requestNotification","show","isSupported","useWebNotification","refetch","watcher","whenever","newCount","oldCount","ref","title","cleanupMarkup","watch","onMounted","searchValue","_useModel","isSearchActive","inputSearchInstance","resetInput","handleEscapeKey","event","isActive","onBeforeUnmount","emitter","routeFiles","__vite_glob_0_5","routeValues","firstLevelRoutes","permanentItemCount","routeModule","route","routes","mappedRoutes","sortedFirstLevelRoutes","a","b","numberOfPermanentItems","router","useRouter","userId","openSearch","nextTick","QuickSearchDocument","gql","useQuickSearchLazyQuery","variables","options","VueApolloComposable.useLazyQuery","useQuickSearchInput","isOrganizationInactive","Organization","itemLabel","Ticket","isUserInactive","User","plugins","quickSearchPlugins","sortedQuickSearchPlugins","lookupQuickSearchPluginComponent","model","plugin","RESULT_LIMIT","userSearchInput","debouncedSearch","refDebounced","quickSearchQuery","quickSearchResult","searchResultsLoading","mappedQuickSearchResults","currentResult","searchResults","searchResult","isLoadingSearchResults","debouncedLoading","useDebouncedLoading","hasResults","resetQuickSearchInputField","RECENTLY_SEARCHES_MAX_LENGTH","useRecentSearches","recentSearches","useLocalStorage","search","UserCurrentRecentViewResetDocument","useUserCurrentRecentViewResetMutation","VueApolloComposable.useMutation","UserCurrentRecentViewListDocument","useUserCurrentRecentViewListQuery","VueApolloComposable.useQuery","UserCurrentRecentViewUpdatesDocument","useUserCurrentRecentViewUpdatesSubscription","VueApolloComposable.useSubscription","DEBOUNCE_TIME","hasSearchInput","debouncedHasSearchInput","isTouchDevice","useTouchDevice","clearSearches","removeSearch","recentViewListQuery","recentViewListQueryResult","recentViewListItems","SubscriptionHandler","data","waitForConfirmation","useConfirmation","notify","useNotifications","confirmRemoveRecentSearch","searchQuery","NotificationTypes","confirmClearRecentSearches","recentViewResetMutation","MutationHandler","confirmClearRecentViewed","UserCurrentTaskbarItemListPrioDocument","ErrorsFragmentDoc","useUserCurrentTaskbarItemListPrioMutation","tabLinkInstance","taskbarTabActive","useUserTaskbarTabLink","taskbarTabStore","useUserCurrentTaskbarTabsStore","activeTaskbarTabEntityKey","confirmRemoveUserTaskbarTab","waitForVariantConfirmation","taskbarTabListByTabEntityKey","taskbarTabListOrder","hasTaskbarTabs","taskbarTabContexts","getTaskbarTabTypePlugin","dndStartCallback","parent","sibling","userCurrentTaskbarItemListPrioMutation","updateTaskbarTabListOrder","newTaskbarTabListOrder","taskbarTabListPrio","tabEntityKey","index","taskbarTabListPrioItem","dndEndCallback","parentData","parents","dndParentElement","dndTaskbarTabListOrder","newValue","cloneDeep","dragAndDrop","startAndEndEventsDNDPlugin","animations","isCollapsed","updateConfig","getTaskbarTabComponent","taskbarTab","EnumTaskbarEntityAccess","UserTaskbarTabForbidden","UserTaskbarTabNotFound","getTaskbarTabLink","taskbarTabListContainer","taskbarTabListLocation","computedAsync","getTaskbarTabContext","getTaskbarTabDirtyFlag","noTransition","layoutSidebarInstance","isQuickSearchActive","quickSearchValue","deactivateTabTrap","activateTabTrap","useTrapTab","useCurrentElement","storageKeyId","currentSidebarWidth","maxSidebarWidth","minSidebarWidth","gridColumns","collapseSidebar","resizeSidebar","expandSidebar","resetSidebarWidth","useResizeGridColumns"],"mappings":"spFAcM,MAAAA,EAAsBC,EAAe,cAAc,EAEnDC,EAAwB,IAAM,QAClCC,EAAAH,EAAoB,QAApB,MAAAG,EAA2B,YAAW,EAGlCC,EAAaC,KACb,CAAE,YAAAC,CAAgB,EAAAF,EAClB,CAAE,aAAAG,CAAA,EAAiBC,EAAYJ,CAAU,EAEzCK,EAAaC,EAAS,CAC1B,IAAK,IAAMH,EAAa,MACxB,IAAMI,GAAUL,EAAYK,CAAK,CAAA,CAClC,2ZCrBgCC,GAAA,CAC/B,IAAK,aACL,MAAO,GAAG,YAAY,EACtB,KAAM,sBACN,eAAgB,GAChB,MAAO,IACP,UAAWC,GACX,WAAY,6BACd,ECViCC,GAAA,CAC/B,IAAK,qBACL,MAAO,GAAG,oBAAoB,EAC9B,QAAS,IAAM,CACb,QAAQ,IAAI,gCAAgC,CAC9C,EACA,KAAM,WACN,MAAO,GACT,ECRiCC,GAAA,CAC/B,IAAK,WACL,MAAO,GAAG,UAAU,EACpB,KAAM,UACN,KAAM,qBACN,aAAc,GACd,MAAO,GACT,ECPiCC,GAAA,CAC/B,IAAK,mBACL,MAAO,GAAG,kBAAkB,EAC5B,KAAM,oBACN,KAAM,cACN,MAAO,GACT,ECNMC,GAAc,GAEaC,GAAA,CAC/B,IAAK,aACL,MAAO,aACP,KAAM,IAAMD,GACZ,KAAM,cACN,KAAM,YACN,MAAO,GACT,ECLME,GAAgB,OAAA,OAAA,CAAA,kBAAAC,GAAA,0BAAAC,GAAA,cAAAC,GAAA,yBAAAN,GAAA,kBAAAE,EAAA,CAAA,EAQTK,GAAoB,OAAO,OAAOJ,EAAa,EAAE,KAC5D,CAACK,EAAIC,IAAOD,EAAG,MAAQC,EAAG,KAC5B,EAEaC,GAAkBH,GAAkB,IAE/C,CAAC,CAAE,MAAAI,EAAO,GAAGC,KAAWA,CAC1B,ECnBaC,GAAsB,OACjC,qBACF,EAEaC,GAAoB,KAGxB,CACL,eAHqBC,GAAOF,EAAmB,CAG/C,wDCGJ,KAAM,CAAE,KAAAG,CAAS,EAAAxB,EAAYyB,EAAiB,CAAA,EAExC,CAAE,eAAAC,GAAmBJ,KAErBK,EAAazB,EAAS,IAAOwB,GAAA,MAAAA,EAAgB,MAAQ,QAAU,QAAS,EAExE,CAAE,QAAAE,EAAS,cAAAC,EAAe,OAAAC,EAAQ,OAAQC,CAAA,EAAkBC,ykCCdnDC,GAAA,CACb,IAAK,gBACL,WAAY,CAAC,eAAgB,iBAAiB,EAC9C,MAAO,IACP,MAAO,GAAG,YAAY,EACtB,QAAS,YACT,MAAO,OACC,KAAA,CAAE,OAAAC,GAAWC,KACb,CAAE,KAAAX,GAASC,IAEjB,OAAI9B,EAAA6B,GAAA,YAAAA,EAAM,cAAN,MAAA7B,EAAmB,MAAM,SAAS,gBAAwB,GAEvDuC,EAAO,sBAChB,EACA,KAAM,mBACN,KAAM,iBACR,ECnBME,GAAU,OAAA,OAAA,CAAA,qBAAAxB,EAAA,CAAA,EAMVyB,GAAa,OAAO,QAAQD,EAAO,EAAE,IAAI,CAAC,CAACE,EAAGC,CAAM,IAAMA,CAAM,EAEtEC,GAAeH,GAAW,KAAK,CAACI,EAAIC,IAAOD,EAAG,MAAQC,EAAG,KAAK,kCCHxD,KAAA,CAAE,eAAAhB,GAAmBJ,KAErBqB,EAAczC,EAAS,IAC3BsC,GAAU,KAAMpB,GAASA,EAAK,MAAQ,eAAe,CAAA,qYCRxCwB,GAAA,CACb,MAAO,IACP,IAAK,QACL,MAAO,GAAG,gBAAgB,EAC1B,WAAY,CAAC,SAAS,EACtB,QAAS,UACT,KAAM,OACN,KAAM,UACR,ECRMR,GAAU,OAAA,OAAA,CAAA,eAAAxB,EAAA,CAAA,EAMViC,GAAe,OAAO,QAAQT,EAAO,EAAE,IAAI,CAAC,CAACE,EAAGC,CAAM,IAAMA,CAAM,EAExEO,GAAeD,GAAa,KAAK,CAACJ,EAAIC,IAAOD,EAAG,MAAQC,EAAG,KAAK,oCCH1D,KAAA,CAAE,eAAAhB,GAAmBJ,KAErBqB,EAAczC,EAAS,IAC3B4C,GAAW,KAAM1B,GAASA,EAAK,MAAQ,OAAO,CAAA,2aCL1C,KAAA,CAAE,eAAAM,GAAmBJ,mSCE3B,MAAMyB,EAAQC,EAId,OAAAC,GACE5B,GACAnB,EAAS,IAAM6C,EAAM,SAAS,CAAA,kJCVnBG,GAA0B,IAAM,CACrC,MAAAC,EAAyBC,GAAc,eAAe,EAEtDC,EAAYnD,EAAS,IAAMiD,EAAuB,QAAU,SAAS,EAOpE,MAAA,CACL,uBAAAA,EACA,UAAAE,EACA,oBAR0B,SAC1B,sBAAuB,aACnB,aAAa,kBAAkB,EAC/B,QAAQ,SAKZ,CAEJ,ECbMC,GAAmB,WAEZC,GAA6B,IAAM,CAC9C,KAAM,CAAE,KAAA/B,CAAS,EAAAxB,EAAYyB,EAAiB,CAAA,EAExC+B,EAAYtD,EAChB,IAAM,WAAA,WAAQuD,GAAAC,GAAA/D,EAAA6B,EAAK,QAAL,YAAA7B,EAAY,cAAZ,YAAA+D,EAAyB,qBAAzB,YAAAD,EAA6C,UAAW,IAAI,EAGtEE,EAAYzD,EAAS,IAAM,WAExB,MAAA,oBADUuD,GAAAC,GAAA/D,EAAA6B,EAAK,QAAL,YAAA7B,EAAY,cAAZ,YAAA+D,EAAyB,qBAAzB,YAAAD,EAA6C,OACzBH,EAAgB,EAAA,CACtD,EAEKM,EAAqBC,GAAiB,CACpC,MAAAC,EAAQ,IAAI,MAAMD,CAAI,EAC5B,OAAAC,EAAM,QAAU,OACTA,CAAA,EAGHC,EAAQ7D,EAAS,IAAM0D,EAAkBD,EAAU,KAAK,CAAC,EAOxD,MAAA,CACL,UAAAH,EACA,KAPW,IAAA,OACX,OAAA7D,EAAAoE,EAAM,QAAN,YAAApE,EAAa,OAAO,MAAM,IAAM,CAC9B,QAAQ,MAAM,mCAAmC,CAAA,GAKnD,CAEJ,EC9BaqE,GAA4B,IAAM,CAC7C,MAAMC,EAAqB,IAAIC,GAAaC,GAA6B,CAAA,EAEnEC,EAAUH,EAAmB,UAE7BI,EAASJ,EAAmB,SAE5BK,EAAmBpE,EACvB,IAAA,OACE,OAAAqE,IAAa5E,EAAA0E,EAAO,QAAP,YAAA1E,EAAc,mBAAmB,EAAA,EAG5C6E,EAAYtE,EAAS,IACrBmE,EAAO,QAAU,OAAkB,GAEhCD,EAAQ,KAChB,EAEKK,EAAwBvE,EAAS,IACrCoE,EAAiB,MAAM,KAAMI,GAAiB,CAACA,EAAa,IAAI,CAAA,EAK3D,MAAA,CACL,iBAAAJ,EACA,sBAAAG,EACA,QALc,IAAMR,EAAmB,UAMvC,QAASO,CAAA,CAEb,qGC7BA,MAAMzB,EAAQC,EAMR2B,EAAuBzE,EAAS,IACpC6C,EAAM,YAAc,GAAK,MAAQA,EAAM,WAAA,q5CCAzC,MAAMA,EAAQC,EAER4B,EAAOC,EAKP,CAAE,KAAAC,EAAM,QAAAC,EAAS,QAAAC,CAAY,EAAAC,GACjCC,GAAMnC,EAAO,cAAc,CAAA,EAGvBoC,EAAmBT,GAAqC,CACxDI,GAAWF,EAAA,OAAQF,CAAY,CAAA,+lECRrC,MAAM3B,EAAQC,EAER4B,EAAOC,EAKb,IAAIO,EAAoB,GAElB,KAAA,CAAE,+BAAAC,GAAmCC,KAC3CD,EAA+B,cAAc,IAAM,CAC5CD,GAAmBR,EAAK,SAAS,EAClBQ,EAAA,EAAA,CACrB,EAEK,MAAAG,EAAiB9F,EAAe,SAAS,EAEzC,CAAE,WAAA+F,EAAY,aAAAC,CAAA,EAAiBC,GACnCH,CAAA,EAGI,CAAE,iBAAAI,EAAkB,YAAAC,EAAa,mBAAAC,GACrCC,GAA6B,EAEzBC,EAAsB,MAAOrB,GAAqC,OAClD,OAAAU,EAAA,GAEpBR,EAAK,OAAO,EAELe,GAAiBhG,EAAA+E,EAAa,aAAb,YAAA/E,EAAyB,EAAY,EAAE,KAAK,IAAM,CACpDyF,EAAA,EAAA,CACrB,CAAA,EAGGY,EAAqB,MAAOtB,GAChCmB,EAAmBnB,EAAa,EAAE,EAE9BuB,EAAiB,SAAY,CACbb,EAAA,GAEpB,MAAMc,EAAMnD,EAAM,iBAAiB,IAAK2B,GAAiBA,EAAa,EAAE,EAExE,OAAOkB,EAAYM,CAAG,EAAE,KAAK,IAAM,CACbd,EAAA,EAAA,CACrB,CAAA,uhBC9CG,KAAA,CAAE,YAAAe,GAAgBb,KAElB,CAAE,QAAA1D,EAAS,cAAAC,EAAe,OAAAC,EAAQ,MAAAsE,CAAA,EAAUpE,KAE5C,CAAE,KAAAqE,EAAM,UAAA7C,CAAU,EAAID,GAA2B,EAEjD,CAAE,uBAAAJ,EAAwB,UAAAE,EAAW,oBAAAiD,GACzCpD,GAAwB,EAEpB,CAAE,KAAAqD,EAAM,YAAAC,CAAY,EAAIC,GAAmB,EAE3C,CACJ,iBAAAnC,EACA,QAASE,EACT,sBAAAC,EACA,QAAAiC,GACE1C,GAA0B,EAExB2C,EAAUC,GAAST,EAAa,CAACU,EAAUC,IAAa,CAC5D,GAAI,CAACN,EAAY,MAAO,OAAOG,EAAQ,KAAK,EAC5C,GAAI,CAACtD,EAAU,OAASwD,EAAWC,EAAU,OAE7C,MAAMpC,EAAeJ,EAAiB,MAAM,GAAG,EAAE,EAEjD,GAAI,CAACI,EAAc,OAEnB,KAAM,CAAE,QAAAM,CAAQ,EAAIC,GAAmB8B,EAAIrC,CAAY,CAAC,EAElDsC,EAAQC,GAAcjC,CAAO,EAE9BuB,EAAA,CACH,MAAAS,EACA,KAAM,0BACN,IAAKtC,EAAa,GAClB,OAAQ,EAAA,CACT,CAAA,CACF,EAED,OAAAwC,EACEf,EACA,CAACU,EAAUC,IAAa,CAClB,CAACtD,EAAU,OAAS,CAACsD,GACrBD,EAAWC,GAAYzD,EAAU,OAAYgD,EAAA,CACnD,EACA,CACE,MAAO,MACT,CAAA,EAQFc,GAAU,IAAM,CAEV3D,EAAU,OAAS,CAACL,EAAuB,OAA2BmD,EAAA,CAAA,CAC3E,2xBCjEK,MAAAc,EAAcC,GAAoBrE,EAAA,YAAA,EAElCsE,EAAiBD,GAAqBrE,EAAA,eAE3C,EAEKuE,EAAsB9H,EAAe,cAAc,EAEnD+H,EAAa,IAAM,OACvBJ,EAAY,MAAQ,GACpBE,EAAe,MAAQ,IAEvB3H,EAAA4H,EAAoB,QAApB,MAAA5H,EAA2B,MAAK,EAG5B8H,EAAmBC,GAAyB,CAC5CA,EAAM,OAAS,UAAqBF,EAAA,CAAA,EAG1C,OAAAN,EAAMI,EAAiBK,GACrBA,EACI,OAAO,iBAAiB,UAAWF,CAAe,EAClD,OAAO,oBAAoB,UAAWA,CAAe,CAAA,EAG3DG,GAAgB,IAAM,CACb,OAAA,oBAAoB,UAAWH,CAAe,CAAA,CACtD,EAEDI,EAAQ,GAAG,2BAA4B,IAAA,OAAM,OAAAlI,EAAA4H,EAAoB,QAApB,YAAA5H,EAA2B,QAAO,EAC/EkI,EAAQ,GAAG,2BAA4B,IAAML,EAAY,CAAA,2qBC9BnD,MAAAJ,EAAcC,GAAoBrE,EAAA,QAEvC,EAEKsE,EAAiBD,GAAqBrE,EAAA,eAE3C,obCMK8E,GAAa,OAAA,OAAA,CAAA,uCAAAlH,GAAA,kCAAAC,GAAA,qCAAAC,GAAA,yCAAAN,GAAA,yCAAAE,GAAA,+BAAAqH,EAAA,CAAA,EAKbC,GAAc,OAAO,OAAOF,EAAU,EACtCG,GAAgC,CAAA,EAEtC,IAAIC,GAAqB,EAEzBF,GAAY,QAASG,GAAgB,CAC/B,GAAA,MAAM,QAAQA,CAAW,EAAG,CAC9BD,IAAsBC,EAAY,OAC/BC,GAA0B,OAAA,OAAAzI,EAAAyI,EAAM,OAAN,YAAAzI,EAAY,cACvC,EAAA,OAEF,MAAM0I,EAASF,EAAY,OAAQC,GAA0B,OACpD,QAAAzI,EAAAyI,EAAM,OAAN,YAAAzI,EAAY,SAAU,CAAA,CAC9B,EACG,GAAA,EAAC0I,GAAA,MAAAA,EAAQ,QAAQ,OAErB,MAAMC,EAAeD,EAAO,IAAKD,IAAW,CAC1C,KAAMA,EAAM,KACZ,KAAMA,EAAM,KACZ,KAAMA,EAAM,IACZ,EAAA,EAEeH,GAAA,KAAK,GAAGK,CAAY,CACvC,CACF,CAAC,EAED,MAAMC,GAAyBN,GAAiB,KAC9C,CAACO,EAAGC,IAAMD,EAAE,KAAK,MAAQC,EAAE,KAAK,KAClC,EAEMC,GAAyBR,yMClC/B,MAAMS,EAASC,KAET,CAAE,OAAAC,GAAWpH,IAEbqH,EAAa,IAAM,CACvBjB,EAAQ,KAAK,2BAA4B,GAAGgB,CAAM,OAAO,EACzDE,GAAS,IAAMlB,EAAQ,KAAK,0BAA0B,CAAC,CAAA,yyCCtB5CmB,GAAsBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiD5B,SAASC,GAAwBC,EAA0JC,EAA+U,GAAI,CACnhB,OAAOC,GAA0FL,GAAqBG,EAAWC,CAAO,CAC1I,CCtDO,MAAME,GAAsB,KAK1B,CACL,2BALiC,IAAM,CACvCzB,EAAQ,KAAK,0BAA0B,CAAA,CAIvC,gECHJ,MAAM9E,EAAQC,EAERuG,EAAyBrJ,EAAS,IAAM,CAAC6C,EAAM,KAAK,MAAM,mrBCH9BnC,GAAA,CAChC,KAAM,eACN,UAAW4I,GACX,SAAU,IACV,gBAAiB,2BACjB,kBAAmB,GAAG,qBAAqB,CAC7C,yDCDA,MAAMzG,EAAQC,EAERyG,EAAYvJ,EAAS,IACrB6C,EAAM,OAAS,kBACTA,EAAM,KAAoB,MAG7B,IAAIA,EAAM,KAAK,MAAM,MAAMA,EAAM,KAAK,KAAK,EACnD,0eCbiClC,GAAA,CAChC,KAAM,SACN,UAAW6I,GACX,SAAU,IACV,gBAAiB,qBACjB,kBAAmB,GAAG,eAAe,CACvC,uDCLA,MAAM3G,EAAQC,EAER2G,EAAiBzJ,EAAS,IAAA,OAAM,SAACP,EAAAoD,EAAM,OAAN,MAAApD,EAAY,QAAM,kqBCHvBmB,GAAA,CAChC,KAAM,OACN,UAAW8I,GACX,SAAU,IACV,gBAAiB,mBACjB,kBAAmB,GAAG,aAAa,CACrC,ECRMC,GAAU,OAAA,OAAA,CAAA,oBAAAjJ,GAAA,cAAAC,GAAA,YAAAC,EAAA,CAAA,EAQHgJ,GAAqB,OAAO,OAAOD,EAAO,EAE1CE,GAA2BD,GAAmB,KACzD,CAACtB,EAAGC,IAAMD,EAAE,SAAWC,EAAE,QAC3B,EAOauB,GAAoCC,GAC/C,OAAA,OAAAtK,EAAAmK,GAAmB,KAAMI,GAAWA,EAAO,OAASD,CAAK,IAAzD,YAAAtK,EAA4D,wICNxDwK,GAAe,mFAOrB,MAAMpH,EAAQC,EAERoH,EAAkBlF,GAAMnC,EAAO,QAAQ,EAEvCsH,EAAkBC,GACtBF,EACArH,EAAM,YAAA,EAGFwH,EAAmB,IAAIrG,GAC3BgF,GACE,KAAO,CACL,OAAQmB,EAAgB,MACxB,MAAOF,EAAA,GAET,CACE,YAAa,UACf,CACF,CAAA,EAGIK,EAAoBD,EAAiB,SACrCE,EAAuBF,EAAiB,UAE9C3D,GACEyD,EACA,IAAM,CACJE,EAAiB,KAAK,CACxB,EACA,CAAE,KAAM,GAAM,UAAW,EAAK,CAAA,EAG1B,MAAAG,EAA2BxK,EAAS,IAAM,CAC9C,MAAMyK,EAAgBH,EAAkB,MAExC,GAAI,CAACG,EAAe,OAEpB,MAAMC,EAAyC,CAAA,EAEtB,OAAAb,GAAA,QAASG,GAAW,CAC3C,GAAI,CAACS,EAAcT,EAAO,eAAe,EAAG,OAEtC,MAAAW,EAAeF,EAAcT,EAAO,eAAe,EACrD,CAACW,GAAgBA,EAAa,aAAe,GAEjDD,EAAc,KAAK,CACjB,KAAMV,EAAO,KACb,UAAWA,EAAO,UAClB,MAAOW,EAAa,MACpB,MAAOX,EAAO,kBACd,mBAAoBW,EAAa,WAAaA,EAAa,MAAM,OACjE,WAAYA,EAAa,UAAA,CAC1B,CAAA,CACF,EAEMD,CAAA,CACR,EAEKE,EAAyB5K,EAAS,IAClCwK,EAAyB,QAAU,OAAkB,GAElDD,EAAqB,KAC7B,EAEK,CAAE,iBAAAM,CAAiB,EAAIC,GAAoB,CAC/C,UAAWF,EACX,GAAI,GAAA,CACL,EAEKG,EAAa/K,EAAS,IAAA,OAC1B,UAAQP,EAAA+K,EAAyB,QAAzB,MAAA/K,EAAgC,QAAM,EAG1C,CAAE,2BAAAuL,GAA+B5B,o5CC5FjC6B,GAA+B,GAExBC,GAAoB,IAAM,CAC/B,KAAA,CAAE,OAAAvC,GAAWpH,IACb4J,EAAiBC,GACrB,GAAGzC,CAAM,kBACT,CAAC,CAAA,EA4BI,MAAA,CACL,eAAAwC,EACA,UA3BiBE,GAAmB,CAErBF,EAAA,MAAQA,EAAe,MAAM,OACzCjK,GAASA,IAASmK,CAAA,EAINF,EAAA,MAAM,KAAKE,CAAM,EAG5BF,EAAe,MAAM,OAASF,IAChCE,EAAe,MAAM,OACvB,EAgBA,aAboBE,GAAmB,CACxBF,EAAA,MAAQA,EAAe,MAAM,OACzCjK,GAASA,IAASmK,CAAA,CACrB,EAWA,cARoB,IAAM,CAC1BF,EAAe,MAAQ,EAAC,CAOxB,CAEJ,ECvCaG,GAAqCvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOlC,SAAAwC,GAAsCrC,EAAuS,GAAI,CACxV,OAAAsC,GAA6HF,GAAoCpC,CAAO,CACjL,CCTO,MAAMuC,GAAoC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmC1C,SAAS2C,GAAkCzC,EAAoM,GAAIC,EAAma,CAAA,EAAI,CAC/pB,OAAOyC,GAAkHF,GAAmCxC,EAAWC,CAAO,CAChL,CCrCO,MAAM0C,GAAuC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOpC,SAAA8C,GAA4C3C,EAAof,GAAI,CACljB,OAAO4C,GAA6IF,GAAsC,GAAI1C,CAAO,CACvM,+RCWM6C,GAAgB,mFAOtB,MAAMlJ,EAAQC,EAERkJ,EAAiBhM,EAAS,IAAM,OAAA,QAAAP,EAAAoD,EAAM,SAAN,YAAApD,EAAc,QAAS,EAAC,EACxDwM,EAA0B7B,GAAa4B,EAAgBD,EAAa,EAEpE,CAAE,cAAAG,GAAkBC,KAEpB,CAAE,eAAAhB,EAAgB,cAAAiB,EAAe,aAAAC,GAAiBnB,GAAkB,EAEpEoB,EAAsB,IAAItI,GAC9B0H,GAAkC,CAChC,MAAO,EAAA,CACR,CAAA,EAGGa,EAA4BD,EAAoB,SAEhDE,EAAsBxM,EAC1B,WAAM,QAAAP,EAAA8M,EAA0B,QAA1B,YAAA9M,EAAiC,4BAA6B,CAAC,EAAA,EAGjC,IAAIgN,GACxCZ,GAA4C,CAAA,EAGhB,SAAS,CAAC,CAAE,KAAAa,KAAW,CAC/CA,GAAA,MAAAA,EAAM,8BACRJ,EAAoB,QAAQ,CAC9B,CACD,EAEK,KAAA,CAAE,oBAAAK,GAAwBC,KAC1B,CAAE,OAAAC,GAAWC,KAEbC,EAA4B,MAAOC,GAAwB,CAC7C,MAAML,EACtB,GAAG,iDAAiD,EACpD,CAAE,WAAY,EAAK,CAAA,IAKrBN,EAAaW,CAAW,EAEjBH,EAAA,CACL,GAAI,wBACJ,KAAMI,GAAkB,QACxB,QAAS,GAAG,yCAAyC,CAAA,CACtD,EAAA,EAGGC,EAA6B,SAAY,CAC3B,MAAMP,EACtB,GAAG,mDAAmD,EACtD,CAAE,WAAY,EAAK,CAAA,IAKPP,IAEPS,EAAA,CACL,GAAI,0BACJ,KAAMI,GAAkB,QACxB,QAAS,GAAG,4CAA4C,CAAA,CACzD,EAAA,EAGGE,EAA0B,IAAIC,GAClC7B,GAAsC,CAAA,EAGlC8B,EAA2B,SAAY,CACzB,MAAMV,EACtB,GAAG,yDAAyD,EAC5D,CAAE,WAAY,EAAK,CAAA,GAKGQ,EAAA,OAAO,KAAK,IAAM,CACjCN,EAAA,CACL,GAAI,wBACJ,KAAMI,GAAkB,QACxB,QAAS,GAAG,kDAAkD,CAAA,CAC/D,CAAA,CACF,CAAA,EAGG,CAAE,2BAAAjC,GAA+B5B,4iECnH1BkE,GAAyCvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAShDwE,EAAiB,GACP,SAAAC,GAA0CtE,EAAuT,GAAI,CAC5W,OAAAsC,GAAqI8B,GAAwCpE,CAAO,CAC7L,0GCXA,MAAMrG,EAAQC,EAER,CAAE,gBAAA2K,EAAiB,iBAAAC,CAAA,EAAqBC,GAC5C3I,GAAMnC,EAAO,YAAY,CAAA,y6BCH3B,MAAMA,EAAQC,EAER,CAAE,gBAAA2K,EAAiB,iBAAAC,CAAA,EAAqBC,GAC5C3I,GAAMnC,EAAO,YAAY,CAAA,+7BCQ3B,MAAMA,EAAQC,EAER8K,EAAkBC,KAElB,CAAE,0BAAAC,CAAA,EAA8BhO,EAAY8N,CAAe,EAE3D,CAAE,cAAA1B,GAAkBC,KAEpB1D,EAASC,KAETqF,EAA8B,SAAY,SAC1C,GAAClL,EAAM,WAAW,aAElB,KAAApD,EAAAoD,EAAM,SAAN,MAAApD,EAAc,iBAAkB,CAMhC,GAAAoD,EAAM,OACNA,EAAM,WAAW,eAAiBiL,EAA0B,OAC5D,QAAOtK,EAAAX,EAAM,SAAN,YAAAW,EAAc,sBAAwB,WAC7C,CACM,MAAAoB,EAAO/B,EAAM,OAAO,oBACxBA,EAAM,WAAW,OACjBA,EAAM,WAAW,YAAA,EAEf+B,GAAM,MAAM6D,EAAO,KAAK7D,CAAI,CAClC,CAEA,GAAI/B,EAAM,MAAO,CACT,KAAA,CAAE,2BAAAmL,GAA+BpB,KAOvC,GAAI,CANc,MAAMoB,EACtB,UACA,OACA,kBAAkBnL,EAAM,WAAW,YAAY,EAAA,EAGjC,MAClB,CACF,CAGgB+K,EAAA,iBAAiB/K,EAAM,WAAW,YAAY,EAAA,szBCjChE,MAAMA,EAAQC,EAER8K,EAAkBC,KAElB,CACJ,6BAAAI,EACA,oBAAAC,EACA,eAAAC,EACA,mBAAAC,EACA,QAAAlK,CAAA,EACEpE,EAAY8N,CAAe,EAEzB,CAAE,wBAAAS,CAA4B,EAAAT,EAE9BU,EAAoBC,GAAwB,CAC/BA,EAAO,iBAAiB,kCAAkC,EAGlE,QAASC,GAAY,CACpBA,EAAA,UAAU,OAAO,WAAW,EAC5BA,EAAA,UAAU,IAAI,YAAY,CAAA,CACnC,CAAA,EAGGC,EAAyC,IAAIrB,GACjDI,GAA0C,CAAA,EAGtCkB,EAA6BC,GAAqC,CACtE,MAAMC,EAAqBD,GAAA,YAAAA,EACvB,IAAI,CAACE,EAAcC,MAAW,CAC9B,GAAIb,EAA6B,MAAMY,CAAY,EAAE,aACrD,KAAMC,GAAQ,CAAA,IAEf,OAAQC,GAA2BA,EAAuB,IAExDH,GAAA,MAAAA,EAAoB,QAEzBH,EAAuC,KAAK,CAC1C,KAAMG,CAAA,CACP,CAAA,EAGGI,EAAkBT,GAAwB,CACxC,MAAAU,EAAaC,GAAQ,IAAIX,CAAM,EAEjCU,GACwBP,EAAAO,EAAW,UAAUV,CAAM,CAAC,EAGvCA,EAAO,iBAAiB,kCAAkC,EAGlE,QAASC,IAAY,CACpBA,GAAA,UAAU,IAAI,WAAW,EACzBA,GAAA,UAAU,OAAO,YAAY,CAAA,CACtC,EAID,WAAW,IAAM,CACRD,EAAA,UAAU,IAAI,qBAAqB,EAC1C,sBAAsB,IAAM,CACnBA,EAAA,UAAU,OAAO,qBAAqB,CAAA,CAC9C,GACA,CAAC,CAAA,EAGAY,EAAmB5P,EAAe,YAAY,EAC9C6P,EAAyBvI,EAAIqH,EAAoB,OAAS,CAAE,CAAA,EAE5DlH,EAAAkH,EAAsBmB,GAAa,CACvCD,EAAuB,MAAQE,GAAUD,GAAY,CAAE,CAAA,CAAA,CACxD,EAEWE,GAAA,CACV,OAAQJ,EACR,OAAQC,EACR,QAAS,CACPI,GAA2BlB,EAAkBU,CAAc,EAC3DS,GAAW,CACb,EACA,cAAe,uCACf,mBAAoB,uCACpB,cAAe,iBAAA,CAChB,EAEDzI,EACE,IAAMnE,EAAM,UACX6M,GAAgB,CACVP,EAAiB,OAEtBQ,GAAaR,EAAiB,MAAO,CAAE,SAAUO,CAAa,CAAA,CAChE,CAAA,EAGI,MAAAE,EAA0Bf,GAAyB,CACjD,MAAAgB,EAAa5B,EAA6B,MAAMY,CAAY,EAClE,GAAKgB,EAEL,IACE,CAACA,EAAW,cACZA,EAAW,eAAiBC,GAAwB,QAE7C,OAAAzB,EAAwBwB,EAAW,IAAI,EAAE,UAE9C,GAAAA,EAAW,eAAiBC,GAAwB,UAC/C,OAAAC,GAEL,GAAAF,EAAW,eAAiBC,GAAwB,SAC/C,OAAAE,GAAA,EAGLC,EAAqBpB,GAAyB,CAC5C,MAAAgB,EAAa5B,EAA6B,MAAMY,CAAY,EAClE,GAAI,CAACgB,EAAY,OAEX,MAAA7F,EAASqE,EAAwBwB,EAAW,IAAI,EAClD,GAAA,OAAO7F,EAAO,qBAAwB,WAE1C,OACEA,EAAO,oBAAoB6F,EAAW,OAAQA,EAAW,YAAY,GACrE,GAAA,EAIE,CAAE,QAAAnO,EAAS,cAAAC,EAAe,OAAAC,EAAQ,OAAQC,CAAA,EAAkBC,KAE5DoO,EAA0B3Q,EAAe,kBAAkB,EAE3D4Q,EAAyBC,GAAc,IACtCF,EAAwB,MAItBrH,GAAS,IACVhG,EAAM,UAAkB,2BACrB,yBACR,EAP0C,wBAQ1C,uBAAuB,EAEpBwN,EAAwBxB,GAAyB,CACjD,GAACqB,EAAwB,MAEtB,OAAA9B,EAAmB,MAAMS,CAAY,CAAA,EAGxCyB,EAA0BzB,GAAyB,OACnD,GAACqB,EAAwB,MAG3B,QAAAzQ,EAAA2O,EAAmB,MAAMS,CAAY,IAArC,YAAApP,EAAwC,cACxCwO,EAA6B,MAAMY,CAAY,EAAE,KAAA,6gEC9JrD,KAAM,CAAE,OAAA7M,CAAW,EAAAlC,EAAYmC,GAAqB,CAAA,EAE9CsO,EAAe1J,EAAI,EAAK,EAExB2J,EAAwBjR,EAAe,gBAAgB,EAEvDkR,EAAsB5J,EAAI,EAAK,EAC/B6J,EAAmB7J,EAAI,EAAE,EAEzB,CAAE,kBAAA8J,EAAmB,gBAAAC,CAAA,EAAoBC,GAC7CC,GACEN,CACF,EACA,EAAA,EAGFxJ,EAAMyJ,EAAsBhJ,GAC1BA,EAAWmJ,EAAA,EAAoBD,EAAkB,CAAA,EAG7C,KAAA,CAAE,OAAAhI,GAAWpH,IAEbwP,EAAe,GAAGpI,CAAM,QAExB,CACJ,oBAAAqI,EACA,gBAAAC,EACA,gBAAAC,EACA,YAAAC,EACA,gBAAAC,EACA,cAAAC,EACA,cAAAC,EACA,kBAAAC,CAAA,EACEC,GAAqBT,CAAY"}