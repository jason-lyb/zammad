{"version":3,"file":"usePagination-CE_-FZed.js","sources":["../../../../../app/frontend/shared/composables/usePagination.ts"],"sourcesContent":["// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport {\n  computed,\n  reactive,\n  readonly,\n  ref,\n  type ComputedRef,\n  type Ref,\n} from 'vue'\n\nimport type { QueryHandler } from '#shared/server/apollo/handler/index.ts'\nimport type {\n  BaseConnection,\n  OperationQueryResult,\n  PaginationVariables,\n} from '#shared/types/server/apollo/handler.ts'\n\nimport type { OperationVariables } from '@apollo/client/core'\n\nexport const usePagination = <\n  TQueryResult extends OperationQueryResult = OperationQueryResult,\n  TQueryVariables extends OperationVariables = OperationVariables,\n>(\n  query: QueryHandler<TQueryResult, TQueryVariables>,\n  resultKey: string,\n  pageSize: number,\n  additionalVariables?:\n    | Ref<Partial<TQueryVariables>>\n    | ComputedRef<Partial<TQueryVariables>>\n    | (() => Partial<TQueryVariables>),\n) => {\n  const pageInfo = computed(() => {\n    const result: OperationQueryResult = query.result().value || {}\n    return (result[resultKey] as BaseConnection)?.pageInfo\n  })\n\n  const hasNextPage = computed(() => !!pageInfo.value?.hasNextPage)\n  const hasPreviousPage = computed(() => !!pageInfo.value?.hasPreviousPage)\n\n  const currentPage = computed(() => {\n    const result: OperationQueryResult = query.result().value || {}\n    const data = result[resultKey] as BaseConnection\n    if (!data) return 1\n    const currentLength = data.edges?.length || 0\n    return currentLength ? Math.ceil(currentLength / pageSize) : 1\n  })\n\n  const loadingNewPage = ref(false)\n\n  return reactive({\n    pageInfo: readonly(pageInfo),\n    hasNextPage: readonly(hasNextPage),\n    hasPreviousPage: readonly(hasPreviousPage),\n    loadingNewPage: readonly(loadingNewPage),\n    currentPage,\n    async fetchPreviousPage() {\n      try {\n        loadingNewPage.value = true\n        await query.fetchMore({\n          variables: {\n            pageSize,\n            cursor: pageInfo.value?.startCursor,\n          } as Partial<TQueryVariables & PaginationVariables>,\n        })\n      } finally {\n        loadingNewPage.value = false\n      }\n    },\n    async fetchNextPage() {\n      try {\n        loadingNewPage.value = true\n\n        const nextAdditionalVariables =\n          (typeof additionalVariables === 'function'\n            ? additionalVariables()\n            : additionalVariables?.value) || {}\n\n        await query.fetchMore({\n          variables: {\n            pageSize,\n            cursor: pageInfo.value?.endCursor,\n            ...nextAdditionalVariables,\n          } as Partial<TQueryVariables & PaginationVariables>,\n        })\n      } finally {\n        loadingNewPage.value = false\n      }\n    },\n  })\n}\n"],"names":["usePagination","query","resultKey","pageSize","additionalVariables","pageInfo","computed","_a","hasNextPage","hasPreviousPage","currentPage","data","currentLength","loadingNewPage","ref","reactive","readonly","nextAdditionalVariables"],"mappings":"4DAoBO,MAAMA,EAAgB,CAI3BC,EACAC,EACAC,EACAC,IAIG,CACG,MAAAC,EAAWC,EAAS,IAAM,OAEtB,OAAAC,GAD6BN,EAAM,OAAO,EAAE,OAAS,CAAA,GAC9CC,CAAS,IAAhB,YAAAK,EAAsC,QAAA,CAC/C,EAEKC,EAAcF,EAAS,IAAM,OAAA,OAAC,GAACC,EAAAF,EAAS,QAAT,MAAAE,EAAgB,aAAW,EAC1DE,EAAkBH,EAAS,IAAM,OAAA,OAAC,GAACC,EAAAF,EAAS,QAAT,MAAAE,EAAgB,iBAAe,EAElEG,EAAcJ,EAAS,IAAM,OAE3B,MAAAK,GAD+BV,EAAM,OAAO,EAAE,OAAS,CAAA,GACzCC,CAAS,EACzB,GAAA,CAACS,EAAa,MAAA,GACZ,MAAAC,IAAgBL,EAAAI,EAAK,QAAL,YAAAJ,EAAY,SAAU,EAC5C,OAAOK,EAAgB,KAAK,KAAKA,EAAgBT,CAAQ,EAAI,CAAA,CAC9D,EAEKU,EAAiBC,EAAI,EAAK,EAEhC,OAAOC,EAAS,CACd,SAAUC,EAASX,CAAQ,EAC3B,YAAaW,EAASR,CAAW,EACjC,gBAAiBQ,EAASP,CAAe,EACzC,eAAgBO,EAASH,CAAc,EACvC,YAAAH,EACA,MAAM,mBAAoB,OACpB,GAAA,CACFG,EAAe,MAAQ,GACvB,MAAMZ,EAAM,UAAU,CACpB,UAAW,CACT,SAAAE,EACA,QAAQI,EAAAF,EAAS,QAAT,YAAAE,EAAgB,WAC1B,CAAA,CACD,CAAA,QACD,CACAM,EAAe,MAAQ,EACzB,CACF,EACA,MAAM,eAAgB,OAChB,GAAA,CACFA,EAAe,MAAQ,GAEjB,MAAAI,GACH,OAAOb,GAAwB,WAC5BA,IACAA,GAAA,YAAAA,EAAqB,QAAU,GAErC,MAAMH,EAAM,UAAU,CACpB,UAAW,CACT,SAAAE,EACA,QAAQI,EAAAF,EAAS,QAAT,YAAAE,EAAgB,UACxB,GAAGU,CACL,CAAA,CACD,CAAA,QACD,CACAJ,EAAe,MAAQ,EACzB,CACF,CAAA,CACD,CACH"}