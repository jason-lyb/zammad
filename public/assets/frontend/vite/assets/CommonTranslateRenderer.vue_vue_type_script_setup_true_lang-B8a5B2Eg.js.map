{"version":3,"file":"CommonTranslateRenderer.vue_vue_type_script_setup_true_lang-B8a5B2Eg.js","sources":["../../../../../app/frontend/shared/components/CommonTranslateRenderer/CommonTranslateRenderer.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { defineProps, computed } from 'vue'\n\nimport { i18n } from '#shared/i18n.ts'\n\nimport type { PlaceholderRenderType, RenderPlaceholder } from './types.ts'\n\ninterface Props {\n  source: string\n  placeholders: (string | RenderPlaceholder)[]\n}\n\nconst typeComponents: Record<PlaceholderRenderType, string> = {\n  link: 'CommonLink',\n  datetime: 'CommonDateTime',\n  label: 'CommonLabel',\n  badge: 'CommonBadge',\n}\n\nconst props = defineProps<Props>()\n\nconst translatedSourcePieces = computed(() => {\n  const translatedSource = i18n.t(\n    props.source,\n    ...props.placeholders.map((placeholder) => {\n      return typeof placeholder === 'string' ? placeholder : `%s`\n    }),\n  )\n\n  const filteredPlaceholders = props.placeholders.filter(\n    (ph) => typeof ph === 'object',\n  )\n\n  const translatedSourcePieces: (string | RenderPlaceholder)[] = []\n  const translatedSourceParts = translatedSource.split('%s')\n  translatedSourceParts.forEach((part, index) => {\n    // Add the text part to the result\n    if (part) translatedSourcePieces.push(part)\n\n    // Add the corresponding placeholder if available\n    if (index < translatedSourceParts.length - 1) {\n      const placeholder = filteredPlaceholders[index]\n      translatedSourcePieces.push(placeholder)\n    }\n  })\n\n  return translatedSourcePieces\n})\n</script>\n\n<template>\n  <span>\n    <template v-for=\"(translatedSourcePiece, index) in translatedSourcePieces\">\n      <template v-if=\"typeof translatedSourcePiece === 'string'\">\n        {{ translatedSourcePiece }}\n      </template>\n      <template v-else>\n        <component\n          :is=\"typeComponents[translatedSourcePiece.type]\"\n          :key=\"`${translatedSourcePiece.type}-${index}`\"\n          v-bind=\"translatedSourcePiece.props\"\n        >\n          <template v-if=\"translatedSourcePiece.content\" #default>\n            {{ translatedSourcePiece.content }}\n          </template>\n        </component>\n      </template>\n    </template>\n  </span>\n</template>\n"],"names":["typeComponents","props","__props","translatedSourcePieces","computed","translatedSource","i18n","placeholder","filteredPlaceholders","ph","translatedSourceParts","part","index"],"mappings":"0PAcA,MAAMA,EAAwD,CAC5D,KAAM,aACN,SAAU,iBACV,MAAO,cACP,MAAO,aAAA,EAGHC,EAAQC,EAERC,EAAyBC,EAAS,IAAM,CAC5C,MAAMC,EAAmBC,EAAK,EAC5BL,EAAM,OACN,GAAGA,EAAM,aAAa,IAAKM,GAClB,OAAOA,GAAgB,SAAWA,EAAc,IACxD,CAAA,EAGGC,EAAuBP,EAAM,aAAa,OAC7CQ,GAAO,OAAOA,GAAO,QAAA,EAGlBN,EAAyD,CAAA,EACzDO,EAAwBL,EAAiB,MAAM,IAAI,EACnC,OAAAK,EAAA,QAAQ,CAACC,EAAMC,IAAU,CAKzC,GAHAD,GAAMR,EAAuB,KAAKQ,CAAI,EAGtCC,EAAQF,EAAsB,OAAS,EAAG,CACtC,MAAAH,EAAcC,EAAqBI,CAAK,EAC9CT,EAAuB,KAAKI,CAAW,CACzC,CAAA,CACD,EAEMJ,CAAA,CACR"}