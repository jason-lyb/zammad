{"version":3,"file":"TicketActionChangeCustomerDialog-BneenKXj.js","sources":["../../../../../app/frontend/apps/mobile/pages/ticket/components/TicketDetailView/TicketAction/TicketActionChangeCustomerDialog.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport { useTicketChangeCustomer } from '#shared/entities/ticket/composables/useTicketChangeCustomer.ts'\nimport { useTicketFormOrganizationHandler } from '#shared/entities/ticket/composables/useTicketFormOrganizationHandler.ts'\nimport type {\n  TicketById,\n  TicketCustomerUpdateFormData,\n} from '#shared/entities/ticket/types.ts'\nimport { defineFormSchema } from '#shared/form/defineFormSchema.ts'\nimport { EnumObjectManagerObjects } from '#shared/graphql/types.ts'\n\nimport CommonButton from '#mobile/components/CommonButton/CommonButton.vue'\nimport CommonDialog from '#mobile/components/CommonDialog/CommonDialog.vue'\nimport { closeDialog } from '#mobile/composables/useDialog.ts'\n\nexport interface Props {\n  name: string\n  ticket: TicketById\n}\n\nconst props = defineProps<Props>()\n\nconst { form, isDirty, canSubmit } = useForm()\n\nconst { waitForConfirmation } = useConfirmation()\n\nconst cancelDialog = async () => {\n  if (isDirty.value) {\n    const confirmed = await waitForConfirmation(\n      __('Are you sure? You have unsaved changes that will get lost.'),\n      {\n        buttonLabel: __('Discard changes'),\n        buttonVariant: 'danger',\n      },\n    )\n\n    if (!confirmed) return\n  }\n\n  closeDialog(props.name)\n}\n\nconst formSchema = defineFormSchema([\n  {\n    name: 'customer_id',\n    screen: 'edit',\n    object: EnumObjectManagerObjects.Ticket,\n    required: true,\n  },\n  {\n    name: 'organization_id',\n    screen: 'edit',\n    object: EnumObjectManagerObjects.Ticket,\n  },\n])\n\nconst { changeCustomer } = useTicketChangeCustomer(toRef(props, 'ticket'), {\n  onSuccess: () => closeDialog(props.name),\n})\n</script>\n\n<template>\n  <CommonDialog\n    class=\"w-full\"\n    no-autofocus\n    :name=\"name\"\n    :label=\"__('Change customer')\"\n  >\n    <template #before-label>\n      <CommonButton transparent-background @click=\"cancelDialog\">\n        {{ $t('Cancel') }}\n      </CommonButton>\n    </template>\n    <template #after-label>\n      <CommonButton\n        :form=\"name\"\n        :disabled=\"!canSubmit\"\n        variant=\"primary\"\n        type=\"submit\"\n        transparent-background\n      >\n        {{ $t('Save') }}\n      </CommonButton>\n    </template>\n    <Form\n      :id=\"name\"\n      ref=\"form\"\n      class=\"w-full p-4\"\n      should-autofocus\n      :schema=\"formSchema\"\n      :handlers=\"[useTicketFormOrganizationHandler()]\"\n      :initial-entity-object=\"ticket\"\n      use-object-attributes\n      @submit=\"\n        changeCustomer($event as FormSubmitData<TicketCustomerUpdateFormData>)\n      \"\n    />\n  </CommonDialog>\n</template>\n"],"names":["props","__props","form","isDirty","canSubmit","useForm","waitForConfirmation","useConfirmation","cancelDialog","closeDialog","formSchema","defineFormSchema","EnumObjectManagerObjects","changeCustomer","useTicketChangeCustomer","toRef"],"mappings":"8iCA2BA,MAAMA,EAAQC,EAER,CAAE,KAAAC,EAAM,QAAAC,EAAS,UAAAC,GAAcC,EAAQ,EAEvC,CAAE,oBAAAC,GAAwBC,IAE1BC,EAAe,SAAY,CAC3BL,EAAQ,OASN,CARc,MAAMG,EACtB,GAAG,4DAA4D,EAC/D,CACE,YAAa,GAAG,iBAAiB,EACjC,cAAe,QACjB,CAAA,GAMJG,EAAYT,EAAM,IAAI,CAAA,EAGlBU,EAAaC,EAAiB,CAClC,CACE,KAAM,cACN,OAAQ,OACR,OAAQC,EAAyB,OACjC,SAAU,EACZ,EACA,CACE,KAAM,kBACN,OAAQ,OACR,OAAQA,EAAyB,MACnC,CAAA,CACD,EAEK,CAAE,eAAAC,CAAe,EAAIC,EAAwBC,EAAMf,EAAO,QAAQ,EAAG,CACzE,UAAW,IAAMS,EAAYT,EAAM,IAAI,CAAA,CACxC"}