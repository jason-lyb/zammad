{"version":3,"file":"GuidedSetupManualAdmin-CRFI0neZ.js","sources":["../../../../../app/frontend/apps/desktop/pages/guided-setup/graphql/mutations/userAddFirstAdmin.api.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/views/GuidedSetupManual/GuidedSetupManualAdmin.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { SessionFragmentDoc } from '../../../../../../shared/graphql/fragments/session.api';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserAddFirstAdminDocument = gql`\n    mutation userAddFirstAdmin($input: UserSignupInput!) {\n  userAddFirstAdmin(input: $input) {\n    session {\n      ...session\n    }\n    errors {\n      ...errors\n    }\n  }\n}\n    ${SessionFragmentDoc}\n${ErrorsFragmentDoc}`;\nexport function useUserAddFirstAdminMutation(options: VueApolloComposable.UseMutationOptions<Types.UserAddFirstAdminMutation, Types.UserAddFirstAdminMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.UserAddFirstAdminMutation, Types.UserAddFirstAdminMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.UserAddFirstAdminMutation, Types.UserAddFirstAdminMutationVariables>(UserAddFirstAdminDocument, options);\n}\nexport type UserAddFirstAdminMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.UserAddFirstAdminMutation, Types.UserAddFirstAdminMutationVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { shallowRef } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport Form from '#shared/components/Form/Form.vue'\nimport type { FormSubmitData } from '#shared/components/Form/types.ts'\nimport useFingerprint from '#shared/composables/useFingerprint.ts'\nimport type { SignupFormData } from '#shared/entities/user/types.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\nimport { useAuthenticationStore } from '#shared/stores/authentication.ts'\n\nimport { useSignupForm } from '#desktop/composables/authentication/useSignupForm.ts'\n\nimport GuidedSetupActionFooter from '../../components/GuidedSetupActionFooter.vue'\nimport { useSystemSetup } from '../../composables/useSystemSetup.ts'\nimport { useUserAddFirstAdminMutation } from '../../graphql/mutations/userAddFirstAdmin.api.ts'\nimport { systemSetupBeforeRouteEnterGuard } from '../../router/guards/systemSetupBeforeRouteEnterGuard.ts'\nimport { useSystemSetupInfoStore } from '../../stores/systemSetupInfo.ts'\n\ndefineOptions({\n  beforeRouteEnter: systemSetupBeforeRouteEnterGuard,\n})\n\nconst { setTitle } = useSystemSetup()\n\nsetTitle(__('Create Administrator Account'))\n\nconst router = useRouter()\n\nconst form = shallowRef()\nconst { signupSchema } = useSignupForm()\n\nconst { systemSetupUnlock } = useSystemSetupInfoStore()\n\nconst signup = async (data: SignupFormData) => {\n  const { fingerprint } = useFingerprint()\n\n  const sendSignup = new MutationHandler(\n    useUserAddFirstAdminMutation({\n      context: {\n        headers: {\n          'X-Browser-Fingerprint': fingerprint.value,\n        },\n      },\n    }),\n  )\n  return sendSignup\n    .send({\n      input: {\n        firstname: data.firstname,\n        lastname: data.lastname,\n        email: data.email,\n        password: data.password,\n      },\n    })\n    .then(async (result) => {\n      const { setAuthenticatedSessionId } = useAuthenticationStore()\n      if (\n        await setAuthenticatedSessionId(\n          result?.userAddFirstAdmin?.session?.id || null,\n        )\n      ) {\n        // TODO: after auth handling should be at the end of the setup triggered again (maybe we need to remember it?).\n        systemSetupUnlock(() => {\n          router.push('/guided-setup/manual/system-information')\n        })\n      }\n    })\n}\n\nconst unlockCallback = () => {\n  router.replace('/guided-setup')\n}\n</script>\n\n<template>\n  <Form\n    id=\"admin-signup\"\n    ref=\"form\"\n    form-class=\"mb-2.5\"\n    :schema=\"signupSchema\"\n    @submit=\"signup($event as FormSubmitData<SignupFormData>)\"\n  />\n  <GuidedSetupActionFooter\n    :form=\"form\"\n    :submit-button-text=\"__('Create account')\"\n    @go-back=\"systemSetupUnlock(unlockCallback)\"\n  />\n</template>\n"],"names":["UserAddFirstAdminDocument","gql","SessionFragmentDoc","ErrorsFragmentDoc","useUserAddFirstAdminMutation","options","VueApolloComposable.useMutation","setTitle","useSystemSetup","router","useRouter","form","shallowRef","signupSchema","useSignupForm","systemSetupUnlock","useSystemSetupInfoStore","signup","data","fingerprint","useFingerprint","MutationHandler","result","setAuthenticatedSessionId","useAuthenticationStore","_b","_a","unlockCallback"],"mappings":"k3CASO,MAAMA,EAA4BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWnCC,CAAkB;AAAA,EACtBC,CAAiB,GACH,SAAAC,EAA6BC,EAAmQ,GAAI,CAC3S,OAAAC,EAA2GN,EAA2BK,CAAO,CACtJ,yECCM,KAAA,CAAE,SAAAE,GAAaC,IAEZD,EAAA,GAAG,8BAA8B,CAAC,EAE3C,MAAME,EAASC,IAETC,EAAOC,IACP,CAAE,aAAAC,GAAiBC,IAEnB,CAAE,kBAAAC,GAAsBC,IAExBC,EAAS,MAAOC,GAAyB,CACvC,KAAA,CAAE,YAAAC,GAAgBC,IAWxB,OATmB,IAAIC,EACrBjB,EAA6B,CAC3B,QAAS,CACP,QAAS,CACP,wBAAyBe,EAAY,KACvC,CACF,CAAA,CACD,CAAA,EAGA,KAAK,CACJ,MAAO,CACL,UAAWD,EAAK,UAChB,SAAUA,EAAK,SACf,MAAOA,EAAK,MACZ,SAAUA,EAAK,QACjB,CAAA,CACD,EACA,KAAK,MAAOI,GAAW,SAChB,KAAA,CAAE,0BAAAC,GAA8BC,IAEpC,MAAMD,IACJE,GAAAC,EAAAJ,GAAA,YAAAA,EAAQ,oBAAR,YAAAI,EAA2B,UAA3B,YAAAD,EAAoC,KAAM,IAAA,GAI5CV,EAAkB,IAAM,CACtBN,EAAO,KAAK,yCAAyC,CAAA,CACtD,CACH,CACD,CAAA,EAGCkB,EAAiB,IAAM,CAC3BlB,EAAO,QAAQ,eAAe,CAAA"}