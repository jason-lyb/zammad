{"version":3,"file":"useTicketOverviews-BXq-2Pxm.js","sources":["../../../../../app/frontend/apps/mobile/components/CommonTicketCreateLink/CommonTicketCreateLink.vue","../../../../../app/frontend/apps/mobile/entities/ticket/graphql/queries/overviewTicketCount.api.ts","../../../../../app/frontend/apps/mobile/entities/ticket/composables/useTicketOverviews.ts"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useTicketCreateView } from '#shared/entities/ticket/composables/useTicketCreateView.ts'\n\nconst { ticketCreateEnabled } = useTicketCreateView()\n</script>\n\n<template>\n  <div\n    v-if=\"ticketCreateEnabled\"\n    class=\"flex cursor-pointer items-center justify-end\"\n  >\n    <CommonLink link=\"/tickets/create\" :aria-label=\"$t('Create new ticket')\">\n      <CommonIcon name=\"add\" size=\"small\" decorative />\n    </CommonLink>\n  </div>\n</template>\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TicketOverviewTicketCountDocument = gql`\n    query ticketOverviewTicketCount($ignoreUserConditions: Boolean!) {\n  ticketOverviews(ignoreUserConditions: $ignoreUserConditions) {\n    id\n    ticketCount\n  }\n}\n    `;\nexport function useTicketOverviewTicketCountQuery(variables: Types.TicketOverviewTicketCountQueryVariables | VueCompositionApi.Ref<Types.TicketOverviewTicketCountQueryVariables> | ReactiveFunction<Types.TicketOverviewTicketCountQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables>(TicketOverviewTicketCountDocument, variables, options);\n}\nexport function useTicketOverviewTicketCountLazyQuery(variables?: Types.TicketOverviewTicketCountQueryVariables | VueCompositionApi.Ref<Types.TicketOverviewTicketCountQueryVariables> | ReactiveFunction<Types.TicketOverviewTicketCountQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables>(TicketOverviewTicketCountDocument, variables, options);\n}\nexport type TicketOverviewTicketCountQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.TicketOverviewTicketCountQuery, Types.TicketOverviewTicketCountQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useTimeoutFn } from '@vueuse/shared'\nimport { onMounted } from 'vue'\n\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport { useTicketOverviewTicketCountLazyQuery } from '#mobile/entities/ticket/graphql/queries/overviewTicketCount.api.ts'\n\nimport { useTicketOverviewsStore } from '../stores/ticketOverviews.ts'\n\nconst POLLING_INTERVAL = 60000\n\nexport const useTicketOverviews = () => {\n  const overviews = useTicketOverviewsStore()\n\n  const ticketOverviewTicketCountHandler = new QueryHandler(\n    useTicketOverviewTicketCountLazyQuery(\n      {\n        ignoreUserConditions: false,\n      },\n      {\n        pollInterval: POLLING_INTERVAL,\n      },\n    ),\n  )\n\n  onMounted(() => {\n    if (!overviews.loading) {\n      ticketOverviewTicketCountHandler.load()\n    } else {\n      useTimeoutFn(\n        () => ticketOverviewTicketCountHandler.load(),\n        POLLING_INTERVAL,\n      )\n    }\n  })\n\n  return overviews\n}\n"],"names":["ticketCreateEnabled","useTicketCreateView","TicketOverviewTicketCountDocument","gql","useTicketOverviewTicketCountLazyQuery","variables","options","VueApolloComposable.useLazyQuery","POLLING_INTERVAL","useTicketOverviews","overviews","useTicketOverviewsStore","ticketOverviewTicketCountHandler","QueryHandler","onMounted","useTimeoutFn"],"mappings":"6YAKM,KAAA,CAAE,oBAAAA,GAAwBC,kQCEnBC,EAAoCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW1C,SAASC,EAAsCC,EAAoMC,EAAma,GAAI,CAC/pB,OAAOC,EAAsHL,EAAmCG,EAAWC,CAAO,CACpL,CCTA,MAAME,EAAmB,IAEZC,EAAqB,IAAM,CACtC,MAAMC,EAAYC,IAEZC,EAAmC,IAAIC,EAC3CT,EACE,CACE,qBAAsB,EACxB,EACA,CACE,aAAcI,CAChB,CACF,CAAA,EAGF,OAAAM,EAAU,IAAM,CACTJ,EAAU,QAGbK,EACE,IAAMH,EAAiC,KAAK,EAC5CJ,CAAA,EAJFI,EAAiC,KAAK,CAMxC,CACD,EAEMF,CACT"}