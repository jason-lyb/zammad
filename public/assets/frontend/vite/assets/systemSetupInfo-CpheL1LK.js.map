{"version":3,"file":"systemSetupInfo-CpheL1LK.js","sources":["../../../../../app/frontend/apps/desktop/pages/guided-setup/graphql/mutations/systemSetupUnlock.api.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/graphql/queries/systemSetupInfo.api.ts","../../../../../app/frontend/apps/desktop/pages/guided-setup/stores/systemSetupInfo.ts"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const SystemSetupUnlockDocument = gql`\n    mutation systemSetupUnlock($value: String!) {\n  systemSetupUnlock(value: $value) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useSystemSetupUnlockMutation(options: VueApolloComposable.UseMutationOptions<Types.SystemSetupUnlockMutation, Types.SystemSetupUnlockMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.SystemSetupUnlockMutation, Types.SystemSetupUnlockMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.SystemSetupUnlockMutation, Types.SystemSetupUnlockMutationVariables>(SystemSetupUnlockDocument, options);\n}\nexport type SystemSetupUnlockMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.SystemSetupUnlockMutation, Types.SystemSetupUnlockMutationVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const SystemSetupInfoDocument = gql`\n    query systemSetupInfo {\n  systemSetupInfo {\n    status\n    type\n  }\n}\n    `;\nexport function useSystemSetupInfoQuery(options: VueApolloComposable.UseQueryOptions<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables>(SystemSetupInfoDocument, {}, options);\n}\nexport function useSystemSetupInfoLazyQuery(options: VueApolloComposable.UseQueryOptions<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables>(SystemSetupInfoDocument, {}, options);\n}\nexport type SystemSetupInfoQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.SystemSetupInfoQuery, Types.SystemSetupInfoQueryVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useLocalStorage } from '@vueuse/core'\nimport { defineStore } from 'pinia'\nimport { computed } from 'vue'\n\nimport {\n  EnumSystemSetupInfoStatus,\n  EnumSystemSetupInfoType,\n} from '#shared/graphql/types.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\nimport QueryHandler from '#shared/server/apollo/handler/QueryHandler.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport { useSystemSetupUnlockMutation } from '../graphql/mutations/systemSetupUnlock.api.ts'\nimport { useSystemSetupInfoLazyQuery } from '../graphql/queries/systemSetupInfo.api.ts'\n\nimport type { SystemSetupInfoStorage } from '../types/setup-info.ts'\n\nexport const useSystemSetupInfoStore = defineStore('systemSetupInfo', () => {\n  const systemSetupInfo = useLocalStorage<SystemSetupInfoStorage>(\n    'systemSetupInfo',\n    {},\n  )\n\n  const systemSetupInfoQuery = new QueryHandler(\n    useSystemSetupInfoLazyQuery({\n      fetchPolicy: 'network-only',\n    }),\n  )\n\n  const setSystemSetupInfo = async () => {\n    const systemSetupInfoResult = await systemSetupInfoQuery.query()\n    const newSystemSetupInfo = systemSetupInfoResult.data?.systemSetupInfo\n\n    if (newSystemSetupInfo) {\n      systemSetupInfo.value = {\n        ...systemSetupInfo.value,\n        type:\n          systemSetupInfo.value.type === EnumSystemSetupInfoType.Import &&\n          newSystemSetupInfo.type === EnumSystemSetupInfoType.Manual\n            ? systemSetupInfo.value.type\n            : newSystemSetupInfo.type,\n        status: newSystemSetupInfo.status,\n      }\n    }\n  }\n\n  const application = useApplicationStore()\n\n  const getImportPath = () => {\n    const pathPrefix = '/guided-setup/import'\n    let importBackend = application.config.import_backend\n\n    if (application.config.import_mode) {\n      return `${pathPrefix}/${importBackend}/status`\n    }\n\n    if (systemSetupInfo.value.importSource) {\n      importBackend = systemSetupInfo.value.importSource\n    }\n\n    const importBackendRoute = importBackend ? `/${importBackend}` : ''\n\n    return `${pathPrefix}${importBackendRoute}`\n  }\n\n  const getSystemSetupInfoRedirectPath = (\n    status?: string,\n    type?: string,\n    lockValue?: string,\n  ) => {\n    if (!status || status === EnumSystemSetupInfoStatus.New)\n      return '/guided-setup'\n\n    if (status === EnumSystemSetupInfoStatus.Automated) {\n      return '/guided-setup/automated'\n    }\n\n    if (status === EnumSystemSetupInfoStatus.InProgress) {\n      if (!type) return '/guided-setup'\n\n      if (type === EnumSystemSetupInfoType.Manual) {\n        if (lockValue && type === 'manual') {\n          return '/guided-setup/manual'\n        }\n        return '/guided-setup'\n      }\n\n      if (type === EnumSystemSetupInfoType.Import) {\n        return getImportPath()\n      }\n    }\n\n    return '/guided-setup'\n  }\n\n  const redirectPath = computed(() => {\n    const { status, type, lockValue } = systemSetupInfo.value\n\n    return getSystemSetupInfoRedirectPath(status, type || '', lockValue)\n  })\n\n  const redirectNeeded = (currentRoutePath: string) => {\n    // Allow sub-paths for auto wizard execution + imports\n    if (\n      systemSetupInfo.value.status === EnumSystemSetupInfoStatus.Automated ||\n      (systemSetupInfo.value.type === EnumSystemSetupInfoType.Import &&\n        systemSetupInfo.value.importSource)\n    ) {\n      return !currentRoutePath.startsWith(redirectPath.value)\n    }\n\n    return currentRoutePath !== redirectPath.value\n  }\n\n  const systemSetupDone = computed(() => {\n    const { status } = systemSetupInfo.value\n\n    return (\n      status === EnumSystemSetupInfoStatus.Done ||\n      application.config.system_init_done\n    )\n  })\n\n  const systemSetupAlreadyStarted = computed(() => {\n    const { status, lockValue } = systemSetupInfo.value\n\n    return status === EnumSystemSetupInfoStatus.InProgress && !lockValue\n  })\n\n  const systemSetupUnlock = (callback: () => void) => {\n    const { lockValue } = systemSetupInfo.value\n\n    if (!lockValue) return\n\n    const unlockMutation = new MutationHandler(\n      useSystemSetupUnlockMutation({\n        variables: {\n          value: lockValue,\n        },\n      }),\n    )\n\n    unlockMutation\n      .send()\n      .then(() => {\n        systemSetupInfo.value = {}\n\n        callback()\n      })\n      .catch(() => {})\n  }\n\n  return {\n    redirectPath,\n    redirectNeeded,\n    setSystemSetupInfo,\n    systemSetupUnlock,\n    systemSetupInfo,\n    systemSetupDone,\n    systemSetupAlreadyStarted,\n  }\n})\n"],"names":["SystemSetupUnlockDocument","gql","ErrorsFragmentDoc","useSystemSetupUnlockMutation","options","VueApolloComposable.useMutation","SystemSetupInfoDocument","useSystemSetupInfoLazyQuery","VueApolloComposable.useLazyQuery","useSystemSetupInfoStore","defineStore","systemSetupInfo","useLocalStorage","systemSetupInfoQuery","QueryHandler","setSystemSetupInfo","newSystemSetupInfo","_a","EnumSystemSetupInfoType","application","useApplicationStore","getImportPath","pathPrefix","importBackend","importBackendRoute","getSystemSetupInfoRedirectPath","status","type","lockValue","EnumSystemSetupInfoStatus","redirectPath","computed","redirectNeeded","currentRoutePath","systemSetupDone","systemSetupAlreadyStarted","callback","MutationHandler"],"mappings":"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"}