{"version":3,"mappings":";umIAOO,MAAMA,GAAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUvB,SAASC,GAAeC,EAA0IC,EAAiT,GAAI,CAC5d,OAAOC,GAA4EL,GAAgBG,EAAWC,CAAO,CACvH,CCZO,MAAME,GAAuBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASpB,SAAAM,GAA4BH,EAAoZ,GAAI,CAClc,OAAOI,GAA6GF,GAAsB,GAAIF,CAAO,CACvJ,CCJa,MAAAK,GAAgBC,GAAY,QAAS,IAAM,CAChD,MAAAC,EAAYC,EAAc,EAAE,EAE5BC,MAAsB,IAKtBC,EAAW,CACfC,EACAC,IACG,CACOL,EAAA,MAAM,KAAKI,CAAQ,EACbF,EAAA,IAAIE,EAAUC,CAAK,GAG/BC,EAAUC,EAAS,IAAMP,EAAU,MAAM,OAAS,CAAC,EAMvC,OAJQ,IAAIQ,GAC5BZ,GAA4B,KAAO,CAAE,QAAAU,CAAA,EAAU,GAG/B,SAAUG,GAAS,WAC7B,MAAAC,GAAUC,EAAAF,EAAK,OAAL,YAAAE,EAAW,aAAa,QAClCC,GAAWC,EAAAJ,EAAK,OAAL,YAAAI,EAAW,aAAa,SACnCC,GAAgBC,EAAAN,EAAK,OAAL,YAAAM,EAAW,aAAa,cAE1C,IAACL,GAAW,CAACI,EAAe,OAEhC,MAAME,EAAsC,GAE5Bd,EAAA,QAASG,GAAU,OACjC,MAAMY,GAASN,EAAAN,EAAM,gBAAgB,OAAO,QAA7B,YAAAM,EAAoC,OAGjD,IAACM,GACAH,GAAiB,CAACG,EAAO,KAAMC,GAAUA,EAAM,KAAOJ,CAAa,EAEpE,OAEI,MAAE,QAAAK,GAAYC,GAAQf,EAAM,gBAAgB,SAAS,GAAK,GAG5D,CAACc,GAAWH,EAAWG,CAAO,GAEhCP,GACAA,EAAS,QACT,CAACA,EAAS,SAASO,CAAO,GAC1B,CAACF,EAAO,KAAMC,GAAUA,EAAM,KAAOR,CAAO,IAI9CL,EAAM,QAAQ,EAEdW,EAAWG,CAAO,EAAI,IACvB,EACF,EAWM,CACL,UAAAnB,EACA,SAAAG,EACA,WAZkBC,GAAqB,CAClCJ,EAAU,MAAM,SAASI,CAAQ,GAEtCiB,GAAS,IAAM,CACbrB,EAAU,MAAQsB,GAAQtB,EAAU,MAAOI,CAAQ,EACnDF,EAAgB,OAAOE,CAAQ,EAChC,EAMD,CAEJ,CAAC,EC3EYmB,GAGT,CACF,UAAWC,EAAyB,SACpC,mBAAoBA,EAAyB,oBAC7C,mBAAoBA,EAAyB,sBAC7C,KAAMA,EAAyB,SACjC,EAEaC,GAAY,CACvBN,EACAO,IACG,CACH,MAAMC,EAAqBpB,EAAS,IAClC,GAAQmB,EAAiB,OAASP,EAAQ,MAAK,EAG3CS,EAAa,IAAIC,GACrBtC,GACE,KAAO,CACL,QAAS4B,EAAQ,QAEnB,KAAO,CAAE,QAASQ,EAAmB,OACvC,GAGI,CAAE,SAAAxB,EAAU,WAAA2B,CAAW,EAAIhC,GAAc,EAMzCM,EAJQ2B,KAIS,KAAK,qBAAuB,iBAEnDC,EACEL,EACCM,GAAW,CACNA,EACF9B,EAASC,EAAUwB,CAAU,EAE7BE,EAAW1B,CAAQ,CAEvB,EACA,CAAE,UAAW,EAAK,GAGpB8B,GAAgB,IAAM,CACpBJ,EAAW1B,CAAQ,EACpB,EAEK,MAAA+B,EAASP,EAAW,SAI1B,MAAO,CAAE,OAFMrB,EAAS,WAAM,OAAAI,EAAAwB,EAAO,QAAP,YAAAxB,EAAc,OAAM,CAElC,CAClB,EAEayB,GAAmBC,GAA2B,CACzD,MAAMC,EAAcrC,IAWb,OAAE,YAAAqC,EAAa,aATD,MAAOpB,GAAqB,CAC/CoB,EAAY,MAAQpB,EACTmB,GAAA,EAOuB,mBAJT,IAAM,CAC/BC,EAAY,MAAQ,QAIxB,ECzEaC,GAAsCjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAW7CkD,EAA0C;AAAA,EAC9CC,EAAiB,GACH,SAAAC,GAAuCjD,EAA2S,GAAI,CAC7V,OAAAkD,GAA+HJ,GAAqC9C,CAAO,CACpL,CChBO,MAAMmD,GAA0CtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASjDmD,EAAiB,GACP,SAAAI,GAA2CpD,EAA2T,GAAI,CACjX,OAAAkD,GAAuIC,GAAyCnD,CAAO,CAChM,CChBO,MAAMqD,GAAkB,CAC7B,CACE,IAAKtB,EAAyB,UAC9B,MAAO,GAAG,aAAa,CACzB,EACA,CACE,IAAKA,EAAyB,SAC9B,MAAO,GAAG,WAAW,CACvB,EACA,CACE,IAAKA,EAAyB,sBAC9B,MAAO,GAAG,2BAA2B,CACvC,CAMF,EAEauB,GAAuBD,GAAgB,OAClD,CAACE,EAAKC,KACAD,EAAAC,EAAO,GAAG,EAAIA,EACXD,GAET,CAAC,CACH,+CCPA,MAAME,EAAeC,KACf,CAAE,kBAAAC,CAAsB,EAAAF,EACxB,CAAE,KAAAG,CAAA,EAASC,GAAYJ,CAAY,EAEnCK,EAAmBC,KACnB,CAAE,OAAAC,CAAA,EAAWH,GAAYC,CAAgB,EAEzC,CAAE,OAAAG,GAAWC,KAEbC,EAA+B,IAAIC,GACvChB,GAA2C,GAGvCiB,EAAkBvD,EACtB,aACE,QAAAM,GAAAF,EAAA0C,EAAK,QAAL,YAAA1C,EAAY,cAAZ,YAAAE,EAAyB,kBACzB4C,EAAO,MAAM,yBACbjC,EAAyB,YAGvBuC,EAAexD,EAAS,CAC5B,IAAK,IAAMwC,GAAqBe,EAAgB,KAAK,EACrD,IAAME,GAAmB,CACvBJ,EACG,KAAK,CACJ,SAAUI,EAAK,IAChB,EACA,KAAK,IAAM,CACQZ,EAAA,kBAAmBY,EAAK,GAAG,EACtCN,EAAA,CACL,GAAI,iCACJ,KAAMO,GAAkB,QACxB,QAAS,GAAG,6CAA6C,EAC1D,EACF,CACL,EACD,gYC1CKC,GAAkB,kEAJxB,MAAMC,EAAQC,EAER,CAAE,UAAAC,CAAU,EAAIC,GAA0BC,GAAMJ,EAAO,cAAc,CAAC,EAItEK,EAAmBjE,EAAS,IAChC8D,EAAU,MAAM,MAAM,EAAGH,EAAe,GAGpCO,EAAoBlE,EAAS,IAAM,CACnC,GAAA8D,EAAU,MAAM,QAAUH,GAAiB,OACzC,MAAAQ,EAAWL,EAAU,MAAM,OAASH,GACtC,OAAAQ,EAAW,IAAY,OACpB,IAAIA,CAAQ,GACpB,wUCfK,MAAE,sBAAAC,GAA0BC,mmBCyBlC,MAAMT,EAAQC,EAERjD,EAAUoD,GAAMJ,EAAO,SAAS,EAChCzC,EAAmB6C,GAAMJ,EAAO,kBAAkB,EAElDU,EAAOC,EAOP,CAAE,OAAA7D,CAAW,EAAAQ,GAAUN,EAASO,CAAgB,EAEhD,CAAE,OAAAgC,GAAWC,KAEboB,EAAc,CAClB,OAAQ,GAAG,QAAQ,EACnB,OAAQ,GAAG,QAAQ,GAGf,CAAE,qBAAAC,GAAyBJ,KAE3BK,EAA4BC,GAAU,CAC1C,KAAM,wBACN,UAAW,IAAMC,GAAA,WAAO,+CAAwC,2KACjE,EAEKC,EAAc7E,EAAS,IAAM,CACjC,MAAM8E,EAA8B,CAClC,MAAO,GAAG,eAAe,EACzB,WAAYN,EAAY,OACxB,KAAM,SACN,IAAK,aACL,KAAM,IAAMZ,EAAM,YAClB,QAAS,IAAM,CACb,GAAIA,EAAM,cAAe,CACvBc,EAA0B,KAAK,CAC7B,cAAed,EAAM,cACrB,kBAAmBa,EAAqBb,EAAM,SAAUA,EAAM,IAAI,EAClE,KAAMA,EAAM,KACb,EAED,MACF,CAE4B,IAAIN,GAC9BnB,GAAuC,EACvC,CACE,yBAA0B,GAAG,2BAA2B,CAC1D,GAIC,KAAK,CAAE,MAAOsC,EAAqBb,EAAM,SAAUA,EAAM,IAAI,EAAG,EAChE,KAAK,IAAM,CACHT,EAAA,CACL,GAAI,mCACJ,KAAMO,GAAkB,QACxB,QAAS,GAAG,6CAA6C,EAC1D,EACF,CACL,GAGF,GAAI,CAAChD,EAAO,MAAO,MAAO,CAACoE,CAAiB,EAE5C,MAAMC,EAAwBrE,EAAO,MAAM,IAAKC,IAAW,CACzD,IAAKA,EAAM,GACX,MAAOA,EAAM,KACb,WAAY6D,EAAY,OACxB,QAAS,IAAMF,EAAK,gBAAiB3D,CAAK,CAC1C,IAEF,MAAO,CAACmE,EAAmB,GAAIlE,EAAQ,MAAQmE,EAAY,EAAG,EAC/D,k9BCrGYC,GACXC,GACG,CACG,MAAE,iBAAAC,GAAqBC,KAEvB,CAAE,KAAArC,CAAS,EAAAC,GAAYH,GAAiB,GAExCwC,EAASC,KAET9B,EAAkBvD,EACtB,aAAM,OAAAM,GAAAF,EAAA0C,EAAK,QAAL,YAAA1C,EAAY,cAAZ,YAAAE,EAAyB,kBAG3BgF,EAAyB,IAAM,CAC9BL,EAAoB,OAEzBC,EAAiBD,EAAoB,KAAK,GAGtCM,EAAiB,IAAM,CAC3BH,EAAO,KAAK,GAAG,EACQE,GAAA,EA8BzB,MAAO,CAAE,qBA3BoB,CAAC,CAC5B,gBAAAE,EACA,OAAAC,CAAA,IAII,CAGJ,OAF+BD,GAAmBjC,EAAgB,MAElC,CAC9B,KAAKtC,EAAyB,sBACxBwE,EAAO,MAAM,UAAU,OAAS,UACnBF,IAEjB,MACF,KAAKtE,EAAyB,SACbsE,IACf,MACF,KAAKtE,EAAyB,oBAE5B,MACF,KAAKA,EAAyB,UAGhC,EAG4B,CAChC,wLC/CM,MAAE,gBAAAyE,GAAoBC,KAEtBC,EAAQF,EAAgB,IAAKG,IAC1B,CACL,IAAK,GAAGA,EAAM,KAAK,GACnB,GAAGA,CAAA,EAEN,EAEKC,EAAcJ,EAAgB,IAAKG,GAAUA,EAAM,KAAK,EAExDA,EAAQE,GAA6BlC,EAAC,cAAc,EAEpDmC,EAAWtG,EAAI,EAAK,EAEpB,CAAE,QAAAuG,EAAS,cAAAC,EAAe,OAAAC,EAAQ,MAAAC,EAAO,OAAAC,CAAA,EAAWC,KAEpD,CAAE,WAAAC,CAAe,EAAAxD,GAAYyD,GAAe,GAE5CC,EAAeC,GAA4B,CAC/Cb,EAAM,MAAQa,EACRN,IACNJ,EAAS,MAAQ,IAGbW,EAA0B,IAAM,CAC3BX,EAAA,MAAQ,CAACA,EAAS,OAG7B,OAAAY,GAAU,IAAM,CACRf,EAAA,MAAQD,EAAM,CAAC,EACtB,ghECjCD,MAAMhC,EAAQC,EAERgD,EAAkBC,GAAmB9C,GAAM,IAAMJ,EAAM,YAAY,CAAC,kdCD1E,KAAM,CAAE,OAAAV,CAAW,EAAAH,GAAYE,GAAqB,GAE9CW,EAAQC,EAERkD,EAAe/G,EAAS,IAAM,OAC1B,QAAAI,EAAAwD,EAAM,WAAN,YAAAxD,EAAgB,QAAS,CAC/B,IAAK,gBACI,eACT,IAAK,eACI,iBACT,QACS,YACX,EACD,+bCfD,MAAMwD,EAAQC,EAERkD,EAAe/G,EAAS,IAAM,CAClC,OAAQ4D,EAAM,UAAW,CACvB,KAAKoD,GAAyB,OACrB,gBACT,KAAKA,GAAyB,QACrB,iBACT,KAAKA,GAAyB,WACrB,eACT,KAAKA,GAAyB,KAC9B,QACS,eACX,EACD,6WCzBc,OAASC,EAAA,EAAAC,EAAAC,EAAA,CAAC,UAAe,QAA+B,sCAHvE,WAI6CC,EAAA,KAA7BC,EAAgBC,EAAA,CAAC,KAAK,qBAClC,MAGgBC,EAAA,uBAFDF,EAAYG,EAAA,CAAC,2CANhC,WAAAJ,EAAA,wCAUY,yBAVZ,6HCqBA,KAAM,CAAE,QAAAnB,EAAS,cAAAC,EAAe,OAAAG,EAAQ,OAAAF,EAAQ,MAAAC,CAAA,EAAUE,KAEpD,CAAE,OAAApD,CAAW,EAAAH,GAAYE,GAAqB,GAM9CW,EAAQC,EAER4D,EAA2BzH,EAAsC,WACrE,OAAAI,EAAAwD,EAAM,qBAAN,YAAAxD,EAA0B,IAAI,CAACqF,EAAQiC,KAAW,CAChD,OAAAjC,EACA,IAAK,gCAAgCiC,CAAK,MAC1C,EAGEC,EAA0B3H,EAAS,IAAM4D,EAAM,mBAAmB,MAAM,EAExEgE,EAAe5H,EAAS,IAC5B,cAAAI,EAAAqH,EAAyB,QAAzB,YAAArH,EAAgC,IAAKqD,GAASA,EAAK,KAAG,++CC3BlD,MAAE,OAAAgC,GAAWoC,KACbC,EAAgBC,KAEhBC,EAAqBhI,EACzB,IAAM,cAAAI,EAAAqF,GAAA,YAAAA,EAAQ,QAAR,YAAArF,EAAe,8BAGjB6H,EAAYjI,EAAS,WAAM,OAAAI,EAAAqF,GAAA,YAAAA,EAAQ,QAAR,YAAArF,EAAe,UAAS,EAEnD8H,EAAsBlI,EAAS,WAAM,OAAAI,EAAA6H,EAAU,QAAV,YAAA7H,EAAiB,SAAQ,EAE9D+H,EAAkBnI,EAAS,WAAM,OAAAI,EAAA6H,EAAU,QAAV,YAAA7H,EAAiB,MAAK,EAEvDgI,EAAcpI,EAAS,WAAM,OAAAI,EAAA6H,EAAU,QAAV,YAAA7H,EAAiB,UAAS,EAEvD,CAAE,OAAAiI,GAAWzF,KAEb0F,EAAyB,IAAM,CACnCR,EAAc,cAAc,WAAW,EACvCS,GAAQ,KAAK,2BAA4B,GAAGF,CAAM,gBAAgB,4hCCnB9D,MAAE,OAAA5C,GAAWoC,KAEb,CAAE,OAAA3E,CAAW,EAAAH,GAAYE,GAAqB,GAE9CuF,EAA4BxI,EAAS,IAAM,CAAC,CAACkD,EAAO,MAAM,SAAS,6iBCR5DuF,GAAsBC,GAAkC,CAC7D,MAAE,OAAAvF,GAAWC,KAEbuF,EAAiB,IAAIrF,GAAgBsF,GAAyB,GAkBpE,MAAO,CAAE,YAhBW,MAAOC,GAClBF,EACJ,KAAK,CACJ,SAAUD,EAAS,MACnB,MAAO,CAAE,MAAAG,CAAM,EACf,KAAM,CAAC,EACR,EACA,KAAK,IAAM,CACH1F,EAAA,CACL,KAAMO,GAAkB,QACxB,GAAI,8BACJ,QAAS,GAAG,8BAA8B,EAC3C,EACF,CAGgB,CACvB,4JChBA,KAAM,CAAE,OAAA+B,EAAQ,SAAAiD,CAAS,EAAIb,GAAqB,EAI5CiB,EAAkBpJ,EAAI,EAAK,EAE3B,CAAE,YAAAqJ,CAAA,EAAgBN,GAAmBC,CAAQ,8qDCJnD,MAAM9E,EAAQC,EACR,CAAE,OAAA4B,GAAWoC,KAEb,CAAE,cAAAmB,EAAe,iBAAA7H,CAAiB,EAAI8H,GAAcxD,CAAM,EAE1D,CAAE,gBAAAyD,GAAoBC,KAEtB,CAAE,aAAAC,EAAc,2BAAAC,CAA2B,EAAIC,GAAgB7D,CAAM,EAErEG,EAAQ5F,EAAS,IAAM,CAE3B,CACE,MAAO,UACP,GAAI,CAAE,KAAM,aAAc,CAC5B,EACA,CACE,MAAOqJ,EAA2B,OAAS,GAC3C,yBAA0B,GAC1B,GAAI,CAAE,KAAM,aAAc,CAC5B,EACD,EAEKE,EAA0BvJ,EAAS,IACnC4D,EAAM,YACD,CACL,yFAEG,CAAC,gDAAgD,CACzD,4nCC5BK,MAAA4F,EAAazD,GAAoBlC,EAAC,OAEvC,EAEK,CAAE,OAAA4B,GAAWoC,KACb,CAAE,cAAAmB,EAAe,iBAAA7H,CAAiB,EAAI8H,GAAcxD,CAAM,EAC1D,CAAE,gBAAAgE,EAAiB,aAAAC,CAAa,EAAIC,GAAiBlE,CAAM,EAE3D,CAAE,cAAAmE,GAAkBC,KAEpBC,EAAS9J,EAAS,IAClB4J,EAAc,MACT,CACL,YAAa,CACXJ,EAAW,MAAQ,EACrB,EACA,UAAW,CACTA,EAAW,MAAQ,EACrB,GAGG,CACL,YAAa,CACXA,EAAW,MAAQ,EACrB,EACA,YAAa,CACXA,EAAW,MAAQ,EACrB,EAEH,mjBC7BYO,GAA4B,CACvCtE,EACAuE,EACAC,EAGAC,IAGG,CAGH,IAAIC,EAAa,GAEjB,KAAM,CAAE,aAAAC,CAAA,EAAiBC,GAAUL,EAAyB,CAC1D,qBAAsB,CAAE,QAAS,EAAK,EACvC,EAEKM,EAAwB5K,EAAI,EAAK,EACjC6K,EAAmB7K,EAAI,EAAK,EAE5B8K,EAAmB9K,EAAI,CAAC,EAExB+K,EAAQ,IAAM,CAClBF,EAAiB,MAAQ,GACzBD,EAAsB,MAAQ,GAC9BE,EAAiB,MAAQ,GAGrBE,EAAsBhL,EAAI,EAAK,EAE/BiL,EAAqB3K,EAAS,CAClC,IAAK,IAAM0K,EAAoB,MAC/B,IAAME,GAAU,CACdF,EAAoB,MAAQE,EAExBA,IACFN,EAAsB,MAAQ,GAElC,EACD,EAEKO,EAAeC,GAAepE,GAAiB,OAEnD,GAAI,CAACyD,EAAY,CACFA,EAAA,GACb,MACF,CAEA,MAAMY,EAAYrE,EAAM,OAElB,CAAE,aAAAsE,EAAc,aAAAC,CAAiB,EAAAF,EAInC,KAFiBC,EAAeC,GAEjB,OAAOR,IAEpB,MAAAS,EAAYH,EAAU,WAAa,EAExBR,EAAA,MAAQW,EAAYD,EAAeD,EAG/CL,EAAmB,QACtBL,EAAsB,MACpBY,KAAa9K,EAAA8J,EAAe,QAAf,YAAA9J,EAAsB,IAAI,eAAgB,IAG3DoK,EAAiB,MAAQU,GACxB,GAAa,EAEhB,OAAAC,GACE,IAAMf,EAAa,IACnB,IAAM,CACAO,EAAmB,QAEvBL,EAAsB,MAAQ,GAChC,GAGF7I,EACE,IAAM2I,EAAa,OAClBQ,GAAU,CACTL,EAAiB,MAAQ,CAACK,CAC5B,GAGFnJ,EACE,IAAM,cAAArB,EAAAqF,EAAO,QAAP,YAAArF,EAAc,IACpB,IAAM,QACgBA,EAAA6J,EAAA,cAAA7J,EAAO,oBAAoB,GACjD,EACA,CAAE,UAAW,EAAK,GAGpBqB,EACE,IAAM,cAAArB,EAAA6J,EAAoB,QAApB,YAAA7J,EAA2B,MACjC,SAAY,YACNA,EAAA6J,EAAoB,QAApB,MAAA7J,EAA2B,qBAEzB,OAAAE,EAAA2J,EAAoB,QAApB,YAAA3J,EAA2B,oBAEbE,EAAAyJ,EAAA,cAAAzJ,EAAO,oBAAoB,IAGzCiK,IACR,EACA,CAAE,MAAO,MAAO,GAIlBhJ,EACE,IAAM,cAAArB,EAAA6J,EAAoB,QAApB,YAAA7J,EAA2B,MACjC,CAACgL,EAASC,IAAY,eAChB,CAACD,GAAW,CAACC,KAEbjL,EAAAgL,EAAQ,GAAG,EAAE,IAAb,YAAAhL,EAAgB,SAAQE,EAAA+K,EAAQ,GAAG,EAAE,IAAb,YAAA/K,EAAgB,QAExCE,EAAA4K,EAAQ,GAAG,EAAE,IAAb,YAAA5K,EAAgB,SAAQ8K,EAAAD,EAAQ,GAAG,EAAE,IAAb,YAAAC,EAAgB,QAE5CC,EAAAtB,EAAoB,QAApB,MAAAsB,EAA2B,kBAC7B,GAGF3E,GAAU,IAAM,CACDuD,EAAA,GACbG,EAAsB,MAAQ,GAC/B,EAEDkB,GAAY,IAAM,CACHrB,EAAA,GACbG,EAAsB,MAAQ,GAC/B,EAEM,CACL,aAAAO,EACA,mBAAAF,EACA,sBAAAL,EACA,iBAAAC,CAAA,CAEJ,ECrJakB,GAAwB,CACnCC,EACAC,IACG,CACH,MAAMC,EAA+BlM,IAE/BmM,EAA0B7L,EAAS,CACvC,IAAK,IACC4L,EAA6B,QAAU,OAClCA,EAA6B,MAE/BD,EAA+B,MAExC,IAAMf,GAAU,CACdgB,EAA6B,MAAQhB,CACvC,EACD,EAEKkB,EAAuB9L,EAAS,IAAM,OACtC,GAAC6L,EAAwB,MAEtB,OAAAzL,EAAAsL,EAAK,QAAL,YAAAtL,EAAY,cAAc,UAAS,CAC3C,EAEK2L,EAA0B/L,EAAS,IAAM,SAC7C,MAAO,CAAC,GAACM,GAAAF,EAAA0L,EAAqB,QAArB,YAAA1L,EAA4B,UAA5B,MAAAE,EAAqC,MAAM,OACrD,EAMM,OACL,wBAAAuL,EACA,qBAAAC,EACA,wBAAAC,EACA,2BARiC,IAAM,CACvCF,EAAwB,MAAQ,GAOhC,CAEJ,iFC7BA,MAAMjI,EAAQC,EAKR,CAAE,OAAA4B,EAAQ,iBAAAtE,EAAkB,2BAAA6K,EAA4B,KAAAN,CAAA,EAC5D7D,KAEI,CAAE,cAAA+B,GAAkBC,KAEpBoC,EAA8BjM,EAAS,IAEvC4D,EAAM,WAAa,OACd,uOAEF,+MACR,EAEK,CAAE,kBAAAsI,EAAmB,cAAAC,CAAA,EAAkBC,GAC3CV,EACAM,CAAA,EAGIK,EAAsC,GAEtCC,EAAaC,GAA4B,CAC7CF,EAAiB,KAAKE,CAAQ,GAG1BC,EAAyB,IAAM,CACnCH,EAAiB,QAASE,GAAaA,EAAU,GACjDF,EAAiB,OAAS,GAGtBI,EAAuB/M,EAAI,CAAC,EAE5BgN,EAAoBC,GAA8B,CAClD,IAEF,OAAOC,GAAoBD,CAAiB,QACrCE,EAAK,CACRC,GAAA,MAAM,oDAAqDD,CAAG,EAC3D,MACT,GAGIE,EAAU/M,EAAS,IAAM,CAE7B,GAAI,CAACyF,EAAO,OAASgH,EAAqB,MAAQ,EACzC,OACL,eAAgB,CAAC,EACjB,qBAAsB,CAAC,GAKJD,IAEvB,MAAMQ,EAAiBC,GACrBxH,EAAO,MACP7B,EAAM,QACN,UACA,CACE,UAAA0I,EACA,YAAa,IAAM,CACjBG,EAAqB,OAAS,CAChC,CACF,GAGIS,EAA6B,GAC7BC,EAAmC,GAE1B,OAAAH,EAAA,QAASI,GAAW,CACjC,MAAMC,EAAe,CACnB,IAAKD,EAAO,KACZ,MAAOA,EAAO,MACd,KAAMA,EAAO,KACb,KAAMA,EAAO,KACb,GAAIA,GAAA,MAAAA,EAAQ,QACR,CACE,QAAS,IAAM,OACT,EAACA,GAAA,MAAAA,EAAQ,UAAW,CAAC3H,EAAO,OAEhC2H,EAAO,QAAQ3H,EAAO,MAAO7B,EAAM,QAAS,CAC1C,SAAQxD,EAAAsL,EAAK,QAAL,YAAAtL,EAAY,SAAU,GAC9B,UAAWsM,EAAiB9I,EAAM,QAAQ,UAAU,EACpD,cAAAuI,EACA,kBAAAD,CAAA,CACD,CACH,GAEF,CAAC,GAGHkB,EAAO,cACTD,EAAqB,KAAKE,CAAY,EAEtCH,EAAe,KAAKG,CAAY,CAClC,CACD,EAEM,CACL,qBAAAF,EACA,eAAAD,CAAA,CACF,CACD,suCC9GD,MAAMtJ,EAAQC,EAER,CAAE,iBAAAyJ,GAAqBzF,KAEvB,CAAE,sBAAA0F,GAA0BC,GAChC5J,EAAM,QACN0J,CAAA,08BCAF,MAAM1J,EAAQC,EAERS,EAAOC,EAIP,CAAE,UAAAkJ,EAAW,cAAAC,EAAe,YAAAC,EAAa,eAAAC,CAAA,EAC7CC,KAEIC,EAAc9N,EAAS,IAC3B4D,EAAM,WAAa,QACf,CAAC,oBAAqB,cAAe,mBAAmB,EACxD,CAAC,mBAAoB,WAAY,gBAAgB,GAGjDmK,EAAO/N,EAAS,IAChB4D,EAAM,QAAQ,cAAgB,YACzBoK,GAAWpK,EAAM,QAAQ,YAAY,EAEvCA,EAAM,QAAQ,YACtB,EAEKqK,EAAwBjO,EAAS,IAAM,CACrC,MAAAkO,EAAStK,EAAM,QAAQ,OAAO,SACpC,MACE,CAACA,EAAM,qBAAuBsK,IAAW,OAAQA,GAAA,YAAAA,EAAQ,SAAU,GAAK,EAE3E,EAEK,CAAE,mBAAAC,CAAA,EAAuBC,GAAa,UAAU,EAChD,CAAE,qBAAAC,GAAyBC,GAC/BtK,GAAMJ,EAAO,cAAc,EAC1B8D,GAAUpD,EAAK,UAAWV,EAAM,aAAa8D,CAAK,CAAC,GAGtD,OAAAjG,EACE,IAAMsM,EACN,SAAY,CACV,MAAMjN,GAAS,EACX4M,EAAc,QAChBS,EAAmBT,EAAc,KAAK,EACtCW,EAAqBX,EAAc,KAAK,EAE5C,GAGF9G,GAAU,IAAM,CACV8G,EAAc,QAChBS,EAAmBT,EAAc,KAAK,EACtCW,EAAqBX,EAAc,KAAK,EAC1C,CACD,wgECxDD,MAAM9J,EAAQC,EAER0K,EAAWvO,EAAS,IAAM,cAAAI,EAAAwD,EAAM,QAAQ,kBAAd,YAAAxD,EAA+B,MAAK,EAE9D,CAAE,QAAAoO,EAAS,SAAAC,CAAA,EAAaC,GAC5B1K,GAAMJ,EAAM,QAAS,IAAI,GAGrB+K,EAAgB,SAAY,CAC5B,IACF,MAAMF,EAAS,OACT,CAER,ylBCfF,MAAM7K,EAAQC,EAER,CAAE,YAAA+K,EAAa,eAAAC,EAAgB,SAAAN,CAAa,EAAAO,GAChD9K,GAAMJ,EAAM,OAAO,6VCDrB,MAAMA,EAAQC,EAER,CAAE,SAAA0K,EAAU,eAAAQ,EAAgB,kBAAAC,EAAmB,qBAAAC,CAAA,EACnDH,GAAmB9K,GAAMJ,EAAM,OAAO,CAAC,0oBCZ5BsL,GAAkB,IAAM,CAC7B,MAAAC,EAAsBzP,EAAI,EAAK,EAE/B0P,EAAuBC,GAAwB,CAC/C,IAACA,EAAe,SAEpB,MAAMC,EAA0B,QAAI,CAAC,IAAK,QAAQ,CAAC,EAG7CC,EAAyBF,EAAO,QACpC,MAAM,KAAKC,CAAmB,EAAE,KAAK,GAAG,GAG1C,OAAOA,EAAoB,IAAID,EAAO,OAAO,GAAKE,CAAA,EAG9CC,EAAqBH,GAAwB,CAC7C,IAACA,EAAe,SAEd,MAAAI,EAAY,OAAO,eACzB,MAAI,GAACA,GAAaA,EAAU,OAAS,QAE9B,EAGH,CAAE,MAAAC,EAAO,KAAAC,GAASC,GAAW,IAAK,CACtC,SAAU,GACV,SAAU,IAAM,CACMT,EAAA,MAAQ,CAACA,EAAoB,KACnD,EACA,UAAW,GACZ,EAeM,OACL,oBAAAA,EACA,aAfmB,MAAOzI,GAAsB,CAC3CiJ,IAGH,EAAAjJ,EAAM,SAAW,GACjB0I,EAAoB1I,EAAM,MAAqB,GAC/C8I,EAAkB9I,EAAM,MAAqB,IAIzCgJ,GAAA,CAKN,CAEJ,ECnDaG,GAAsB,CACjCC,EACAC,IACG,CACH,MAAMjC,EAAc9N,EAAS,IAC3B8P,EAAS,QAAU,QACf,CAAC,oBAAqB,aAAa,EACnC,CAAC,mBAAoB,gBAAgB,GAGrCE,EAAehQ,EAAS,IACxB8P,EAAS,QAAU,QACd,uDAEF,sDACR,EAEKG,EAAmBjQ,EAAS,IAC5B+P,EAAkB,MAAc,GAEhCD,EAAS,QAAU,QACd,iDAEF,gDACR,EAEKI,EAAkClQ,EAAS,IAC/C8P,EAAS,QAAU,QACf,CAAC,oBAAqB,aAAa,EACnC,CAAC,mBAAoB,eAAe,GAIpCK,EAA4BnQ,EAAS,IACzC8P,EAAS,QAAU,QACf,0CACA,2CAGAM,EAAoBpQ,EAAS,IAC5B+P,EAAkB,MAGhBD,EAAS,QAAU,QACtB,yLACA,yLALiC,EAMtC,EAEM,OACL,YAAAhC,EACA,aAAAkC,EACA,iBAAAC,EACA,gCAAAC,EACA,0BAAAC,EACA,kBAAAC,CAAA,CAEJ,g3BCnCA,MAAMC,EAAsBC,GAC1B,IACE1L,GAAA,WACE,mCACF,wFAOEhB,EAAQC,EAER,CAAE,oBAAAsL,EAAqB,aAAAoB,CAAa,EAAIrB,GAAgB,EAExDY,EAAW9P,EAAS,IAAM,OACtB,QAAAI,EAAAwD,EAAM,QAAQ,SAAd,YAAAxD,EAAsB,KAAM,CAClC,KAAKoQ,GAA4B,SACxB,cACT,KAAKA,GAA4B,OACxB,aACT,KAAKA,GAA4B,MACxB,aACT,QACS,YACX,EACD,EAEKC,EAAkBzQ,EACtB,WACG,QAAAI,EAAAwD,EAAM,QAAQ,OAAd,YAAAxD,EAAoB,QAAS,QAAUwD,EAAM,QAAQ,UACtDA,EAAM,QAAQ,WAGZ,CACJ,iBAAAqM,EACA,aAAAD,EACA,YAAAlC,EACA,gCAAAoC,EACA,0BAAAC,EACA,kBAAAC,CAAA,EACEP,GAAoBC,EAAUW,CAAe,EAE3CC,EAAsB1Q,EAAS,IAC5B4D,EAAM,QAAQ,yBAAyB,OAC3C+M,GAAS,CAACA,EAAK,aAAe,CAACA,EAAK,YAAY,iBAAiB,EAErE,EAEK,CAAE,YAAaC,CAAmB,EAAIC,GAAe,CACzD,YAAaH,CAAA,CACd,EAEKI,EAAepR,EAAkB,EAAE,EAEnC,CAAE,YAAAqR,GAAgBC,GACtBhR,EAAS,IAAM,CAAC,GAAG8Q,EAAa,MAAO,GAAGF,EAAmB,KAAK,CAAC,qjHC1CxDK,GAAuB,CAClCC,EACAC,EACAC,KA0CO,CAAE,KAxCIC,GAAmBH,EAAU,IAAM,CAC9C,MAAMI,EAAiBJ,EAAS,MAAM,OAASE,EAAW,MAE1D,OAAOF,EAAS,MAAM,OAAO,CAACK,EAAMC,EAAS9J,IAAU,mBACjD,OAAAtH,EAAAoR,EAAQ,cAAR,MAAApR,EAAqB,iBACvBmR,EAAK,KAAK,CACR,KAAM,WACN,QAASC,EAAQ,aACjB,IAAKA,EAAQ,WAAW,SAAS,EAClC,IAEDlR,EAAAkR,EAAQ,SAAR,YAAAlR,EAAgB,QAAS,YACzBE,EAAAgR,EAAQ,OAAR,YAAAhR,EAAc,QAAS,OAEvB+Q,EAAK,KAAK,CACR,KAAM,SACN,QAASC,EAAQ,QACjB,KAAIlG,EAAAkG,EAAQ,KAAR,YAAAlG,EAAY,MAAO,GACvB,UAAUmG,GAAAC,GAAAnG,EAAAiG,EAAQ,cAAR,YAAAjG,EAAqB,WAArB,YAAAmG,EAA+B,WAA/B,YAAAD,EAAyC,MACnD,IAAKD,EAAQ,WAAW,SAAS,EAClC,EAEDD,EAAK,KAAK,CACR,KAAM,iBACN,QAAAC,EACA,IAAKA,EAAQ,WAAW,SAAS,EAClC,EAGC9J,IAAUyJ,EAAkB,MAAQ,GAAKG,GAC3CC,EAAK,KAAK,CACR,KAAM,OACN,IAAK,OAEL,MAAOH,EAAW,MAAQF,EAAS,MAAM,OAC1C,EAEIK,CACT,EAAG,CAAwB,GAC5B,CACa,yKCpEhB,MAAMI,EAAQnQ,KACR,CAAE,QAAAoQ,GAAYC,KAEdT,EAAapR,EACjB,WAAM,QAAAI,EAAAwR,EAAQ,SAAS,QAAjB,YAAAxR,EAAwB,SAAS,aAAc,IAGjD+Q,EAAoBnR,EACxB,IAAM,cAAA8R,IAAa1R,EAAAwR,EAAQ,SAAS,QAAjB,YAAAxR,EAAwB,aAAa,EAAE,SAGtD8Q,EAAWlR,EAAS,IAAM,CAC1B,IAAC4R,EAAQ,SAAS,MACpB,MAAO,GAET,MAAMG,EAAeD,GAAaF,EAAQ,SAAS,MAAM,aAAa,EAChEI,EAAgBF,GAAaF,EAAQ,SAAS,MAAM,QAAQ,EAElE,OAAOK,GAAQF,EAAcC,EAAgBE,GAASA,EAAK,EAAE,EAC9D,EAEK,CAAE,KAAAC,CAAK,EAAIlB,GAAqBC,EAAUC,EAAmBC,CAAU,EAEvEgB,EAAe,SAAY,OACzB,MAAAR,EAAQ,cAAc,UAAU,CACpC,UAAW,CACT,SAAU,IACV,kBAAmB,GACnB,cAAcxR,EAAAwR,EAAQ,SAAS,QAAjB,YAAAxR,EAAwB,SAAS,SAAS,WAC1D,EACD,GAGGiS,EAAYrS,EAAS,IAAM4R,EAAQ,cAAc,UAAU,KAAK,EAEhEU,EAAoB,MAAOC,GAAyC,CAClE,MAAAC,EAAML,EAAK,MAAM,KACpBD,GACC,YAAaA,GAAQA,EAAK,QAAQ,aAAe,SAASK,EAAK,EAAE,GAGrE,OAAKC,EAEEC,GAAe,YAAYD,EAAI,GAAG,EAAE,EAF1B,QAAQ,QAAQ,IAAI,CAEM,EAGvCE,EAAgB1S,EAAS,IACtB,CAAC,CAACmS,EAAK,MAAM,KAAMD,GAASA,EAAK,OAAS,MAAM,CACxD,EAEKS,EAA4B,MAChCJ,GAC4B,CACtB,MAAAL,EAAO,MAAMI,EAAkBC,CAAG,EAExC,OAAIL,GAAQ,CAACQ,EAAc,MAAcR,GAEzC,MAAME,EAAa,EACZO,EAA0BJ,CAAG,IAGhCK,EAAkB,SAAY,OAC9B,IAAAC,EACJ,GAAIlB,EAAM,KAAM,CACd,MAAMhF,GAAoBvM,EAAAuR,EAAM,OAAN,YAAAvR,EAAY,QAAQ,YAAa,IAE3CyS,EAAA,MAAMF,EAA0BhG,CAAiB,CACnE,CAEA,GAAI,CAACkG,EAAe,CAClB,MAAMC,EAAYX,EAAK,MAAMA,EAAK,MAAM,OAAS,CAAC,EAElDU,EAAgB,MAAMJ,GAAe,YAAYK,GAAA,YAAAA,EAAW,GAAG,EAAE,CACnE,CAEI,IAACD,EAAsB,SAE3BA,GAAA,MAAAA,EAAe,eAAe,CAAE,SAAU,UAAW,MAAO,SAAS,EAGjEE,EAAqBrT,EAAI,EAAK,EAMvB,OAAAsT,EAAA,CACX,gBAAAJ,EACA,KAAAT,EACA,mBAAAY,EACA,oBAR2BnI,GAAmB,CAC9CmI,EAAmB,MAAQnI,CAAA,CAO3B,CACD,4sBCSKqI,GAA+B,IAC/BC,GAA+B,mXA3FrC,MAAMtP,EAAQC,EAURsP,EAA2BnT,EAAS,IACpC4D,EAAM,iBAAyB,MAC/BA,EAAM,oBAAsB,QAAgB,QACzCA,EAAM,iBACd,EAEKwP,EAAsBpT,EAAS,IAC5B,CAAC,OAAQ,QAASmT,EAAyB,KAAK,CACxD,EAEKE,EAAwBrT,EAAS,IAAM,CACrCqT,QAAwBzP,EAAM,mBAAmB,OAAQ0P,GAC7DF,EAAoB,MAAM,SAASE,EAAK,KAAK,GAGzCC,EAAWF,EAAsB,KAAMC,GAASA,EAAK,QAAU,OAAO,EAE5E,IAAIE,EAA2BL,EAAyB,MACpDE,SAAsB,SAAW,IACnCG,EAA2B5P,EAAM,mBAG5ByP,EAAsB,IAAKC,IACzB,CACL,YAAaA,EAAK,MAClB,MACEE,IAA6BF,EAAK,OAASC,EACvC,GAAG,WAAW,EACdD,EAAK,YACX,KAAMA,EAAK,KACX,QACEE,IAA6BF,EAAK,OACjCA,EAAK,QAAU,SACd,CAACC,GACDF,EAAsB,SAAW,EAC/B,UACA,YACN,aAAe,IACb,cAAAjT,EAAAkT,EAAK,eAAL,YAAAlT,EAAA,KAAAkT,EACE1P,EAAM,QACR,EAEL,EACF,EAEK6P,EAAS1N,GAAoBlC,EAAC,QAAQ,EAEtC6P,EAAe,IAAM,CAClBD,EAAA,MAAQ,CAACA,EAAO,OAGnBE,EAAejU,IAKrB+B,EACE,IAAM,CAACmC,EAAM,kBAAmB6P,EAAO,KAAK,EAC5C,CAAC,CAACG,EAAmBC,CAAS,IAAM,CAC9B,CAACD,GAAqBC,GAE1B/S,GAAS,IAAM,CAEb,WAAW,IAAM,UACFR,GAAAF,EAAAuT,EAAA,oBAAAvT,EAAO,iBAAP,MAAAE,EAAA,KAAAF,EAAwB,KACpC,GAAG,EACP,CACH,GAIFqB,EACE,IAAMmC,EAAM,kBACXgQ,GAAsB,CACjBA,IAEJH,EAAO,MAAQ,GACjB,GAMI,MAAE,OAAApL,GAAWzF,KAEbkR,EAAqBC,GACzB,GAAG1L,CAAM,wBACT4K,EAAA,EAGI,CAAE,OAAQe,CAAa,EAAIC,GAAc,EAEzCC,EAAwBlU,EAAS,IAAMgU,EAAa,MAAQ,CAAC,EAE7DG,EAAazU,IAEb0U,EAAkBC,GAAmB,CAEvCA,GAAUH,EAAsB,OAChCG,EAASnB,KAIXY,EAAmB,MAAQO,EAAA,EAIvBC,EAAgBC,KAEhBC,EAAkB,CAACC,EAAkBC,IAAuB,OAChE,GACE,CAACZ,EAAmB,OACpBQ,EAAc,UAAUlU,EAAA+T,EAAW,QAAX,YAAA/T,EAAkB,YAE1C,OAEFqU,EAAE,eAAe,EAEX,MAAAE,EAAYb,EAAmB,MAAQY,EAEzCC,GAAaT,EAAsB,OAEvCE,EAAeO,CAAS,GAGpB,CAAE,cAAAC,GAAkBC,GACxBT,GACAhU,EAAA+T,EAAW,QAAX,YAAA/T,EAAkB,WAClBoU,EACA,CAAE,YAAa,aAAc,gBAAiB,EAAG,GAG7CM,EAAc,IAAM,CACxBhB,EAAmB,MAAQb,EAAA,EAGvB8B,EAAcrV,IAEd,CAAE,WAAYsV,CAAA,EAA0BC,GAC5CF,CAAA,EAGW,OAAA/B,EAAA,CACX,aAAAW,CAAA,CACD,q0FCjFK,MAAAuB,EAAalR,GAFLH,EAEkB,YAAY,EACtCsR,EAAgBzV,EAAI,EAAK,EAEzB,CAAE,OAAA+F,EAAQ,SAAAiD,EAAU,GAAG0M,CAAkB,EAC7CC,GAA4BH,CAAU,EAElCI,EAAuB,CAAC,CAAE,cAAAC,KACtBA,EAA+B,UAGnC,CAAE,cAAAC,EAAe,cAAAD,EAAe,kBAAAE,GACpCC,GAAsBhN,EAAU,CAAE,SAAU,GAAI,qBAAA4M,CAAsB,GAExEK,GAAQC,GAA0B,CAChC,SAAU5V,EAAS,IAAMwV,EAAc,KAAK,EAC5C,cAAAD,CAAA,CACD,EAEK,MACJ,KAAA7J,EACA,OAAAmK,EACA,MAAAC,EACA,WAAAC,EACA,QAAAC,EACA,iBAAAC,EACA,UAAAC,EACA,WAAApU,EACA,mBAAAqU,GACEC,GAAQ,EAENC,EAAarW,EAA6BsW,GAAmB,CACjE,GAAI,CAACL,EAAiB,MAAO,MAAO,GAEpC,MAAMM,EAAa,CACjB,YAAaP,EAAQ,OAGnB,OAAAM,GAAkBE,GAAQD,EAAYD,CAAc,EAC/CA,EAEFC,CAAA,CACR,EAEK,CACJ,oBAAAtR,EACA,wBAAAwR,EACA,mCAAAC,CAAA,EACEC,GAAcN,CAAU,EAEtB,CAAE,2BAAAhN,CAAA,EAA+BC,GAAgB7D,CAAM,EAErDmR,GAAA,CACN,UAAW5W,EACT,IAAM,gBAAGqJ,EAA2B,KAAK,OAAMjJ,EAAAqF,EAAO,QAAP,YAAArF,EAAc,KAAK,GACpE,EACD,EAEK,MAAA4J,EAA0B6M,GAAe,mBAAmB,EAElEC,GAAkB9M,CAAuB,EAEzC,MAAM+M,EAAsB,IAAM,CAChCjW,GAAS,IAAM,SACP,MAAAkK,GAAe5K,EAAA4J,EAAwB,QAAxB,YAAA5J,EAA+B,aAChD4K,KACF1K,EAAA0J,EAAwB,QAAxB,MAAA1J,EAA+B,SAAS,CACtC,IAAK0K,CAAA,GACN,CACJ,GAGGpK,GAAUZ,EAAS,IACvBiW,EAAiB,OAASJ,EAAO,MAAM,SACnCmB,GAAmB,QAASnB,EAAO,MAAM,QAAkB,EAC3D,QAGA,CAAE,uBAAAoB,IAA2BC,GACjCjS,EACAyG,EACAyK,CAAA,EAGI,CACJ,aAAAgB,GACA,cAAAC,GACA,mBAAAC,GACA,mBAAAC,GACA,oBAAAC,GACA,cAAAvO,GACA,iBAAAwO,GACA,iBAAArW,GACA,mBAAAsW,GACA,yBAAAC,EAAA,EACEC,GAAkBlS,EAAQiG,CAAI,EAE5BkM,GAAiB5X,EAA+B,IAAO,kBAC3D,OAAAyF,EACA,iBAAAtE,GACA,WAAY0W,GAAwB,iBACpC,KAAMnM,EAAK,MACX,WAAY,CAEV,aAAatL,EAAAqF,EAAO,QAAP,YAAArF,EAAc,SAAS,WACpC,iBAAiBI,GAAAF,EAAAmF,EAAO,QAAP,YAAAnF,EAAc,eAAd,YAAAE,EAA4B,UAC/C,EACA,oBAAAyE,CACA,IAEF6S,GAAwBF,EAAc,EACtC,KAAM,CAAE,WAAAG,GAAY,cAAAC,GAAe,cAAAC,IAAkBlQ,GAAiB,EAEhEmQ,GAAqBlY,EACzB,WAAO,OAAAI,EAAAyV,EAAO,MAA+B,UAAtC,YAAAzV,EAA+C,WAGlD+X,GAA4BnY,EAAS,IACrCgY,GAAc,QAAU,cAAsB,2BAC3C,2BACR,EAEK,CACJ,wBAAAjM,GACA,wBAAAF,EACA,2BAAAG,EAAA,EACEP,GAAsBC,EAAMgL,CAAkC,EAE5D,CAAE,aAAA0B,IAAiBC,GACvBnD,EACAlM,GACAsP,GAAe,SAGQC,GAAA,CACvB,OAAA9S,EACA,SAAAiD,EACA,iBAAAvH,GACA,KAAAuK,EACA,wBAAAG,EACA,2BAAAG,GACA,GAAGoJ,CAAA,CACJ,EAED,MAAMoD,GAAuBC,GAAS,CACpC,0BAAAN,GACA,oBAAAZ,GACA,wBAAA1L,EACA,mBAAAwL,EAAA,CACD,EAEKqB,GAAmB,CACvB,CACE,SAAU,GACV,UAAW,WACX,MAAO,CACL,GAAI,4BACN,EACA,SAAU,CACR,CACE,SAAU,GACV,UAAW,YACX,MAAO,CACL,MAAO,wBACP,cAAe,EACjB,EACA,SAAU,CAACvB,EAAY,CACzB,CACF,CACF,EACA,CACE,GAAI,2BACJ,SAAU,GACV,UAAW,WACX,MAAO,CACL,GAAI,yBACN,EACA,SAAU,CACR,CACE,SAAU,GACV,UAAW,YACX,MAAO,CACL,MAAO,uBACT,EACA,SAAU,CAACC,EAAa,CAC1B,CACF,CACF,GAGI,CAAE,oBAAAuB,GAAqB,2BAAAC,EAA2B,EAAIC,GAAgB,EAEtE,CAAE,qBAAAC,EAAA,EAAyB9T,GAAwBC,CAAmB,EAEtE8T,GAAc/Y,EAAS,IACpB8V,EAAM,MAAM,cACpB,EAEKkD,GAAoBhZ,EAAS,IAAM,OAEnC,QADsBI,EAAAqF,EAAO,QAAP,YAAArF,EAAc,mBAGjC2Y,GAAY,MAFY,EAEZ,CACpB,EAEKE,GAAiB,SAAY,CACjB,MAAML,GAA2B,SAAS,IAGxD/M,EAAwB,MAAQ,GAEhC,MAAM/K,GAAS,EAGfmW,GAAuB,EAAI,EAEjBf,IACZ,EAIIgD,GAAiBC,GACrBA,EAAa,OAASC,GAAkB,WACxCD,EAAa,OAASC,GAAkB,eAEpC,CAAE,uBAAAC,GAAwB,mBAAAC,GAAoB,WAAAC,EAAA,EAClDC,GAAc/T,EAAQiG,EAAMwN,EAAa,EAErC,CAAE,cAAA/M,IAAkBC,GACxBV,EACAM,EAAA,EAGIyN,GAAczZ,EAAS,IACtB6L,EAAwB,MAEtBwN,GAAuB,OAAStN,GAAwB,MAFpBsN,GAAuB,KAGnE,EAEKK,GAAiC1Z,EAAS,KAAO,CACrD,UAAWiF,EAAoB,KAC/B,IAEI,CAAE,OAAA9B,IAAWC,KAEbuW,GAAwB,IAAM,CAC7BF,GAAY,QACXzB,GAAc,QAAU,eAAeC,GAAc,aAAa,EAGpEpM,EAAwB,OACxB,CAACE,GAAwB,OACzB,CAACoJ,EAAc,OAEK4B,KAGbjV,GAAA,EAGP8X,GAAiBla,EAA8B,EAAE,EAEjDma,GAA4B,MAAOC,GAAqB,OAC5D,MAAMC,EAAY,MAAMpB,GACtB,GACE,mGACF,EACA,CACE,YAAa,GAAG,6BAA6B,EAC7C,WAAY,YACZ,YAAa,GAAG,yBAAyB,EACzC,YAAa,GAAG,2BAA2B,CAC7C,GAGF,GAAIoB,EACF,OAAI/B,GAAc,QAAU,aAAaC,GAAc,WAAW,EAC3D,GAGT,GAAI8B,IAAc,GAAO,CACjB,MAAAC,EAAYF,EAAM,yBACxB,OAAIE,KAAW5Z,EAAAwZ,GAAe,QAAf,MAAAxZ,EAAsB,KAAK4Z,IAC/BlY,IACJ,EACT,CAEO,UAGHmY,EAAqBva,IAErBwa,GAAuBC,GAAU,CACrC,KAAM,yBACN,UAAW,IAAMvV,GAAA,WAAO,oCAA4B,+GACrD,EAEKwV,GAAwBN,IAC5BI,GAAqB,KAAK,CACxB,cAAgBha,GAA8C,CAC5D+Z,EAAmB,MAAQ/Z,EAChB4B,GACb,EACA,OAAQ,IAAM,OACN,MAAAkY,EAAYF,EAAM,yBACpBE,KAAW5Z,EAAAwZ,GAAe,QAAf,MAAAxZ,EAAsB,KAAK4Z,IAC/BlY,GACb,EACD,EAEM,IAGHuY,GAA4BP,GAE9BA,EAAM,2BACNQ,GAAuB,oDAEhBT,GAA0BC,CAAK,EAGtCA,EAAM,2BACNQ,GAAuB,gDAEhBF,GAAqBN,CAAK,EAE5B,GAGH,CAAE,YAAA/X,GAAa,aAAAwY,GAAc,mBAAAC,EAAmB,EACpD3Y,GAAgBC,CAAU,EAEtB2Y,GAAmB,MACvBC,GACG,SACC,IAAAxa,EAAOya,GAAUD,CAAQ,EAC7B,OAAIta,EAAAiX,GAAmB,QAAnB,MAAAjX,EAA0B,aACrBF,EAAAmX,GAAmB,MAAM,WAAWnX,CAAI,GAE7CA,EAAK,SAAW+Z,EAAmB,QACrC/Z,EAAK,QAAU,CACb,GAAGA,EAAK,QACR,SACE+Z,EAAmB,MAAM,YAAc,OACnC,WAAWA,EAAmB,MAAM,SAAS,EAC7C,OACN,oBAAqBA,EAAmB,MAAM,uBAC1CjD,GACE,+BACAiD,EAAmB,MAAM,sBAE3B,WAIDV,GAAWrZ,EAAM,CACtB,SAASI,EAAAyB,GAAY,QAAZ,YAAAzB,EAAmB,GAC5B,eAAgBsZ,GAAe,MAChC,EACE,KAAMhY,GAAW,UACZ,IAAAxB,EAAAwB,GAAA,YAAAA,EAAQ,eAAR,MAAAxB,EAAsB,OAAQ,CACzB+C,GAAA,CACL,GAAI,gBACJ,KAAMO,GAAkB,QACxB,QAAS,GAAG,8BAA8B,EAC3C,EAED,MAAM8B,GAAkBzD,GAAY,MAChCf,IAA4BV,GAAAyB,GAAY,QAAZ,YAAAzB,GAAmB,YAAY,EAC3D,OAEiB,OAAAwY,GAAA,CACnB,gBAAAtT,GACA,OAAQ5D,EAAO,aAAa,OAC7B,EAEDgY,GAAe,MAAM,OAAS,EAC9BK,EAAmB,MAAQ,OAG3BxY,EAAM+T,EAAeuB,EAAqB,CACxC,KAAM,GACP,EAGDlL,EAAwB,MAAQ,GAEzB,CACL,MAAO,CACLgK,GACA+E,KACG,CACH9Z,GAAS,IAAM,CACR8Z,IACL1E,EAAU,CAAE,OAAQ,CAAE,OAAQ0E,GAAe,QAAU,EACxD,CACH,EAEJ,CAEO,SACR,EACA,MAAOd,GAAU,OAChB,GAAIA,aAAiBe,GAAW,CAC9B,GAAIf,EAAM,uBAAuB,EAC/B,OAAOO,GAAyBP,CAAK,EAGnC,GAFJF,GAAe,MAAM,OAAS,EAC9BK,EAAmB,MAAQ,QACvB7Z,EAAAsL,EAAK,QAAL,MAAAtL,EAAY,SAAU,CACd0a,GAAApP,EAAK,MAAM,SAAUoO,CAAK,EACpC,MACF,CACF,CAEAF,GAAe,MAAM,OAAS,EAC9BK,EAAmB,MAAQ,OAC5B,EACA,QAAQ,IAAM,CACMO,IAAA,CACpB,GAGCO,GAAmB,SAAY,CAGnC,GAFgB,MAAMnC,GAA2B,SAAS,EAI1D,OAAA/M,EAAwB,MAAQ,GAEhC,MAAM/K,GAAS,EAGfmW,GAAuB,EAAI,EAEpBd,EAAmB,GAGtB6E,GAAwB,CAC5BC,EACAC,IACG,CACH/O,GAAc,CAAE,YAAA8O,EAAa,GAAGC,GAAA,YAAAA,EAAezV,EAAO,OAAQ,GAG1D0V,GAAoB,IAAM,CAC9B1Z,EACE,IAAMqU,EAAM,MAAM,kBACjBsF,GAAa,CACZvP,EAAwB,MAAQuP,CAClC,EACF,EAKF3Z,EAAMiH,EAAU,IAAM,CACpB4Q,GAAmB,MAAQ,OAC3BzN,EAAwB,MAAQ,OACjC,EAEK,MAAA5B,GAAsB4M,GAAe,cAAc,EACnD3M,GAAiB2M,GAAe,SAAS,EAEzC,CACJ,aAAAhM,GACA,mBAAAF,GACA,sBAAAL,GACA,iBAAAC,EAAA,EACER,GACFtE,EACAuE,EACAC,GACAC,EAAA","names":["MacrosDocument","gql","useMacrosQuery","variables","options","VueApolloComposable.useQuery","MacrosUpdateDocument","useMacrosUpdateSubscription","VueApolloComposable.useSubscription","useMacroStore","defineStore","usageKeys","ref","queryByUsageKey","activate","usageKey","query","enabled","computed","SubscriptionHandler","data","macroId","_a","groupIds","_b","removeMacroId","_c","refetchFor","macros","macro","groupId","toValue","nextTick","without","macroScreenBehaviourMapping","EnumTicketScreenBehavior","useMacros","isTicketEditable","macroFeatureActive","macroQuery","QueryHandler","deactivate","useRoute","watch","active","onBeforeUnmount","result","useTicketMacros","formSubmit","activeMacro","TicketSharedDraftZoomCreateDocument","TicketSharedDraftZoomAttributesFragmentDoc","ErrorsFragmentDoc","useTicketSharedDraftZoomCreateMutation","VueApolloComposable.useMutation","UserCurrentTicketScreenBehaviorDocument","useUserCurrentTicketScreenBehaviorMutation","behaviorOptions","behaviorOptionLookup","acc","option","sessionStore","useSessionStore","setUserPreference","user","storeToRefs","applicationStore","useApplicationStore","config","notify","useNotifications","ticketScreenBehaviorMutation","MutationHandler","secondaryAction","selectedItem","item","NotificationTypes","LIVE_USER_LIMIT","props","__props","liveUsers","useTicketLiveUsersDisplay","toRef","visibleLiveUsers","liveUsersOverflow","overflow","openSharedDraftFlyout","useTicketSharedDraft","emit","__emit","groupLabels","mapSharedDraftParams","sharedDraftConflictDialog","useDialog","__vitePreload","actionItems","saveAsDraftAction","macroMenu","useTicketScreenBehavior","currentTaskbarTabId","deleteTaskbarTab","useUserCurrentTaskbarTabsStore","walker","useWalker","closeCurrentTaskbarTab","closeAndGoBack","screenBehaviour","ticket","highlightColors","useColorPallet","items","color","colorLabels","_useModel","isActive","popover","popoverTarget","toggle","close","isOpen","usePopover","isDarkMode","useThemeStore","selectColor","event","toggleHighlighterActive","onMounted","escalationState","useEscalationState","badgeVariant","EnumTicketStateColorCode","_openBlock","_createBlock","_component_CommonBadge","_withCtx","_createVNode","_component_CommonIcon","_ctx","_component_CommonLabel","ticketReferenceMenuItems","index","referencingTicketsCount","menuItemKeys","useTicketInformation","ticketSidebar","useTicketSidebar","referencingTickets","checklist","completedItemsCount","totalItemsCount","isCompleted","userId","openChecklistInSidebar","emitter","isChecklistFeatureEnabled","useTicketEditTitle","ticketId","mutationUpdate","useTicketUpdateMutation","title","isUpdatingTitle","updateTitle","isTicketAgent","useTicketView","copyToClipboard","useCopyToClipboard","ticketNumber","ticketNumberWithTicketHook","useTicketNumber","detailViewActiveClasses","isHovering","hasChannelAlert","channelAlert","useTicketChannel","isTouchDevice","useTouchDevice","events","useArticleContainerScroll","contentContainerElement","articleListInstance","topBarInstance","hasMounted","arrivedState","useScroll","isHidingTicketDetails","isReachingBottom","previousPosition","reset","_isHoveringOnTopBar","isHoveringOnTopBar","value","handleScroll","useThrottleFn","container","scrollHeight","clientHeight","scrollTop","whenever","newRows","oldRows","_d","_e","onActivated","useTicketArticleReply","form","initialNewTicketArticlePresent","localNewTicketArticlePresent","newTicketArticlePresent","articleFormGroupNode","isArticleFormGroupValid","showTicketArticleReplyForm","buttonVariantClassExtension","getNewArticleBody","openReplyForm","useTicketArticleReplyAction","disposeCallbacks","onDispose","callback","handleDisposeCallbacks","recalculateTriggerId","articleSelection","articleInternalId","getArticleSelection","err","log","actions","articleActions","createArticleActions","popoverActions","alwaysVisibleActions","action","mappedAction","ticketInternalId","originalFormattingUrl","useEmailFileUrls","shownMore","bubbleElement","hasShowMore","toggleShowMore","useArticleToggleMore","bodyClasses","body","textToHtml","showAuthorInformation","author","setupLinksHandlers","useHtmlLinks","populateInlineImages","useHtmlInlineImages","hasError","loading","tryAgain","useTicketArticleRetryMediaDownload","retryDownload","signingIcon","encryptionIcon","useArticleSecurity","signingMessage","encryptionMessage","retrySecurityProcess","useBubbleHeader","showMetaInformation","isInteractiveTarget","target","interactiveElements","hasInteractiveElements","hasSelectionRange","selection","start","stop","useTimeout","useBubbleStyleGuide","position","isArticleTypeNote","dividerClass","frameBorderClass","headerAndIconBarBackgroundClass","articleWrapperBorderClass","internalNoteClass","ArticleBubbleHeader","defineAsyncComponent","toggleHeader","EnumTicketArticleSenderName","hasInternalNote","filteredAttachments","file","articleAttachments","useAttachments","inlineImages","showPreview","useFilePreviewViewer","useTicketArticleRows","articles","leadingNodesCount","totalCount","controlledComputed","needMoreButton","memo","article","_g","_f","route","context","useArticleContext","edgesToArray","leadingNodes","trailingNodes","unionBy","elem","rows","loadPrevious","isLoading","getArticleElement","key","row","waitForElement","hasMoreButton","getPreviousArticleElement","scrollToArticle","targetElement","targetRow","didScrollInitially","__expose","DEFAULT_ARTICLE_PANEL_HEIGHT","MINIMUM_ARTICLE_PANEL_HEIGHT","currentTicketArticleType","allowedArticleTypes","availableArticleTypes","type","hasEmail","primaryTicketArticleType","pinned","togglePinned","articlePanel","newArticlePresent","newPinned","articlePanelHeight","useLocalStorage","screenHeight","useWindowSize","articlePanelMaxHeight","resizeLine","resizeCallback","valueY","activeElement","useActiveElement","handleKeyStroke","e","adjustment","newHeight","startResizing","useResizeLine","resetHeight","articleForm","articleFormReachedTop","useElementScroll","internalId","isReplyPinned","ticketInformation","initializeTicketInformation","onAddArticleCallback","articlesQuery","articleResult","isLoadingArticles","useArticleDataHandler","provide","ARTICLES_INFORMATION_KEY","values","flags","isDisabled","isDirty","isInitialSettled","formReset","triggerFormUpdater","useForm","tabContext","currentContext","newContext","isEqual","currentTaskbarTabFormId","currentTaskbarTabNewArticlePresent","useTaskbarTab","usePage","useTemplateRef","useScrollPosition","scrollToArticlesEnd","convertToGraphQLId","setSkipNextStateUpdate","useTaskbarTabStateUpdates","ticketSchema","articleSchema","currentArticleType","ticketArticleTypes","securityIntegration","isTicketCustomer","articleTypeHandler","articleTypeSelectHandler","useTicketEditForm","sidebarContext","TicketSidebarScreenType","useProvideTicketSidebar","hasSidebar","activeSidebar","switchSidebar","hasInternalArticle","formEditAttributeLocation","liveUserList","useTicketLiveUserList","EnumTaskbarApp","provideTicketInformation","ticketEditSchemaData","reactive","ticketEditSchema","waitForConfirmation","waitForVariantConfirmation","useConfirmation","handleScreenBehavior","canUseDraft","hasAvailableDraft","discardChanges","errorCallback","errorHandler","GraphQLErrorTypes","isTicketFormGroupValid","initialTicketValue","editTicket","useTicketEdit","isFormValid","formAdditionalRouteQueryParams","checkSubmitEditTicket","skipValidators","handleIncompleteChecklist","error","confirmed","exception","timeAccountingData","timeAccountingFlyout","useFlyout","handleTimeAccounting","handleUserErrorException","EnumUserErrorException","executeMacro","disposeActiveMacro","submitEditTicket","formData","cloneDeep","formNodeValues","UserError","setErrors","discardReplyForm","handleShowArticleForm","articleType","performReply","onEditFormSettled","newValue"],"ignoreList":[],"sources":["../../../../../app/frontend/shared/graphql/queries/macros.api.ts","../../../../../app/frontend/shared/graphql/subscriptions/macrosUpdate.api.ts","../../../../../app/frontend/shared/stores/macro.ts","../../../../../app/frontend/shared/entities/macro/composables/useMacros.ts","../../../../../app/frontend/shared/entities/ticket-shared-draft-zoom/graphql/mutations/ticketSharedDraftZoomCreate.api.ts","../../../../../app/frontend/apps/desktop/entities/user/current/graphql/mutations/userCurrentTicketScreenBehavior.api.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketScreenBehavior/behaviorOptions.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketScreenBehavior/TicketScreenBehavior.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailBottomBar/TicketLiveUsers.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailBottomBar/TicketSharedDraftZoom.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailBottomBar/TicketDetailBottomBar.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketScreenBehavior/useTicketScreenBehavior.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/HighlightMenu.vue","../../../../../app/frontend/apps/desktop/components/CommonTicketEscalationIndicator/CommonTicketEscalationIndicator.vue","../../../../../app/frontend/apps/desktop/components/CommonTicketPriorityIndicator/CommonTicketPriorityIndicator.vue","../../../../../app/frontend/apps/desktop/components/CommonTicketStateIndicator/CommonTicketStateIndicator.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/ChecklistBadge.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/ReferencingTicketsBadgePopover.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/ChecklistBadgeList.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/useTicketEditTitle.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TicketDetailTopBar.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/useArticleContainerScroll.ts","../../../../../app/frontend/apps/desktop/pages/ticket/composables/useTicketArticleReply.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleActionList.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleBlockedContentWarning.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleBody.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleMediaError.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleSecurityStatusBar.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleSecurityWarning.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/useBubbleHeader.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/useBubbleStyleGuide.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubble.vue","../../../../../app/frontend/apps/desktop/pages/ticket/composables/useTicketArticlesRows.ts","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleList.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/ArticleReply.vue","../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TicketDetailViewContent.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const MacrosDocument = gql`\n    query macros($groupId: ID!) {\n  macros(groupId: $groupId) {\n    id\n    active\n    name\n    uxFlowNextUp\n  }\n}\n    `;\nexport function useMacrosQuery(variables: Types.MacrosQueryVariables | VueCompositionApi.Ref<Types.MacrosQueryVariables> | ReactiveFunction<Types.MacrosQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.MacrosQuery, Types.MacrosQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.MacrosQuery, Types.MacrosQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.MacrosQuery, Types.MacrosQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.MacrosQuery, Types.MacrosQueryVariables>(MacrosDocument, variables, options);\n}\nexport function useMacrosLazyQuery(variables?: Types.MacrosQueryVariables | VueCompositionApi.Ref<Types.MacrosQueryVariables> | ReactiveFunction<Types.MacrosQueryVariables>, options: VueApolloComposable.UseQueryOptions<Types.MacrosQuery, Types.MacrosQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.MacrosQuery, Types.MacrosQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.MacrosQuery, Types.MacrosQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.MacrosQuery, Types.MacrosQueryVariables>(MacrosDocument, variables, options);\n}\nexport type MacrosQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.MacrosQuery, Types.MacrosQueryVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const MacrosUpdateDocument = gql`\n    subscription macrosUpdate {\n  macrosUpdate {\n    macroId\n    groupIds\n    removeMacroId\n  }\n}\n    `;\nexport function useMacrosUpdateSubscription(options: VueApolloComposable.UseSubscriptionOptions<Types.MacrosUpdateSubscription, Types.MacrosUpdateSubscriptionVariables> | VueCompositionApi.Ref<VueApolloComposable.UseSubscriptionOptions<Types.MacrosUpdateSubscription, Types.MacrosUpdateSubscriptionVariables>> | ReactiveFunction<VueApolloComposable.UseSubscriptionOptions<Types.MacrosUpdateSubscription, Types.MacrosUpdateSubscriptionVariables>> = {}) {\n  return VueApolloComposable.useSubscription<Types.MacrosUpdateSubscription, Types.MacrosUpdateSubscriptionVariables>(MacrosUpdateDocument, {}, options);\n}\nexport type MacrosUpdateSubscriptionCompositionFunctionResult = VueApolloComposable.UseSubscriptionReturn<Types.MacrosUpdateSubscription, Types.MacrosUpdateSubscriptionVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { without } from 'lodash-es'\nimport { defineStore } from 'pinia'\nimport { computed, nextTick, ref, toValue } from 'vue'\n\nimport { useMacrosUpdateSubscription } from '#shared/graphql/subscriptions/macrosUpdate.api.ts'\nimport type {\n  MacrosQuery,\n  MacrosQueryVariables,\n} from '#shared/graphql/types.ts'\nimport QueryHandler from '#shared/server/apollo/handler/QueryHandler.ts'\nimport SubscriptionHandler from '#shared/server/apollo/handler/SubscriptionHandler.ts'\n\nexport const useMacroStore = defineStore('macro', () => {\n  const usageKeys = ref<string[]>([])\n\n  const queryByUsageKey = new Map<\n    string,\n    QueryHandler<MacrosQuery, MacrosQueryVariables>\n  >()\n\n  const activate = (\n    usageKey: string,\n    query: QueryHandler<MacrosQuery, MacrosQueryVariables>,\n  ) => {\n    usageKeys.value.push(usageKey)\n    queryByUsageKey.set(usageKey, query)\n  }\n\n  const enabled = computed(() => usageKeys.value.length > 0)\n\n  const macroSubscription = new SubscriptionHandler(\n    useMacrosUpdateSubscription(() => ({ enabled })),\n  )\n\n  macroSubscription.onResult((data) => {\n    const macroId = data.data?.macrosUpdate.macroId\n    const groupIds = data.data?.macrosUpdate.groupIds\n    const removeMacroId = data.data?.macrosUpdate.removeMacroId\n\n    if (!macroId && !removeMacroId) return\n\n    const refetchFor: Record<string, boolean> = {}\n\n    queryByUsageKey.forEach((query) => {\n      const macros = query.operationResult.result.value?.macros\n\n      if (\n        !macros ||\n        (removeMacroId && !macros.find((macro) => macro.id === removeMacroId))\n      )\n        return\n\n      const { groupId } = toValue(query.operationResult.variables) ?? {}\n\n      // Skip refetching of duplicate queries with the same group ID.\n      if (!groupId || refetchFor[groupId]) return\n      if (\n        groupIds &&\n        groupIds.length &&\n        !groupIds.includes(groupId) &&\n        !macros.find((macro) => macro.id === macroId)\n      )\n        return\n\n      query.refetch()\n\n      refetchFor[groupId] = true\n    })\n  })\n\n  const deactivate = (usageKey: string) => {\n    if (!usageKeys.value.includes(usageKey)) return\n\n    nextTick(() => {\n      usageKeys.value = without(usageKeys.value, usageKey)\n      queryByUsageKey.delete(usageKey)\n    })\n  }\n\n  return {\n    usageKeys,\n    activate,\n    deactivate,\n  }\n})\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed, onBeforeUnmount, type Ref, ref, watch } from 'vue'\nimport { useRoute } from 'vue-router'\n\nimport type { MacroById } from '#shared/entities/macro/types.ts'\nimport { useMacrosQuery } from '#shared/graphql/queries/macros.api.ts'\nimport { EnumTicketScreenBehavior } from '#shared/graphql/types.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useMacroStore } from '#shared/stores/macro.ts'\n\nexport const macroScreenBehaviourMapping: Record<\n  string,\n  EnumTicketScreenBehavior\n> = {\n  next_task: EnumTicketScreenBehavior.CloseTab,\n  next_from_overview: EnumTicketScreenBehavior.CloseNextInOverview,\n  next_task_on_close: EnumTicketScreenBehavior.CloseTabOnTicketClose,\n  none: EnumTicketScreenBehavior.StayOnTab,\n}\n\nexport const useMacros = (\n  groupId: Ref<ID | undefined>,\n  isTicketEditable: Ref<boolean>,\n) => {\n  const macroFeatureActive = computed(() =>\n    Boolean(isTicketEditable.value && groupId.value),\n  )\n\n  const macroQuery = new QueryHandler(\n    useMacrosQuery(\n      () => ({\n        groupId: groupId.value as string,\n      }),\n      () => ({ enabled: macroFeatureActive.value }),\n    ),\n  )\n\n  const { activate, deactivate } = useMacroStore()\n\n  const route = useRoute()\n\n  // TODO: Drop this mechanism once Apollo implements an effective deduplication of subscriptions on the client level.\n  //   More information: https://github.com/apollographql/apollo-client/issues/10117\n  const usageKey = route.meta.taskbarTabEntityKey ?? 'apply-template'\n\n  watch(\n    macroFeatureActive,\n    (active) => {\n      if (active) {\n        activate(usageKey, macroQuery)\n      } else {\n        deactivate(usageKey)\n      }\n    },\n    { immediate: true },\n  )\n\n  onBeforeUnmount(() => {\n    deactivate(usageKey)\n  })\n\n  const result = macroQuery.result()\n\n  const macros = computed(() => result.value?.macros)\n\n  return { macros }\n}\n\nexport const useTicketMacros = (formSubmit: () => void) => {\n  const activeMacro = ref<MacroById>()\n\n  const executeMacro = async (macro: MacroById) => {\n    activeMacro.value = macro\n    formSubmit()\n  }\n\n  const disposeActiveMacro = () => {\n    activeMacro.value = undefined\n  }\n\n  return { activeMacro, executeMacro, disposeActiveMacro }\n}\n","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { TicketSharedDraftZoomAttributesFragmentDoc } from '../fragments/ticketSharedDraftZoomAttributes.api';\nimport { ErrorsFragmentDoc } from '../../../../graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const TicketSharedDraftZoomCreateDocument = gql`\n    mutation ticketSharedDraftZoomCreate($input: TicketSharedDraftZoomInput!) {\n  ticketSharedDraftZoomCreate(input: $input) {\n    sharedDraft {\n      ...ticketSharedDraftZoomAttributes\n    }\n    errors {\n      ...errors\n    }\n  }\n}\n    ${TicketSharedDraftZoomAttributesFragmentDoc}\n${ErrorsFragmentDoc}`;\nexport function useTicketSharedDraftZoomCreateMutation(options: VueApolloComposable.UseMutationOptions<Types.TicketSharedDraftZoomCreateMutation, Types.TicketSharedDraftZoomCreateMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.TicketSharedDraftZoomCreateMutation, Types.TicketSharedDraftZoomCreateMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.TicketSharedDraftZoomCreateMutation, Types.TicketSharedDraftZoomCreateMutationVariables>(TicketSharedDraftZoomCreateDocument, options);\n}\nexport type TicketSharedDraftZoomCreateMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.TicketSharedDraftZoomCreateMutation, Types.TicketSharedDraftZoomCreateMutationVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserCurrentTicketScreenBehaviorDocument = gql`\n    mutation userCurrentTicketScreenBehavior($behavior: EnumTicketScreenBehavior!) {\n  userCurrentTicketScreenBehavior(behavior: $behavior) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useUserCurrentTicketScreenBehaviorMutation(options: VueApolloComposable.UseMutationOptions<Types.UserCurrentTicketScreenBehaviorMutation, Types.UserCurrentTicketScreenBehaviorMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.UserCurrentTicketScreenBehaviorMutation, Types.UserCurrentTicketScreenBehaviorMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.UserCurrentTicketScreenBehaviorMutation, Types.UserCurrentTicketScreenBehaviorMutationVariables>(UserCurrentTicketScreenBehaviorDocument, options);\n}\nexport type UserCurrentTicketScreenBehaviorMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.UserCurrentTicketScreenBehaviorMutation, Types.UserCurrentTicketScreenBehaviorMutationVariables>;","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { EnumTicketScreenBehavior } from '#shared/graphql/types.ts'\n\nexport const behaviorOptions = [\n  {\n    key: EnumTicketScreenBehavior.StayOnTab,\n    label: __('Stay on tab'),\n  },\n  {\n    key: EnumTicketScreenBehavior.CloseTab,\n    label: __('Close tab'),\n  },\n  {\n    key: EnumTicketScreenBehavior.CloseTabOnTicketClose,\n    label: __('Close tab on ticket close'),\n  },\n  // :TODO Add this option as soon as overview is implemented\n  // {\n  //   key: EnumTicketScreenBehavior.CloseNextInOverview,\n  //   label: __('Next in overview'),\n  // },\n]\n\nexport const behaviorOptionLookup = behaviorOptions.reduce(\n  (acc, option) => {\n    acc[option.key] = option\n    return acc\n  },\n  {} as Record<EnumTicketScreenBehavior, (typeof behaviorOptions)[0]>,\n)\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport {\n  NotificationTypes,\n  useNotifications,\n} from '#shared/components/CommonNotifications/index.ts'\nimport { EnumTicketScreenBehavior } from '#shared/graphql/types.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport CommonDropdown from '#desktop/components/CommonDropdown/CommonDropdown.vue'\nimport type { MenuItem } from '#desktop/components/CommonPopoverMenu/types.ts'\nimport { useUserCurrentTicketScreenBehaviorMutation } from '#desktop/entities/user/current/graphql/mutations/userCurrentTicketScreenBehavior.api.ts'\nimport {\n  behaviorOptionLookup,\n  behaviorOptions,\n} from '#desktop/pages/ticket/components/TicketDetailView/TicketScreenBehavior/behaviorOptions.ts'\n\nconst sessionStore = useSessionStore()\nconst { setUserPreference } = sessionStore\nconst { user } = storeToRefs(sessionStore)\n\nconst applicationStore = useApplicationStore()\nconst { config } = storeToRefs(applicationStore)\n\nconst { notify } = useNotifications()\n\nconst ticketScreenBehaviorMutation = new MutationHandler(\n  useUserCurrentTicketScreenBehaviorMutation(),\n)\n\nconst secondaryAction = computed<EnumTicketScreenBehavior>(\n  () =>\n    user.value?.preferences?.secondaryAction ||\n    config.value.ticket_secondary_action ||\n    EnumTicketScreenBehavior.StayOnTab,\n)\n\nconst selectedItem = computed({\n  get: () => behaviorOptionLookup[secondaryAction.value],\n  set: (item: MenuItem) => {\n    ticketScreenBehaviorMutation\n      .send({\n        behavior: item.key as EnumTicketScreenBehavior,\n      })\n      .then(() => {\n        setUserPreference('secondaryAction', item.key)\n        notify({\n          id: 'ticket-screen-behavior-updated',\n          type: NotificationTypes.Success,\n          message: __('Ticket screen behavior updated successfully'),\n        })\n      })\n  },\n})\n</script>\n\n<template>\n  <CommonDropdown\n    v-model=\"selectedItem\"\n    :items=\"behaviorOptions\"\n    orientation=\"top\"\n  />\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\n\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport { useTicketLiveUsersDisplay } from '#shared/entities/ticket/composables/useTicketLiveUsersDisplay.ts'\nimport type { TicketLiveAppUser } from '#shared/entities/ticket/types.ts'\n\nexport interface Props {\n  liveUserList: TicketLiveAppUser[]\n}\n\nconst props = defineProps<Props>()\n\nconst { liveUsers } = useTicketLiveUsersDisplay(toRef(props, 'liveUserList'))\n\nconst LIVE_USER_LIMIT = 9\n\nconst visibleLiveUsers = computed(() =>\n  liveUsers.value.slice(0, LIVE_USER_LIMIT),\n)\n\nconst liveUsersOverflow = computed(() => {\n  if (liveUsers.value.length <= LIVE_USER_LIMIT) return\n  const overflow = liveUsers.value.length - LIVE_USER_LIMIT\n  if (overflow > 999) return '+999'\n  return `+${overflow}`\n})\n</script>\n\n<template>\n  <div class=\"flex items-center gap-2\">\n    <CommonUserAvatar\n      v-for=\"liveUser in visibleLiveUsers\"\n      :key=\"liveUser.user.id\"\n      :entity=\"liveUser.user\"\n      :live=\"liveUser\"\n      size=\"small\"\n    />\n    <div\n      v-if=\"liveUsersOverflow\"\n      class=\"flex h-8 w-8 items-center justify-center rounded-full bg-blue-200 text-sm outline outline-1 -outline-offset-1 outline-neutral-100 dark:bg-gray-700 dark:outline-gray-900\"\n    >\n      {{ liveUsersOverflow }}\n    </div>\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport type { FormRef } from '#shared/components/Form/types.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport { useTicketSharedDraft } from '#desktop/pages/ticket/composables/useTicketSharedDraft.ts'\n\ndefineProps<{\n  sharedDraftId?: string | null\n  form?: FormRef\n}>()\n\nconst { openSharedDraftFlyout } = useTicketSharedDraft()\n</script>\n\n<template>\n  <div class=\"flex items-center gap-2.5\">\n    <CommonButton\n      prefix-icon=\"template\"\n      size=\"large\"\n      variant=\"tertiary\"\n      @click=\"openSharedDraftFlyout('detail-view', sharedDraftId, form)\"\n      >{{ $t('Draft Available') }}</CommonButton\n    >\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\n\nimport { NotificationTypes } from '#shared/components/CommonNotifications/types.ts'\nimport { useNotifications } from '#shared/components/CommonNotifications/useNotifications.ts'\nimport type { FormRef } from '#shared/components/Form/types.ts'\nimport { useMacros } from '#shared/entities/macro/composables/useMacros.ts'\nimport type { MacroById } from '#shared/entities/macro/types.ts'\nimport type { TicketLiveAppUser } from '#shared/entities/ticket/types.ts'\nimport { useTicketSharedDraftZoomCreateMutation } from '#shared/entities/ticket-shared-draft-zoom/graphql/mutations/ticketSharedDraftZoomCreate.api.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport CommonActionMenu from '#desktop/components/CommonActionMenu/CommonActionMenu.vue'\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport { useDialog } from '#desktop/components/CommonDialog/useDialog.ts'\nimport type { MenuItem } from '#desktop/components/CommonPopoverMenu/types.ts'\nimport TicketScreenBehavior from '#desktop/pages/ticket/components/TicketDetailView/TicketScreenBehavior/TicketScreenBehavior.vue'\nimport { useTicketSharedDraft } from '#desktop/pages/ticket/composables/useTicketSharedDraft.ts'\n\nimport TicketLiveUsers from './TicketLiveUsers.vue'\nimport TicketSharedDraftZoom from './TicketSharedDraftZoom.vue'\n\nexport interface Props {\n  dirty: boolean\n  disabled: boolean\n  isTicketEditable: boolean\n  isTicketAgent: boolean\n  ticketId: string\n  groupId?: string\n  form?: FormRef\n  hasAvailableDraft?: boolean\n  canUseDraft?: boolean\n  sharedDraftId?: string | null\n  liveUserList: TicketLiveAppUser[]\n}\n\nconst props = defineProps<Props>()\n\nconst groupId = toRef(props, 'groupId')\nconst isTicketEditable = toRef(props, 'isTicketEditable')\n\nconst emit = defineEmits<{\n  submit: [MouseEvent]\n  discard: [MouseEvent]\n  'execute-macro': [MacroById]\n}>()\n\n// For now handover ticket editable, flag, maybe later we can move the action menu in an own component.\nconst { macros } = useMacros(groupId, isTicketEditable)\n\nconst { notify } = useNotifications()\n\nconst groupLabels = {\n  drafts: __('Drafts'),\n  macros: __('Macros'),\n}\n\nconst { mapSharedDraftParams } = useTicketSharedDraft()\n\nconst sharedDraftConflictDialog = useDialog({\n  name: 'shared-draft-conflict',\n  component: () => import('../TicketSharedDraftConflictDialog.vue'),\n})\n\nconst actionItems = computed(() => {\n  const saveAsDraftAction: MenuItem = {\n    label: __('Save as draft'),\n    groupLabel: groupLabels.drafts,\n    icon: 'floppy',\n    key: 'save-draft',\n    show: () => props.canUseDraft,\n    onClick: () => {\n      if (props.sharedDraftId) {\n        sharedDraftConflictDialog.open({\n          sharedDraftId: props.sharedDraftId,\n          sharedDraftParams: mapSharedDraftParams(props.ticketId, props.form),\n          form: props.form,\n        })\n\n        return\n      }\n\n      const draftCreateMutation = new MutationHandler(\n        useTicketSharedDraftZoomCreateMutation(),\n        {\n          errorNotificationMessage: __('Draft could not be saved.'),\n        },\n      )\n\n      draftCreateMutation\n        .send({ input: mapSharedDraftParams(props.ticketId, props.form) })\n        .then(() => {\n          notify({\n            id: 'shared-draft-detail-view-created',\n            type: NotificationTypes.Success,\n            message: __('Shared draft has been created successfully.'),\n          })\n        })\n    },\n  }\n\n  if (!macros.value) return [saveAsDraftAction]\n\n  const macroMenu: MenuItem[] = macros.value.map((macro) => ({\n    key: macro.id,\n    label: macro.name,\n    groupLabel: groupLabels.macros,\n    onClick: () => emit('execute-macro', macro),\n  }))\n\n  return [saveAsDraftAction, ...(groupId.value ? macroMenu : [])]\n})\n</script>\n\n<template>\n  <div class=\"flex gap-4 ltr:mr-auto rtl:ml-auto\">\n    <TicketLiveUsers\n      v-if=\"liveUserList?.length\"\n      :live-user-list=\"liveUserList\"\n    />\n\n    <TicketSharedDraftZoom\n      v-if=\"hasAvailableDraft\"\n      :form=\"form\"\n      :shared-draft-id=\"sharedDraftId\"\n    />\n  </div>\n\n  <template v-if=\"isTicketEditable\">\n    <CommonButton\n      v-if=\"dirty\"\n      size=\"large\"\n      variant=\"danger\"\n      :disabled=\"disabled\"\n      @click=\"$emit('discard', $event)\"\n      >{{ $t('Discard your unsaved changes') }}\n    </CommonButton>\n\n    <TicketScreenBehavior />\n\n    <CommonButton\n      size=\"large\"\n      variant=\"submit\"\n      type=\"button\"\n      :disabled=\"disabled\"\n      @click=\"$emit('submit', $event)\"\n      >{{ $t('Update') }}\n    </CommonButton>\n\n    <CommonActionMenu\n      v-if=\"isTicketAgent\"\n      class=\"flex!\"\n      button-size=\"large\"\n      no-single-action-mode\n      placement=\"arrowEnd\"\n      custom-menu-button-label=\"Additional ticket edit actions\"\n      :actions=\"actionItems\"\n    />\n  </template>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { storeToRefs } from 'pinia'\nimport { computed, type Ref } from 'vue'\n\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\nimport { EnumTicketScreenBehavior } from '#shared/graphql/types.ts'\nimport { useWalker } from '#shared/router/walker.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport { useUserCurrentTaskbarTabsStore } from '#desktop/entities/user/current/stores/taskbarTabs.ts'\n\nexport const useTicketScreenBehavior = (\n  currentTaskbarTabId: Ref<string | undefined>,\n) => {\n  const { deleteTaskbarTab } = useUserCurrentTaskbarTabsStore()\n\n  const { user } = storeToRefs(useSessionStore())\n\n  const walker = useWalker()\n\n  const secondaryAction = computed(\n    () => user.value?.preferences?.secondaryAction,\n  )\n\n  const closeCurrentTaskbarTab = () => {\n    if (!currentTaskbarTabId.value) return\n\n    deleteTaskbarTab(currentTaskbarTabId.value)\n  }\n\n  const closeAndGoBack = () => {\n    walker.back('/')\n    closeCurrentTaskbarTab()\n  }\n\n  const handleScreenBehavior = ({\n    screenBehaviour,\n    ticket,\n  }: {\n    screenBehaviour?: EnumTicketScreenBehavior\n    ticket: TicketById\n  }) => {\n    const currentScreenBehaviour = screenBehaviour || secondaryAction.value\n\n    switch (currentScreenBehaviour) {\n      case EnumTicketScreenBehavior.CloseTabOnTicketClose:\n        if (ticket.state.stateType.name === 'closed') {\n          closeAndGoBack()\n        }\n        break\n      case EnumTicketScreenBehavior.CloseTab:\n        closeAndGoBack()\n        break\n      case EnumTicketScreenBehavior.CloseNextInOverview:\n        // :TODO handle situation if a Macro should advance to next ticket from overview\n        break\n      case EnumTicketScreenBehavior.StayOnTab:\n      default:\n        break\n    }\n  }\n\n  return { handleScreenBehavior }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { onMounted, ref } from 'vue'\n\nimport CommonPopover from '#shared/components/CommonPopover/CommonPopover.vue'\nimport { usePopover } from '#shared/components/CommonPopover/usePopover.ts'\nimport type { HightlightColor } from '#shared/composables/useColorPallet/types.ts'\nimport { useColorPallet } from '#shared/composables/useColorPallet/useColorPallet.ts'\n\nimport CommonPopoverMenu from '#desktop/components/CommonPopoverMenu/CommonPopoverMenu.vue'\nimport type { MenuItem } from '#desktop/components/CommonPopoverMenu/types.ts'\nimport { useThemeStore } from '#desktop/stores/theme.ts'\n\ninterface ExtendedMenuItem extends MenuItem, Omit<HightlightColor, 'label'> {}\n\nconst { highlightColors } = useColorPallet()\n\nconst items = highlightColors.map((color) => {\n  return {\n    key: `${color.label}`,\n    ...color,\n  }\n})\n\nconst colorLabels = highlightColors.map((color) => color.label)\n\nconst color = defineModel<ExtendedMenuItem>('currentColor') // Remove if we might not need it to read it from parent\n\nconst isActive = ref(false)\n\nconst { popover, popoverTarget, toggle, close, isOpen } = usePopover()\n\nconst { isDarkMode } = storeToRefs(useThemeStore())\n\nconst selectColor = (event: ExtendedMenuItem) => {\n  color.value = event\n  close()\n  isActive.value = true\n}\n\nconst toggleHighlighterActive = () => {\n  isActive.value = !isActive.value\n}\n\nonMounted(() => {\n  color.value = items[0]\n})\n</script>\n\n<template>\n  <div>\n    <div class=\"flex items-center gap-1\">\n      <button\n        class=\"flex items-center gap-2 bg-(--highlight-color)\"\n        :style=\"{\n          '--highlight-color': isDarkMode\n            ? color?.value?.dark\n            : color?.value?.light,\n          background: !isActive ? 'transparent' : undefined,\n        }\"\n        @click=\"toggleHighlighterActive\"\n      >\n        <CommonIcon size=\"xs\" name=\"highlighter\" />\n        <CommonLabel\n          class=\"rounded-xs p-1 text-xs\"\n          :class=\"{ 'text-black! dark:text-white!': isActive }\"\n          :style=\"{ backgroundColor: isActive ? color?.value : undefined }\"\n          >{{ $t('Highlight') }}</CommonLabel\n        >\n      </button>\n      <CommonIcon\n        ref=\"popoverTarget\"\n        class=\"cursor-pointer text-gray-100 transition-transform dark:text-neutral-400\"\n        :class=\"{ 'rotate-180': isOpen }\"\n        role=\"button\"\n        size=\"xs\"\n        name=\"chevron-down\"\n        @click=\"toggle(true)\"\n      />\n    </div>\n\n    <CommonPopover ref=\"popover\" placement=\"arrowEnd\" :owner=\"popoverTarget\">\n      <CommonPopoverMenu\n        class=\"overflow-clip\"\n        :items=\"items\"\n        :popover=\"popover\"\n      >\n        <template\n          v-for=\"(label, index) in colorLabels\"\n          #[`item-${label}`]=\"item\"\n          :key=\"label\"\n        >\n          <button\n            :aria-label=\"$t((item as ExtendedMenuItem).name)\"\n            class=\"relative flex grow items-center gap-2 p-2.5 text-gray-100 outline-hidden dark:text-neutral-400\"\n            :class=\"{\n              'bg-blue-600 text-black dark:bg-blue-900 dark:text-white':\n                (item as ExtendedMenuItem).id === color?.id,\n              'rounded-t-lg': index === 0,\n              'rounded-b-lg': index === colorLabels.length - 1,\n              'after:absolute after:bottom-0 after:left-1/2 after:h-[1px] after:w-[calc(100%-1rem)] after:-translate-x-1/2 after:bg-neutral-100 after:dark:bg-gray-900':\n                index !== colorLabels.length - 1,\n            }\"\n            @click=\"selectColor(item as ExtendedMenuItem)\"\n          >\n            <span\n              class=\"inline-block h-4 w-4\"\n              :style=\"{\n                backgroundColor: (item as ExtendedMenuItem).value.light,\n              }\"\n            />\n            <CommonLabel class=\"p-1 text-current\">{{ $t(label) }}</CommonLabel>\n            <Transition name=\"fade\">\n              <CommonIcon\n                v-if=\"(item as ExtendedMenuItem).id === color?.id\"\n                class=\"rtl:-order-1\"\n                size=\"small\"\n                name=\"check2\"\n              />\n            </Transition>\n          </button>\n        </template>\n      </CommonPopoverMenu>\n    </CommonPopover>\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport {\n  useEscalationState,\n  EscalationState,\n} from '#shared/composables/useEscalationState.ts'\nimport type { Scalars } from '#shared/graphql/types.ts'\n\nexport interface Props {\n  escalationAt?: Maybe<Scalars['ISO8601DateTime']['output']>\n}\n\nconst props = defineProps<Props>()\n\nconst escalationState = useEscalationState(toRef(() => props.escalationAt))\n</script>\n\n<template>\n  <CommonBadge\n    v-if=\"escalationAt && escalationState !== EscalationState.None\"\n    :variant=\"\n      escalationState === EscalationState.Escalated ? 'danger' : 'warning'\n    \"\n    class=\"uppercase\"\n    role=\"alert\"\n  >\n    <CommonIcon name=\"warning-triangle\" class=\"me-1\" size=\"xs\" decorative />\n    {{ $t('escalation %s', i18n.relativeDateTime(escalationAt)) }}\n  </CommonBadge>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport CommonTicketPriorityIndicatorIcon from './CommonTicketPriorityIndicatorIcon.vue'\n\nimport type { TicketPriority } from './types.ts'\n\nexport interface Props {\n  priority?: TicketPriority\n}\n\nconst { config } = storeToRefs(useApplicationStore())\n\nconst props = defineProps<Props>()\n\nconst badgeVariant = computed(() => {\n  switch (props.priority?.uiColor) {\n    case 'high-priority':\n      return 'danger'\n    case 'low-priority':\n      return 'tertiary'\n    default:\n      return 'info'\n  }\n})\n</script>\n\n<template>\n  <CommonBadge\n    :variant=\"badgeVariant\"\n    class=\"uppercase\"\n    role=\"status\"\n    aria-live=\"polite\"\n  >\n    <CommonTicketPriorityIndicatorIcon\n      v-if=\"config.ui_ticket_priority_icons\"\n      :ui-color=\"priority?.uiColor\"\n    />\n    {{ $t(priority?.name) }}\n  </CommonBadge>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { EnumTicketStateColorCode } from '#shared/graphql/types.ts'\n\nimport CommonTicketStateIndicatorIcon from './CommonTicketStateIndicatorIcon.vue'\n\nexport interface Props {\n  colorCode: EnumTicketStateColorCode\n  label: string\n}\n\nconst props = defineProps<Props>()\n\nconst badgeVariant = computed(() => {\n  switch (props.colorCode) {\n    case EnumTicketStateColorCode.Closed:\n      return 'success'\n    case EnumTicketStateColorCode.Pending:\n      return 'tertiary'\n    case EnumTicketStateColorCode.Escalating:\n      return 'danger'\n    case EnumTicketStateColorCode.Open:\n    default:\n      return 'warning'\n  }\n})\n</script>\n\n<template>\n  <CommonBadge :variant=\"badgeVariant\" role=\"group\" class=\"uppercase\">\n    <CommonTicketStateIndicatorIcon\n      class=\"ltr:mr-1.5 rtl:ml-1.5\"\n      :color-code=\"props.colorCode\"\n      :label=\"label\"\n    />\n    {{ $t(label) }}\n  </CommonBadge>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<template>\n  <CommonBadge tag=\"div\" variant=\"info\" class=\"flex items-center gap-1\">\n    <CommonIcon name=\"checklist\" size=\"xs\" />\n    <slot name=\"label\">\n      <CommonLabel size=\"small\" class=\"text-current uppercase\">\n        {{ $t('tracked in') }}\n      </CommonLabel>\n    </slot>\n    <slot />\n  </CommonBadge>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport CommonPopover from '#shared/components/CommonPopover/CommonPopover.vue'\nimport { usePopover } from '#shared/components/CommonPopover/usePopover.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport CommonPopoverMenu from '#desktop/components/CommonPopoverMenu/CommonPopoverMenu.vue'\nimport type { MenuItem } from '#desktop/components/CommonPopoverMenu/types.ts'\nimport CommonTicketLabel from '#desktop/components/CommonTicketLabel/CommonTicketLabel.vue'\nimport ChecklistBadge from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/ChecklistBadge.vue'\nimport type {\n  ReferencingTicket,\n  TicketReferenceMenuItem,\n} from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/types.ts'\nimport { getTicketNumberWithHook } from '#desktop/pages/ticket/composables/getTicketNumber.ts'\n\n// Trigger close manually since the popover does not close sometimes on click\nconst { popover, popoverTarget, isOpen, toggle, close } = usePopover()\n\nconst { config } = storeToRefs(useApplicationStore())\n\ninterface Props {\n  referencingTickets: ReferencingTicket[]\n}\n\nconst props = defineProps<Props>()\n\nconst ticketReferenceMenuItems = computed<Array<MenuItem> | undefined>(() =>\n  props.referencingTickets?.map((ticket, index) => ({\n    ticket,\n    key: `popover-checklist-title-item-${index}`,\n  })),\n)\n\nconst referencingTicketsCount = computed(() => props.referencingTickets.length)\n\nconst menuItemKeys = computed(() =>\n  ticketReferenceMenuItems.value?.map((item) => item.key),\n)\n</script>\n\n<template>\n  <ChecklistBadge\n    ref=\"popoverTarget\"\n    v-tooltip=\"\n      referencingTicketsCount === 1\n        ? $t('Show tracking ticket')\n        : $t('Show tracking tickets')\n    \"\n    role=\"button\"\n    tag=\"div\"\n    tabindex=\"0\"\n    class=\"cursor-pointer hover:outline hover:outline-1 hover:outline-offset-1 hover:outline-blue-600 focus:outline-transparent focus-visible:outline-1 focus-visible:outline-offset-1 focus-visible:outline-blue-800 active:outline-blue-800 dark:hover:outline-blue-900\"\n    :class=\"{\n      'outline outline-1 outline-offset-1 !outline-blue-800': isOpen,\n    }\"\n    @click=\"toggle(true)\"\n    @keydown.enter=\"toggle(true)\"\n  >\n    <CommonLabel size=\"small\" class=\"text-black! dark:text-white!\">\n      {{\n        referencingTicketsCount === 1\n          ? getTicketNumberWithHook(\n              config.ticket_hook,\n              referencingTickets[0].number as string,\n            )\n          : $t('%s tickets', referencingTicketsCount)\n      }}\n    </CommonLabel>\n  </ChecklistBadge>\n\n  <CommonPopover\n    id=\"checklist-badge-popover\"\n    ref=\"popover\"\n    placement=\"arrowEnd\"\n    orientation=\"bottom\"\n    :owner=\"popoverTarget\"\n  >\n    <CommonPopoverMenu\n      ref=\"popoverMenu\"\n      :header-label=\"$t('Tracked as checklist item in')\"\n      :items=\"ticketReferenceMenuItems\"\n      :popover=\"popover\"\n    >\n      <template v-for=\"key in menuItemKeys\" :key=\"key\" #[`item-${key}`]=\"item\">\n        <CommonTicketLabel\n          v-tooltip=\"\n            getTicketNumberWithHook(\n              config.ticket_hook,\n              (item as unknown as TicketReferenceMenuItem).ticket.number,\n            )\n          \"\n          class=\"group p-2.5 focus-visible:outline-transparent\"\n          :classes=\"{\n            indicator: 'group-focus:text-white',\n            label: 'group-focus:text-white',\n          }\"\n          :ticket=\"(item as unknown as TicketReferenceMenuItem).ticket\"\n          @click=\"close\"\n        />\n      </template>\n    </CommonPopoverMenu>\n  </CommonPopover>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { useSessionStore } from '#shared/stores/session.ts'\nimport emitter from '#shared/utils/emitter.ts'\n\nimport ChecklistBadge from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/ChecklistBadge.vue'\nimport ReferencingTicketsBadgePopover from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/ReferencingTicketsBadgePopover.vue'\nimport type { ReferencingTicket } from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/types.ts'\nimport { useTicketInformation } from '#desktop/pages/ticket/composables/useTicketInformation.ts'\nimport { useTicketSidebar } from '#desktop/pages/ticket/composables/useTicketSidebar.ts'\n\nconst { ticket } = useTicketInformation()\nconst ticketSidebar = useTicketSidebar()\n\nconst referencingTickets = computed(\n  () => ticket?.value?.referencingChecklistTickets as ReferencingTicket[],\n)\n\nconst checklist = computed(() => ticket?.value?.checklist)\n\nconst completedItemsCount = computed(() => checklist.value?.complete)\n\nconst totalItemsCount = computed(() => checklist.value?.total)\n\nconst isCompleted = computed(() => checklist.value?.completed)\n\nconst { userId } = useSessionStore()\n\nconst openChecklistInSidebar = () => {\n  ticketSidebar.switchSidebar('checklist')\n  emitter.emit('expand-collapsed-content', `${userId}-ticket-detail`)\n}\n</script>\n\n<template>\n  <ChecklistBadge\n    v-if=\"!isCompleted && totalItemsCount\"\n    v-tooltip=\"$t('Open Checklist')\"\n    role=\"button\"\n    tabindex=\"0\"\n    class=\"cursor-pointer hover:outline hover:outline-1 hover:outline-offset-1 hover:outline-blue-600 focus:outline-transparent focus-visible:outline focus-visible:outline-1 focus-visible:outline-offset-1 focus-visible:outline-blue-800 active:outline-blue-800 dark:hover:outline-blue-900 dark:active:outline-blue-800\"\n    @click=\"openChecklistInSidebar\"\n    @keydown.enter=\"openChecklistInSidebar\"\n  >\n    <template #label>\n      <CommonLabel size=\"small\" class=\"text-current! uppercase\">\n        {{ $t('checked') }}\n      </CommonLabel>\n    </template>\n    <CommonLabel size=\"small\" class=\"text-black! dark:text-white!\">\n      {{ $t('%s of %s', completedItemsCount, totalItemsCount) }}\n    </CommonLabel>\n  </ChecklistBadge>\n\n  <ReferencingTicketsBadgePopover\n    v-if=\"referencingTickets?.length\"\n    :referencing-tickets=\"referencingTickets\"\n  />\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport CommonTicketEscalationIndicator from '#desktop/components/CommonTicketEscalationIndicator/CommonTicketEscalationIndicator.vue'\nimport CommonTicketPriorityIndicator from '#desktop/components/CommonTicketPriorityIndicator/CommonTicketPriorityIndicator.vue'\nimport CommonTicketStateIndicator from '#desktop/components/CommonTicketStateIndicator/CommonTicketStateIndicator.vue'\nimport ChecklistBadgeList from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList/ChecklistBadgeList.vue'\nimport { useTicketInformation } from '#desktop/pages/ticket/composables/useTicketInformation.ts'\n\nconst { ticket } = useTicketInformation()\n\nconst { config } = storeToRefs(useApplicationStore())\n\nconst isChecklistFeatureEnabled = computed(() => !!config.value.checklist)\n</script>\n\n<template>\n  <div\n    v-if=\"ticket\"\n    class=\"flex max-w-full items-center gap-2.5 text-nowrap *:h-7\"\n  >\n    <CommonTicketEscalationIndicator :escalation-at=\"ticket.escalationAt\" />\n\n    <CommonTicketStateIndicator\n      :color-code=\"ticket.stateColorCode\"\n      :label=\"ticket.state.name\"\n    />\n\n    <CommonTicketPriorityIndicator :priority=\"ticket.priority\" />\n\n    <CommonBadge variant=\"tertiary\" class=\"uppercase\">\n      <CommonDateTime\n        :date-time=\"ticket.createdAt\"\n        absolute-format=\"date\"\n        class=\"ms-1\"\n      >\n        <template #prefix>\n          {{ $t('Created') }}\n        </template>\n      </CommonDateTime>\n    </CommonBadge>\n\n    <ChecklistBadgeList v-if=\"isChecklistFeatureEnabled\" />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\nimport {\n  NotificationTypes,\n  useNotifications,\n} from '#shared/components/CommonNotifications/index.ts'\nimport { useTicketUpdateMutation } from '#shared/entities/ticket/graphql/mutations/update.api.ts'\nimport { MutationHandler } from '#shared/server/apollo/handler/index.ts'\n\nimport type { ComputedRef } from 'vue'\n\nexport const useTicketEditTitle = (ticketId: ComputedRef<string>) => {\n  const { notify } = useNotifications()\n\n  const mutationUpdate = new MutationHandler(useTicketUpdateMutation())\n\n  const updateTitle = async (title: string) => {\n    return mutationUpdate\n      .send({\n        ticketId: ticketId.value,\n        input: { title },\n        meta: {},\n      })\n      .then(() => {\n        notify({\n          type: NotificationTypes.Success,\n          id: 'ticket-updated-successfully',\n          message: __('Ticket updated successfully.'),\n        })\n      })\n  }\n\n  return { updateTitle }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\nimport CommonOrganizationAvatar from '#shared/components/CommonOrganizationAvatar/CommonOrganizationAvatar.vue'\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\n\nimport CommonInlineEdit from '#desktop/components/CommonInlineEdit/CommonInlineEdit.vue'\nimport TicketInformationBadgeList from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation/TicketInformationBadgeList.vue'\nimport { useTicketEditTitle } from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/useTicketEditTitle.ts'\nimport { useTicketInformation } from '#desktop/pages/ticket/composables/useTicketInformation.ts'\n\ninterface Props {\n  hideDetails?: boolean\n}\nconst { ticket, ticketId } = useTicketInformation()\n\ndefineProps<Props>()\n\nconst isUpdatingTitle = ref(false)\n\nconst { updateTitle } = useTicketEditTitle(ticketId)\n</script>\n\n<template>\n  <div\n    v-if=\"ticket\"\n    class=\"grid grid-cols-[max-content_1fr] gap-4\"\n    :class=\"{ 'items-center gap-3': hideDetails }\"\n  >\n    <div class=\"flex\" :class=\"{ 'mt-1': !hideDetails }\">\n      <CommonUserAvatar\n        v-if=\"ticket.customer\"\n        :size=\"hideDetails ? 'medium' : 'normal'\"\n        :entity=\"ticket.customer\"\n      />\n      <CommonOrganizationAvatar\n        v-if=\"ticket.organization\"\n        class=\"ltr:-translate-x- -z-10 ltr:-translate-x-1.5 rtl:translate-x-1.5\"\n        :size=\"hideDetails ? 'medium' : 'normal'\"\n        :entity=\"ticket.organization\"\n      />\n    </div>\n\n    <div class=\"grow basis-full\">\n      <div\n        class=\"flex flex-col justify-center\"\n        :class=\"{\n          'mb-3.5': !hideDetails,\n        }\"\n      >\n        <div v-if=\"!hideDetails\" class=\"mb-1 flex items-center gap-1\">\n          <CommonLabel\n            tag=\"p\"\n            class=\"flex items-center gap-1\"\n            :class=\"{\n              'after:inline-block after:h-[.12rem] after:w-[.12rem] after:shrink-0 after:rounded-full after:bg-current':\n                ticket.organization,\n            }\"\n          >\n            {{ ticket.customer.fullname }}\n          </CommonLabel>\n          <CommonLabel v-if=\"ticket.organization?.name\">\n            {{ ticket.organization?.name }}\n          </CommonLabel>\n        </div>\n\n        <CommonInlineEdit\n          v-model:editing=\"isUpdatingTitle\"\n          size=\"xl\"\n          required\n          block\n          :disabled=\"!ticket.policy.update || hideDetails\"\n          :value=\"ticket.title\"\n          :classes=\"{\n            label: hideDetails\n              ? 'dark:text-white font-medium line-clamp-1'\n              : 'dark:text-white font-medium line-clamp-4',\n            input: 'dark:text-white font-medium',\n          }\"\n          :label-attrs=\"{\n            role: 'heading',\n            'aria-level': '2',\n          }\"\n          :label=\"$t('Edit ticket title')\"\n          @submit-edit=\"updateTitle\"\n        />\n      </div>\n\n      <TicketInformationBadgeList v-if=\"!hideDetails\" />\n    </div>\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { useCopyToClipboard } from '#shared/composables/useCopyToClipboard.ts'\nimport { useTicketView } from '#shared/entities/ticket/composables/useTicketView.ts'\n\nimport CommonBreadcrumb from '#desktop/components/CommonBreadcrumb/CommonBreadcrumb.vue'\nimport HighlightMenu from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/HighlightMenu.vue'\nimport TicketInformation from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader/TicketInformation.vue'\nimport { useTicketInformation } from '#desktop/pages/ticket/composables/useTicketInformation.ts'\nimport { useTicketNumber } from '#desktop/pages/ticket/composables/useTicketNumber.ts'\n\ninterface Props {\n  hideDetails: boolean\n}\n\nconst props = defineProps<Props>()\nconst { ticket } = useTicketInformation()\n\nconst { isTicketAgent, isTicketEditable } = useTicketView(ticket)\n\nconst { copyToClipboard } = useCopyToClipboard()\n\nconst { ticketNumber, ticketNumberWithTicketHook } = useTicketNumber(ticket)\n\nconst items = computed(() => [\n  // :TODO Adjust navigations currently two h1 are present\n  {\n    label: 'Tickets',\n    to: { name: 'ticket-list' },\n  },\n  {\n    label: ticketNumberWithTicketHook.value || '',\n    noOptionLabelTranslation: true,\n    to: { name: 'ticket-list' },\n  },\n])\n\nconst detailViewActiveClasses = computed(() => {\n  if (props.hideDetails)\n    return [\n      'ticket-detail-grid-compact gap-x-2 grid-cols-[1fr_max-content] items-center p-2 px-10',\n    ]\n  return [' ticket-detail-grid-full grid-cols-2 gap-y-2.5']\n})\n</script>\n\n<template>\n  <header\n    class=\"relative z-10 grid border-b border-neutral-100 bg-neutral-50 p-3 dark:border-gray-900 dark:bg-gray-500\"\n    :class=\"detailViewActiveClasses\"\n  >\n    <CommonBreadcrumb\n      v-if=\"!hideDetails\"\n      emphasize-last-item\n      size=\"small\"\n      :style=\"{ gridTemplate: 'breadcrumbs' }\"\n      :items=\"items\"\n      class=\"flex\"\n    >\n      <template #trailing>\n        <CommonIcon\n          v-if=\"ticketNumber\"\n          v-tooltip=\"$t('Copy ticket number')\"\n          :aria-label=\"$t('Copy ticket number')\"\n          role=\"button\"\n          name=\"files\"\n          size=\"xs\"\n          class=\"cursor-pointer text-blue-800 ltr:ml-2 rtl:mr-2\"\n          @click=\"copyToClipboard(ticketNumberWithTicketHook)\"\n        />\n      </template>\n    </CommonBreadcrumb>\n\n    <HighlightMenu\n      v-if=\"isTicketAgent && isTicketEditable && !hideDetails\"\n      class=\"justify-self-end\"\n      :style=\"{ gridTemplate: 'actions' }\"\n    />\n\n    <TicketInformation\n      :hide-details=\"hideDetails\"\n      :style=\"{ gridArea: hideDetails ? 'breadcrumbs' : 'info' }\"\n      :class=\"{ 'mx-10': !hideDetails }\"\n    />\n  </header>\n</template>\n\n<style scoped>\n.ticket-detail-grid-full {\n  grid-template-areas:\n    'breadcrumbs actions'\n    'info   info';\n}\n\n.ticket-detail-grid-compact {\n  grid-template-areas: 'breadcrumbs actions';\n}\n</style>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { useTouchDevice } from '#shared/composables/useTouchDevice.ts'\nimport { useTicketChannel } from '#shared/entities/ticket/composables/useTicketChannel.ts'\nimport { useTicketView } from '#shared/entities/ticket/composables/useTicketView.ts'\n\nimport TopBarHeader from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TopBarHeader.vue'\nimport { useTicketInformation } from '#desktop/pages/ticket/composables/useTicketInformation.ts'\n\ninterface Props {\n  hideDetails: boolean\n}\n\nconst { hideDetails } = defineProps<Props>()\n\nconst isHovering = defineModel<boolean>('hover', {\n  required: false,\n})\n\nconst { ticket } = useTicketInformation()\nconst { isTicketAgent, isTicketEditable } = useTicketView(ticket)\nconst { hasChannelAlert, channelAlert } = useTicketChannel(ticket)\n\nconst { isTouchDevice } = useTouchDevice()\n\nconst events = computed(() => {\n  if (isTouchDevice.value)\n    return {\n      touchstart() {\n        isHovering.value = true\n      },\n      touchend() {\n        isHovering.value = false\n      },\n    }\n\n  return {\n    mouseenter() {\n      isHovering.value = true\n    },\n    mouseleave() {\n      isHovering.value = false\n    },\n  }\n})\n</script>\n\n<template>\n  <div\n    v-if=\"isTicketAgent && isTicketEditable && hasChannelAlert\"\n    class=\"z-10\"\n    :tabindex=\"hideDetails ? 0 : -1\"\n    v-on=\"events\"\n  >\n    <TopBarHeader :hide-details=\"hideDetails\" />\n\n    <CommonAlert\n      class=\"rounded-none px-14 md:grid-cols-none md:justify-center\"\n      :variant=\"channelAlert?.variant\"\n    >\n      {{ $t(channelAlert?.text, channelAlert?.textPlaceholder) }}\n    </CommonAlert>\n  </div>\n  <TopBarHeader v-else :hide-details=\"hideDetails\" v-on=\"events\" />\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useScroll, useThrottleFn, whenever } from '@vueuse/core'\nimport {\n  computed,\n  onMounted,\n  onActivated,\n  type Ref,\n  ref,\n  type ShallowRef,\n  watch,\n} from 'vue'\n\nimport type { TicketById } from '#shared/entities/ticket/types.ts'\n\nimport type ArticleList from '#desktop/pages/ticket/components/TicketDetailView/ArticleList.vue'\nimport TicketDetailTopBar from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailTopBar/TicketDetailTopBar.vue'\n\nexport const useArticleContainerScroll = (\n  ticket: Ref<TicketById>,\n  contentContainerElement: Readonly<ShallowRef<HTMLDivElement | null>>,\n  articleListInstance: Readonly<\n    ShallowRef<InstanceType<typeof ArticleList> | null>\n  >,\n  topBarInstance: Readonly<\n    ShallowRef<InstanceType<typeof TicketDetailTopBar> | null>\n  >,\n) => {\n  const THROTTLE_TIME = 250\n\n  let hasMounted = false\n\n  const { arrivedState } = useScroll(contentContainerElement, {\n    eventListenerOptions: { passive: true },\n  })\n\n  const isHidingTicketDetails = ref(false)\n  const isReachingBottom = ref(false)\n\n  const previousPosition = ref(0)\n\n  const reset = () => {\n    isReachingBottom.value = false\n    isHidingTicketDetails.value = false\n    previousPosition.value = 0\n  }\n\n  const _isHoveringOnTopBar = ref(false)\n\n  const isHoveringOnTopBar = computed({\n    get: () => _isHoveringOnTopBar.value,\n    set: (value) => {\n      _isHoveringOnTopBar.value = value\n\n      if (value) {\n        isHidingTicketDetails.value = false\n      }\n    },\n  })\n\n  const handleScroll = useThrottleFn((event: Event) => {\n    // Makes sure we always show the details on initial render and reactivated component.\n    if (!hasMounted) {\n      hasMounted = true\n      return\n    }\n\n    const container = event.target! as HTMLDivElement\n\n    const { scrollHeight, clientHeight } = container\n\n    const isScrollable = scrollHeight > clientHeight\n\n    if (!isScrollable) return reset()\n\n    const scrollTop = container.scrollTop ?? 0\n\n    isReachingBottom.value = scrollTop + clientHeight < scrollHeight\n\n    // If we keep the pointer on the top bar we do not want to hide the details if the user starts to scroll on the same time.\n    if (!isHoveringOnTopBar.value) {\n      isHidingTicketDetails.value =\n        scrollTop > (topBarInstance.value?.$el.clientHeight ?? 0)\n    }\n\n    previousPosition.value = scrollTop\n  }, THROTTLE_TIME)\n\n  whenever(\n    () => arrivedState.top,\n    () => {\n      if (isHoveringOnTopBar.value) return\n\n      isHidingTicketDetails.value = false\n    },\n  )\n\n  watch(\n    () => arrivedState.bottom,\n    (value) => {\n      isReachingBottom.value = !value\n    },\n  )\n\n  watch(\n    () => ticket.value?.id,\n    () => {\n      articleListInstance.value?.setDidInitialScroll(false)\n    },\n    { immediate: true },\n  )\n\n  watch(\n    () => articleListInstance.value?.rows,\n    async () => {\n      if (articleListInstance.value?.didScrollInitially) return\n\n      await articleListInstance.value?.scrollToArticle()\n\n      articleListInstance.value?.setDidInitialScroll(true)\n\n      // Normally handleScroll runs after we this, in some edge cases if it is not triggered we reset the states.\n      reset()\n    },\n    { flush: 'post' },\n  )\n\n  // Handling scrolling to bottom if new article is added\n  watch(\n    () => articleListInstance.value?.rows,\n    (newRows, oldRows) => {\n      if (!newRows || !oldRows) return\n\n      if (newRows.at(-1)?.key === oldRows.at(-1)?.key) return\n      // article got removed\n      if (newRows.at(-1)?.key === oldRows.at(-2)?.key) return\n      // article got added\n      articleListInstance.value?.scrollToArticle()\n    },\n  )\n\n  onMounted(() => {\n    hasMounted = false\n    isHidingTicketDetails.value = false\n  })\n\n  onActivated(() => {\n    hasMounted = false\n    isHidingTicketDetails.value = false\n  })\n\n  return {\n    handleScroll,\n    isHoveringOnTopBar,\n    isHidingTicketDetails,\n    isReachingBottom,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed, ref } from 'vue'\n\nimport type { FormRef } from '#shared/components/Form/types.ts'\n\nimport type { Ref, ShallowRef } from 'vue'\n\nexport const useTicketArticleReply = (\n  form: ShallowRef<FormRef | undefined>,\n  initialNewTicketArticlePresent: Ref<boolean | undefined>,\n) => {\n  const localNewTicketArticlePresent = ref<boolean>()\n  // TODO: switching tabs when you added a new article is shortly showing the buttons (because taskbar tab don't has the information yet?)\n  const newTicketArticlePresent = computed({\n    get: () => {\n      if (localNewTicketArticlePresent.value !== undefined)\n        return localNewTicketArticlePresent.value\n\n      return initialNewTicketArticlePresent.value\n    },\n    set: (value) => {\n      localNewTicketArticlePresent.value = value\n    },\n  })\n\n  const articleFormGroupNode = computed(() => {\n    if (!newTicketArticlePresent.value) return undefined\n\n    return form.value?.getNodeByName('article')\n  })\n\n  const isArticleFormGroupValid = computed(() => {\n    return !!articleFormGroupNode.value?.context?.state.valid\n  })\n\n  const showTicketArticleReplyForm = () => {\n    newTicketArticlePresent.value = true\n  }\n\n  return {\n    newTicketArticlePresent,\n    articleFormGroupNode,\n    isArticleFormGroupValid,\n    showTicketArticleReplyForm,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\n\nimport { useTouchDevice } from '#shared/composables/useTouchDevice.ts'\nimport { useTicketArticleReplyAction } from '#shared/entities/ticket/composables/useTicketArticleReplyAction.ts'\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\nimport { createArticleActions } from '#shared/entities/ticket-article/action/plugins/index.ts'\nimport { getArticleSelection } from '#shared/entities/ticket-article/composables/getArticleSelection.ts'\nimport log from '#shared/utils/log.ts'\n\nimport CommonActionMenu from '#desktop/components/CommonActionMenu/CommonActionMenu.vue'\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport type { MenuItem } from '#desktop/components/CommonPopoverMenu/types.ts'\nimport { useTicketInformation } from '#desktop/pages/ticket/composables/useTicketInformation.ts'\n\nconst props = defineProps<{\n  position: 'left' | 'right'\n  article: TicketArticle\n}>()\n\nconst { ticket, isTicketEditable, showTicketArticleReplyForm, form } =\n  useTicketInformation()\n\nconst { isTouchDevice } = useTouchDevice()\n\nconst buttonVariantClassExtension = computed(() => {\n  // TODO maybe general classes string for same classes\n  if (props.position === 'left')\n    return 'border! border-neutral-100! outline-transparent! hover:border-blue-700! hover:border-blue-800! bg-neutral-50! hover:dark:bg-gray-500! hover:bg-white!  text-gray-100! dark:border-gray-900! dark:bg-gray-500! dark:text-neutral-400!'\n\n  return 'border! border-neutral-100! outline-transparent! hover:border-blue-700! dark:hover:border-blue-700! bg-blue-100! bg-blue-100!  text-gray-100! dark:border-gray-900! dark:bg-stone-500! dark:text-neutral-400!'\n})\n\nconst { getNewArticleBody, openReplyForm } = useTicketArticleReplyAction(\n  form,\n  showTicketArticleReplyForm,\n)\n\nconst disposeCallbacks: (() => unknown)[] = []\n\nconst onDispose = (callback: () => unknown) => {\n  disposeCallbacks.push(callback)\n}\n\nconst handleDisposeCallbacks = () => {\n  disposeCallbacks.forEach((callback) => callback())\n  disposeCallbacks.length = 0\n}\n\nconst recalculateTriggerId = ref(0)\n\nconst articleSelection = (articleInternalId: number) => {\n  try {\n    // Can throw RangeError.\n    return getArticleSelection(articleInternalId)\n  } catch (err) {\n    log.error('[Article Quote] Failed to parse article selection', err)\n    return undefined\n  }\n}\n\nconst actions = computed(() => {\n  // Recalculation trigger ID cannot be less than 0, so it's just a hint for Vue to recalculate this computed property.\n  if (!ticket.value || recalculateTriggerId.value < 0) {\n    return {\n      popoverActions: [],\n      alwaysVisibleActions: [],\n    }\n  }\n\n  // Clear all side effects before recalculating actions.\n  handleDisposeCallbacks()\n\n  const articleActions = createArticleActions(\n    ticket.value,\n    props.article,\n    'desktop',\n    {\n      onDispose,\n      recalculate: () => {\n        recalculateTriggerId.value += 1\n      },\n    },\n  )\n\n  const popoverActions: MenuItem[] = []\n  const alwaysVisibleActions: MenuItem[] = []\n\n  articleActions.forEach((action) => {\n    const mappedAction = {\n      key: action.name,\n      label: action.label,\n      icon: action.icon,\n      link: action.link,\n      ...(action?.perform\n        ? {\n            onClick: () => {\n              if (!action?.perform || !ticket.value) return\n\n              action.perform(ticket.value, props.article, {\n                formId: form.value?.formId || '',\n                selection: articleSelection(props.article.internalId),\n                openReplyForm,\n                getNewArticleBody,\n              })\n            },\n          }\n        : {}),\n    }\n\n    if (action.alwaysVisible) {\n      alwaysVisibleActions.push(mappedAction)\n    } else {\n      popoverActions.push(mappedAction)\n    }\n  })\n\n  return {\n    alwaysVisibleActions,\n    popoverActions,\n  }\n})\n</script>\n\n<template>\n  <div\n    v-if=\"isTicketEditable\"\n    class=\"absolute bottom-0 flex w-fit translate-y-1/2 items-center gap-1 ltr:right-3 rtl:left-3\"\n    :class=\"{ 'ltr:left-3 rtl:right-3': position === 'left' }\"\n  >\n    <div\n      v-for=\"action in actions.alwaysVisibleActions\"\n      :key=\"action.key\"\n      data-test-id=\"top-level-article-action-container\"\n      class=\"order-1 flex items-center\"\n      :class=\"{\n        '-order-1!': position === 'right',\n        'opacity-0 transition-opacity group-hover/article:opacity-100 focus-within:opacity-100':\n          !isTouchDevice,\n      }\"\n    >\n      <CommonButton\n        class=\"px-1 py-0.5! text-xs! focus-visible:outline-offset-0! focus-visible:outline-blue-800!\"\n        :class=\"[buttonVariantClassExtension]\"\n        :prefix-icon=\"action.icon\"\n        size=\"large\"\n        @click=\"action.onClick\"\n        >{{ $t(action.label) }}\n      </CommonButton>\n    </div>\n\n    <CommonActionMenu\n      class=\"flex!\"\n      :no-padded-default-button=\"false\"\n      no-small-rounding-default-button\n      :entity=\"{ ticket, article }\"\n      button-size=\"medium\"\n      :placement=\"position === 'left' ? 'arrowStart' : 'arrowEnd'\"\n      :default-button-variant=\"\n        position === 'left' ? 'neutral-dark' : 'neutral-light'\n      \"\n      :actions=\"actions.popoverActions\"\n      no-single-action-mode\n    />\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport CommonIcon from '#shared/components/CommonIcon/CommonIcon.vue'\nimport { useEmailFileUrls } from '#shared/composables/useEmailFileUrls.ts'\nimport type { TicketArticle } from '#shared/entities/ticket/types'\n\nimport { useTicketInformation } from '#desktop/pages/ticket/composables/useTicketInformation.ts'\n\ninterface Props {\n  article: TicketArticle\n}\n\nconst props = defineProps<Props>()\n\nconst { ticketInternalId } = useTicketInformation()\n\nconst { originalFormattingUrl } = useEmailFileUrls(\n  props.article,\n  ticketInternalId,\n)\n</script>\n\n<template>\n  <div\n    v-if=\"article.preferences?.remote_content_removed\"\n    class=\"flex flex-row gap-1 p-3\"\n    role=\"alert\"\n  >\n    <CommonIcon class=\"shrink-0\" name=\"exclamation-triangle\" size=\"small\" />\n    <CommonLabel class=\"block!\">\n      {{\n        $t(\n          'This message contains images or other content hosted by an external source. It was blocked, but you can download the original formatting.',\n        )\n      }}\n      <br />\n      <CommonLink\n        v-if=\"originalFormattingUrl\"\n        :link=\"originalFormattingUrl\"\n        size=\"medium\"\n        target=\"_blank\"\n      >\n        {{ $t('Original Formatting') }}\n      </CommonLink>\n    </CommonLabel>\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef, watch, nextTick, onMounted } from 'vue'\n\nimport { useArticleToggleMore } from '#shared/composables/useArticleToggleMore.ts'\nimport { useHtmlInlineImages } from '#shared/composables/useHtmlInlineImages.ts'\nimport { useHtmlLinks } from '#shared/composables/useHtmlLinks.ts'\nimport { type ImageViewerFile } from '#shared/composables/useImageViewer.ts'\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\nimport { textToHtml } from '#shared/utils/helpers.ts'\n\ninterface Props {\n  article: TicketArticle\n  showMetaInformation: boolean\n  position: 'left' | 'right'\n  inlineImages: ImageViewerFile[]\n}\n\nconst props = defineProps<Props>()\n\nconst emit = defineEmits<{\n  preview: [image: ImageViewerFile]\n}>()\n\nconst { shownMore, bubbleElement, hasShowMore, toggleShowMore } =\n  useArticleToggleMore()\n\nconst bodyClasses = computed(() =>\n  props.position === 'right'\n    ? ['dark:bg-stone-500', 'bg-blue-100', 'Content--customer']\n    : ['dark:bg-gray-400', 'bg-white', 'Content--agent'],\n)\n\nconst body = computed(() => {\n  if (props.article.contentType !== 'text/html') {\n    return textToHtml(props.article.bodyWithUrls)\n  }\n  return props.article.bodyWithUrls\n})\n\nconst showAuthorInformation = computed(() => {\n  const author = props.article.author.fullname // `-` => system message\n  return (\n    !props.showMetaInformation && author !== '-' && (author?.length ?? 0) > 0\n  )\n})\n\nconst { setupLinksHandlers } = useHtmlLinks('/desktop')\nconst { populateInlineImages } = useHtmlInlineImages(\n  toRef(props, 'inlineImages'),\n  (index) => emit('preview', props.inlineImages[index]),\n)\n\nwatch(\n  () => body,\n  async () => {\n    await nextTick()\n    if (bubbleElement.value) {\n      setupLinksHandlers(bubbleElement.value)\n      populateInlineImages(bubbleElement.value)\n    }\n  },\n)\n\nonMounted(() => {\n  if (bubbleElement.value) {\n    setupLinksHandlers(bubbleElement.value)\n    populateInlineImages(bubbleElement.value)\n  }\n})\n</script>\n\n<template>\n  <div\n    class=\"Content relative p-3 transition-[padding]\"\n    :class=\"[\n      bodyClasses,\n      {\n        'pt-3!': showMetaInformation,\n        'pt-9!': showAuthorInformation,\n      },\n    ]\"\n  >\n    <div\n      v-if=\"showAuthorInformation\"\n      class=\"absolute top-3 flex w-full px-3 ltr:left-0 rtl:right-0\"\n      role=\"group\"\n      aria-describedby=\"author-name-and-creation-date\"\n    >\n      <p id=\"author-name-and-creation-date\" class=\"sr-only\">\n        {{ $t('Author name and article creation date') }}\n      </p>\n\n      <CommonLabel class=\"font-bold\" size=\"small\" variant=\"neutral\">\n        {{ article.author.fullname }}\n      </CommonLabel>\n\n      <CommonDateTime\n        class=\"text-xs ltr:ml-auto rtl:mr-auto\"\n        :date-time=\"article.createdAt\"\n      />\n    </div>\n\n    <div\n      ref=\"bubbleElement\"\n      data-test-id=\"article-content\"\n      class=\"overflow-hidden text-sm\"\n    >\n      <!--    eslint-disable vue/no-v-html-->\n      <div class=\"inner-article-body\" v-html=\"body\" />\n    </div>\n    <div\n      v-if=\"hasShowMore\"\n      class=\"relative\"\n      :class=\"{\n        BubbleGradient: hasShowMore && !shownMore,\n      }\"\n    />\n    <CommonLink\n      v-if=\"hasShowMore\"\n      class=\"mb-1 inline-block! outline-transparent! hover:no-underline! focus-visible:outline-blue-800!\"\n      role=\"button\"\n      link=\"#\"\n      size=\"medium\"\n      @click.prevent=\"toggleShowMore\"\n      @keydown.enter.prevent=\"toggleShowMore\"\n    >\n      {{ shownMore ? $t('See less') : $t('See more') }}\n    </CommonLink>\n  </div>\n</template>\n\n<style scoped>\n/*\n * Currently, we only set the style for img and svg elements.\n * If necessary, this may need to be extended with other elements listed bellow.\n *\n * Relevant elements include:\n * - img, svg, canvas, audio, iframe, embed, object\n *\n * These elements inherit a `display: block` style from the root stylesheet.\n */\n.inner-article-body {\n  :deep(img, svg) {\n    display: inline;\n  }\n}\n\n.BubbleGradient::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 46px;\n  pointer-events: none;\n}\n\n.Content--agent .BubbleGradient::before {\n  background: linear-gradient(rgba(255, 255, 255, 0), var(--color-white));\n}\n\n[data-theme='dark'] .Content--agent .BubbleGradient::before {\n  background: linear-gradient(rgba(255, 255, 255, 0), var(--color-gray-400));\n}\n\n.Content--customer .BubbleGradient::before {\n  background: linear-gradient(rgba(255, 255, 255, 0), var(--color-blue-100));\n}\n\n[data-theme='dark'] .Content--customer .BubbleGradient::before {\n  background: linear-gradient(rgba(255, 255, 255, 0), var(--color-stone-500));\n}\n</style>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, toRef } from 'vue'\n\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\nimport { useTicketArticleRetryMediaDownload } from '#shared/entities/ticket-article/composables/useTicketArticleRetryMediaDownload.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\n\ninterface Props {\n  article: TicketArticle\n}\n\nconst props = defineProps<Props>()\n\nconst hasError = computed(() => props.article.mediaErrorState?.error)\n\nconst { loading, tryAgain } = useTicketArticleRetryMediaDownload(\n  toRef(props.article, 'id'),\n)\n\nconst retryDownload = async () => {\n  try {\n    await tryAgain()\n  } catch {\n    // no-op\n  }\n}\n</script>\n\n<template>\n  <CommonAlert v-if=\"hasError\" class=\"rounded-none\" variant=\"warning\">\n    <div>\n      <h2>{{ $t('Failed to load content.') }}</h2>\n      <CommonButton\n        class=\"p-0! text-current! underline hover:outline-transparent dark:hover:outline-transparent\"\n        size=\"medium\"\n        transparent-background\n        :disabled=\"loading\"\n        @click=\"retryDownload\"\n      >\n        {{ $t('Retry Attachment Download') }}\n      </CommonButton>\n    </div>\n  </CommonAlert>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport { useArticleSecurity } from '#shared/composables/useArticleSecurity.ts'\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\n\ninterface Props {\n  article: TicketArticle\n}\n\nconst props = defineProps<Props>()\n\nconst { signingIcon, encryptionIcon, hasError } = useArticleSecurity(\n  toRef(props.article),\n)\n</script>\n\n<template>\n  <div\n    v-if=\"article.securityState && !hasError\"\n    role=\"list\"\n    class=\"flex gap-3 p-3 dark:bg-gray-500\"\n  >\n    <CommonIcon size=\"xs\" role=\"listitem\" :name=\"encryptionIcon\" />\n    <CommonIcon size=\"xs\" role=\"listitem\" :name=\"signingIcon\" />\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport { useArticleSecurity } from '#shared/composables/useArticleSecurity.ts'\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\n\ninterface Props {\n  article: TicketArticle\n}\n\nconst props = defineProps<Props>()\n\nconst { hasError, signingMessage, encryptionMessage, retrySecurityProcess } =\n  useArticleSecurity(toRef(props.article))\n</script>\n\n<template>\n  <CommonAlert v-if=\"hasError\" class=\"rounded-none\" variant=\"warning\">\n    <div>\n      <h2>{{ $t('Security Error') }}</h2>\n      <p v-if=\"signingMessage\">{{ $t('Sign:') }} {{ signingMessage }}</p>\n      <p v-if=\"encryptionMessage\">\n        {{ $t('Encryption:') }} {{ encryptionMessage }}\n      </p>\n      <p v-if=\"!signingMessage && !encryptionMessage\" class=\"block\">\n        {{ $t('No security information available.') }}\n      </p>\n      <CommonButton\n        class=\"p-0! text-current! underline hover:outline-transparent dark:hover:outline-transparent\"\n        size=\"medium\"\n        transparent-background\n        @click=\"retrySecurityProcess\"\n        >{{ $t('Retry Security Process') }}</CommonButton\n      >\n    </div>\n  </CommonAlert>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { useTimeout } from '@vueuse/core'\nimport { ref } from 'vue'\n\nexport const useBubbleHeader = () => {\n  const showMetaInformation = ref(false)\n\n  const isInteractiveTarget = (target: HTMLElement) => {\n    if (!target) return false\n\n    const interactiveElements = new Set(['A', 'BUTTON'])\n\n    // Parent interactive or traversed nodes\n    const hasInteractiveElements = target.closest(\n      Array.from(interactiveElements).join(','),\n    )\n\n    return interactiveElements.has(target.tagName) || hasInteractiveElements\n  }\n\n  const hasSelectionRange = (target: HTMLElement) => {\n    if (!target) return false\n\n    const selection = window.getSelection()\n    if (!selection || selection.type !== 'Range') return false\n\n    return true\n  }\n\n  const { start, stop } = useTimeout(200, {\n    controls: true,\n    callback: () => {\n      showMetaInformation.value = !showMetaInformation.value\n    },\n    immediate: false,\n  })\n\n  const toggleHeader = async (event: MouseEvent) => {\n    stop()\n\n    if (\n      event.detail === 2 || // Double-click\n      isInteractiveTarget(event.target as HTMLElement) ||\n      hasSelectionRange(event.target as HTMLElement)\n    )\n      return\n\n    start()\n  }\n\n  return {\n    showMetaInformation,\n    toggleHeader,\n  }\n}\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { computed, type ComputedRef } from 'vue'\n\nexport const useBubbleStyleGuide = (\n  position: ComputedRef<'left' | 'right'>,\n  isArticleTypeNote: ComputedRef<boolean>,\n) => {\n  const bodyClasses = computed(() =>\n    position.value === 'right'\n      ? ['dark:bg-stone-500', 'bg-blue-100']\n      : ['dark:bg-gray-400', 'bg-neutral-100'],\n  )\n\n  const dividerClass = computed(() => {\n    if (position.value === 'right')\n      return 'border-t border-t-neutral-100 dark:border-t-gray-900'\n\n    return 'border-t border-t-neutral-300 dark:border-t-gray-900'\n  })\n\n  const frameBorderClass = computed(() => {\n    if (isArticleTypeNote.value) return ''\n\n    if (position.value === 'right')\n      return 'border border-neutral-100 dark:border-gray-900'\n\n    return 'border border-neutral-300 dark:border-gray-900'\n  })\n\n  const headerAndIconBarBackgroundClass = computed(() =>\n    position.value === 'right'\n      ? ['dark:bg-stone-700', 'bg-blue-300']\n      : ['dark:bg-gray-500', 'bg-neutral-50'],\n  )\n\n  // We need this class otherwise on a transition the edges of children are shown\n  const articleWrapperBorderClass = computed(() =>\n    position.value === 'right'\n      ? 'ltr:rounded-br-none rtl:rounded-bl-none'\n      : 'ltr:rounded-bl-none rtl:rounded-br-none',\n  )\n\n  const internalNoteClass = computed(() => {\n    if (!isArticleTypeNote.value) return ''\n\n    // Uses `.bg-stripes` class which is defined in `app/frontend/apps/desktop/styles/main.css`.\n    return position.value === 'right'\n      ? 'bg-stripes before:rounded-2xl relative z-0 rounded-xl outline outline-1 outline-blue-700 ltr:rounded-br-none rtl:rounded-bl-none ltr:before:rounded-br-none rtl:before:rounded-bl-none'\n      : 'bg-stripes before:rounded-2xl relative z-0 rounded-xl outline outline-1 outline-blue-700 ltr:rounded-bl-none rtl:rounded-br-none ltr:before:rounded-bl-none rtl:before:rounded-br-none'\n  })\n\n  return {\n    bodyClasses,\n    dividerClass,\n    frameBorderClass,\n    headerAndIconBarBackgroundClass,\n    articleWrapperBorderClass,\n    internalNoteClass,\n  }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, defineAsyncComponent, ref } from 'vue'\n\nimport CommonUserAvatar from '#shared/components/CommonUserAvatar/CommonUserAvatar.vue'\nimport { useAttachments } from '#shared/composables/useAttachments.ts'\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\nimport { EnumTicketArticleSenderName } from '#shared/graphql/types.ts'\n\nimport {\n  useFilePreviewViewer,\n  type ViewerFile,\n} from '#desktop/composables/useFilePreviewViewer.ts'\nimport ArticleBubbleActionList from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleActionList.vue'\nimport ArticleBubbleBlockedContentWarning from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleBlockedContentWarning.vue'\nimport ArticleBubbleBody from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleBody.vue'\nimport ArticleBubbleFooter from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleFooter.vue'\nimport ArticleBubbleMediaError from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleMediaError.vue'\nimport ArticleBubbleSecurityStatusBar from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleSecurityStatusBar.vue'\nimport ArticleBubbleSecurityWarning from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleSecurityWarning.vue'\nimport { useBubbleHeader } from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/useBubbleHeader.ts'\nimport { useBubbleStyleGuide } from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/useBubbleStyleGuide.ts'\nimport ArticleReactionBadge from '#desktop/pages/ticket/components/TicketDetailView/ArticleReactionBadge.vue'\n\nconst ArticleBubbleHeader = defineAsyncComponent(\n  () =>\n    import(\n      '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubbleHeader.vue'\n    ),\n)\n\ninterface Props {\n  article: TicketArticle\n}\n\nconst props = defineProps<Props>()\n\nconst { showMetaInformation, toggleHeader } = useBubbleHeader()\n\nconst position = computed(() => {\n  switch (props.article.sender?.name) {\n    case EnumTicketArticleSenderName.Customer:\n      return 'right'\n    case EnumTicketArticleSenderName.System:\n      return 'left'\n    case EnumTicketArticleSenderName.Agent:\n      return 'left'\n    default:\n      return 'left'\n  }\n})\n\nconst hasInternalNote = computed(\n  () =>\n    (props.article.type?.name === 'note' && props.article.internal) ||\n    props.article.internal,\n)\n\nconst {\n  frameBorderClass,\n  dividerClass,\n  bodyClasses,\n  headerAndIconBarBackgroundClass,\n  articleWrapperBorderClass,\n  internalNoteClass,\n} = useBubbleStyleGuide(position, hasInternalNote)\n\nconst filteredAttachments = computed(() => {\n  return props.article.attachmentsWithoutInline.filter(\n    (file) => !file.preferences || !file.preferences['original-format'],\n  )\n})\n\nconst { attachments: articleAttachments } = useAttachments({\n  attachments: filteredAttachments,\n})\n\nconst inlineImages = ref<ViewerFile[]>([])\n\nconst { showPreview } = useFilePreviewViewer(\n  computed(() => [...inlineImages.value, ...articleAttachments.value]),\n)\n</script>\n\n<template>\n  <div\n    class=\"group/article relative rounded-t-xl backface-hidden\"\n    :data-test-id=\"`article-bubble-container-${article.internalId}`\"\n    :class=\"[\n      {\n        'ltr:rounded-bl-xl rtl:rounded-br-xl': position === 'right',\n        'ltr:rounded-br-xl rtl:rounded-bl-xl': position === 'left',\n      },\n      frameBorderClass,\n      internalNoteClass,\n    ]\"\n  >\n    <CommonUserAvatar\n      class=\"!absolute bottom-0\"\n      :class=\"{\n        'ltr:-right-2.5 ltr:translate-x-full rtl:-left-2.5 rtl:-translate-x-full':\n          position === 'right',\n        'ltr:-left-2.5 ltr:-translate-x-full rtl:-right-2.5 rtl:translate-x-full':\n          position === 'left',\n      }\"\n      :entity=\"article.author\"\n      size=\"small\"\n      no-indicator\n    />\n\n    <div\n      class=\"grid w-full grid-rows-[0fr] overflow-hidden rounded-xl transition-[grid-template-rows]\"\n      :class=\"[\n        {\n          'grid-rows-[1fr]': showMetaInformation,\n        },\n        articleWrapperBorderClass,\n      ]\"\n    >\n      <div\n        :aria-hidden=\"!showMetaInformation\"\n        class=\"grid w-full grid-rows-[0fr] overflow-hidden\"\n      >\n        <Transition name=\"pseudo-transition\">\n          <ArticleBubbleHeader\n            v-if=\"showMetaInformation\"\n            :aria-label=\"$t('Article meta information')\"\n            :class=\"headerAndIconBarBackgroundClass\"\n            :show-meta-information=\"showMetaInformation\"\n            :position=\"position\"\n            :article=\"article\"\n          />\n        </Transition>\n      </div>\n\n      <ArticleBubbleSecurityStatusBar\n        v-if=\"!showMetaInformation\"\n        :class=\"[\n          headerAndIconBarBackgroundClass,\n          showMetaInformation ? dividerClass : '',\n        ]\"\n        :article=\"article\"\n      />\n\n      <ArticleBubbleSecurityWarning :article=\"article\" />\n      <ArticleBubbleMediaError :article=\"article\" />\n\n      <ArticleBubbleBody\n        tabindex=\"0\"\n        :data-test-id=\"`article-bubble-body-${article.internalId}`\"\n        class=\"last:rounded-b-xl focus:outline-hidden focus-visible:outline focus-visible:-outline-offset-1 focus-visible:outline-blue-800\"\n        :class=\"[\n          bodyClasses,\n          {\n            'pt-3': showMetaInformation,\n            '[&:nth-child(2)]:rounded-t-xl': !showMetaInformation,\n            'rtl:rounded-br-none [&:nth-child(2)]:ltr:rounded-br-none':\n              position === 'right',\n            'rtl:rounded-br-none [&:nth-child(2)]:ltr:rounded-bl-none':\n              position === 'left',\n          },\n        ]\"\n        :position=\"position\"\n        :show-meta-information=\"showMetaInformation\"\n        :inline-images=\"inlineImages\"\n        :article=\"article\"\n        @click=\"toggleHeader\"\n        @keydown.enter=\"toggleHeader\"\n        @preview=\"showPreview('image', $event)\"\n      />\n\n      <ArticleBubbleBlockedContentWarning\n        :class=\"[\n          dividerClass,\n          bodyClasses,\n          {\n            'pt-3': showMetaInformation,\n          },\n        ]\"\n        :article=\"article\"\n      />\n\n      <ArticleBubbleFooter\n        :article=\"article\"\n        :article-attachments=\"articleAttachments\"\n        @preview=\"showPreview\"\n      />\n    </div>\n\n    <ArticleBubbleActionList :article=\"article\" :position=\"position\" />\n\n    <ArticleReactionBadge\n      :position=\"position\"\n      :reaction=\"article.preferences?.whatsapp?.reaction?.emoji\"\n    />\n  </div>\n</template>\n","// Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/\n\nimport { controlledComputed } from '@vueuse/shared'\n\nimport type { TicketArticle } from '#shared/entities/ticket/types.ts'\n\nimport type { Ref } from 'vue'\n\ninterface ArticleRow {\n  type: 'article-bubble'\n  article: TicketArticle\n}\n\ninterface ArticleDeliveryRow {\n  type: 'delivery'\n  content: string\n}\n\ninterface MoreRow {\n  type: 'more'\n  count: number\n}\n\ninterface SystemRaw {\n  type: 'system'\n  subject?: Maybe<string>\n  to?: Maybe<string>\n  reaction?: Maybe<string>\n}\n\nexport type TicketArticleRow = (\n  | ArticleRow\n  | SystemRaw\n  | MoreRow\n  | ArticleDeliveryRow\n) & {\n  key: string\n}\n\nexport const useTicketArticleRows = (\n  articles: Ref<TicketArticle[]>,\n  leadingNodesCount: Ref<number>,\n  totalCount: Ref<number>,\n) => {\n  const rows = controlledComputed(articles, () => {\n    const needMoreButton = articles.value.length < totalCount.value\n\n    return articles.value.reduce((memo, article, index) => {\n      if (article.preferences?.delivery_message) {\n        memo.push({\n          type: 'delivery',\n          content: article.bodyWithUrls,\n          key: article.internalId.toString(),\n        })\n      } else if (\n        article.sender?.name === 'System' &&\n        article.type?.name !== 'note'\n      ) {\n        memo.push({\n          type: 'system',\n          subject: article.subject,\n          to: article.to?.raw || '',\n          reaction: article.preferences?.whatsapp?.reaction?.emoji,\n          key: article.internalId.toString(),\n        })\n      } else {\n        memo.push({\n          type: 'article-bubble',\n          article,\n          key: article.internalId.toString(),\n        })\n      }\n\n      if (index === leadingNodesCount.value - 1 && needMoreButton) {\n        memo.push({\n          type: 'more',\n          key: 'more',\n\n          count: totalCount.value - articles.value.length,\n        })\n      }\n      return memo\n    }, [] as TicketArticleRow[])\n  })\n  return { rows }\n}\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { unionBy } from 'lodash-es'\nimport { computed, ref } from 'vue'\nimport { useRoute } from 'vue-router'\n\nimport { edgesToArray, waitForElement } from '#shared/utils/helpers.ts'\n\nimport ArticleBubble from '#desktop/pages/ticket/components/TicketDetailView/ArticleBubble/ArticleBubble.vue'\nimport ArticleMore from '#desktop/pages/ticket/components/TicketDetailView/ArticleMore.vue'\nimport DeliveryMessage from '#desktop/pages/ticket/components/TicketDetailView/DeliveryMessage.vue'\nimport SystemMessage from '#desktop/pages/ticket/components/TicketDetailView/SystemMessage.vue'\nimport { useArticleContext } from '#desktop/pages/ticket/composables/useArticleContext.ts'\nimport { useTicketArticleRows } from '#desktop/pages/ticket/composables/useTicketArticlesRows.ts'\n\nconst route = useRoute()\nconst { context } = useArticleContext()\n\nconst totalCount = computed(\n  () => context.articles.value?.articles.totalCount || 0,\n)\n\nconst leadingNodesCount = computed(\n  () => edgesToArray(context.articles.value?.firstArticles).length,\n)\n\nconst articles = computed(() => {\n  if (!context.articles.value) {\n    return []\n  }\n  const leadingNodes = edgesToArray(context.articles.value.firstArticles)\n  const trailingNodes = edgesToArray(context.articles.value.articles)\n\n  return unionBy(leadingNodes, trailingNodes, (elem) => elem.id)\n})\n\nconst { rows } = useTicketArticleRows(articles, leadingNodesCount, totalCount)\n\nconst loadPrevious = async () => {\n  await context.articlesQuery.fetchMore({\n    variables: {\n      pageSize: 100,\n      loadFirstArticles: false,\n      beforeCursor: context.articles.value?.articles.pageInfo.startCursor,\n    },\n  })\n}\n\nconst isLoading = computed(() => context.articlesQuery.loading().value)\n\nconst getArticleElement = async (key: string): Promise<Element | null> => {\n  const row = rows.value.find(\n    (elem) =>\n      'article' in elem && elem.article.internalId === parseInt(key, 10),\n  )\n\n  if (!row) return Promise.resolve(null)\n\n  return waitForElement(`#article-${row.key}`)\n}\n\nconst hasMoreButton = computed(() => {\n  return !!rows.value.find((elem) => elem.type === 'more')\n})\n\nconst getPreviousArticleElement = async (\n  key: string,\n): Promise<Element | null> => {\n  const elem = await getArticleElement(key)\n\n  if (elem || !hasMoreButton.value) return elem\n\n  await loadPrevious()\n  return getPreviousArticleElement(key)\n}\n\nconst scrollToArticle = async () => {\n  let targetElement\n  if (route.hash) {\n    const articleInternalId = route.hash?.replace('#article-', '')\n\n    targetElement = await getPreviousArticleElement(articleInternalId)\n  }\n\n  if (!targetElement) {\n    const targetRow = rows.value[rows.value.length - 1]\n\n    targetElement = await waitForElement(`#article-${targetRow?.key}`)\n  }\n\n  if (!targetElement) return false\n\n  targetElement?.scrollIntoView({ behavior: 'instant', block: 'start' })\n}\n\nconst didScrollInitially = ref(false)\n\nconst setDidInitialScroll = (value: boolean) => {\n  didScrollInitially.value = value\n}\n\ndefineExpose({\n  scrollToArticle,\n  rows,\n  didScrollInitially,\n  setDidInitialScroll,\n})\n</script>\n\n<template>\n  <section\n    v-if=\"context.articles.value?.articles.edges && rows\"\n    role=\"feed\"\n    class=\"mx-auto w-full max-w-6xl space-y-10 px-12 py-4\"\n  >\n    <article\n      v-for=\"(row, rowIndex) in rows\"\n      :id=\"`article-${row.key}`\"\n      :key=\"row.key\"\n      :aria-setsize=\"totalCount\"\n      :aria-posinset=\"rowIndex + 1\"\n    >\n      <ArticleBubble\n        v-if=\"row.type === 'article-bubble'\"\n        :article=\"row.article\"\n      />\n      <ArticleMore\n        v-else-if=\"row.type === 'more'\"\n        :disabled=\"isLoading\"\n        @click=\"loadPrevious()\"\n      />\n      <DeliveryMessage\n        v-else-if=\"row.type === 'delivery' && row.content\"\n        role=\"article\"\n        :content=\"row.content\"\n      />\n      <SystemMessage\n        v-else-if=\"row.type === 'system' && row.subject\"\n        role=\"article\"\n        :subject=\"row.subject\"\n        :to=\"row.to\"\n        :reaction=\"row.reaction\"\n      />\n    </article>\n  </section>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { useActiveElement, useLocalStorage, useWindowSize } from '@vueuse/core'\nimport { computed, nextTick, ref, watch, type MaybeRef } from 'vue'\n\nimport type { TicketById } from '#shared/entities/ticket/types'\nimport type { AppSpecificTicketArticleType } from '#shared/entities/ticket-article/action/plugins/types.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\nimport type { ButtonVariant } from '#shared/types/button.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport ResizeLine from '#desktop/components/ResizeLine/ResizeLine.vue'\nimport { useResizeLine } from '#desktop/components/ResizeLine/useResizeLine.ts'\nimport { useElementScroll } from '#desktop/composables/useElementScroll.ts'\n\ninterface Props {\n  ticket: TicketById\n  newArticlePresent?: boolean\n  createArticleType?: string | null\n  ticketArticleTypes: AppSpecificTicketArticleType[]\n  isTicketCustomer?: boolean\n  hasInternalArticle?: boolean\n  parentReachedBottomScroll: boolean\n}\n\nconst props = defineProps<Props>()\n\ndefineEmits<{\n  'show-article-form': [\n    articleType: string,\n    performReply: AppSpecificTicketArticleType['performReply'],\n  ]\n  'discard-form': []\n}>()\n\nconst currentTicketArticleType = computed(() => {\n  if (props.isTicketCustomer) return 'web'\n  if (props.createArticleType === 'phone') return 'email'\n  return props.createArticleType\n})\n\nconst allowedArticleTypes = computed(() => {\n  return ['note', 'phone', currentTicketArticleType.value]\n})\n\nconst availableArticleTypes = computed(() => {\n  const availableArticleTypes = props.ticketArticleTypes.filter((type) =>\n    allowedArticleTypes.value.includes(type.value),\n  )\n\n  const hasEmail = availableArticleTypes.some((type) => type.value === 'email')\n\n  let primaryTicketArticleType = currentTicketArticleType.value\n  if (availableArticleTypes.length === 2) {\n    primaryTicketArticleType = props.createArticleType\n  }\n\n  return availableArticleTypes.map((type) => {\n    return {\n      articleType: type.value,\n      label:\n        primaryTicketArticleType === type.value && hasEmail\n          ? __('Add reply')\n          : type.buttonLabel,\n      icon: type.icon,\n      variant:\n        primaryTicketArticleType === type.value ||\n        (type.value === 'phone' &&\n          !hasEmail &&\n          availableArticleTypes.length === 2)\n          ? 'primary'\n          : 'secondary',\n      performReply: (() =>\n        type.performReply?.(\n          props.ticket,\n        )) as AppSpecificTicketArticleType['performReply'],\n    }\n  })\n})\n\nconst pinned = defineModel<boolean>('pinned')\n\nconst togglePinned = () => {\n  pinned.value = !pinned.value\n}\n\nconst articlePanel = ref<HTMLElement>()\n\n// Scroll the new article panel into view whenever:\n//   - an article is being added\n//   - the panel is being unpinned\nwatch(\n  () => [props.newArticlePresent, pinned.value],\n  ([newArticlePresent, newPinned]) => {\n    if (!newArticlePresent || newPinned) return\n\n    nextTick(() => {\n      // NB: Give editor a chance to initialize its height.\n      setTimeout(() => {\n        articlePanel.value?.scrollIntoView?.(true)\n      }, 300)\n    })\n  },\n)\n\n// Reset the pinned state whenever the article is removed.\nwatch(\n  () => props.newArticlePresent,\n  (newArticlePresent) => {\n    if (newArticlePresent) return\n\n    pinned.value = false\n  },\n)\n\nconst DEFAULT_ARTICLE_PANEL_HEIGHT = 290\nconst MINIMUM_ARTICLE_PANEL_HEIGHT = 150\n\nconst { userId } = useSessionStore()\n\nconst articlePanelHeight = useLocalStorage(\n  `${userId}-article-reply-height`,\n  DEFAULT_ARTICLE_PANEL_HEIGHT,\n)\n\nconst { height: screenHeight } = useWindowSize()\n\nconst articlePanelMaxHeight = computed(() => screenHeight.value / 2)\n\nconst resizeLine = ref<InstanceType<typeof ResizeLine>>()\n\nconst resizeCallback = (valueY: number) => {\n  if (\n    valueY >= articlePanelMaxHeight.value ||\n    valueY < MINIMUM_ARTICLE_PANEL_HEIGHT\n  )\n    return\n\n  articlePanelHeight.value = valueY\n}\n\n// a11y keyboard navigation\nconst activeElement = useActiveElement()\n\nconst handleKeyStroke = (e: KeyboardEvent, adjustment: number) => {\n  if (\n    !articlePanelHeight.value ||\n    activeElement.value !== resizeLine.value?.resizeLine\n  )\n    return\n\n  e.preventDefault()\n\n  const newHeight = articlePanelHeight.value + adjustment\n\n  if (newHeight >= articlePanelMaxHeight.value) return\n\n  resizeCallback(newHeight)\n}\n\nconst { startResizing } = useResizeLine(\n  resizeCallback,\n  resizeLine.value?.resizeLine,\n  handleKeyStroke,\n  { orientation: 'horizontal', offsetThreshold: 56 }, // bottom bar height in px\n)\n\nconst resetHeight = () => {\n  articlePanelHeight.value = DEFAULT_ARTICLE_PANEL_HEIGHT\n}\n\nconst articleForm = ref<HTMLElement>()\n\nconst { reachedTop: articleFormReachedTop } = useElementScroll(\n  articleForm as MaybeRef<HTMLElement>,\n)\n\ndefineExpose({\n  articlePanel,\n})\n</script>\n\n<template>\n  <div\n    v-if=\"newArticlePresent\"\n    ref=\"articlePanel\"\n    class=\"relative mx-auto flex w-full flex-col\"\n    :class=\"{\n      'max-w-6xl px-12 py-4': !pinned,\n      'sticky bottom-0 z-20 overflow-hidden border-t border-t-neutral-300 bg-neutral-50 dark:border-t-gray-900 dark:bg-gray-500':\n        pinned,\n    }\"\n    :style=\"{\n      height: pinned ? `${articlePanelHeight}px` : 'auto',\n    }\"\n    aria-labelledby=\"article-reply-form-title\"\n    role=\"complementary\"\n    :aria-expanded=\"!pinned\"\n    v-bind=\"$attrs\"\n  >\n    <ResizeLine\n      v-if=\"pinned\"\n      ref=\"resizeLine\"\n      class=\"group absolute top-0 z-10 h-3 w-full\"\n      :label=\"$t('Resize article panel')\"\n      orientation=\"horizontal\"\n      :values=\"{\n        max: articlePanelMaxHeight,\n        min: MINIMUM_ARTICLE_PANEL_HEIGHT,\n        current: articlePanelHeight,\n      }\"\n      @mousedown-event=\"startResizing\"\n      @touchstart-event=\"startResizing\"\n      @dblclick=\"resetHeight\"\n    />\n    <div\n      class=\"flex h-full grow flex-col\"\n      data-test-id=\"article-reply-stripes-panel\"\n      :class=\"{\n        'bg-stripes relative z-0 rounded-xl outline-1 outline-blue-700 before:rounded-2xl':\n          hasInternalArticle && !pinned,\n        'border-stripes': hasInternalArticle && pinned,\n      }\"\n    >\n      <div\n        class=\"isolate flex h-full grow flex-col\"\n        :class=\"{\n          'rounded-xl border border-neutral-300 bg-neutral-50 dark:border-gray-900 dark:bg-gray-500':\n            !pinned,\n        }\"\n      >\n        <div\n          class=\"flex h-10 items-center p-3\"\n          :class=\"{\n            'bg-neutral-50 dark:bg-gray-500': pinned,\n            'border-b border-b-transparent': pinned && articleFormReachedTop,\n            'border-b border-b-neutral-300 dark:border-b-gray-900':\n              pinned && !articleFormReachedTop,\n          }\"\n        >\n          <CommonLabel\n            id=\"article-reply-form-title\"\n            class=\"text-stone-200 ltr:mr-auto rtl:ml-auto dark:text-neutral-500\"\n            tag=\"h2\"\n            size=\"small\"\n          >\n            {{ $t('Reply') }}\n          </CommonLabel>\n          <CommonButton\n            v-tooltip=\"$t('Discard unsaved reply')\"\n            class=\"text-red-500 ltr:mr-2 rtl:ml-2\"\n            variant=\"none\"\n            icon=\"trash\"\n            @click=\"$emit('discard-form')\"\n          />\n          <CommonButton\n            v-tooltip=\"pinned ? $t('Unpin this panel') : $t('Pin this panel')\"\n            :icon=\"pinned ? 'pin' : 'pin-angle'\"\n            variant=\"neutral\"\n            size=\"small\"\n            @click=\"togglePinned\"\n          />\n        </div>\n        <div\n          id=\"ticketArticleReplyForm\"\n          ref=\"articleForm\"\n          class=\"grow px-3 pb-3\"\n          :class=\"{\n            'overflow-y-auto': pinned,\n            'my-[5px] px-4 pt-2': hasInternalArticle && pinned,\n          }\"\n        ></div>\n      </div>\n    </div>\n  </div>\n  <div\n    v-else-if=\"newArticlePresent !== undefined\"\n    class=\"sticky bottom-0 z-20 flex w-full justify-center gap-2.5 border-t border-t-transparent py-1.5\"\n    :class=\"{\n      'border-t-neutral-100 bg-neutral-50 dark:border-t-gray-900 dark:bg-gray-500':\n        parentReachedBottomScroll,\n    }\"\n  >\n    <CommonButton\n      v-for=\"button in availableArticleTypes\"\n      :key=\"button.articleType\"\n      :prefix-icon=\"button.icon\"\n      :variant=\"button.variant as ButtonVariant\"\n      size=\"large\"\n      @click=\"\n        $emit('show-article-form', button.articleType, button.performReply)\n      \"\n    >\n      {{ $t(button.label) }}\n    </CommonButton>\n  </div>\n</template>\n\n<style scoped>\n.border-stripes {\n  position: relative;\n  z-index: -10;\n  background-color: var(--color-neutral-50);\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 40px;\n    bottom: 0;\n    right: 0;\n    border: 5px solid transparent;\n    background-image: repeating-linear-gradient(\n      45deg,\n      var(--color-blue-400),\n      var(--color-blue-400) 5px,\n      var(--color-blue-700) 5px,\n      var(--color-blue-700) 10px\n    );\n    background-position: -1px;\n    background-attachment: fixed;\n    mask:\n      linear-gradient(#fff 0 0) padding-box,\n      linear-gradient(#fff 0 0);\n    mask-composite: exclude;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 40px;\n    bottom: 0;\n    right: 0;\n    outline: 1px solid var(--color-blue-700);\n    outline-offset: -5px;\n    pointer-events: none;\n  }\n}\n\n[data-theme='dark'] .border-stripes {\n  background-color: var(--color-gray-500);\n\n  &::before {\n    background-image: repeating-linear-gradient(\n      45deg,\n      var(--color-blue-700),\n      var(--color-blue-700) 5px,\n      var(--color-blue-900) 5px,\n      var(--color-blue-900) 10px\n    );\n  }\n}\n</style>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { cloneDeep, isEqual } from 'lodash-es'\nimport {\n  computed,\n  toRef,\n  provide,\n  Teleport,\n  markRaw,\n  type Component,\n  reactive,\n  nextTick,\n  watch,\n  useTemplateRef,\n  ref,\n} from 'vue'\n\nimport {\n  NotificationTypes,\n  useNotifications,\n} from '#shared/components/CommonNotifications/index.ts'\nimport Form from '#shared/components/Form/Form.vue'\nimport type {\n  FormSubmitData,\n  FormValues,\n} from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { setErrors } from '#shared/components/Form/utils.ts'\nimport { useConfirmation } from '#shared/composables/useConfirmation.ts'\nimport {\n  useTicketMacros,\n  macroScreenBehaviourMapping,\n} from '#shared/entities/macro/composables/useMacros.ts'\nimport { useTicketArticleReplyAction } from '#shared/entities/ticket/composables/useTicketArticleReplyAction.ts'\nimport { useTicketEdit } from '#shared/entities/ticket/composables/useTicketEdit.ts'\nimport { useTicketEditForm } from '#shared/entities/ticket/composables/useTicketEditForm.ts'\nimport { useTicketLiveUserList } from '#shared/entities/ticket/composables/useTicketLiveUserList.ts'\nimport type {\n  TicketArticleTimeAccountingFormData,\n  TicketUpdateFormData,\n} from '#shared/entities/ticket/types.ts'\nimport type { AppSpecificTicketArticleType } from '#shared/entities/ticket-article/action/plugins/types.ts'\nimport {\n  useArticleDataHandler,\n  type AddArticleCallbackArgs,\n} from '#shared/entities/ticket-article/composables/useArticleDataHandler.ts'\nimport UserError from '#shared/errors/UserError.ts'\nimport {\n  EnumFormUpdaterId,\n  EnumTaskbarApp,\n  EnumUserErrorException,\n} from '#shared/graphql/types.ts'\nimport { convertToGraphQLId } from '#shared/graphql/utils.ts'\nimport { QueryHandler } from '#shared/server/apollo/handler/index.ts'\nimport {\n  GraphQLErrorTypes,\n  type GraphQLHandlerError,\n} from '#shared/types/error.ts'\n\nimport { useFlyout } from '#desktop/components/CommonFlyout/useFlyout.ts'\nimport CommonLoader from '#desktop/components/CommonLoader/CommonLoader.vue'\nimport LayoutContent from '#desktop/components/layout/LayoutContent.vue'\nimport { usePage } from '#desktop/composables/usePage.ts'\nimport { useScrollPosition } from '#desktop/composables/useScrollPosition.ts'\nimport { useTaskbarTab } from '#desktop/entities/user/current/composables/useTaskbarTab.ts'\nimport { useTaskbarTabStateUpdates } from '#desktop/entities/user/current/composables/useTaskbarTabStateUpdates.ts'\nimport type { TaskbarTabContext } from '#desktop/entities/user/current/types.ts'\nimport TicketDetailBottomBar from '#desktop/pages/ticket/components/TicketDetailView/TicketDetailBottomBar/TicketDetailBottomBar.vue'\nimport { useTicketScreenBehavior } from '#desktop/pages/ticket/components/TicketDetailView/TicketScreenBehavior/useTicketScreenBehavior.ts'\nimport { useArticleContainerScroll } from '#desktop/pages/ticket/components/TicketDetailView/useArticleContainerScroll.ts'\n\nimport { ARTICLES_INFORMATION_KEY } from '../../composables/useArticleContext.ts'\nimport { useTicketArticleReply } from '../../composables/useTicketArticleReply.ts'\nimport {\n  initializeTicketInformation,\n  provideTicketInformation,\n} from '../../composables/useTicketInformation.ts'\nimport { useTicketNumber } from '../../composables/useTicketNumber.ts'\nimport {\n  useTicketSidebar,\n  useProvideTicketSidebar,\n} from '../../composables/useTicketSidebar.ts'\nimport {\n  type TicketSidebarContext,\n  TicketSidebarScreenType,\n} from '../../types/sidebar.ts'\nimport TicketSidebar from '../TicketSidebar.vue'\n\nimport ArticleList from './ArticleList.vue'\nimport ArticleReply from './ArticleReply.vue'\nimport TicketDetailTopBar from './TicketDetailTopBar/TicketDetailTopBar.vue'\n\ninterface Props {\n  internalId: string\n}\n\nconst props = defineProps<Props>()\n\nconst internalId = toRef(props, 'internalId')\nconst isReplyPinned = ref(false)\n\nconst { ticket, ticketId, ...ticketInformation } =\n  initializeTicketInformation(internalId)\n\nconst onAddArticleCallback = ({ articlesQuery }: AddArticleCallbackArgs) => {\n  return (articlesQuery as QueryHandler).refetch()\n}\n\nconst { articleResult, articlesQuery, isLoadingArticles } =\n  useArticleDataHandler(ticketId, { pageSize: 20, onAddArticleCallback })\n\nprovide(ARTICLES_INFORMATION_KEY, {\n  articles: computed(() => articleResult.value),\n  articlesQuery,\n})\n\nconst {\n  form,\n  values,\n  flags,\n  isDisabled,\n  isDirty,\n  isInitialSettled,\n  formReset,\n  formSubmit,\n  triggerFormUpdater,\n} = useForm()\n\nconst tabContext = computed<TaskbarTabContext>((currentContext) => {\n  if (!isInitialSettled.value) return {}\n\n  const newContext = {\n    formIsDirty: isDirty.value,\n  }\n\n  if (currentContext && isEqual(newContext, currentContext))\n    return currentContext\n\n  return newContext\n})\n\nconst {\n  currentTaskbarTabId,\n  currentTaskbarTabFormId,\n  currentTaskbarTabNewArticlePresent,\n} = useTaskbarTab(tabContext)\n\nconst { ticketNumberWithTicketHook } = useTicketNumber(ticket)\n\nusePage({\n  metaTitle: computed(\n    () => `${ticketNumberWithTicketHook.value} - ${ticket.value?.title}`,\n  ),\n})\n\nconst contentContainerElement = useTemplateRef('content-container')\n\nuseScrollPosition(contentContainerElement)\n\nconst scrollToArticlesEnd = () => {\n  nextTick(() => {\n    const scrollHeight = contentContainerElement.value?.scrollHeight\n    if (scrollHeight)\n      contentContainerElement.value?.scrollTo({\n        top: scrollHeight,\n      })\n  })\n}\n\nconst groupId = computed(() =>\n  isInitialSettled.value && values.value.group_id\n    ? convertToGraphQLId('Group', values.value.group_id as number)\n    : undefined,\n)\n\nconst { setSkipNextStateUpdate } = useTaskbarTabStateUpdates(\n  currentTaskbarTabId,\n  form,\n  triggerFormUpdater,\n)\n\nconst {\n  ticketSchema,\n  articleSchema,\n  currentArticleType,\n  ticketArticleTypes,\n  securityIntegration,\n  isTicketAgent,\n  isTicketCustomer,\n  isTicketEditable,\n  articleTypeHandler,\n  articleTypeSelectHandler,\n} = useTicketEditForm(ticket, form)\n\nconst sidebarContext = computed<TicketSidebarContext>(() => ({\n  ticket,\n  isTicketEditable,\n  screenType: TicketSidebarScreenType.TicketDetailView,\n  form: form.value,\n  formValues: {\n    // TODO: Workaround, to make the sidebars working for now.\n    customer_id: ticket.value?.customer.internalId,\n    organization_id: ticket.value?.organization?.internalId,\n  },\n  currentTaskbarTabId,\n}))\n\nuseProvideTicketSidebar(sidebarContext)\nconst { hasSidebar, activeSidebar, switchSidebar } = useTicketSidebar()\n\nconst hasInternalArticle = computed(\n  () => (values.value as TicketUpdateFormData).article?.internal,\n)\n\nconst formEditAttributeLocation = computed(() => {\n  if (activeSidebar.value === 'information') return '#ticketEditAttributeForm'\n  return '#wrapper-form-ticket-edit'\n})\n\nconst {\n  isArticleFormGroupValid,\n  newTicketArticlePresent,\n  showTicketArticleReplyForm,\n} = useTicketArticleReply(form, currentTaskbarTabNewArticlePresent)\n\nconst { liveUserList } = useTicketLiveUserList(\n  internalId,\n  isTicketAgent,\n  EnumTaskbarApp.Desktop,\n)\n\nprovideTicketInformation({\n  ticket,\n  ticketId,\n  isTicketEditable,\n  form,\n  newTicketArticlePresent,\n  showTicketArticleReplyForm,\n  ...ticketInformation,\n})\n\nconst ticketEditSchemaData = reactive({\n  formEditAttributeLocation,\n  securityIntegration,\n  newTicketArticlePresent,\n  currentArticleType,\n})\n\nconst ticketEditSchema = [\n  {\n    isLayout: true,\n    component: 'Teleport',\n    props: {\n      to: '$formEditAttributeLocation',\n    },\n    children: [\n      {\n        isLayout: true,\n        component: 'FormGroup',\n        props: {\n          class: '@container/form-group',\n          showDirtyMark: true,\n        },\n        children: [ticketSchema],\n      },\n    ],\n  },\n  {\n    if: '$newTicketArticlePresent',\n    isLayout: true,\n    component: 'Teleport',\n    props: {\n      to: '#ticketArticleReplyForm',\n    },\n    children: [\n      {\n        isLayout: true,\n        component: 'FormGroup',\n        props: {\n          class: '@container/form-group',\n        },\n        children: [articleSchema],\n      },\n    ],\n  },\n]\n\nconst { waitForConfirmation, waitForVariantConfirmation } = useConfirmation()\n\nconst { handleScreenBehavior } = useTicketScreenBehavior(currentTaskbarTabId)\n\nconst canUseDraft = computed(() => {\n  return flags.value.hasSharedDraft\n})\n\nconst hasAvailableDraft = computed(() => {\n  const sharedDraftZoomId = ticket.value?.sharedDraftZoomId\n  if (!sharedDraftZoomId) return false\n\n  return canUseDraft.value\n})\n\nconst discardChanges = async () => {\n  const confirm = await waitForVariantConfirmation('unsaved')\n\n  if (confirm) {\n    newTicketArticlePresent.value = false\n\n    await nextTick()\n\n    // Skip subscription for the current tab, to avoid not needed form updater requests.\n    setSkipNextStateUpdate(true)\n\n    formReset()\n  }\n}\n\n// NB: Silence toast notifications for particular errors, these will be handled by the layout taskbar tab component.\nconst errorCallback = (errorHandler: GraphQLHandlerError) =>\n  errorHandler.type !== GraphQLErrorTypes.Forbidden &&\n  errorHandler.type !== GraphQLErrorTypes.RecordNotFound\n\nconst { isTicketFormGroupValid, initialTicketValue, editTicket } =\n  useTicketEdit(ticket, form, errorCallback)\n\nconst { openReplyForm } = useTicketArticleReplyAction(\n  form,\n  showTicketArticleReplyForm,\n)\n\nconst isFormValid = computed(() => {\n  if (!newTicketArticlePresent.value) return isTicketFormGroupValid.value\n\n  return isTicketFormGroupValid.value && isArticleFormGroupValid.value\n})\n\nconst formAdditionalRouteQueryParams = computed(() => ({\n  taskbarId: currentTaskbarTabId.value,\n}))\n\nconst { notify } = useNotifications()\n\nconst checkSubmitEditTicket = () => {\n  if (!isFormValid.value) {\n    if (activeSidebar.value !== 'information') switchSidebar('information')\n\n    if (\n      newTicketArticlePresent.value &&\n      !isArticleFormGroupValid.value &&\n      !isReplyPinned.value\n    )\n      scrollToArticlesEnd()\n  }\n\n  formSubmit()\n}\n\nconst skipValidators = ref<EnumUserErrorException[]>([])\n\nconst handleIncompleteChecklist = async (error: UserError) => {\n  const confirmed = await waitForConfirmation(\n    __(\n      'You have unchecked items in the checklist. Do you want to handle them before closing this ticket?',\n    ),\n    {\n      headerTitle: __('Incomplete Ticket Checklist'),\n      headerIcon: 'checklist',\n      buttonLabel: __('Yes, open the checklist'),\n      cancelLabel: __('No, just close the ticket'),\n    },\n  )\n\n  if (confirmed) {\n    if (activeSidebar.value !== 'checklist') switchSidebar('checklist')\n    return false\n  }\n\n  if (confirmed === false) {\n    const exception = error.getFirstErrorException()\n    if (exception) skipValidators.value?.push(exception)\n    formSubmit()\n    return true\n  }\n\n  return false\n}\n\nconst timeAccountingData = ref<TicketArticleTimeAccountingFormData>()\n\nconst timeAccountingFlyout = useFlyout({\n  name: 'ticket-time-accounting',\n  component: () => import('./TimeAccountingFlyout.vue'),\n})\n\nconst handleTimeAccounting = (error: UserError) => {\n  timeAccountingFlyout.open({\n    onAccountTime: (data: TicketArticleTimeAccountingFormData) => {\n      timeAccountingData.value = data\n      formSubmit()\n    },\n    onSkip: () => {\n      const exception = error.getFirstErrorException()\n      if (exception) skipValidators.value?.push(exception)\n      formSubmit()\n    },\n  })\n\n  return false\n}\n\nconst handleUserErrorException = (error: UserError) => {\n  if (\n    error.getFirstErrorException() ===\n    EnumUserErrorException.ServiceTicketUpdateValidatorChecklistCompletedError\n  )\n    return handleIncompleteChecklist(error)\n\n  if (\n    error.getFirstErrorException() ===\n    EnumUserErrorException.ServiceTicketUpdateValidatorTimeAccountingError\n  )\n    return handleTimeAccounting(error)\n\n  return true\n}\n\nconst { activeMacro, executeMacro, disposeActiveMacro } =\n  useTicketMacros(formSubmit)\n\nconst submitEditTicket = async (\n  formData: FormSubmitData<TicketUpdateFormData>,\n) => {\n  let data = cloneDeep(formData)\n  if (currentArticleType.value?.updateForm)\n    data = currentArticleType.value.updateForm(data)\n\n  if (data.article && timeAccountingData.value) {\n    data.article = {\n      ...data.article,\n      timeUnit:\n        timeAccountingData.value.time_unit !== undefined\n          ? parseFloat(timeAccountingData.value.time_unit)\n          : undefined,\n      accountedTimeTypeId: timeAccountingData.value.accounted_time_type_id\n        ? convertToGraphQLId(\n            'Ticket::TimeAccounting::Type',\n            timeAccountingData.value.accounted_time_type_id,\n          )\n        : undefined,\n    }\n  }\n\n  return editTicket(data, {\n    macroId: activeMacro.value?.id,\n    skipValidators: skipValidators.value,\n  })\n    .then((result) => {\n      if (result?.ticketUpdate?.ticket) {\n        notify({\n          id: 'ticket-update',\n          type: NotificationTypes.Success,\n          message: __('Ticket updated successfully.'),\n        })\n\n        const screenBehaviour = activeMacro.value\n          ? macroScreenBehaviourMapping[activeMacro.value?.uxFlowNextUp]\n          : undefined\n\n        handleScreenBehavior({\n          screenBehaviour,\n          ticket: result.ticketUpdate.ticket,\n        })\n\n        skipValidators.value.length = 0\n        timeAccountingData.value = undefined\n\n        // Await subscription to update article list before we scroll to the bottom.\n        watch(articleResult, scrollToArticlesEnd, {\n          once: true,\n        })\n\n        // Reset article form after ticket update and reset form.\n        newTicketArticlePresent.value = false\n\n        return {\n          reset: (\n            values: FormSubmitData<TicketUpdateFormData>,\n            formNodeValues: FormValues,\n          ) => {\n            nextTick(() => {\n              if (!formNodeValues) return\n              formReset({ values: { ticket: formNodeValues.ticket } })\n            })\n          },\n        }\n      }\n\n      return false\n    })\n    .catch((error) => {\n      if (error instanceof UserError) {\n        if (error.getFirstErrorException())\n          return handleUserErrorException(error)\n        skipValidators.value.length = 0\n        timeAccountingData.value = undefined\n        if (form.value?.formNode) {\n          setErrors(form.value.formNode, error)\n          return\n        }\n      }\n\n      skipValidators.value.length = 0\n      timeAccountingData.value = undefined\n    })\n    .finally(() => {\n      disposeActiveMacro()\n    })\n}\n\nconst discardReplyForm = async () => {\n  const confirm = await waitForVariantConfirmation('unsaved')\n\n  if (!confirm) return\n\n  newTicketArticlePresent.value = false\n\n  await nextTick()\n\n  // Skip subscription for the current tab, to avoid not needed form updater requests.\n  setSkipNextStateUpdate(true)\n\n  return triggerFormUpdater()\n}\n\nconst handleShowArticleForm = (\n  articleType: string,\n  performReply: AppSpecificTicketArticleType['performReply'],\n) => {\n  openReplyForm({ articleType, ...performReply?.(ticket.value) })\n}\n\nconst onEditFormSettled = () => {\n  watch(\n    () => flags.value.newArticlePresent,\n    (newValue) => {\n      newTicketArticlePresent.value = newValue\n    },\n  )\n}\n\n// Reset newTicketArticlePresent when ticket changed, that the\n// taskbar information is used for the start.\nwatch(ticketId, () => {\n  initialTicketValue.value = undefined\n  newTicketArticlePresent.value = undefined\n})\n\nconst articleListInstance = useTemplateRef('article-list')\nconst topBarInstance = useTemplateRef('top-bar')\n\nconst {\n  handleScroll,\n  isHoveringOnTopBar,\n  isHidingTicketDetails,\n  isReachingBottom,\n} = useArticleContainerScroll(\n  ticket,\n  contentContainerElement,\n  articleListInstance,\n  topBarInstance,\n)\n</script>\n\n<template>\n  <LayoutContent\n    name=\"ticket-detail\"\n    no-padding\n    background-variant=\"primary\"\n    :show-sidebar=\"hasSidebar\"\n    content-alignment=\"center\"\n    no-scrollable\n  >\n    <CommonLoader class=\"mt-8\" :loading=\"!ticket\">\n      <div\n        ref=\"content-container\"\n        class=\"relative grid h-full w-full overflow-y-auto\"\n        :class=\"{\n          'grid-rows-[max-content_max-content_max-content]':\n            !newTicketArticlePresent || !isReplyPinned,\n          'grid-rows-[max-content_1fr_max-content]':\n            newTicketArticlePresent && isReplyPinned,\n        }\"\n        @scroll.passive=\"handleScroll\"\n      >\n        <div class=\"sticky top-0 z-10\">\n          <TicketDetailTopBar\n            :key=\"`${isHidingTicketDetails}-ticket-detail-top-bar`\"\n            ref=\"top-bar\"\n            class=\"invisible\"\n            aria-hidden=\"true\"\n            data-test-id=\"invisible-ticket-detail-top-bar\"\n            :hide-details=\"false\"\n          />\n          <Transition name=\"slide-down\">\n            <TicketDetailTopBar\n              :key=\"`${isHidingTicketDetails}-top-bar`\"\n              v-model:hover=\"isHoveringOnTopBar\"\n              data-test-id=\"visible-ticket-detail-top-bar\"\n              class=\"absolute! top-0 right-0 left-0 w-full\"\n              :hide-details=\"isHidingTicketDetails\"\n            />\n          </Transition>\n        </div>\n\n        <ArticleList ref=\"article-list\" :aria-busy=\"isLoadingArticles\" />\n\n        <ArticleReply\n          v-if=\"ticket?.id && isTicketEditable\"\n          v-show=\"!isLoadingArticles\"\n          v-model:pinned=\"isReplyPinned\"\n          :ticket=\"ticket\"\n          :new-article-present=\"newTicketArticlePresent\"\n          :create-article-type=\"ticket.createArticleType?.name\"\n          :ticket-article-types=\"ticketArticleTypes\"\n          :is-ticket-customer=\"isTicketCustomer\"\n          :has-internal-article=\"hasInternalArticle\"\n          :parent-reached-bottom-scroll=\"isReachingBottom\"\n          @show-article-form=\"handleShowArticleForm\"\n          @discard-form=\"discardReplyForm\"\n        />\n\n        <div id=\"wrapper-form-ticket-edit\" class=\"hidden\" aria-hidden=\"true\">\n          <Form\n            v-if=\"ticket?.id && initialTicketValue\"\n            :id=\"`form-ticket-edit-${internalId}`\"\n            ref=\"form\"\n            :form-id=\"currentTaskbarTabFormId\"\n            :schema=\"ticketEditSchema\"\n            :disabled=\"!isTicketEditable\"\n            :flatten-form-groups=\"['ticket']\"\n            :handlers=\"[articleTypeHandler()]\"\n            :form-kit-plugins=\"[articleTypeSelectHandler]\"\n            :schema-data=\"ticketEditSchemaData\"\n            :initial-values=\"initialTicketValue\"\n            :initial-entity-object=\"ticket\"\n            :form-updater-id=\"EnumFormUpdaterId.FormUpdaterUpdaterTicketEdit\"\n            :form-updater-additional-params=\"formAdditionalRouteQueryParams\"\n            use-object-attributes\n            :schema-component-library=\"{\n              Teleport: markRaw(Teleport) as unknown as Component,\n            }\"\n            @submit=\"\n              submitEditTicket($event as FormSubmitData<TicketUpdateFormData>)\n            \"\n            @settled=\"onEditFormSettled\"\n            @changed=\"setSkipNextStateUpdate(true)\"\n          />\n        </div>\n      </div>\n    </CommonLoader>\n    <template #sideBar=\"{ isCollapsed, toggleCollapse }\">\n      <TicketSidebar\n        :is-collapsed=\"isCollapsed\"\n        :toggle-collapse=\"toggleCollapse\"\n        :context=\"sidebarContext\"\n      />\n    </template>\n    <template #bottomBar>\n      <TicketDetailBottomBar\n        :can-use-draft=\"canUseDraft\"\n        :dirty=\"isDirty\"\n        :disabled=\"isDisabled\"\n        :form=\"form\"\n        :group-id=\"groupId\"\n        :is-ticket-agent=\"isTicketAgent\"\n        :is-ticket-editable=\"isTicketEditable\"\n        :has-available-draft=\"hasAvailableDraft\"\n        :live-user-list=\"liveUserList\"\n        :shared-draft-id=\"ticket?.sharedDraftZoomId\"\n        :ticket-id=\"ticketId\"\n        @submit=\"checkSubmitEditTicket\"\n        @discard=\"discardChanges\"\n        @execute-macro=\"executeMacro\"\n      />\n    </template>\n  </LayoutContent>\n</template>\n"],"file":"assets/TicketDetailView-r4CkZnPg.js"}