{"version":3,"file":"TimeAccountingFlyout-CxNs2q4Y.js","sources":["../../../../../app/frontend/apps/desktop/pages/ticket/components/TicketDetailView/TimeAccountingFlyout.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { computed, reactive } from 'vue'\n\nimport Form from '#shared/components/Form/Form.vue'\nimport type {\n  FormSchemaNode,\n  FormSubmitData,\n} from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport type { TicketArticleTimeAccountingFormData } from '#shared/entities/ticket/types.ts'\nimport { EnumFormUpdaterId } from '#shared/graphql/types.ts'\nimport { i18n } from '#shared/i18n.ts'\nimport { useApplicationStore } from '#shared/stores/application.ts'\n\nimport CommonFlyout from '#desktop/components/CommonFlyout/CommonFlyout.vue'\nimport type { ActionFooterOptions } from '#desktop/components/CommonFlyout/types.ts'\nimport { closeFlyout } from '#desktop/components/CommonFlyout/useFlyout.ts'\n\nimport type { FormKitNode } from '@formkit/core'\n\nconst emit = defineEmits<{\n  'account-time': [TicketArticleTimeAccountingFormData]\n  skip: []\n}>()\n\nconst { form } = useForm()\n\nconst flyoutName = 'ticket-time-accounting'\n\nconst submitForm = (\n  formData: FormSubmitData<TicketArticleTimeAccountingFormData>,\n) => {\n  if (formData.time_unit) {\n    formData.time_unit = formData.time_unit.replace(',', '.')\n  }\n  emit('account-time', formData)\n  closeFlyout(flyoutName)\n}\n\nconst onClose = (isCancel?: boolean) => {\n  if (!isCancel) return\n  emit('skip')\n}\n\nconst { config } = useApplicationStore()\n\nconst timeAccountingUnit = computed(() => {\n  switch (config.time_accounting_unit) {\n    case 'hour':\n      return __('hour(s)')\n    case 'quarter':\n      return __('quarter-hour(s)')\n    case 'minute':\n      return __('minute(s)')\n    case 'custom': {\n      if (config.time_accounting_unit_custom)\n        return config.time_accounting_unit_custom\n      return null\n    }\n    default:\n      return null\n  }\n})\n\nconst validationRuleTimeAccountingUnit = (node: FormKitNode<string>) => {\n  if (!node.value) return false\n  return !Number.isNaN(+node.value.replace(',', '.'))\n}\n\nconst formSchema = [\n  {\n    isLayout: true,\n    component: 'FormGroup',\n    props: {\n      class: '@container/form-group',\n    },\n    children: [\n      {\n        id: 'timeUnit',\n        name: 'time_unit',\n        label: __('Accounted Time'),\n        type: 'text',\n        required: true,\n        placeholder: __('Enter the time you want to record'),\n        validation: 'validationRuleTimeAccountingUnit',\n        validationRules: {\n          validationRuleTimeAccountingUnit,\n        },\n        validationMessages: {\n          validationRuleTimeAccountingUnit: __(\n            'This field must contain a number.',\n          ),\n        },\n        ...(timeAccountingUnit.value\n          ? {\n              sectionsSchema: {\n                suffix: {\n                  // FIXME: Not working.\n                  // if: '$timeAccountingUnit',\n                  // children: '$timeAccountingUnit',\n                  $el: 'span',\n                  children: i18n.t(timeAccountingUnit.value || ''),\n                  attrs: {\n                    class:\n                      'py-2.5 px-2.5 outline outline-1 -outline-offset-1 outline-blue-200 dark:outline-gray-700 bg-neutral-50 dark:bg-gray-500 rounded-e-md text-gray-100 dark:text-neutral-400',\n                  },\n                },\n              },\n            }\n          : {}),\n      },\n      {\n        if: '$timeAccountingTypes === true',\n        id: 'accountedTimeTypeId',\n        name: 'accounted_time_type_id',\n        label: __('Activity Type'),\n        type: 'select',\n        props: {\n          clearable: true,\n        },\n      },\n    ],\n  },\n] as FormSchemaNode[]\n\nconst timeAccountingTypes = computed(() => config.time_accounting_types)\n\nconst schemaData = reactive({\n  // timeAccountingUnit,\n  timeAccountingTypes,\n})\n\nconst footerActionOptions = computed<ActionFooterOptions>(() => ({\n  actionLabel: __('Account Time'),\n  actionButton: { variant: 'submit', type: 'submit' },\n  cancelLabel: __('Skip'),\n  form: form.value,\n}))\n</script>\n\n<template>\n  <CommonFlyout\n    :header-title=\"__('Time Accounting')\"\n    :footer-action-options=\"footerActionOptions\"\n    header-icon=\"stopwatch\"\n    :name=\"flyoutName\"\n    no-close-on-action\n    @close=\"onClose\"\n  >\n    <div class=\"flex flex-col gap-3\">\n      <Form\n        id=\"form-ticket-time-accounting\"\n        ref=\"form\"\n        :schema=\"formSchema\"\n        :schema-data=\"schemaData\"\n        should-autofocus\n        :form-updater-id=\"\n          EnumFormUpdaterId.FormUpdaterUpdaterTicketTimeAccounting\n        \"\n        form-updater-initial-only\n        @submit=\"\n          submitForm(\n            $event as FormSubmitData<TicketArticleTimeAccountingFormData>,\n          )\n        \"\n      />\n    </div>\n  </CommonFlyout>\n</template>\n"],"names":["flyoutName","emit","__emit","form","useForm","submitForm","formData","closeFlyout","onClose","isCancel","config","useApplicationStore","timeAccountingUnit","computed","validationRuleTimeAccountingUnit","node","formSchema","i18n","timeAccountingTypes","schemaData","reactive","footerActionOptions"],"mappings":"szCA6BMA,EAAa,6GAPnB,MAAMC,EAAOC,EAKP,CAAE,KAAAC,GAASC,IAIXC,EACJC,GACG,CACCA,EAAS,YACXA,EAAS,UAAYA,EAAS,UAAU,QAAQ,IAAK,GAAG,GAE1DL,EAAK,eAAgBK,CAAQ,EAC7BC,EAAYP,CAAU,CAAA,EAGlBQ,EAAWC,GAAuB,CACjCA,GACLR,EAAK,MAAM,CAAA,EAGP,CAAE,OAAAS,GAAWC,IAEbC,EAAqBC,EAAS,IAAM,CACxC,OAAQH,EAAO,qBAAsB,CACnC,IAAK,OACH,OAAO,GAAG,SAAS,EACrB,IAAK,UACH,OAAO,GAAG,iBAAiB,EAC7B,IAAK,SACH,OAAO,GAAG,WAAW,EACvB,IAAK,SACH,OAAIA,EAAO,4BACFA,EAAO,4BACT,KAET,QACS,OAAA,IACX,CAAA,CACD,EAEKI,EAAoCC,GACnCA,EAAK,MACH,CAAC,OAAO,MAAM,CAACA,EAAK,MAAM,QAAQ,IAAK,GAAG,CAAC,EAD1B,GAIpBC,EAAa,CACjB,CACE,SAAU,GACV,UAAW,YACX,MAAO,CACL,MAAO,uBACT,EACA,SAAU,CACR,CACE,GAAI,WACJ,KAAM,YACN,MAAO,GAAG,gBAAgB,EAC1B,KAAM,OACN,SAAU,GACV,YAAa,GAAG,mCAAmC,EACnD,WAAY,mCACZ,gBAAiB,CACf,iCAAAF,CACF,EACA,mBAAoB,CAClB,iCAAkC,GAChC,mCACF,CACF,EACA,GAAIF,EAAmB,MACnB,CACE,eAAgB,CACd,OAAQ,CAIN,IAAK,OACL,SAAUK,EAAK,EAAEL,EAAmB,OAAS,EAAE,EAC/C,MAAO,CACL,MACE,0KACJ,CACF,CACF,CAAA,EAEF,CAAC,CACP,EACA,CACE,GAAI,gCACJ,GAAI,sBACJ,KAAM,yBACN,MAAO,GAAG,eAAe,EACzB,KAAM,SACN,MAAO,CACL,UAAW,EACb,CACF,CACF,CACF,CAAA,EAGIM,EAAsBL,EAAS,IAAMH,EAAO,qBAAqB,EAEjES,EAAaC,EAAS,CAE1B,oBAAAF,CAAA,CACD,EAEKG,EAAsBR,EAA8B,KAAO,CAC/D,YAAa,GAAG,cAAc,EAC9B,aAAc,CAAE,QAAS,SAAU,KAAM,QAAS,EAClD,YAAa,GAAG,MAAM,EACtB,KAAMV,EAAK,KACX,EAAA"}