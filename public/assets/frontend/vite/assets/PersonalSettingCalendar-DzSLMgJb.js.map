{"version":3,"file":"PersonalSettingCalendar-DzSLMgJb.js","sources":["../../../../../app/frontend/apps/desktop/pages/personal-setting/graphql/mutations/userCurrentCalendarSubscriptionUpdate.api.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/graphql/fragments/userCalendarSubscriptionAttributes.api.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/graphql/queries/userCurrentCalendarSubscriptionList.api.ts","../../../../../app/frontend/apps/desktop/pages/personal-setting/views/PersonalSettingCalendar.vue"],"sourcesContent":["import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { ErrorsFragmentDoc } from '../../../../../../shared/graphql/fragments/errors.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserCurrentCalendarSubscriptionUpdateDocument = gql`\n    mutation userCurrentCalendarSubscriptionUpdate($input: UserCalendarSubscriptionsConfigInput!) {\n  userCurrentCalendarSubscriptionUpdate(input: $input) {\n    success\n    errors {\n      ...errors\n    }\n  }\n}\n    ${ErrorsFragmentDoc}`;\nexport function useUserCurrentCalendarSubscriptionUpdateMutation(options: VueApolloComposable.UseMutationOptions<Types.UserCurrentCalendarSubscriptionUpdateMutation, Types.UserCurrentCalendarSubscriptionUpdateMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<Types.UserCurrentCalendarSubscriptionUpdateMutation, Types.UserCurrentCalendarSubscriptionUpdateMutationVariables>> = {}) {\n  return VueApolloComposable.useMutation<Types.UserCurrentCalendarSubscriptionUpdateMutation, Types.UserCurrentCalendarSubscriptionUpdateMutationVariables>(UserCurrentCalendarSubscriptionUpdateDocument, options);\n}\nexport type UserCurrentCalendarSubscriptionUpdateMutationCompositionFunctionResult = VueApolloComposable.UseMutationReturn<Types.UserCurrentCalendarSubscriptionUpdateMutation, Types.UserCurrentCalendarSubscriptionUpdateMutationVariables>;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nexport const UserCalendarSubscriptionAttributesFragmentDoc = gql`\n    fragment userCalendarSubscriptionAttributes on UserPersonalSettingsCalendarSubscriptionsConfig {\n  combinedUrl\n  globalOptions {\n    alarm\n  }\n  newOpen {\n    url\n    options {\n      own\n      notAssigned\n    }\n  }\n  pending {\n    url\n    options {\n      own\n      notAssigned\n    }\n  }\n  escalation {\n    url\n    options {\n      own\n      notAssigned\n    }\n  }\n}\n    `;","import * as Types from '#shared/graphql/types.ts';\n\nimport gql from 'graphql-tag';\nimport { UserCalendarSubscriptionAttributesFragmentDoc } from '../fragments/userCalendarSubscriptionAttributes.api';\nimport * as VueApolloComposable from '@vue/apollo-composable';\nimport * as VueCompositionApi from 'vue';\nexport type ReactiveFunction<TParam> = () => TParam;\n\nexport const UserCurrentCalendarSubscriptionListDocument = gql`\n    query userCurrentCalendarSubscriptionList {\n  userCurrentCalendarSubscriptionList {\n    ...userCalendarSubscriptionAttributes\n  }\n}\n    ${UserCalendarSubscriptionAttributesFragmentDoc}`;\nexport function useUserCurrentCalendarSubscriptionListQuery(options: VueApolloComposable.UseQueryOptions<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables>> = {}) {\n  return VueApolloComposable.useQuery<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables>(UserCurrentCalendarSubscriptionListDocument, {}, options);\n}\nexport function useUserCurrentCalendarSubscriptionListLazyQuery(options: VueApolloComposable.UseQueryOptions<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables>> = {}) {\n  return VueApolloComposable.useLazyQuery<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables>(UserCurrentCalendarSubscriptionListDocument, {}, options);\n}\nexport type UserCurrentCalendarSubscriptionListQueryCompositionFunctionResult = VueApolloComposable.UseQueryReturn<Types.UserCurrentCalendarSubscriptionListQuery, Types.UserCurrentCalendarSubscriptionListQueryVariables>;","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { isEqual } from 'lodash-es'\nimport { storeToRefs } from 'pinia'\nimport { computed, reactive, ref, watch } from 'vue'\n\nimport {\n  NotificationTypes,\n  useNotifications,\n} from '#shared/components/CommonNotifications/index.ts'\nimport Form from '#shared/components/Form/Form.vue'\nimport type {\n  FormSchemaNode,\n  FormValues,\n} from '#shared/components/Form/types.ts'\nimport { useForm } from '#shared/components/Form/useForm.ts'\nimport { useMultiStepForm } from '#shared/components/Form/useMultiStepForm.ts'\nimport { defineFormSchema } from '#shared/form/defineFormSchema.ts'\nimport MutationHandler from '#shared/server/apollo/handler/MutationHandler.ts'\nimport QueryHandler from '#shared/server/apollo/handler/QueryHandler.ts'\nimport { useSessionStore } from '#shared/stores/session.ts'\n\nimport CommonInputCopyToClipboard from '#desktop/components/CommonInputCopyToClipboard/CommonInputCopyToClipboard.vue'\nimport CommonTabManager from '#desktop/components/CommonTabManager/CommonTabManager.vue'\nimport LayoutContent from '#desktop/components/layout/LayoutContent.vue'\n\nimport { useBreadcrumb } from '../composables/useBreadcrumb.ts'\nimport { useUserCurrentCalendarSubscriptionUpdateMutation } from '../graphql/mutations/userCurrentCalendarSubscriptionUpdate.api.ts'\nimport { useUserCurrentCalendarSubscriptionListQuery } from '../graphql/queries/userCurrentCalendarSubscriptionList.api.ts'\n\nconst { breadcrumbItems } = useBreadcrumb(__('Calendar'))\n\nconst { form, isDirty, node, formReset, formSubmit, values } = useForm()\n\nconst { multiStepPlugin, allSteps, activeStep } = useMultiStepForm(node)\n\nconst getFormSchemaGroupSection = (\n  stepName: string,\n  children: FormSchemaNode[],\n) => {\n  return {\n    isLayout: true,\n    element: 'section',\n    attrs: {\n      style: {\n        if: `$activeStep !== \"${stepName}\"`,\n        then: 'display: none;',\n      },\n    },\n    children: [\n      {\n        type: 'group',\n        name: stepName,\n        isGroupOrList: true,\n        plugins: [multiStepPlugin],\n        children,\n      },\n    ],\n  }\n}\n\nconst escalationSection = getFormSchemaGroupSection('escalation', [\n  {\n    name: 'escalationOwn',\n    type: 'toggle',\n    label: __('My tickets'),\n    help: __('Include your own tickets in subscription for escalated tickets.'),\n    props: {\n      variants: {\n        true: 'yes',\n        false: 'no',\n      },\n    },\n  },\n  {\n    name: 'escalationNotAssigned',\n    type: 'toggle',\n    label: __('Not assigned'),\n    help: __(\n      'Include unassigned tickets in subscription for escalated tickets.',\n    ),\n    props: {\n      variants: {\n        true: 'yes',\n        false: 'no',\n      },\n    },\n  },\n])\n\nconst newOpenSection = getFormSchemaGroupSection('newOpen', [\n  {\n    name: 'newOpenOwn',\n    type: 'toggle',\n    label: __('My tickets'),\n    help: __(\n      'Include your own tickets in subscription for new & open tickets.',\n    ),\n    props: {\n      variants: {\n        true: 'yes',\n        false: 'no',\n      },\n    },\n  },\n  {\n    name: 'newOpenNotAssigned',\n    type: 'toggle',\n    label: __('Not assigned'),\n    help: __(\n      'Include unassigned tickets in subscription for new & open tickets.',\n    ),\n    props: {\n      variants: {\n        true: 'yes',\n        false: 'no',\n      },\n    },\n  },\n])\n\nconst pendingSection = getFormSchemaGroupSection('pending', [\n  {\n    name: 'pendingOwn',\n    type: 'toggle',\n    label: __('My tickets'),\n    help: __('Include your own tickets in subscription for pending tickets.'),\n    props: {\n      variants: {\n        true: 'yes',\n        false: 'no',\n      },\n    },\n  },\n  {\n    name: 'pendingNotAssigned',\n    type: 'toggle',\n    label: __('Not assigned'),\n    help: __('Include unassigned tickets in subscription for pending tickets.'),\n    props: {\n      variants: {\n        true: 'yes',\n        false: 'no',\n      },\n    },\n  },\n])\n\nconst formSchema = defineFormSchema([\n  escalationSection,\n  newOpenSection,\n  pendingSection,\n])\n\nconst schemaData = reactive({\n  activeStep,\n})\n\nconst calendarSubscriptionListQuery = new QueryHandler(\n  useUserCurrentCalendarSubscriptionListQuery(),\n)\n\nconst calendarSubscriptionListQueryResult =\n  calendarSubscriptionListQuery.result()\n\nconst { user } = storeToRefs(useSessionStore())\n\n// Refetch calendar subscription list query when the user preference has changed.\nwatch(\n  () => user.value?.preferences?.calendar_subscriptions,\n  () => {\n    calendarSubscriptionListQuery.refetch()\n  },\n  { deep: true },\n)\n\nconst combinedSubscriptionURL = computed(\n  () =>\n    calendarSubscriptionListQueryResult.value\n      ?.userCurrentCalendarSubscriptionList.combinedUrl ?? '',\n)\n\n// Alarm is a global option and therefore hoisted out of the multi-step form.\n//   Here we keep track of its value from the query, and update it whenever is mutated from outside.\nconst alarm = computed(() =>\n  Boolean(\n    calendarSubscriptionListQueryResult.value\n      ?.userCurrentCalendarSubscriptionList.globalOptions?.alarm,\n  ),\n)\n\nconst alarmLocalValue = ref(alarm.value)\n\nwatch(alarm, (newValue) => {\n  alarmLocalValue.value = newValue\n})\n\nconst directSubscriptionURL = computed(\n  () =>\n    calendarSubscriptionListQueryResult.value\n      ?.userCurrentCalendarSubscriptionList[\n      activeStep.value as 'escalation' | 'newOpen' | 'pending'\n    ]?.url ?? '',\n)\n\nconst formInitialValues = computed<FormValues>((oldValues) => {\n  const values = {\n    escalationOwn:\n      calendarSubscriptionListQueryResult.value\n        ?.userCurrentCalendarSubscriptionList.escalation?.options?.own,\n    escalationNotAssigned:\n      calendarSubscriptionListQueryResult.value\n        ?.userCurrentCalendarSubscriptionList.escalation?.options?.notAssigned,\n    newOpenOwn:\n      calendarSubscriptionListQueryResult.value\n        ?.userCurrentCalendarSubscriptionList.newOpen?.options?.own,\n    newOpenNotAssigned:\n      calendarSubscriptionListQueryResult.value\n        ?.userCurrentCalendarSubscriptionList.newOpen?.options?.notAssigned,\n    pendingOwn:\n      calendarSubscriptionListQueryResult.value\n        ?.userCurrentCalendarSubscriptionList.pending?.options?.own,\n    pendingNotAssigned:\n      calendarSubscriptionListQueryResult.value\n        ?.userCurrentCalendarSubscriptionList.pending?.options?.notAssigned,\n  } as unknown as FormValues\n\n  if (oldValues && isEqual(values, oldValues)) return oldValues\n\n  return values\n})\n\nwatch(formInitialValues, (newValues) => {\n  // No reset needed when the form has already the correct state.\n  if (isEqual(values.value, newValues) && !isDirty.value) return\n\n  formReset({ values: newValues })\n})\n\nconst { notify } = useNotifications()\n\nconst submitForm = async (data: FormValues) => {\n  const input = {\n    alarm: alarmLocalValue.value,\n    escalation: {\n      own: Boolean(data.escalationOwn),\n      notAssigned: Boolean(data.escalationNotAssigned),\n    },\n    newOpen: {\n      own: Boolean(data.newOpenOwn),\n      notAssigned: Boolean(data.newOpenNotAssigned),\n    },\n    pending: {\n      own: Boolean(data.pendingOwn),\n      notAssigned: Boolean(data.pendingNotAssigned),\n    },\n  }\n\n  const calendarSubscriptionUpdateMutation = new MutationHandler(\n    useUserCurrentCalendarSubscriptionUpdateMutation(),\n    {\n      errorNotificationMessage: __(\n        'Updating your calendar subscription settings failed.',\n      ),\n    },\n  )\n\n  return calendarSubscriptionUpdateMutation.send({ input }).then(() => {\n    notify({\n      id: 'calendar-subscription-update-success',\n      type: NotificationTypes.Success,\n      message: __('You calendar subscription settings were updated.'),\n    })\n  })\n}\n\nconst tabs = [\n  {\n    label: __('Escalated Tickets'),\n    key: 'escalation',\n  },\n  {\n    label: __('New & Open Tickets'),\n    key: 'newOpen',\n  },\n  {\n    label: __('Pending Tickets'),\n    key: 'pending',\n  },\n]\n</script>\n\n<template>\n  <LayoutContent\n    :breadcrumb-items=\"breadcrumbItems\"\n    :help-text=\"\n      $t(\n        'See your tickets from within your favorite calendar by adding the subscription URL to your calendar app.',\n      )\n    \"\n    width=\"narrow\"\n  >\n    <div class=\"mb-4\">\n      <CommonInputCopyToClipboard\n        :label=\"__('Combined subscription URL')\"\n        :copy-button-text=\"__('Copy URL')\"\n        :value=\"combinedSubscriptionURL\"\n        :help=\"__('Includes escalated, new & open and pending tickets.')\"\n      />\n\n      <FormKit\n        v-model=\"alarmLocalValue\"\n        type=\"toggle\"\n        :label=\"__('Add alarm to pending reminder and escalated tickets')\"\n        :variants=\"{ true: 'yes', false: 'no' }\"\n        @update:model-value=\"formSubmit\"\n      />\n\n      <CommonLabel role=\"heading\" aria-level=\"2\" class=\"mt-5 mb-2\" size=\"large\">\n        {{ $t('Subscription settings') }}\n      </CommonLabel>\n\n      <CommonTabManager v-model=\"activeStep\" class=\"mb-3\" :tabs=\"tabs\" />\n\n      <div\n        :id=\"`tab-panel-${activeStep}`\"\n        role=\"tabpanel\"\n        :aria-labelledby=\"`tab-label-${activeStep}`\"\n      >\n        <CommonInputCopyToClipboard\n          :label=\"__('Direct subscription URL')\"\n          :copy-button-text=\"__('Copy URL')\"\n          :value=\"directSubscriptionURL\"\n        />\n\n        <Form\n          id=\"calendar-subscription\"\n          ref=\"form\"\n          :schema=\"formSchema\"\n          :flatten-form-groups=\"Object.keys(allSteps)\"\n          :initial-values=\"formInitialValues\"\n          :schema-data=\"schemaData\"\n          @changed=\"formSubmit\"\n          @submit=\"submitForm\"\n        />\n      </div>\n    </div>\n  </LayoutContent>\n</template>\n"],"names":["UserCurrentCalendarSubscriptionUpdateDocument","gql","ErrorsFragmentDoc","useUserCurrentCalendarSubscriptionUpdateMutation","options","VueApolloComposable.useMutation","UserCalendarSubscriptionAttributesFragmentDoc","UserCurrentCalendarSubscriptionListDocument","useUserCurrentCalendarSubscriptionListQuery","VueApolloComposable.useQuery","breadcrumbItems","useBreadcrumb","form","isDirty","node","formReset","formSubmit","values","useForm","multiStepPlugin","allSteps","activeStep","useMultiStepForm","getFormSchemaGroupSection","stepName","children","escalationSection","newOpenSection","pendingSection","formSchema","defineFormSchema","schemaData","reactive","calendarSubscriptionListQuery","QueryHandler","calendarSubscriptionListQueryResult","user","storeToRefs","useSessionStore","watch","_b","_a","combinedSubscriptionURL","computed","alarm","alarmLocalValue","ref","newValue","directSubscriptionURL","formInitialValues","oldValues","_c","_f","_e","_d","_i","_h","_g","_l","_k","_j","_o","_n","_m","_r","_q","_p","isEqual","newValues","notify","useNotifications","submitForm","data","input","MutationHandler","NotificationTypes","tabs"],"mappings":"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"}