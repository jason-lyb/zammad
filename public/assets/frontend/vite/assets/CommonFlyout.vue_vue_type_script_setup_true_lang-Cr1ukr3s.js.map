{"version":3,"file":"CommonFlyout.vue_vue_type_script_setup_true_lang-Cr1ukr3s.js","sources":["../../../../../app/frontend/apps/desktop/components/CommonFlyout/CommonFlyoutActionFooter.vue","../../../../../app/frontend/apps/desktop/components/CommonFlyout/CommonFlyout.vue"],"sourcesContent":["<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport { toRef } from 'vue'\n\nimport { useForm } from '#shared/components/Form/useForm.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\n\nimport type { ActionFooterOptions as Props } from './types.ts'\n\nconst props = withDefaults(defineProps<Props>(), {\n  actionLabel: __('Update'),\n  cancelLabel: __('Cancel & Go Back'),\n})\n\nconst emit = defineEmits<{\n  cancel: []\n  action: []\n}>()\n\nconst { isDisabled, formNodeId } = useForm(toRef(props, 'form'))\n\nconst cancel = () => {\n  emit('cancel')\n}\n\nconst execute = () => {\n  emit('action')\n}\n</script>\n\n<template>\n  <div class=\"flex items-center justify-end gap-4\">\n    <CommonButton\n      v-if=\"!hideCancelButton\"\n      size=\"large\"\n      :disabled=\"isDisabled || cancelButton?.disabled\"\n      :prefix-icon=\"cancelButton?.prefixIcon\"\n      :variant=\"cancelButton?.variant || 'secondary'\"\n      @click=\"cancel()\"\n    >\n      {{ $t(cancelLabel) }}\n    </CommonButton>\n    <CommonButton\n      v-if=\"!hideActionButton\"\n      size=\"large\"\n      :disabled=\"isDisabled || actionButton?.disabled\"\n      :form=\"formNodeId\"\n      :type=\"actionButton?.type\"\n      :prefix-icon=\"actionButton?.prefixIcon\"\n      :variant=\"actionButton?.variant || 'submit'\"\n      @click=\"execute()\"\n    >\n      {{ $t(actionLabel) }}\n    </CommonButton>\n  </div>\n</template>\n","<!-- Copyright (C) 2012-2025 Zammad Foundation, https://zammad-foundation.org/ -->\n\n<script setup lang=\"ts\">\nimport {\n  useWindowSize,\n  useLocalStorage,\n  useScroll,\n  useActiveElement,\n  onKeyDown,\n  useCurrentElement,\n  type MaybeElementRef,\n  type ComputedRefWithControl,\n  type VueInstance,\n} from '@vueuse/core'\nimport { whenever } from '@vueuse/shared'\nimport {\n  computed,\n  nextTick,\n  useTemplateRef,\n  onMounted,\n  type Ref,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nimport { useTrapTab } from '#shared/composables/useTrapTab.ts'\nimport stopEvent from '#shared/utils/events.ts'\nimport { getFirstFocusableElement } from '#shared/utils/getFocusableElements.ts'\n\nimport CommonButton from '#desktop/components/CommonButton/CommonButton.vue'\nimport CommonOverlayContainer from '#desktop/components/CommonOverlayContainer/CommonOverlayContainer.vue'\nimport ResizeLine from '#desktop/components/ResizeLine/ResizeLine.vue'\nimport { useResizeLine } from '#desktop/components/ResizeLine/useResizeLine.ts'\n\nimport CommonFlyoutActionFooter from './CommonFlyoutActionFooter.vue'\nimport { closeFlyout } from './useFlyout.ts'\n\nimport type { ActionFooterOptions, FlyoutSizes } from './types.ts'\n\nexport interface Props {\n  /**\n   * Unique name which gets used to identify the flyout\n   * @example 'crop-avatar'\n   */\n  name: string\n  /**\n   * If true, the given flyout resizable width will be stored in local storage\n   * Stored under the key `flyout-${name}-width`\n   * @example 'crop-avatar' => 'flyout-crop-avatar-width'\n   */\n  persistResizeWidth?: boolean\n  headerTitle?: string\n  size?: FlyoutSizes\n  headerIcon?: string\n  resizable?: boolean\n  showBackdrop?: boolean\n  noCloseOnBackdropClick?: boolean\n  noCloseOnEscape?: boolean\n  hideFooter?: boolean\n  footerActionOptions?: ActionFooterOptions\n  noCloseOnAction?: boolean\n  /**\n   * Don't focus the first element inside a Flyout after being mounted\n   * if nothing is focusable, will focus \"Close\" button when dismissible is active.\n   */\n  noAutofocus?: boolean\n  fullscreen?: boolean\n  /**\n   * If true, no page context will be added to the name, e.g. for confirmation dialogs.\n   */\n  global?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  resizable: true,\n  showBackdrop: true,\n})\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst emit = defineEmits<{\n  action: []\n  close: [boolean?]\n  activated: []\n}>()\n\nconst { path } = useRoute()\n\nconst router = useRouter()\n\nconst isActive = computed(() =>\n  props.fullscreen ? true : path === router.currentRoute.value.path,\n)\n\nwhenever(isActive, () => {\n  emit('activated')\n})\n\nconst close = async (isCancel?: boolean) => {\n  emit('close', isCancel)\n\n  await closeFlyout(props.name, props.global)\n}\n\n// TODO: maybe we could add a better handling in combination with a form....\nconst action = async () => {\n  emit('action')\n\n  if (props.noCloseOnAction) return\n\n  await closeFlyout(props.name, props.global)\n}\n\nconst flyoutId = `flyout-${props.name}`\n\nconst flyoutSize = { medium: 500, large: 800 }\n\nconst overlayInstance = useTemplateRef('flyout-container')\n\n// :TODO: seems to not be typed correctly inside the library\nconst flyoutContainerElement = useCurrentElement(\n  overlayInstance as MaybeElementRef<VueInstance> | undefined,\n)\n\nuseTrapTab(flyoutContainerElement as ComputedRefWithControl<HTMLElement>)\n\n// Width control over flyout\nlet flyoutContainerWidth: Ref<number>\n\nconst gap = 16 // Gap between sidebar and flyout\n\nconst storageKeys = Object.keys(localStorage).filter((key) =>\n  key.includes('sidebar-width'),\n)\n\nconst leftSideBarKey = storageKeys.find((key) => key.includes('left'))\n\nconst leftSidebarWidth = leftSideBarKey\n  ? useLocalStorage(leftSideBarKey, 0)\n  : shallowRef(0)\n\nconst { width: screenWidth } = useWindowSize()\n// Calculate the viewport width minus the left sidebar width and a threshold gap\nconst flyoutMaxWidth = computed(\n  () => screenWidth.value - leftSidebarWidth.value - gap,\n)\n\nif (props.persistResizeWidth) {\n  flyoutContainerWidth = useLocalStorage(\n    `${flyoutId}-width`,\n    flyoutSize[props.size || 'medium'],\n  )\n} else {\n  flyoutContainerWidth = ref(flyoutSize[props.size || 'medium'])\n}\n\nconst resizeHandleInstance = useTemplateRef('resize-handle')\n\nconst resizeCallback = (valueX: number) => {\n  if (valueX >= flyoutMaxWidth.value) return\n  flyoutContainerWidth.value = valueX\n}\n\n// a11y keyboard navigation\nconst activeElement = useActiveElement()\n\nconst handleKeyStroke = (e: KeyboardEvent, adjustment: number) => {\n  if (\n    !flyoutContainerWidth.value ||\n    activeElement.value !== resizeHandleInstance.value?.resizeLine\n  )\n    return\n\n  e.preventDefault()\n\n  const newWidth = flyoutContainerWidth.value + adjustment\n\n  if (newWidth >= flyoutMaxWidth.value) return\n\n  resizeCallback(newWidth)\n}\n\nconst { startResizing, isResizing } = useResizeLine(\n  resizeCallback,\n  resizeHandleInstance.value?.resizeLine,\n  handleKeyStroke,\n  {\n    calculateFromRight: true,\n    orientation: 'vertical',\n  },\n)\n\nconst resetWidth = () => {\n  flyoutContainerWidth.value = flyoutSize[props.size || 'medium']\n}\n\nonMounted(async () => {\n  // Prevent left sidebar to collapse with flyout\n  await nextTick()\n\n  if (!leftSideBarKey) return\n\n  const leftSidebarWidth = useLocalStorage(leftSideBarKey, 500)\n\n  watch(leftSidebarWidth, (newWidth, oldValue) => {\n    if (newWidth + gap < screenWidth.value - flyoutContainerWidth.value) return\n    resizeCallback(flyoutContainerWidth.value - (newWidth - oldValue))\n  })\n})\n\nonKeyDown('Escape', (e) => {\n  if (props.noCloseOnEscape) return\n  stopEvent(e)\n  close()\n})\n\n// Style\nconst contentElement = useTemplateRef('content')\nconst headerElement = useTemplateRef('header')\nconst footerElement = useTemplateRef('footer')\n\nconst { arrivedState } = useScroll(contentElement)\n\nconst isContentOverflowing = ref(false)\n\nwatch(\n  flyoutContainerWidth,\n  async () => {\n    // Watch if panel gets resized to show and hide styling based on content overflow\n    await nextTick()\n\n    if (\n      contentElement.value?.scrollHeight &&\n      contentElement.value?.clientHeight\n    ) {\n      isContentOverflowing.value =\n        contentElement.value.scrollHeight > contentElement.value.clientHeight\n    }\n  },\n  { immediate: true },\n)\n\n// Focus\nonMounted(() => {\n  if (props.noAutofocus) return\n\n  const firstFocusableNode =\n    getFirstFocusableElement(contentElement.value) ||\n    getFirstFocusableElement(footerElement.value) ||\n    getFirstFocusableElement(headerElement.value)\n\n  nextTick(() => {\n    firstFocusableNode?.focus()\n    firstFocusableNode?.scrollIntoView({ block: 'nearest' })\n  })\n})\n\n// It is the same as dialog, but could be changed in the future?\nconst transition = VITE_TEST_MODE\n  ? undefined\n  : {\n      enterActiveClass: 'duration-300 ease-out',\n      enterFromClass: 'opacity-0 rtl:-translate-x-3/4 ltr:translate-x-3/4',\n      enterToClass: 'opacity-100 rtl:-translate-x-0 ltr:translate-x-0',\n      leaveActiveClass: 'duration-200 ease-in',\n      leaveFromClass: 'opacity-100 rtl:-translate-x-0 ltr:translate-x-0',\n      leaveToClass: 'opacity-0 rtl:-translate-x-3/4 ltr:translate-x-3/4',\n    }\n</script>\n\n<template>\n  <Transition :appear=\"isActive\" v-bind=\"transition\">\n    <!--  `display:none` to prevent showing up inactive flyout for cached instance -->\n    <CommonOverlayContainer\n      :id=\"flyoutId\"\n      ref=\"flyout-container\"\n      tag=\"aside\"\n      tabindex=\"-1\"\n      class=\"overflow-clip-x fixed top-0 bottom-0 z-40 flex max-h-dvh min-w-min flex-col border-y border-neutral-100 bg-neutral-50 ltr:right-0 ltr:rounded-l-xl ltr:border-l rtl:left-0 rtl:rounded-r-xl rtl:border-r dark:border-gray-900 dark:bg-gray-500\"\n      :no-close-on-backdrop-click=\"noCloseOnBackdropClick\"\n      :show-backdrop=\"showBackdrop && isActive\"\n      :style=\"{ width: `${flyoutContainerWidth}px` }\"\n      :class=\"{ 'transition-all': !isResizing, hidden: !isActive }\"\n      :fullscreen=\"fullscreen\"\n      :aria-labelledby=\"`${flyoutId}-title`\"\n      @click-background=\"close()\"\n    >\n      <header\n        ref=\"header\"\n        class=\"sticky top-0 flex items-center border-b border-neutral-100 border-b-transparent bg-neutral-50 p-3 ltr:rounded-tl-xl rtl:rounded-tr-xl dark:bg-gray-500\"\n        :class=\"{\n          'border-b-neutral-100 dark:border-b-gray-900':\n            !arrivedState.top && isContentOverflowing,\n        }\"\n      >\n        <slot name=\"header\">\n          <CommonLabel\n            v-if=\"headerTitle\"\n            :id=\"`${flyoutId}-title`\"\n            tag=\"h2\"\n            class=\"min-h-7 grow gap-1.5\"\n            size=\"large\"\n            :prefix-icon=\"headerIcon\"\n            icon-color=\"text-stone-200 dark:text-neutral-500\"\n          >\n            {{ $t(headerTitle) }}\n          </CommonLabel>\n        </slot>\n        <CommonButton\n          class=\"ltr:ml-auto rtl:mr-auto\"\n          variant=\"neutral\"\n          size=\"medium\"\n          :aria-label=\"$t('Close side panel')\"\n          icon=\"x-lg\"\n          @click=\"close()\"\n        />\n      </header>\n\n      <div ref=\"content\" class=\"h-full overflow-y-scroll px-3\" v-bind=\"$attrs\">\n        <slot />\n      </div>\n\n      <footer\n        v-if=\"$slots.footer || !hideFooter\"\n        ref=\"footer\"\n        :aria-label=\"$t('Side panel footer')\"\n        class=\"sticky bottom-0 border-t border-t-transparent bg-neutral-50 p-3 ltr:rounded-bl-xl rtl:rounded-br-xl dark:bg-gray-500\"\n        :class=\"{\n          'border-t-neutral-100 dark:border-t-gray-900':\n            !arrivedState.bottom && isContentOverflowing,\n        }\"\n      >\n        <slot name=\"footer\" v-bind=\"{ action, close }\">\n          <CommonFlyoutActionFooter\n            v-bind=\"footerActionOptions\"\n            @cancel=\"close(true)\"\n            @action=\"action()\"\n          />\n        </slot>\n      </footer>\n\n      <ResizeLine\n        v-if=\"resizable\"\n        ref=\"resize-handle\"\n        :label=\"$t('Resize side panel')\"\n        class=\"absolute top-2 h-[calc(100%-16px)] overflow-clip ltr:left-px ltr:-translate-x-1/2 rtl:right-px rtl:translate-x-1/2\"\n        orientation=\"vertical\"\n        :values=\"{\n          current: flyoutContainerWidth,\n          max: flyoutMaxWidth,\n        }\"\n        @mousedown-event=\"startResizing\"\n        @touchstart-event=\"startResizing\"\n        @dblclick-event=\"resetWidth()\"\n      />\n    </CommonOverlayContainer>\n  </Transition>\n</template>\n"],"names":["props","__props","emit","__emit","isDisabled","formNodeId","useForm","toRef","cancel","execute","gap","path","useRoute","router","useRouter","isActive","computed","whenever","close","isCancel","closeFlyout","action","flyoutId","flyoutSize","overlayInstance","useTemplateRef","flyoutContainerElement","useCurrentElement","useTrapTab","flyoutContainerWidth","leftSideBarKey","key","leftSidebarWidth","useLocalStorage","shallowRef","screenWidth","useWindowSize","flyoutMaxWidth","ref","resizeHandleInstance","resizeCallback","valueX","activeElement","useActiveElement","handleKeyStroke","adjustment","_a","newWidth","startResizing","isResizing","useResizeLine","resetWidth","onMounted","nextTick","oldValue","onKeyDown","stopEvent","contentElement","headerElement","footerElement","arrivedState","useScroll","isContentOverflowing","watch","_b","firstFocusableNode","getFirstFocusableElement","transition"],"mappings":"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"}